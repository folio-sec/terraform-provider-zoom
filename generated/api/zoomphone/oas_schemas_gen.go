// Code generated by ogen, DO NOT EDIT.

package zoomphone

import (
	"fmt"
	"time"

	"github.com/go-faster/jx"
)

func (s *ErrorResponseStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

type AccountCallHistoryOK struct {
	// The call log.
	CallLogs []AccountCallHistoryOKCallLogsItem `json:"call_logs"`
	// The start time and date of the log.
	From OptString `json:"from"`
	// The end time and date of the log.
	To OptString `json:"to"`
	// The total number of pages.
	PageCount OptInt `json:"page_count"`
	// The number of records returned within a single API call for each page.
	PageSize OptInt `json:"page_size"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
}

// GetCallLogs returns the value of CallLogs.
func (s *AccountCallHistoryOK) GetCallLogs() []AccountCallHistoryOKCallLogsItem {
	return s.CallLogs
}

// GetFrom returns the value of From.
func (s *AccountCallHistoryOK) GetFrom() OptString {
	return s.From
}

// GetTo returns the value of To.
func (s *AccountCallHistoryOK) GetTo() OptString {
	return s.To
}

// GetPageCount returns the value of PageCount.
func (s *AccountCallHistoryOK) GetPageCount() OptInt {
	return s.PageCount
}

// GetPageSize returns the value of PageSize.
func (s *AccountCallHistoryOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *AccountCallHistoryOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// GetNextPageToken returns the value of NextPageToken.
func (s *AccountCallHistoryOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// SetCallLogs sets the value of CallLogs.
func (s *AccountCallHistoryOK) SetCallLogs(val []AccountCallHistoryOKCallLogsItem) {
	s.CallLogs = val
}

// SetFrom sets the value of From.
func (s *AccountCallHistoryOK) SetFrom(val OptString) {
	s.From = val
}

// SetTo sets the value of To.
func (s *AccountCallHistoryOK) SetTo(val OptString) {
	s.To = val
}

// SetPageCount sets the value of PageCount.
func (s *AccountCallHistoryOK) SetPageCount(val OptInt) {
	s.PageCount = val
}

// SetPageSize sets the value of PageSize.
func (s *AccountCallHistoryOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *AccountCallHistoryOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *AccountCallHistoryOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

type AccountCallHistoryOKCallLogsItem struct {
	// The call Log ID.
	ID OptString `json:"id"`
	// The unique identifier of the phone call. One call id might contain multiple Call log ID.
	CallID OptString `json:"call_id"`
	// The direction of the call.
	Direction OptString `json:"direction"`
	// A flag to indicate the call is international or not.
	International OptBool `json:"international"`
	// The call start time in GMT date-time format.
	StartTime OptString `json:"start_time"`
	// The call answer time in GMT date-time format.
	AnswerTime OptString `json:"answer_time"`
	// The call end time in GMT date-time format.
	EndTime OptString `json:"end_time"`
	// The duration of the call in seconds.
	Duration OptInt `json:"duration"`
	// The connect type of the call logs.
	// * `internal`
	// * `external`.
	ConnectType OptString `json:"connect_type"`
	// The SBC ID that the call goes through.
	SbcID OptString `json:"sbc_id"`
	// The SBC name that the call goes through.
	SbcName OptString `json:"sbc_name"`
	// The SIP group ID that the call goes through.
	SipGroupID OptString `json:"sip_group_id"`
	// The SIP group name that the call goes through.
	SipGroupName OptString `json:"sip_group_name"`
	// The type of call.
	// * `general`
	// * `emergency`.
	CallType OptString `json:"call_type"`
	// The final call result of the call logs.
	CallResult OptString `json:"call_result"`
	// The caller's extension ID.
	CallerExtID OptString `json:"caller_ext_id"`
	// The caller's DID number in e164 format.
	CallerDidNumber OptString `json:"caller_did_number"`
	// The caller's extension number.
	CallerExtNumber OptString `json:"caller_ext_number"`
	// The caller's name.
	CallerName OptString `json:"caller_name"`
	// The caller's email.
	CallerEmail OptString `json:"caller_email"`
	// The caller's extension type:
	// * `user`
	// * `call_queue`
	// * `auto_receptionist`
	// * `common_area`
	// * `zoom_room`
	// * `cisco_room`
	// * `shared_line_group`
	// * `group_call_pickup`
	// * `external_contact`.
	CallerExtType OptString `json:"caller_ext_type"`
	// The caller's number type.
	CallerNumberType OptString `json:"caller_number_type"`
	// The caller's device type.
	CallerDeviceType OptString `json:"caller_device_type"`
	// The caller's country ISO code.
	CallerCountryIsoCode OptString `json:"caller_country_iso_code"`
	// The caller's country code.
	CallerCountryCode OptString `json:"caller_country_code"`
	// The callee's extension ID.
	CalleeExtID OptString `json:"callee_ext_id"`
	// The callee's DID number in e164 format.
	CalleeDidNumber OptString `json:"callee_did_number"`
	// The callee's extension number.
	CalleeExtNumber OptString `json:"callee_ext_number"`
	// The callee's name.
	CalleeName OptString `json:"callee_name"`
	// The callee's email.
	CalleeEmail OptString `json:"callee_email"`
	// The callee's extension type:
	// * `user`
	// * `call_queue`
	// * `auto_receptionist`
	// * `common_area`
	// * `zoom_room`
	// * `cisco_room`
	// * `shared_line_group`
	// * `group_call_pickup`
	// * `external_contact`.
	CalleeExtType OptString `json:"callee_ext_type"`
	// The callee's number type.
	CalleeNumberType OptString `json:"callee_number_type"`
	// The callee's device type.
	CalleeDeviceType OptString `json:"callee_device_type"`
	// The callee's country ISO code.
	CalleeCountryIsoCode OptString `json:"callee_country_iso_code"`
	// The callee's country code.
	CalleeCountryCode OptString `json:"callee_country_code"`
	// The client code for the call.
	ClientCode OptString `json:"client_code"`
	// The name of the department of which the user belongs.
	Department OptString `json:"department"`
	// The name of the cost center of which the user belongs.
	CostCenter OptString `json:"cost_center"`
	// The name of the site ID of which the user belongs.
	SiteID OptString `json:"site_id"`
	// The primary group of which the user belongs.
	GroupID OptString `json:"group_id"`
	// The name of the site name of which the user belongs.
	SiteName OptString `json:"site_name"`
	// The spam type of the call.
	Spam OptString `json:"spam"`
	// The recording status indicates whether the call has recording or not. Recorded means the call has
	// at least one recording. Non_recorded means the call does not have any recordings.
	RecordingStatus OptString `json:"recording_status"`
}

// GetID returns the value of ID.
func (s *AccountCallHistoryOKCallLogsItem) GetID() OptString {
	return s.ID
}

// GetCallID returns the value of CallID.
func (s *AccountCallHistoryOKCallLogsItem) GetCallID() OptString {
	return s.CallID
}

// GetDirection returns the value of Direction.
func (s *AccountCallHistoryOKCallLogsItem) GetDirection() OptString {
	return s.Direction
}

// GetInternational returns the value of International.
func (s *AccountCallHistoryOKCallLogsItem) GetInternational() OptBool {
	return s.International
}

// GetStartTime returns the value of StartTime.
func (s *AccountCallHistoryOKCallLogsItem) GetStartTime() OptString {
	return s.StartTime
}

// GetAnswerTime returns the value of AnswerTime.
func (s *AccountCallHistoryOKCallLogsItem) GetAnswerTime() OptString {
	return s.AnswerTime
}

// GetEndTime returns the value of EndTime.
func (s *AccountCallHistoryOKCallLogsItem) GetEndTime() OptString {
	return s.EndTime
}

// GetDuration returns the value of Duration.
func (s *AccountCallHistoryOKCallLogsItem) GetDuration() OptInt {
	return s.Duration
}

// GetConnectType returns the value of ConnectType.
func (s *AccountCallHistoryOKCallLogsItem) GetConnectType() OptString {
	return s.ConnectType
}

// GetSbcID returns the value of SbcID.
func (s *AccountCallHistoryOKCallLogsItem) GetSbcID() OptString {
	return s.SbcID
}

// GetSbcName returns the value of SbcName.
func (s *AccountCallHistoryOKCallLogsItem) GetSbcName() OptString {
	return s.SbcName
}

// GetSipGroupID returns the value of SipGroupID.
func (s *AccountCallHistoryOKCallLogsItem) GetSipGroupID() OptString {
	return s.SipGroupID
}

// GetSipGroupName returns the value of SipGroupName.
func (s *AccountCallHistoryOKCallLogsItem) GetSipGroupName() OptString {
	return s.SipGroupName
}

// GetCallType returns the value of CallType.
func (s *AccountCallHistoryOKCallLogsItem) GetCallType() OptString {
	return s.CallType
}

// GetCallResult returns the value of CallResult.
func (s *AccountCallHistoryOKCallLogsItem) GetCallResult() OptString {
	return s.CallResult
}

// GetCallerExtID returns the value of CallerExtID.
func (s *AccountCallHistoryOKCallLogsItem) GetCallerExtID() OptString {
	return s.CallerExtID
}

// GetCallerDidNumber returns the value of CallerDidNumber.
func (s *AccountCallHistoryOKCallLogsItem) GetCallerDidNumber() OptString {
	return s.CallerDidNumber
}

// GetCallerExtNumber returns the value of CallerExtNumber.
func (s *AccountCallHistoryOKCallLogsItem) GetCallerExtNumber() OptString {
	return s.CallerExtNumber
}

// GetCallerName returns the value of CallerName.
func (s *AccountCallHistoryOKCallLogsItem) GetCallerName() OptString {
	return s.CallerName
}

// GetCallerEmail returns the value of CallerEmail.
func (s *AccountCallHistoryOKCallLogsItem) GetCallerEmail() OptString {
	return s.CallerEmail
}

// GetCallerExtType returns the value of CallerExtType.
func (s *AccountCallHistoryOKCallLogsItem) GetCallerExtType() OptString {
	return s.CallerExtType
}

// GetCallerNumberType returns the value of CallerNumberType.
func (s *AccountCallHistoryOKCallLogsItem) GetCallerNumberType() OptString {
	return s.CallerNumberType
}

// GetCallerDeviceType returns the value of CallerDeviceType.
func (s *AccountCallHistoryOKCallLogsItem) GetCallerDeviceType() OptString {
	return s.CallerDeviceType
}

// GetCallerCountryIsoCode returns the value of CallerCountryIsoCode.
func (s *AccountCallHistoryOKCallLogsItem) GetCallerCountryIsoCode() OptString {
	return s.CallerCountryIsoCode
}

// GetCallerCountryCode returns the value of CallerCountryCode.
func (s *AccountCallHistoryOKCallLogsItem) GetCallerCountryCode() OptString {
	return s.CallerCountryCode
}

// GetCalleeExtID returns the value of CalleeExtID.
func (s *AccountCallHistoryOKCallLogsItem) GetCalleeExtID() OptString {
	return s.CalleeExtID
}

// GetCalleeDidNumber returns the value of CalleeDidNumber.
func (s *AccountCallHistoryOKCallLogsItem) GetCalleeDidNumber() OptString {
	return s.CalleeDidNumber
}

// GetCalleeExtNumber returns the value of CalleeExtNumber.
func (s *AccountCallHistoryOKCallLogsItem) GetCalleeExtNumber() OptString {
	return s.CalleeExtNumber
}

// GetCalleeName returns the value of CalleeName.
func (s *AccountCallHistoryOKCallLogsItem) GetCalleeName() OptString {
	return s.CalleeName
}

// GetCalleeEmail returns the value of CalleeEmail.
func (s *AccountCallHistoryOKCallLogsItem) GetCalleeEmail() OptString {
	return s.CalleeEmail
}

// GetCalleeExtType returns the value of CalleeExtType.
func (s *AccountCallHistoryOKCallLogsItem) GetCalleeExtType() OptString {
	return s.CalleeExtType
}

// GetCalleeNumberType returns the value of CalleeNumberType.
func (s *AccountCallHistoryOKCallLogsItem) GetCalleeNumberType() OptString {
	return s.CalleeNumberType
}

// GetCalleeDeviceType returns the value of CalleeDeviceType.
func (s *AccountCallHistoryOKCallLogsItem) GetCalleeDeviceType() OptString {
	return s.CalleeDeviceType
}

// GetCalleeCountryIsoCode returns the value of CalleeCountryIsoCode.
func (s *AccountCallHistoryOKCallLogsItem) GetCalleeCountryIsoCode() OptString {
	return s.CalleeCountryIsoCode
}

// GetCalleeCountryCode returns the value of CalleeCountryCode.
func (s *AccountCallHistoryOKCallLogsItem) GetCalleeCountryCode() OptString {
	return s.CalleeCountryCode
}

// GetClientCode returns the value of ClientCode.
func (s *AccountCallHistoryOKCallLogsItem) GetClientCode() OptString {
	return s.ClientCode
}

// GetDepartment returns the value of Department.
func (s *AccountCallHistoryOKCallLogsItem) GetDepartment() OptString {
	return s.Department
}

// GetCostCenter returns the value of CostCenter.
func (s *AccountCallHistoryOKCallLogsItem) GetCostCenter() OptString {
	return s.CostCenter
}

// GetSiteID returns the value of SiteID.
func (s *AccountCallHistoryOKCallLogsItem) GetSiteID() OptString {
	return s.SiteID
}

// GetGroupID returns the value of GroupID.
func (s *AccountCallHistoryOKCallLogsItem) GetGroupID() OptString {
	return s.GroupID
}

// GetSiteName returns the value of SiteName.
func (s *AccountCallHistoryOKCallLogsItem) GetSiteName() OptString {
	return s.SiteName
}

// GetSpam returns the value of Spam.
func (s *AccountCallHistoryOKCallLogsItem) GetSpam() OptString {
	return s.Spam
}

// GetRecordingStatus returns the value of RecordingStatus.
func (s *AccountCallHistoryOKCallLogsItem) GetRecordingStatus() OptString {
	return s.RecordingStatus
}

// SetID sets the value of ID.
func (s *AccountCallHistoryOKCallLogsItem) SetID(val OptString) {
	s.ID = val
}

// SetCallID sets the value of CallID.
func (s *AccountCallHistoryOKCallLogsItem) SetCallID(val OptString) {
	s.CallID = val
}

// SetDirection sets the value of Direction.
func (s *AccountCallHistoryOKCallLogsItem) SetDirection(val OptString) {
	s.Direction = val
}

// SetInternational sets the value of International.
func (s *AccountCallHistoryOKCallLogsItem) SetInternational(val OptBool) {
	s.International = val
}

// SetStartTime sets the value of StartTime.
func (s *AccountCallHistoryOKCallLogsItem) SetStartTime(val OptString) {
	s.StartTime = val
}

// SetAnswerTime sets the value of AnswerTime.
func (s *AccountCallHistoryOKCallLogsItem) SetAnswerTime(val OptString) {
	s.AnswerTime = val
}

// SetEndTime sets the value of EndTime.
func (s *AccountCallHistoryOKCallLogsItem) SetEndTime(val OptString) {
	s.EndTime = val
}

// SetDuration sets the value of Duration.
func (s *AccountCallHistoryOKCallLogsItem) SetDuration(val OptInt) {
	s.Duration = val
}

// SetConnectType sets the value of ConnectType.
func (s *AccountCallHistoryOKCallLogsItem) SetConnectType(val OptString) {
	s.ConnectType = val
}

// SetSbcID sets the value of SbcID.
func (s *AccountCallHistoryOKCallLogsItem) SetSbcID(val OptString) {
	s.SbcID = val
}

// SetSbcName sets the value of SbcName.
func (s *AccountCallHistoryOKCallLogsItem) SetSbcName(val OptString) {
	s.SbcName = val
}

// SetSipGroupID sets the value of SipGroupID.
func (s *AccountCallHistoryOKCallLogsItem) SetSipGroupID(val OptString) {
	s.SipGroupID = val
}

// SetSipGroupName sets the value of SipGroupName.
func (s *AccountCallHistoryOKCallLogsItem) SetSipGroupName(val OptString) {
	s.SipGroupName = val
}

// SetCallType sets the value of CallType.
func (s *AccountCallHistoryOKCallLogsItem) SetCallType(val OptString) {
	s.CallType = val
}

// SetCallResult sets the value of CallResult.
func (s *AccountCallHistoryOKCallLogsItem) SetCallResult(val OptString) {
	s.CallResult = val
}

// SetCallerExtID sets the value of CallerExtID.
func (s *AccountCallHistoryOKCallLogsItem) SetCallerExtID(val OptString) {
	s.CallerExtID = val
}

// SetCallerDidNumber sets the value of CallerDidNumber.
func (s *AccountCallHistoryOKCallLogsItem) SetCallerDidNumber(val OptString) {
	s.CallerDidNumber = val
}

// SetCallerExtNumber sets the value of CallerExtNumber.
func (s *AccountCallHistoryOKCallLogsItem) SetCallerExtNumber(val OptString) {
	s.CallerExtNumber = val
}

// SetCallerName sets the value of CallerName.
func (s *AccountCallHistoryOKCallLogsItem) SetCallerName(val OptString) {
	s.CallerName = val
}

// SetCallerEmail sets the value of CallerEmail.
func (s *AccountCallHistoryOKCallLogsItem) SetCallerEmail(val OptString) {
	s.CallerEmail = val
}

// SetCallerExtType sets the value of CallerExtType.
func (s *AccountCallHistoryOKCallLogsItem) SetCallerExtType(val OptString) {
	s.CallerExtType = val
}

// SetCallerNumberType sets the value of CallerNumberType.
func (s *AccountCallHistoryOKCallLogsItem) SetCallerNumberType(val OptString) {
	s.CallerNumberType = val
}

// SetCallerDeviceType sets the value of CallerDeviceType.
func (s *AccountCallHistoryOKCallLogsItem) SetCallerDeviceType(val OptString) {
	s.CallerDeviceType = val
}

// SetCallerCountryIsoCode sets the value of CallerCountryIsoCode.
func (s *AccountCallHistoryOKCallLogsItem) SetCallerCountryIsoCode(val OptString) {
	s.CallerCountryIsoCode = val
}

// SetCallerCountryCode sets the value of CallerCountryCode.
func (s *AccountCallHistoryOKCallLogsItem) SetCallerCountryCode(val OptString) {
	s.CallerCountryCode = val
}

// SetCalleeExtID sets the value of CalleeExtID.
func (s *AccountCallHistoryOKCallLogsItem) SetCalleeExtID(val OptString) {
	s.CalleeExtID = val
}

// SetCalleeDidNumber sets the value of CalleeDidNumber.
func (s *AccountCallHistoryOKCallLogsItem) SetCalleeDidNumber(val OptString) {
	s.CalleeDidNumber = val
}

// SetCalleeExtNumber sets the value of CalleeExtNumber.
func (s *AccountCallHistoryOKCallLogsItem) SetCalleeExtNumber(val OptString) {
	s.CalleeExtNumber = val
}

// SetCalleeName sets the value of CalleeName.
func (s *AccountCallHistoryOKCallLogsItem) SetCalleeName(val OptString) {
	s.CalleeName = val
}

// SetCalleeEmail sets the value of CalleeEmail.
func (s *AccountCallHistoryOKCallLogsItem) SetCalleeEmail(val OptString) {
	s.CalleeEmail = val
}

// SetCalleeExtType sets the value of CalleeExtType.
func (s *AccountCallHistoryOKCallLogsItem) SetCalleeExtType(val OptString) {
	s.CalleeExtType = val
}

// SetCalleeNumberType sets the value of CalleeNumberType.
func (s *AccountCallHistoryOKCallLogsItem) SetCalleeNumberType(val OptString) {
	s.CalleeNumberType = val
}

// SetCalleeDeviceType sets the value of CalleeDeviceType.
func (s *AccountCallHistoryOKCallLogsItem) SetCalleeDeviceType(val OptString) {
	s.CalleeDeviceType = val
}

// SetCalleeCountryIsoCode sets the value of CalleeCountryIsoCode.
func (s *AccountCallHistoryOKCallLogsItem) SetCalleeCountryIsoCode(val OptString) {
	s.CalleeCountryIsoCode = val
}

// SetCalleeCountryCode sets the value of CalleeCountryCode.
func (s *AccountCallHistoryOKCallLogsItem) SetCalleeCountryCode(val OptString) {
	s.CalleeCountryCode = val
}

// SetClientCode sets the value of ClientCode.
func (s *AccountCallHistoryOKCallLogsItem) SetClientCode(val OptString) {
	s.ClientCode = val
}

// SetDepartment sets the value of Department.
func (s *AccountCallHistoryOKCallLogsItem) SetDepartment(val OptString) {
	s.Department = val
}

// SetCostCenter sets the value of CostCenter.
func (s *AccountCallHistoryOKCallLogsItem) SetCostCenter(val OptString) {
	s.CostCenter = val
}

// SetSiteID sets the value of SiteID.
func (s *AccountCallHistoryOKCallLogsItem) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetGroupID sets the value of GroupID.
func (s *AccountCallHistoryOKCallLogsItem) SetGroupID(val OptString) {
	s.GroupID = val
}

// SetSiteName sets the value of SiteName.
func (s *AccountCallHistoryOKCallLogsItem) SetSiteName(val OptString) {
	s.SiteName = val
}

// SetSpam sets the value of Spam.
func (s *AccountCallHistoryOKCallLogsItem) SetSpam(val OptString) {
	s.Spam = val
}

// SetRecordingStatus sets the value of RecordingStatus.
func (s *AccountCallHistoryOKCallLogsItem) SetRecordingStatus(val OptString) {
	s.RecordingStatus = val
}

// Account Call Logs.
type AccountCallLogsOK struct {
	// Call Log.
	CallLogs []AccountCallLogsOKCallLogsItem `json:"call_logs"`
	// Start time and date of the log.
	From OptString `json:"from"`
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// Total number of pages.
	PageCount OptInt `json:"page_count"`
	// The number of records returned within a single API call for each page.
	PageSize OptInt `json:"page_size"`
	// End time and date of the log.
	To OptString `json:"to"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
}

// GetCallLogs returns the value of CallLogs.
func (s *AccountCallLogsOK) GetCallLogs() []AccountCallLogsOKCallLogsItem {
	return s.CallLogs
}

// GetFrom returns the value of From.
func (s *AccountCallLogsOK) GetFrom() OptString {
	return s.From
}

// GetNextPageToken returns the value of NextPageToken.
func (s *AccountCallLogsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageCount returns the value of PageCount.
func (s *AccountCallLogsOK) GetPageCount() OptInt {
	return s.PageCount
}

// GetPageSize returns the value of PageSize.
func (s *AccountCallLogsOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTo returns the value of To.
func (s *AccountCallLogsOK) GetTo() OptString {
	return s.To
}

// GetTotalRecords returns the value of TotalRecords.
func (s *AccountCallLogsOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetCallLogs sets the value of CallLogs.
func (s *AccountCallLogsOK) SetCallLogs(val []AccountCallLogsOKCallLogsItem) {
	s.CallLogs = val
}

// SetFrom sets the value of From.
func (s *AccountCallLogsOK) SetFrom(val OptString) {
	s.From = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *AccountCallLogsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageCount sets the value of PageCount.
func (s *AccountCallLogsOK) SetPageCount(val OptInt) {
	s.PageCount = val
}

// SetPageSize sets the value of PageSize.
func (s *AccountCallLogsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTo sets the value of To.
func (s *AccountCallLogsOK) SetTo(val OptString) {
	s.To = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *AccountCallLogsOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type AccountCallLogsOKCallLogsItem struct {
	// GMT date and time at which the inbound call was answered. The value of this field is in
	// `yyyy-MM-dd'T'HH:mm:ss'Z'` format.
	AnswerStartTime OptDateTime `json:"answer_start_time"`
	// The call end time in GMT `date-time` format.
	CallEndTime OptString `json:"call_end_time"`
	// Unique identifier of the phone call.
	CallID OptString `json:"call_id"`
	// The type of call:
	// * `voip` (Voice over IP)
	// * `pstn` (Public Switched Telephone Network)
	// * `tollfree`
	// * `international`
	// * `contactCenter`.
	CallType OptString `json:"call_type"`
	// Country calling code.
	CalleeCountryCode OptString `json:"callee_country_code"`
	// ISO alpha2 country code.
	CalleeCountryIsoCode OptString `json:"callee_country_iso_code"`
	// Callee's DID (direct inward dial) number in e164 format.
	CalleeDidNumber OptString `json:"callee_did_number"`
	// Contact name of callee.
	CalleeName OptString `json:"callee_name"`
	// Number of callee.
	CalleeNumber OptString `json:"callee_number"`
	// The callee's number type:
	// * `1` &mdash; Extension number.
	// * `2` &mdash; Phone number.
	// * `3` &mdash; Customized emergency number.
	CalleeNumberType OptInt `json:"callee_number_type"`
	// Indicates where the phone number comes from:
	// * `internal` &mdash; ZP native.
	// * `external` &mdash; BYOC or Provider Exchange.
	// * `byop` &mdash; Premise peering.
	// Not available when `callee_number_type = 1`.
	CalleeNumberSource OptString `json:"callee_number_source"`
	// Country calling code.
	CallerCountryCode OptString `json:"caller_country_code"`
	// ISO alpha2 country code.
	CallerCountryIsoCode OptString `json:"caller_country_iso_code"`
	// Caller's DID (direct inward dial) number in e164 format.
	CallerDidNumber OptString `json:"caller_did_number"`
	// Contact name of caller.
	CallerName OptString `json:"caller_name"`
	// Number of caller.
	CallerNumber OptString `json:"caller_number"`
	// The caller's number type:
	// * `1` &mdash; Extension number.
	// * `2` &mdash; Phone number.
	CallerNumberType OptInt `json:"caller_number_type"`
	// Indicates where the phone number comes from:
	// * `internal` &mdash; ZP native.
	// * `external` &mdash; BYOC or Provider Exchange.
	// * `byop` &mdash; Premise peering.
	// Not available when `caller_number_type = 1`.
	CallerNumberSource OptString `json:"caller_number_source"`
	// Billing reference ID (for peering phone numbers).
	CallerBillingReferenceID OptString `json:"caller_billing_reference_id"`
	// Billing charge for the call.
	Charge OptString `json:"charge"`
	// Client code.
	ClientCode OptString `json:"client_code"`
	// Start time of the call.
	DateTime OptString `json:"date_time"`
	// Display the device's private IP address if the account has the `show_device_ip_for_call_log`
	// parameter set to `enabled`.
	DevicePrivateIP OptString `json:"device_private_ip"`
	// Display the device's public IP address if the account has the `show_device_ip_for_call_log`
	// parameter set to `enabled`.
	DevicePublicIP OptString `json:"device_public_ip"`
	// Direction of the call. &quot;inbound&quot; | &quot;outbound&quot;.
	Direction OptString `json:"direction"`
	// Duration of the call in seconds.
	Duration OptInt `json:"duration"`
	// Call Log ID.
	ID    OptString                             `json:"id"`
	Owner OptAccountCallLogsOKCallLogsItemOwner `json:"owner"`
	// Path of the call.
	Path OptString `json:"path"`
	// Billing rate for the call.
	Rate OptString `json:"rate"`
	// Unique identifier of the call recording.
	RecordingID OptString `json:"recording_id"`
	// Type of call recording:
	// `1` OnDemand
	// `2` Automatic.
	RecordingType OptString `json:"recording_type"`
	// Result of the call: `Missed` | `Voicemail` | `Call connected` | `Rejected` | `Blocked`| `Busy`|
	// `Wrong Number`| `No Answer`| `International Disabled`| `Internal Error`| `Call failed` |
	// `Restricted Number`| `Call Cancel` | `Message`| `Answered by Other Member` | `Call Cancelled` |
	// `Park` | `Parked` | `Blocked by non-GAL` |  `Blocked by info-Barriers` | `Recording Failure`|
	// `Recorded`| `Auto Recorded`.
	Result OptString                            `json:"result"`
	Site   OptAccountCallLogsOKCallLogsItemSite `json:"site"`
	// User ID of the call log owner.
	UserID OptString `json:"user_id"`
	// Hold time during a call in seconds.
	HoldTime OptInt `json:"hold_time"`
	// Duration that a  **call queue member** takes to answer a call from the time it started ringing.
	// The value of the duration is in seconds.
	WaitingTime OptInt `json:"waiting_time"`
	// Name of the user's department.
	Department OptString `json:"department"`
	// The cost center name to which a user belongs.
	CostCenter OptString `json:"cost_center"`
}

// GetAnswerStartTime returns the value of AnswerStartTime.
func (s *AccountCallLogsOKCallLogsItem) GetAnswerStartTime() OptDateTime {
	return s.AnswerStartTime
}

// GetCallEndTime returns the value of CallEndTime.
func (s *AccountCallLogsOKCallLogsItem) GetCallEndTime() OptString {
	return s.CallEndTime
}

// GetCallID returns the value of CallID.
func (s *AccountCallLogsOKCallLogsItem) GetCallID() OptString {
	return s.CallID
}

// GetCallType returns the value of CallType.
func (s *AccountCallLogsOKCallLogsItem) GetCallType() OptString {
	return s.CallType
}

// GetCalleeCountryCode returns the value of CalleeCountryCode.
func (s *AccountCallLogsOKCallLogsItem) GetCalleeCountryCode() OptString {
	return s.CalleeCountryCode
}

// GetCalleeCountryIsoCode returns the value of CalleeCountryIsoCode.
func (s *AccountCallLogsOKCallLogsItem) GetCalleeCountryIsoCode() OptString {
	return s.CalleeCountryIsoCode
}

// GetCalleeDidNumber returns the value of CalleeDidNumber.
func (s *AccountCallLogsOKCallLogsItem) GetCalleeDidNumber() OptString {
	return s.CalleeDidNumber
}

// GetCalleeName returns the value of CalleeName.
func (s *AccountCallLogsOKCallLogsItem) GetCalleeName() OptString {
	return s.CalleeName
}

// GetCalleeNumber returns the value of CalleeNumber.
func (s *AccountCallLogsOKCallLogsItem) GetCalleeNumber() OptString {
	return s.CalleeNumber
}

// GetCalleeNumberType returns the value of CalleeNumberType.
func (s *AccountCallLogsOKCallLogsItem) GetCalleeNumberType() OptInt {
	return s.CalleeNumberType
}

// GetCalleeNumberSource returns the value of CalleeNumberSource.
func (s *AccountCallLogsOKCallLogsItem) GetCalleeNumberSource() OptString {
	return s.CalleeNumberSource
}

// GetCallerCountryCode returns the value of CallerCountryCode.
func (s *AccountCallLogsOKCallLogsItem) GetCallerCountryCode() OptString {
	return s.CallerCountryCode
}

// GetCallerCountryIsoCode returns the value of CallerCountryIsoCode.
func (s *AccountCallLogsOKCallLogsItem) GetCallerCountryIsoCode() OptString {
	return s.CallerCountryIsoCode
}

// GetCallerDidNumber returns the value of CallerDidNumber.
func (s *AccountCallLogsOKCallLogsItem) GetCallerDidNumber() OptString {
	return s.CallerDidNumber
}

// GetCallerName returns the value of CallerName.
func (s *AccountCallLogsOKCallLogsItem) GetCallerName() OptString {
	return s.CallerName
}

// GetCallerNumber returns the value of CallerNumber.
func (s *AccountCallLogsOKCallLogsItem) GetCallerNumber() OptString {
	return s.CallerNumber
}

// GetCallerNumberType returns the value of CallerNumberType.
func (s *AccountCallLogsOKCallLogsItem) GetCallerNumberType() OptInt {
	return s.CallerNumberType
}

// GetCallerNumberSource returns the value of CallerNumberSource.
func (s *AccountCallLogsOKCallLogsItem) GetCallerNumberSource() OptString {
	return s.CallerNumberSource
}

// GetCallerBillingReferenceID returns the value of CallerBillingReferenceID.
func (s *AccountCallLogsOKCallLogsItem) GetCallerBillingReferenceID() OptString {
	return s.CallerBillingReferenceID
}

// GetCharge returns the value of Charge.
func (s *AccountCallLogsOKCallLogsItem) GetCharge() OptString {
	return s.Charge
}

// GetClientCode returns the value of ClientCode.
func (s *AccountCallLogsOKCallLogsItem) GetClientCode() OptString {
	return s.ClientCode
}

// GetDateTime returns the value of DateTime.
func (s *AccountCallLogsOKCallLogsItem) GetDateTime() OptString {
	return s.DateTime
}

// GetDevicePrivateIP returns the value of DevicePrivateIP.
func (s *AccountCallLogsOKCallLogsItem) GetDevicePrivateIP() OptString {
	return s.DevicePrivateIP
}

// GetDevicePublicIP returns the value of DevicePublicIP.
func (s *AccountCallLogsOKCallLogsItem) GetDevicePublicIP() OptString {
	return s.DevicePublicIP
}

// GetDirection returns the value of Direction.
func (s *AccountCallLogsOKCallLogsItem) GetDirection() OptString {
	return s.Direction
}

// GetDuration returns the value of Duration.
func (s *AccountCallLogsOKCallLogsItem) GetDuration() OptInt {
	return s.Duration
}

// GetID returns the value of ID.
func (s *AccountCallLogsOKCallLogsItem) GetID() OptString {
	return s.ID
}

// GetOwner returns the value of Owner.
func (s *AccountCallLogsOKCallLogsItem) GetOwner() OptAccountCallLogsOKCallLogsItemOwner {
	return s.Owner
}

// GetPath returns the value of Path.
func (s *AccountCallLogsOKCallLogsItem) GetPath() OptString {
	return s.Path
}

// GetRate returns the value of Rate.
func (s *AccountCallLogsOKCallLogsItem) GetRate() OptString {
	return s.Rate
}

// GetRecordingID returns the value of RecordingID.
func (s *AccountCallLogsOKCallLogsItem) GetRecordingID() OptString {
	return s.RecordingID
}

// GetRecordingType returns the value of RecordingType.
func (s *AccountCallLogsOKCallLogsItem) GetRecordingType() OptString {
	return s.RecordingType
}

// GetResult returns the value of Result.
func (s *AccountCallLogsOKCallLogsItem) GetResult() OptString {
	return s.Result
}

// GetSite returns the value of Site.
func (s *AccountCallLogsOKCallLogsItem) GetSite() OptAccountCallLogsOKCallLogsItemSite {
	return s.Site
}

// GetUserID returns the value of UserID.
func (s *AccountCallLogsOKCallLogsItem) GetUserID() OptString {
	return s.UserID
}

// GetHoldTime returns the value of HoldTime.
func (s *AccountCallLogsOKCallLogsItem) GetHoldTime() OptInt {
	return s.HoldTime
}

// GetWaitingTime returns the value of WaitingTime.
func (s *AccountCallLogsOKCallLogsItem) GetWaitingTime() OptInt {
	return s.WaitingTime
}

// GetDepartment returns the value of Department.
func (s *AccountCallLogsOKCallLogsItem) GetDepartment() OptString {
	return s.Department
}

// GetCostCenter returns the value of CostCenter.
func (s *AccountCallLogsOKCallLogsItem) GetCostCenter() OptString {
	return s.CostCenter
}

// SetAnswerStartTime sets the value of AnswerStartTime.
func (s *AccountCallLogsOKCallLogsItem) SetAnswerStartTime(val OptDateTime) {
	s.AnswerStartTime = val
}

// SetCallEndTime sets the value of CallEndTime.
func (s *AccountCallLogsOKCallLogsItem) SetCallEndTime(val OptString) {
	s.CallEndTime = val
}

// SetCallID sets the value of CallID.
func (s *AccountCallLogsOKCallLogsItem) SetCallID(val OptString) {
	s.CallID = val
}

// SetCallType sets the value of CallType.
func (s *AccountCallLogsOKCallLogsItem) SetCallType(val OptString) {
	s.CallType = val
}

// SetCalleeCountryCode sets the value of CalleeCountryCode.
func (s *AccountCallLogsOKCallLogsItem) SetCalleeCountryCode(val OptString) {
	s.CalleeCountryCode = val
}

// SetCalleeCountryIsoCode sets the value of CalleeCountryIsoCode.
func (s *AccountCallLogsOKCallLogsItem) SetCalleeCountryIsoCode(val OptString) {
	s.CalleeCountryIsoCode = val
}

// SetCalleeDidNumber sets the value of CalleeDidNumber.
func (s *AccountCallLogsOKCallLogsItem) SetCalleeDidNumber(val OptString) {
	s.CalleeDidNumber = val
}

// SetCalleeName sets the value of CalleeName.
func (s *AccountCallLogsOKCallLogsItem) SetCalleeName(val OptString) {
	s.CalleeName = val
}

// SetCalleeNumber sets the value of CalleeNumber.
func (s *AccountCallLogsOKCallLogsItem) SetCalleeNumber(val OptString) {
	s.CalleeNumber = val
}

// SetCalleeNumberType sets the value of CalleeNumberType.
func (s *AccountCallLogsOKCallLogsItem) SetCalleeNumberType(val OptInt) {
	s.CalleeNumberType = val
}

// SetCalleeNumberSource sets the value of CalleeNumberSource.
func (s *AccountCallLogsOKCallLogsItem) SetCalleeNumberSource(val OptString) {
	s.CalleeNumberSource = val
}

// SetCallerCountryCode sets the value of CallerCountryCode.
func (s *AccountCallLogsOKCallLogsItem) SetCallerCountryCode(val OptString) {
	s.CallerCountryCode = val
}

// SetCallerCountryIsoCode sets the value of CallerCountryIsoCode.
func (s *AccountCallLogsOKCallLogsItem) SetCallerCountryIsoCode(val OptString) {
	s.CallerCountryIsoCode = val
}

// SetCallerDidNumber sets the value of CallerDidNumber.
func (s *AccountCallLogsOKCallLogsItem) SetCallerDidNumber(val OptString) {
	s.CallerDidNumber = val
}

// SetCallerName sets the value of CallerName.
func (s *AccountCallLogsOKCallLogsItem) SetCallerName(val OptString) {
	s.CallerName = val
}

// SetCallerNumber sets the value of CallerNumber.
func (s *AccountCallLogsOKCallLogsItem) SetCallerNumber(val OptString) {
	s.CallerNumber = val
}

// SetCallerNumberType sets the value of CallerNumberType.
func (s *AccountCallLogsOKCallLogsItem) SetCallerNumberType(val OptInt) {
	s.CallerNumberType = val
}

// SetCallerNumberSource sets the value of CallerNumberSource.
func (s *AccountCallLogsOKCallLogsItem) SetCallerNumberSource(val OptString) {
	s.CallerNumberSource = val
}

// SetCallerBillingReferenceID sets the value of CallerBillingReferenceID.
func (s *AccountCallLogsOKCallLogsItem) SetCallerBillingReferenceID(val OptString) {
	s.CallerBillingReferenceID = val
}

// SetCharge sets the value of Charge.
func (s *AccountCallLogsOKCallLogsItem) SetCharge(val OptString) {
	s.Charge = val
}

// SetClientCode sets the value of ClientCode.
func (s *AccountCallLogsOKCallLogsItem) SetClientCode(val OptString) {
	s.ClientCode = val
}

// SetDateTime sets the value of DateTime.
func (s *AccountCallLogsOKCallLogsItem) SetDateTime(val OptString) {
	s.DateTime = val
}

// SetDevicePrivateIP sets the value of DevicePrivateIP.
func (s *AccountCallLogsOKCallLogsItem) SetDevicePrivateIP(val OptString) {
	s.DevicePrivateIP = val
}

// SetDevicePublicIP sets the value of DevicePublicIP.
func (s *AccountCallLogsOKCallLogsItem) SetDevicePublicIP(val OptString) {
	s.DevicePublicIP = val
}

// SetDirection sets the value of Direction.
func (s *AccountCallLogsOKCallLogsItem) SetDirection(val OptString) {
	s.Direction = val
}

// SetDuration sets the value of Duration.
func (s *AccountCallLogsOKCallLogsItem) SetDuration(val OptInt) {
	s.Duration = val
}

// SetID sets the value of ID.
func (s *AccountCallLogsOKCallLogsItem) SetID(val OptString) {
	s.ID = val
}

// SetOwner sets the value of Owner.
func (s *AccountCallLogsOKCallLogsItem) SetOwner(val OptAccountCallLogsOKCallLogsItemOwner) {
	s.Owner = val
}

// SetPath sets the value of Path.
func (s *AccountCallLogsOKCallLogsItem) SetPath(val OptString) {
	s.Path = val
}

// SetRate sets the value of Rate.
func (s *AccountCallLogsOKCallLogsItem) SetRate(val OptString) {
	s.Rate = val
}

// SetRecordingID sets the value of RecordingID.
func (s *AccountCallLogsOKCallLogsItem) SetRecordingID(val OptString) {
	s.RecordingID = val
}

// SetRecordingType sets the value of RecordingType.
func (s *AccountCallLogsOKCallLogsItem) SetRecordingType(val OptString) {
	s.RecordingType = val
}

// SetResult sets the value of Result.
func (s *AccountCallLogsOKCallLogsItem) SetResult(val OptString) {
	s.Result = val
}

// SetSite sets the value of Site.
func (s *AccountCallLogsOKCallLogsItem) SetSite(val OptAccountCallLogsOKCallLogsItemSite) {
	s.Site = val
}

// SetUserID sets the value of UserID.
func (s *AccountCallLogsOKCallLogsItem) SetUserID(val OptString) {
	s.UserID = val
}

// SetHoldTime sets the value of HoldTime.
func (s *AccountCallLogsOKCallLogsItem) SetHoldTime(val OptInt) {
	s.HoldTime = val
}

// SetWaitingTime sets the value of WaitingTime.
func (s *AccountCallLogsOKCallLogsItem) SetWaitingTime(val OptInt) {
	s.WaitingTime = val
}

// SetDepartment sets the value of Department.
func (s *AccountCallLogsOKCallLogsItem) SetDepartment(val OptString) {
	s.Department = val
}

// SetCostCenter sets the value of CostCenter.
func (s *AccountCallLogsOKCallLogsItem) SetCostCenter(val OptString) {
	s.CostCenter = val
}

type AccountCallLogsOKCallLogsItemOwner struct {
	// The owner's extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The owner ID.
	ID OptString `json:"id"`
	// The owner name.
	Name OptString `json:"name"`
	// The owner type:
	// *`user`
	// *`callQueue`
	// *`autoReceptionist`
	// *`commonArea`
	// *`sharedLineGroup`.
	Type OptString `json:"type"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *AccountCallLogsOKCallLogsItemOwner) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *AccountCallLogsOKCallLogsItemOwner) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *AccountCallLogsOKCallLogsItemOwner) GetName() OptString {
	return s.Name
}

// GetType returns the value of Type.
func (s *AccountCallLogsOKCallLogsItemOwner) GetType() OptString {
	return s.Type
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *AccountCallLogsOKCallLogsItemOwner) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *AccountCallLogsOKCallLogsItemOwner) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *AccountCallLogsOKCallLogsItemOwner) SetName(val OptString) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *AccountCallLogsOKCallLogsItemOwner) SetType(val OptString) {
	s.Type = val
}

type AccountCallLogsOKCallLogsItemSite struct {
	// Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in
	// which the phone number was assigned. Sites allow you to organize the phone users in your
	// organization. For example, you sites could be created based on different office locations.
	ID OptString `json:"id"`
	// Name of the site where the phone number is assigned.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *AccountCallLogsOKCallLogsItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *AccountCallLogsOKCallLogsItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *AccountCallLogsOKCallLogsItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *AccountCallLogsOKCallLogsItemSite) SetName(val OptString) {
	s.Name = val
}

type AccountSmsSessionOK struct {
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of the available result list exceeds the page size.
	NextPageToken OptString `json:"next_page_token"`
	// The size of each page.
	PageSize    OptInt                               `json:"page_size"`
	SMSSessions []AccountSmsSessionOKSMSSessionsItem `json:"sms_sessions"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *AccountSmsSessionOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *AccountSmsSessionOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetSMSSessions returns the value of SMSSessions.
func (s *AccountSmsSessionOK) GetSMSSessions() []AccountSmsSessionOKSMSSessionsItem {
	return s.SMSSessions
}

// SetNextPageToken sets the value of NextPageToken.
func (s *AccountSmsSessionOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *AccountSmsSessionOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetSMSSessions sets the value of SMSSessions.
func (s *AccountSmsSessionOK) SetSMSSessions(val []AccountSmsSessionOKSMSSessionsItem) {
	s.SMSSessions = val
}

type AccountSmsSessionOKSMSSessionsItem struct {
	// The last send or receive time in UTC.
	LastAccessTime OptString `json:"last_access_time"`
	// The SMS members.
	Participants []AccountSmsSessionOKSMSSessionsItemParticipantsItem `json:"participants"`
	// The SMS session ID.
	SessionID OptString `json:"session_id"`
	// The session type.
	// The value for this field can be one of the following:
	// `user`
	// `call_queue`
	// `auto_receptionist`.
	SessionType OptString `json:"session_type"`
}

// GetLastAccessTime returns the value of LastAccessTime.
func (s *AccountSmsSessionOKSMSSessionsItem) GetLastAccessTime() OptString {
	return s.LastAccessTime
}

// GetParticipants returns the value of Participants.
func (s *AccountSmsSessionOKSMSSessionsItem) GetParticipants() []AccountSmsSessionOKSMSSessionsItemParticipantsItem {
	return s.Participants
}

// GetSessionID returns the value of SessionID.
func (s *AccountSmsSessionOKSMSSessionsItem) GetSessionID() OptString {
	return s.SessionID
}

// GetSessionType returns the value of SessionType.
func (s *AccountSmsSessionOKSMSSessionsItem) GetSessionType() OptString {
	return s.SessionType
}

// SetLastAccessTime sets the value of LastAccessTime.
func (s *AccountSmsSessionOKSMSSessionsItem) SetLastAccessTime(val OptString) {
	s.LastAccessTime = val
}

// SetParticipants sets the value of Participants.
func (s *AccountSmsSessionOKSMSSessionsItem) SetParticipants(val []AccountSmsSessionOKSMSSessionsItemParticipantsItem) {
	s.Participants = val
}

// SetSessionID sets the value of SessionID.
func (s *AccountSmsSessionOKSMSSessionsItem) SetSessionID(val OptString) {
	s.SessionID = val
}

// SetSessionType sets the value of SessionType.
func (s *AccountSmsSessionOKSMSSessionsItem) SetSessionType(val OptString) {
	s.SessionType = val
}

type AccountSmsSessionOKSMSSessionsItemParticipantsItem struct {
	// The participant name.
	DisplayName OptString                                                  `json:"display_name"`
	Owner       OptAccountSmsSessionOKSMSSessionsItemParticipantsItemOwner `json:"owner"`
	// The participant phone number.
	PhoneNumber OptString `json:"phone_number"`
	// Whether it is the owner of the session.
	IsSessionOwner OptBool `json:"is_session_owner"`
	// This field indicates the status of the extension.
	// * `inactive`
	// * `deleted`.
	ExtensionStatus OptString `json:"extension_status"`
	// The date time the extension was deleted. It exists only when extension_status is `deleted`.
	ExtensionDeletedTime OptString `json:"extension_deleted_time"`
}

// GetDisplayName returns the value of DisplayName.
func (s *AccountSmsSessionOKSMSSessionsItemParticipantsItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetOwner returns the value of Owner.
func (s *AccountSmsSessionOKSMSSessionsItemParticipantsItem) GetOwner() OptAccountSmsSessionOKSMSSessionsItemParticipantsItemOwner {
	return s.Owner
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *AccountSmsSessionOKSMSSessionsItemParticipantsItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetIsSessionOwner returns the value of IsSessionOwner.
func (s *AccountSmsSessionOKSMSSessionsItemParticipantsItem) GetIsSessionOwner() OptBool {
	return s.IsSessionOwner
}

// GetExtensionStatus returns the value of ExtensionStatus.
func (s *AccountSmsSessionOKSMSSessionsItemParticipantsItem) GetExtensionStatus() OptString {
	return s.ExtensionStatus
}

// GetExtensionDeletedTime returns the value of ExtensionDeletedTime.
func (s *AccountSmsSessionOKSMSSessionsItemParticipantsItem) GetExtensionDeletedTime() OptString {
	return s.ExtensionDeletedTime
}

// SetDisplayName sets the value of DisplayName.
func (s *AccountSmsSessionOKSMSSessionsItemParticipantsItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetOwner sets the value of Owner.
func (s *AccountSmsSessionOKSMSSessionsItemParticipantsItem) SetOwner(val OptAccountSmsSessionOKSMSSessionsItemParticipantsItemOwner) {
	s.Owner = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *AccountSmsSessionOKSMSSessionsItemParticipantsItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetIsSessionOwner sets the value of IsSessionOwner.
func (s *AccountSmsSessionOKSMSSessionsItemParticipantsItem) SetIsSessionOwner(val OptBool) {
	s.IsSessionOwner = val
}

// SetExtensionStatus sets the value of ExtensionStatus.
func (s *AccountSmsSessionOKSMSSessionsItemParticipantsItem) SetExtensionStatus(val OptString) {
	s.ExtensionStatus = val
}

// SetExtensionDeletedTime sets the value of ExtensionDeletedTime.
func (s *AccountSmsSessionOKSMSSessionsItemParticipantsItem) SetExtensionDeletedTime(val OptString) {
	s.ExtensionDeletedTime = val
}

type AccountSmsSessionOKSMSSessionsItemParticipantsItemOwner struct {
	// The owner ID.
	ID OptString `json:"id"`
	// The owner type:
	// *`user`
	// *`callQueue`
	// *`autoReceptionist`
	// *`sharedLineGroup`.
	Type OptString `json:"type"`
}

// GetID returns the value of ID.
func (s *AccountSmsSessionOKSMSSessionsItemParticipantsItemOwner) GetID() OptString {
	return s.ID
}

// GetType returns the value of Type.
func (s *AccountSmsSessionOKSMSSessionsItemParticipantsItemOwner) GetType() OptString {
	return s.Type
}

// SetID sets the value of ID.
func (s *AccountSmsSessionOKSMSSessionsItemParticipantsItemOwner) SetID(val OptString) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *AccountSmsSessionOKSMSSessionsItemParticipantsItemOwner) SetType(val OptString) {
	s.Type = val
}

// Phone voicemails.
type AccountVoiceMailsOK struct {
	// Start date of the query.
	From OptDate `json:"from"`
	// The next page token is used to paginate through large result sets. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// Total number of pages. This field is deprecated.
	PageCount OptInt `json:"page_count"`
	// Size of each page.
	PageSize OptInt `json:"page_size"`
	// End date of the query.
	To OptDate `json:"to"`
	// Total number of records.
	TotalRecords OptInt `json:"total_records"`
	// Voicemails.
	VoiceMails []AccountVoiceMailsOKVoiceMailsItem `json:"voice_mails"`
}

// GetFrom returns the value of From.
func (s *AccountVoiceMailsOK) GetFrom() OptDate {
	return s.From
}

// GetNextPageToken returns the value of NextPageToken.
func (s *AccountVoiceMailsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageCount returns the value of PageCount.
func (s *AccountVoiceMailsOK) GetPageCount() OptInt {
	return s.PageCount
}

// GetPageSize returns the value of PageSize.
func (s *AccountVoiceMailsOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTo returns the value of To.
func (s *AccountVoiceMailsOK) GetTo() OptDate {
	return s.To
}

// GetTotalRecords returns the value of TotalRecords.
func (s *AccountVoiceMailsOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// GetVoiceMails returns the value of VoiceMails.
func (s *AccountVoiceMailsOK) GetVoiceMails() []AccountVoiceMailsOKVoiceMailsItem {
	return s.VoiceMails
}

// SetFrom sets the value of From.
func (s *AccountVoiceMailsOK) SetFrom(val OptDate) {
	s.From = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *AccountVoiceMailsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageCount sets the value of PageCount.
func (s *AccountVoiceMailsOK) SetPageCount(val OptInt) {
	s.PageCount = val
}

// SetPageSize sets the value of PageSize.
func (s *AccountVoiceMailsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTo sets the value of To.
func (s *AccountVoiceMailsOK) SetTo(val OptDate) {
	s.To = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *AccountVoiceMailsOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

// SetVoiceMails sets the value of VoiceMails.
func (s *AccountVoiceMailsOK) SetVoiceMails(val []AccountVoiceMailsOKVoiceMailsItem) {
	s.VoiceMails = val
}

type AccountVoiceMailsOKVoiceMailsItem struct {
	// The phone call's unique ID.
	CallID OptString `json:"call_id"`
	// The phone call log's unique ID.
	CallLogID OptString `json:"call_log_id"`
	// Contact name of the callee.
	CalleeName OptString `json:"callee_name"`
	// The number associated with the callee. Could be a phone number or an extension. Check the number
	// type to differentiate the two.
	CalleeNumber OptString `json:"callee_number"`
	// The callee's number type:
	// * `1` &mdash; Internal number.
	// * `2` &mdash; External number.
	// * `3` &mdash; Customized emergency number.
	CalleeNumberType OptInt `json:"callee_number_type"`
	// Contact name of the caller.
	CallerName OptString `json:"caller_name"`
	// The number associated with the caller. Could be a phone number or an extension. Check the number
	// type to differentiate the two.
	CallerNumber OptString `json:"caller_number"`
	// The caller's number type:
	// * `1` &mdash; Internal number.
	// * `2` &mdash; External number.
	CallerNumberType OptInt `json:"caller_number_type"`
	// Start time and date of the voicemail.
	DateTime OptString `json:"date_time"`
	// Download url of the attachment.
	DownloadURL OptString `json:"download_url"`
	// The duration of voicemail in seconds.
	Duration OptInt `json:"duration"`
	// Voicemail ID.
	ID OptString `json:"id"`
	// Status of the voicemail: 'read' or 'unread'.
	Status OptString `json:"status"`
}

// GetCallID returns the value of CallID.
func (s *AccountVoiceMailsOKVoiceMailsItem) GetCallID() OptString {
	return s.CallID
}

// GetCallLogID returns the value of CallLogID.
func (s *AccountVoiceMailsOKVoiceMailsItem) GetCallLogID() OptString {
	return s.CallLogID
}

// GetCalleeName returns the value of CalleeName.
func (s *AccountVoiceMailsOKVoiceMailsItem) GetCalleeName() OptString {
	return s.CalleeName
}

// GetCalleeNumber returns the value of CalleeNumber.
func (s *AccountVoiceMailsOKVoiceMailsItem) GetCalleeNumber() OptString {
	return s.CalleeNumber
}

// GetCalleeNumberType returns the value of CalleeNumberType.
func (s *AccountVoiceMailsOKVoiceMailsItem) GetCalleeNumberType() OptInt {
	return s.CalleeNumberType
}

// GetCallerName returns the value of CallerName.
func (s *AccountVoiceMailsOKVoiceMailsItem) GetCallerName() OptString {
	return s.CallerName
}

// GetCallerNumber returns the value of CallerNumber.
func (s *AccountVoiceMailsOKVoiceMailsItem) GetCallerNumber() OptString {
	return s.CallerNumber
}

// GetCallerNumberType returns the value of CallerNumberType.
func (s *AccountVoiceMailsOKVoiceMailsItem) GetCallerNumberType() OptInt {
	return s.CallerNumberType
}

// GetDateTime returns the value of DateTime.
func (s *AccountVoiceMailsOKVoiceMailsItem) GetDateTime() OptString {
	return s.DateTime
}

// GetDownloadURL returns the value of DownloadURL.
func (s *AccountVoiceMailsOKVoiceMailsItem) GetDownloadURL() OptString {
	return s.DownloadURL
}

// GetDuration returns the value of Duration.
func (s *AccountVoiceMailsOKVoiceMailsItem) GetDuration() OptInt {
	return s.Duration
}

// GetID returns the value of ID.
func (s *AccountVoiceMailsOKVoiceMailsItem) GetID() OptString {
	return s.ID
}

// GetStatus returns the value of Status.
func (s *AccountVoiceMailsOKVoiceMailsItem) GetStatus() OptString {
	return s.Status
}

// SetCallID sets the value of CallID.
func (s *AccountVoiceMailsOKVoiceMailsItem) SetCallID(val OptString) {
	s.CallID = val
}

// SetCallLogID sets the value of CallLogID.
func (s *AccountVoiceMailsOKVoiceMailsItem) SetCallLogID(val OptString) {
	s.CallLogID = val
}

// SetCalleeName sets the value of CalleeName.
func (s *AccountVoiceMailsOKVoiceMailsItem) SetCalleeName(val OptString) {
	s.CalleeName = val
}

// SetCalleeNumber sets the value of CalleeNumber.
func (s *AccountVoiceMailsOKVoiceMailsItem) SetCalleeNumber(val OptString) {
	s.CalleeNumber = val
}

// SetCalleeNumberType sets the value of CalleeNumberType.
func (s *AccountVoiceMailsOKVoiceMailsItem) SetCalleeNumberType(val OptInt) {
	s.CalleeNumberType = val
}

// SetCallerName sets the value of CallerName.
func (s *AccountVoiceMailsOKVoiceMailsItem) SetCallerName(val OptString) {
	s.CallerName = val
}

// SetCallerNumber sets the value of CallerNumber.
func (s *AccountVoiceMailsOKVoiceMailsItem) SetCallerNumber(val OptString) {
	s.CallerNumber = val
}

// SetCallerNumberType sets the value of CallerNumberType.
func (s *AccountVoiceMailsOKVoiceMailsItem) SetCallerNumberType(val OptInt) {
	s.CallerNumberType = val
}

// SetDateTime sets the value of DateTime.
func (s *AccountVoiceMailsOKVoiceMailsItem) SetDateTime(val OptString) {
	s.DateTime = val
}

// SetDownloadURL sets the value of DownloadURL.
func (s *AccountVoiceMailsOKVoiceMailsItem) SetDownloadURL(val OptString) {
	s.DownloadURL = val
}

// SetDuration sets the value of Duration.
func (s *AccountVoiceMailsOKVoiceMailsItem) SetDuration(val OptInt) {
	s.Duration = val
}

// SetID sets the value of ID.
func (s *AccountVoiceMailsOKVoiceMailsItem) SetID(val OptString) {
	s.ID = val
}

// SetStatus sets the value of Status.
func (s *AccountVoiceMailsOKVoiceMailsItem) SetStatus(val OptString) {
	s.Status = val
}

// ActiveCRPhoneNumbersNoContent is response for ActiveCRPhoneNumbers operation.
type ActiveCRPhoneNumbersNoContent struct{}

type AddAccountLevelInboundBlockRulesCreated struct {
	// The unique identifier of the blocked rule.
	ID OptString `json:"id"`
}

// GetID returns the value of ID.
func (s *AddAccountLevelInboundBlockRulesCreated) GetID() OptString {
	return s.ID
}

// SetID sets the value of ID.
func (s *AddAccountLevelInboundBlockRulesCreated) SetID(val OptString) {
	s.ID = val
}

type AddAccountLevelInboundBlockRulesReq struct {
	// The match type for the block rule:
	// * `phoneNumber`: Only a specific phone number that is shown in the `blocked_number` field is
	// blocked.
	// * `prefix`: All numbers starting with the prefix that is shown in the `blocked_number` field are
	// blocked.
	// * `SMS-shortCodes`:  Only a specific SMS short code that is shown in the `blocked_number` field is
	// blocked.
	MatchType string `json:"match_type"`
	// The block rule phone number prefix or SMS short code or pure phone number without the country code.
	// * When the value of the `match_type` is `prefix`, enter the prefix of the phone number without the
	// country code.
	// * When the value of the `match_type` is `phoneNumber`, enter the phone number without the country
	// code.
	// * When the value of the `match_type` is `SMS-shortCodes`, enter the SMS short code.
	BlockedNumber string `json:"blocked_number"`
	// The block type for the block rule:
	// * `block_for_other_reasons`
	// * `block_as_threat`
	// **Note**: The value of `block_as_threat` can be available if the `block_calls_as_threat` setting
	// is enabled in [account setting API](https://developers.zoom.
	// us/docs/zoom-phone/apis/#operation/listZoomPhoneAccountSettings).
	Type string `json:"type"`
	// The comment of the block rule.
	// Enter a comment to help you identify the blocked number, prefix, or SMS short codes.
	Comment OptString `json:"comment"`
	// Whether the block rule is active or inactive.
	// * `active`: The block rule is active.
	// * `inactive`: The block rule is inactive.
	Status string `json:"status"`
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	// This field is required when the value is the following:
	// * `match_type` is `phoneNumber` or `prefix`.
	Country OptString `json:"country"`
}

// GetMatchType returns the value of MatchType.
func (s *AddAccountLevelInboundBlockRulesReq) GetMatchType() string {
	return s.MatchType
}

// GetBlockedNumber returns the value of BlockedNumber.
func (s *AddAccountLevelInboundBlockRulesReq) GetBlockedNumber() string {
	return s.BlockedNumber
}

// GetType returns the value of Type.
func (s *AddAccountLevelInboundBlockRulesReq) GetType() string {
	return s.Type
}

// GetComment returns the value of Comment.
func (s *AddAccountLevelInboundBlockRulesReq) GetComment() OptString {
	return s.Comment
}

// GetStatus returns the value of Status.
func (s *AddAccountLevelInboundBlockRulesReq) GetStatus() string {
	return s.Status
}

// GetCountry returns the value of Country.
func (s *AddAccountLevelInboundBlockRulesReq) GetCountry() OptString {
	return s.Country
}

// SetMatchType sets the value of MatchType.
func (s *AddAccountLevelInboundBlockRulesReq) SetMatchType(val string) {
	s.MatchType = val
}

// SetBlockedNumber sets the value of BlockedNumber.
func (s *AddAccountLevelInboundBlockRulesReq) SetBlockedNumber(val string) {
	s.BlockedNumber = val
}

// SetType sets the value of Type.
func (s *AddAccountLevelInboundBlockRulesReq) SetType(val string) {
	s.Type = val
}

// SetComment sets the value of Comment.
func (s *AddAccountLevelInboundBlockRulesReq) SetComment(val OptString) {
	s.Comment = val
}

// SetStatus sets the value of Status.
func (s *AddAccountLevelInboundBlockRulesReq) SetStatus(val string) {
	s.Status = val
}

// SetCountry sets the value of Country.
func (s *AddAccountLevelInboundBlockRulesReq) SetCountry(val OptString) {
	s.Country = val
}

type AddAccountOutboundCallingExceptionRuleCreated struct {
	// The IDs of the exception rules.
	ExceptionRuleID OptString `json:"exception_rule_id"`
}

// GetExceptionRuleID returns the value of ExceptionRuleID.
func (s *AddAccountOutboundCallingExceptionRuleCreated) GetExceptionRuleID() OptString {
	return s.ExceptionRuleID
}

// SetExceptionRuleID sets the value of ExceptionRuleID.
func (s *AddAccountOutboundCallingExceptionRuleCreated) SetExceptionRuleID(val OptString) {
	s.ExceptionRuleID = val
}

type AddAccountOutboundCallingExceptionRuleReq struct {
	ExceptionRule OptAddAccountOutboundCallingExceptionRuleReqExceptionRule `json:"exception_rule"`
}

// GetExceptionRule returns the value of ExceptionRule.
func (s *AddAccountOutboundCallingExceptionRuleReq) GetExceptionRule() OptAddAccountOutboundCallingExceptionRuleReqExceptionRule {
	return s.ExceptionRule
}

// SetExceptionRule sets the value of ExceptionRule.
func (s *AddAccountOutboundCallingExceptionRuleReq) SetExceptionRule(val OptAddAccountOutboundCallingExceptionRuleReqExceptionRule) {
	s.ExceptionRule = val
}

type AddAccountOutboundCallingExceptionRuleReqExceptionRule struct {
	// The match type for the exception rule:
	// `phoneNumber`
	// `prefix`.
	MatchType string `json:"match_type"`
	// The exception rule phone number prefix or phone number without the country code.
	PrefixNumber string `json:"prefix_number"`
	// A comment that identifies the exception rule number or prefix.
	Comment OptString `json:"comment"`
	// Whether the exception rule is active or inactive.
	// `active`: The exception rule is active.
	// `inactive`: The exception rule is inactive.
	Status string `json:"status"`
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	Country string `json:"country"`
}

// GetMatchType returns the value of MatchType.
func (s *AddAccountOutboundCallingExceptionRuleReqExceptionRule) GetMatchType() string {
	return s.MatchType
}

// GetPrefixNumber returns the value of PrefixNumber.
func (s *AddAccountOutboundCallingExceptionRuleReqExceptionRule) GetPrefixNumber() string {
	return s.PrefixNumber
}

// GetComment returns the value of Comment.
func (s *AddAccountOutboundCallingExceptionRuleReqExceptionRule) GetComment() OptString {
	return s.Comment
}

// GetStatus returns the value of Status.
func (s *AddAccountOutboundCallingExceptionRuleReqExceptionRule) GetStatus() string {
	return s.Status
}

// GetCountry returns the value of Country.
func (s *AddAccountOutboundCallingExceptionRuleReqExceptionRule) GetCountry() string {
	return s.Country
}

// SetMatchType sets the value of MatchType.
func (s *AddAccountOutboundCallingExceptionRuleReqExceptionRule) SetMatchType(val string) {
	s.MatchType = val
}

// SetPrefixNumber sets the value of PrefixNumber.
func (s *AddAccountOutboundCallingExceptionRuleReqExceptionRule) SetPrefixNumber(val string) {
	s.PrefixNumber = val
}

// SetComment sets the value of Comment.
func (s *AddAccountOutboundCallingExceptionRuleReqExceptionRule) SetComment(val OptString) {
	s.Comment = val
}

// SetStatus sets the value of Status.
func (s *AddAccountOutboundCallingExceptionRuleReqExceptionRule) SetStatus(val string) {
	s.Status = val
}

// SetCountry sets the value of Country.
func (s *AddAccountOutboundCallingExceptionRuleReqExceptionRule) SetCountry(val string) {
	s.Country = val
}

type AddAnAlertSettingCreated struct {
	// The unique identifier of the alert setting.
	AlertSettingID OptString `json:"alert_setting_id"`
	// The name of the alert setting.
	AlertSettingName OptString `json:"alert_setting_name"`
}

// GetAlertSettingID returns the value of AlertSettingID.
func (s *AddAnAlertSettingCreated) GetAlertSettingID() OptString {
	return s.AlertSettingID
}

// GetAlertSettingName returns the value of AlertSettingName.
func (s *AddAnAlertSettingCreated) GetAlertSettingName() OptString {
	return s.AlertSettingName
}

// SetAlertSettingID sets the value of AlertSettingID.
func (s *AddAnAlertSettingCreated) SetAlertSettingID(val OptString) {
	s.AlertSettingID = val
}

// SetAlertSettingName sets the value of AlertSettingName.
func (s *AddAnAlertSettingCreated) SetAlertSettingName(val OptString) {
	s.AlertSettingName = val
}

type AddAnAlertSettingReq struct {
	// The name of the alert setting.
	AlertSettingName string `json:"alert_setting_name"`
	// The module of the alert. The module and its code mappings are shown as:
	// `Call Queue Management`-`1`, `Route Group Management`-`2`, `Devices &amp; Phones Management`-`3`,
	// `Call Quality Management`-`4`, and `Emergency Services Management`-`5`.
	Module int `json:"module"`
	// The rule of the alert. The rule and its code mappings are shown as:
	// `Service Level`-`1`, `Inbound Abandoned Calls`-`2`, `Inbound Overflowed Calls`-`3`, `Inbound Avg
	// Call Waiting Time`-`4`, `Inbound Forwarded to Voicemail`-`5`, `Number of Waiting Calls`-`6`,
	// `Member Availability (Active)`-`7`, `Member Availability (Opt-in/Opt-out)`-`8`, `Route groups
	// status change`-`9`, `Devices go offline`-`10`, `Devices go online`-`11`, `Device offline
	// rate`-`12`, `QoS Alert`-`13`, and `Emergency Call Alert`-`14`.
	// When the value of the `module` is `1`, the value of `rule` can only be in the range of `1` to `8`.
	// When the value of the `module` is `2`, the value of `rule` can only be `9`.
	// When the value of the `module` is `3`, the value of `rule` can only be in the range of `10` to
	// `12`.
	// When the value of the `module` is `4`, the value of `rule` can only be `13`.
	// When the value of the `module` is `5`, the value of `rule` can only be `14`.
	// Alerts of rule `7` or rule `8` cannot exceed 30 in number.
	Rule int `json:"rule"`
	// The target type.
	// * `1`-`User`
	// * `2`-`Account`
	// * `3`-`Call Queue`
	// * `4`-`Site`
	// * `5`-`Device`.
	TargetType int `json:"target_type"`
	// The target IDs of the alert. The target type can be `User`, `Account`, `Call Queue`, `Site`, and
	// `Device`.
	// When the value of `rule` is in the range of `1` to `8`, it only supports the `Call Queue` and if
	// the number of `Call Queue` is `1`, you should pass the `Extension ID` of the specific call queue.
	// When the value of the `rule` is `9`, it can only support the `Account`. You only need to specify
	// the value of `target_type`. This field doesn't need a specified value.
	// When the value of the `rule` is `10`, it can support the `Account` or `Device`. If you want to set
	// the `Account`, you only need to specify the value of `target_type`. This field doesn't need a
	// specified value. If you want to set the `Device`, you should pass the `Device ID` of the specific
	// device. The number of `Device` is up to `5`.
	// When the value of the `rule` is `11`, it can support the `Device`. The number of `Device` is up to
	// `5`. You should pass the `Device ID` of the specific device.
	// When the value of the `rule` is `12`, it can support the `Site` and the number of `Site` is `1`.
	// You should pass the `Site ID` of the specific site.
	// When the value of the `rule` is `13`, it can support the `User` and the number of `User` is up to
	// `5`. You should pass the `Extension ID` of the specific user.
	// When the value of the `rule` is `14`, it can support the `Site` and the number of `Site` is `1`.
	// You should pass the `Site ID` of the specific site.
	TargetIds []string `json:"target_ids"`
	// The rule conditions.
	RuleConditions []AddAnAlertSettingReqRuleConditionsItem `json:"rule_conditions"`
	// The time frame type.
	// The available values: `all_day` and `specific_time`.
	TimeFrameType string `json:"time_frame_type"`
	// The start time of time frame in which the alert was triggered, in `HH:mm:ss` format.
	// When the `time_frame_type` is `all_day`, the value is `00:00:00`.
	// The value should be either at the whole hour or at half past the hour.
	TimeFrameFrom string `json:"time_frame_from"`
	// The end time of time frame in which the alert was triggered, in `HH:mm:ss` format.
	// When the `time_frame_type` is `all_day`, the value is `00:00:00`.
	// The value should be either at the whole hour or at half past the hour.
	TimeFrameTo string `json:"time_frame_to"`
	// The frequency of alert triggers. The unit is `minutes`.
	// When the value of `module` represents `Call Queue Management` or `Route Group Management` or
	// `Devices &amp; Phones Management` or `Call Quality Management`, it will be used.
	Frequency OptInt `json:"frequency"`
	// The email addresses of recipients. The number of the emails is up to `10`.
	EmailRecipients []string `json:"email_recipients"`
	// The chat channels. It's used When the value of `module` represents `Call Queue Management`, `Route
	// Group Management`, `Devices &amp; Phones Management`, and `Call Quality Management`. The number of
	// the chat channels is up to `3`.
	ChatChannels []AddAnAlertSettingReqChatChannelsItem `json:"chat_channels"`
	// The alert's status:
	// * `0` — Inactive.
	// * `1` — Active.
	Status OptInt `json:"status"`
}

// GetAlertSettingName returns the value of AlertSettingName.
func (s *AddAnAlertSettingReq) GetAlertSettingName() string {
	return s.AlertSettingName
}

// GetModule returns the value of Module.
func (s *AddAnAlertSettingReq) GetModule() int {
	return s.Module
}

// GetRule returns the value of Rule.
func (s *AddAnAlertSettingReq) GetRule() int {
	return s.Rule
}

// GetTargetType returns the value of TargetType.
func (s *AddAnAlertSettingReq) GetTargetType() int {
	return s.TargetType
}

// GetTargetIds returns the value of TargetIds.
func (s *AddAnAlertSettingReq) GetTargetIds() []string {
	return s.TargetIds
}

// GetRuleConditions returns the value of RuleConditions.
func (s *AddAnAlertSettingReq) GetRuleConditions() []AddAnAlertSettingReqRuleConditionsItem {
	return s.RuleConditions
}

// GetTimeFrameType returns the value of TimeFrameType.
func (s *AddAnAlertSettingReq) GetTimeFrameType() string {
	return s.TimeFrameType
}

// GetTimeFrameFrom returns the value of TimeFrameFrom.
func (s *AddAnAlertSettingReq) GetTimeFrameFrom() string {
	return s.TimeFrameFrom
}

// GetTimeFrameTo returns the value of TimeFrameTo.
func (s *AddAnAlertSettingReq) GetTimeFrameTo() string {
	return s.TimeFrameTo
}

// GetFrequency returns the value of Frequency.
func (s *AddAnAlertSettingReq) GetFrequency() OptInt {
	return s.Frequency
}

// GetEmailRecipients returns the value of EmailRecipients.
func (s *AddAnAlertSettingReq) GetEmailRecipients() []string {
	return s.EmailRecipients
}

// GetChatChannels returns the value of ChatChannels.
func (s *AddAnAlertSettingReq) GetChatChannels() []AddAnAlertSettingReqChatChannelsItem {
	return s.ChatChannels
}

// GetStatus returns the value of Status.
func (s *AddAnAlertSettingReq) GetStatus() OptInt {
	return s.Status
}

// SetAlertSettingName sets the value of AlertSettingName.
func (s *AddAnAlertSettingReq) SetAlertSettingName(val string) {
	s.AlertSettingName = val
}

// SetModule sets the value of Module.
func (s *AddAnAlertSettingReq) SetModule(val int) {
	s.Module = val
}

// SetRule sets the value of Rule.
func (s *AddAnAlertSettingReq) SetRule(val int) {
	s.Rule = val
}

// SetTargetType sets the value of TargetType.
func (s *AddAnAlertSettingReq) SetTargetType(val int) {
	s.TargetType = val
}

// SetTargetIds sets the value of TargetIds.
func (s *AddAnAlertSettingReq) SetTargetIds(val []string) {
	s.TargetIds = val
}

// SetRuleConditions sets the value of RuleConditions.
func (s *AddAnAlertSettingReq) SetRuleConditions(val []AddAnAlertSettingReqRuleConditionsItem) {
	s.RuleConditions = val
}

// SetTimeFrameType sets the value of TimeFrameType.
func (s *AddAnAlertSettingReq) SetTimeFrameType(val string) {
	s.TimeFrameType = val
}

// SetTimeFrameFrom sets the value of TimeFrameFrom.
func (s *AddAnAlertSettingReq) SetTimeFrameFrom(val string) {
	s.TimeFrameFrom = val
}

// SetTimeFrameTo sets the value of TimeFrameTo.
func (s *AddAnAlertSettingReq) SetTimeFrameTo(val string) {
	s.TimeFrameTo = val
}

// SetFrequency sets the value of Frequency.
func (s *AddAnAlertSettingReq) SetFrequency(val OptInt) {
	s.Frequency = val
}

// SetEmailRecipients sets the value of EmailRecipients.
func (s *AddAnAlertSettingReq) SetEmailRecipients(val []string) {
	s.EmailRecipients = val
}

// SetChatChannels sets the value of ChatChannels.
func (s *AddAnAlertSettingReq) SetChatChannels(val []AddAnAlertSettingReqChatChannelsItem) {
	s.ChatChannels = val
}

// SetStatus sets the value of Status.
func (s *AddAnAlertSettingReq) SetStatus(val OptInt) {
	s.Status = val
}

type AddAnAlertSettingReqChatChannelsItem struct {
	// The channel name.
	ChatChannelName OptString `json:"chat_channel_name"`
	// The verification token.
	Token OptString `json:"token"`
	// The end point.
	EndPoint OptString `json:"end_point"`
}

// GetChatChannelName returns the value of ChatChannelName.
func (s *AddAnAlertSettingReqChatChannelsItem) GetChatChannelName() OptString {
	return s.ChatChannelName
}

// GetToken returns the value of Token.
func (s *AddAnAlertSettingReqChatChannelsItem) GetToken() OptString {
	return s.Token
}

// GetEndPoint returns the value of EndPoint.
func (s *AddAnAlertSettingReqChatChannelsItem) GetEndPoint() OptString {
	return s.EndPoint
}

// SetChatChannelName sets the value of ChatChannelName.
func (s *AddAnAlertSettingReqChatChannelsItem) SetChatChannelName(val OptString) {
	s.ChatChannelName = val
}

// SetToken sets the value of Token.
func (s *AddAnAlertSettingReqChatChannelsItem) SetToken(val OptString) {
	s.Token = val
}

// SetEndPoint sets the value of EndPoint.
func (s *AddAnAlertSettingReqChatChannelsItem) SetEndPoint(val OptString) {
	s.EndPoint = val
}

type AddAnAlertSettingReqRuleConditionsItem struct {
	// The condition type.
	// * `1`-`Threshold`
	// * `2`-`Warning`
	// * `3`-`Critical`
	// * `4`-`Alert`
	// * `5`-`Severity`
	// We use the `Threshold` for the `Service Level` rule.
	// We use the `Warning` or `Critical` for: `Service Level`, `Inbound Abandoned Calls`, `Inbound
	// Overflowed Calls`, `Inbound Forwarded to Voicemail`, `Number of Waiting Calls`, `Member
	// Availability (Active)`, `Member Availability (Opt-in/Opt-out)`, `Device offline rate`, `Inbound
	// Avg Call Waiting Time`, or `QoS Alert` rule.
	// We use `Alert` for the `Devices go offline` or `Devices go online` rule.
	// We use `Severity` for the `Emergency Call Alert` or `Route groups status change` rule.
	RuleConditionType OptInt `json:"rule_condition_type"`
	// The rule condition value.
	// `rule_condition_type` is `1`: The available values are `15`, `30`, `60`, `120`, `180`, `240`,
	// `300`.
	// `rule_condition_type `is `2` or `3`: When the value of `rule` represents `Service Level`, `Inbound
	// Abandoned Calls`, `Inbound Overflowed Calls`, `Inbound Forwarded to Voicemail`, `Member
	// Availability (Active)`, `Member Availability (Opt-in/Opt-out)`, or `Device offline rate`, the unit
	// is `percentage`. The value can only be in the range of `1` to `100`. When the value of `rule`
	// represents `Inbound Avg Call Waiting Time`, the unit is `seconds`. The available values are `10`,
	// `15`, `20`, `25`, `30`, `45`, `60`, `120`, `180`, `240`, `300`, `600`, `900`, `1200`, `1500`, and
	// `1800`. When the value of `rule` represents `QoS Alert`, the value can be only in the range of `0`
	// to `5`.
	// `rule_condition_type` is `4`: The available values:`5`, `10`, `15`,`30`, and `60`.
	// `rule_condition_type` is `5`: The available values are`Warning` and `Critical`.
	RuleConditionValue OptString `json:"rule_condition_value"`
}

// GetRuleConditionType returns the value of RuleConditionType.
func (s *AddAnAlertSettingReqRuleConditionsItem) GetRuleConditionType() OptInt {
	return s.RuleConditionType
}

// GetRuleConditionValue returns the value of RuleConditionValue.
func (s *AddAnAlertSettingReqRuleConditionsItem) GetRuleConditionValue() OptString {
	return s.RuleConditionValue
}

// SetRuleConditionType sets the value of RuleConditionType.
func (s *AddAnAlertSettingReqRuleConditionsItem) SetRuleConditionType(val OptInt) {
	s.RuleConditionType = val
}

// SetRuleConditionValue sets the value of RuleConditionValue.
func (s *AddAnAlertSettingReqRuleConditionsItem) SetRuleConditionValue(val OptString) {
	s.RuleConditionValue = val
}

type AddAnAudioCreated struct {
	// Unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
	// Name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *AddAnAudioCreated) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *AddAnAudioCreated) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *AddAnAudioCreated) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *AddAnAudioCreated) SetName(val OptString) {
	s.Name = val
}

type AddAnAudioReq struct {
	// The name of the audio item.
	AudioName OptString `json:"audio_name"`
	// The message to play. The maximum message length is 3000.
	Text OptString `json:"text"`
	// Language `en-US` or `en-GB` for example.
	VoiceLanguage OptString `json:"voice_language"`
	// The accent of the audio file, `Joanna-Female` or `Joey-Male` for example.
	VoiceAccent OptString `json:"voice_accent"`
}

// GetAudioName returns the value of AudioName.
func (s *AddAnAudioReq) GetAudioName() OptString {
	return s.AudioName
}

// GetText returns the value of Text.
func (s *AddAnAudioReq) GetText() OptString {
	return s.Text
}

// GetVoiceLanguage returns the value of VoiceLanguage.
func (s *AddAnAudioReq) GetVoiceLanguage() OptString {
	return s.VoiceLanguage
}

// GetVoiceAccent returns the value of VoiceAccent.
func (s *AddAnAudioReq) GetVoiceAccent() OptString {
	return s.VoiceAccent
}

// SetAudioName sets the value of AudioName.
func (s *AddAnAudioReq) SetAudioName(val OptString) {
	s.AudioName = val
}

// SetText sets the value of Text.
func (s *AddAnAudioReq) SetText(val OptString) {
	s.Text = val
}

// SetVoiceLanguage sets the value of VoiceLanguage.
func (s *AddAnAudioReq) SetVoiceLanguage(val OptString) {
	s.VoiceLanguage = val
}

// SetVoiceAccent sets the value of VoiceAccent.
func (s *AddAnAudioReq) SetVoiceAccent(val OptString) {
	s.VoiceAccent = val
}

type AddAnumberToBlockedListCreated struct {
	// The unique identifier of the blocked list.
	ID OptString `json:"id"`
}

// GetID returns the value of ID.
func (s *AddAnumberToBlockedListCreated) GetID() OptString {
	return s.ID
}

// SetID sets the value of ID.
func (s *AddAnumberToBlockedListCreated) SetID(val OptString) {
	s.ID = val
}

type AddAnumberToBlockedListReq struct {
	// Whether you want the block type to be inbound or outbound.
	// `inbound`: Pass this value to prevent the blocked number or prefix from calling into the phone
	// users.
	// `outbound`: Pass this value to prevent phone users from calling the blocked number or prefix.
	BlockType OptString `json:"block_type"`
	// Comments to help you identify the blocked number or prefix.
	Comment OptString `json:"comment"`
	// The country information. For example, entering US or CH.
	Country OptString `json:"country"`
	// This field specifies the match type for the blocked list:
	// * `phoneNumber`: Choose this option (Phone Number Match) if you want to block a specific phone
	// number. Provide the phone number in the `phone_number` field and the country code in the `country`
	// field.
	// * `prefix`: Choose this option (Prefix Match) if you want to block all numbers with a specific
	// country or an area code. Enter a phone number in the `phone_number` field and in the `country`
	// field, enter a country code as part of the prefix.
	MatchType OptString `json:"match_type"`
	// The phone number to be blocked if you passed `phoneNumber` as the value for the `match_type` field.
	//  If you passed `prefix` as the value for the `match_type` field, provide the prefix of the phone
	// number in the `country` field.
	PhoneNumber OptString `json:"phone_number"`
	// This field enables or disables the blocking. One of the following values are allowed:
	// `active`: Keep the blocking active.
	// `inactive`: Disable the blocking.
	Status OptString `json:"status"`
}

// GetBlockType returns the value of BlockType.
func (s *AddAnumberToBlockedListReq) GetBlockType() OptString {
	return s.BlockType
}

// GetComment returns the value of Comment.
func (s *AddAnumberToBlockedListReq) GetComment() OptString {
	return s.Comment
}

// GetCountry returns the value of Country.
func (s *AddAnumberToBlockedListReq) GetCountry() OptString {
	return s.Country
}

// GetMatchType returns the value of MatchType.
func (s *AddAnumberToBlockedListReq) GetMatchType() OptString {
	return s.MatchType
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *AddAnumberToBlockedListReq) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetStatus returns the value of Status.
func (s *AddAnumberToBlockedListReq) GetStatus() OptString {
	return s.Status
}

// SetBlockType sets the value of BlockType.
func (s *AddAnumberToBlockedListReq) SetBlockType(val OptString) {
	s.BlockType = val
}

// SetComment sets the value of Comment.
func (s *AddAnumberToBlockedListReq) SetComment(val OptString) {
	s.Comment = val
}

// SetCountry sets the value of Country.
func (s *AddAnumberToBlockedListReq) SetCountry(val OptString) {
	s.Country = val
}

// SetMatchType sets the value of MatchType.
func (s *AddAnumberToBlockedListReq) SetMatchType(val OptString) {
	s.MatchType = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *AddAnumberToBlockedListReq) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetStatus sets the value of Status.
func (s *AddAnumberToBlockedListReq) SetStatus(val OptString) {
	s.Status = val
}

type AddAudioItemCreated struct {
	// Audio item list.
	Audios []AddAudioItemCreatedAudiosItem `json:"audios"`
}

// GetAudios returns the value of Audios.
func (s *AddAudioItemCreated) GetAudios() []AddAudioItemCreatedAudiosItem {
	return s.Audios
}

// SetAudios sets the value of Audios.
func (s *AddAudioItemCreated) SetAudios(val []AddAudioItemCreatedAudiosItem) {
	s.Audios = val
}

type AddAudioItemCreatedAudiosItem struct {
	// Unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
	// Name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *AddAudioItemCreatedAudiosItem) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *AddAudioItemCreatedAudiosItem) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *AddAudioItemCreatedAudiosItem) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *AddAudioItemCreatedAudiosItem) SetName(val OptString) {
	s.Name = val
}

type AddAudioItemReq struct {
	Attachments []AddAudioItemReqAttachmentsItem `json:"attachments"`
}

// GetAttachments returns the value of Attachments.
func (s *AddAudioItemReq) GetAttachments() []AddAudioItemReqAttachmentsItem {
	return s.Attachments
}

// SetAttachments sets the value of Attachments.
func (s *AddAudioItemReq) SetAttachments(val []AddAudioItemReqAttachmentsItem) {
	s.Attachments = val
}

type AddAudioItemReqAttachmentsItem struct {
	// Format of attachments. Supported formats: audio/mpeg, audio/wav.
	AudioType OptString `json:"audio_type"`
	// ASCII string to send [Base64 encoded](https://en.wikipedia.org/wiki/Base64) attachments as text.
	Base64Encoding OptString `json:"base64_encoding"`
	// Audio file name.
	Name OptString `json:"name"`
}

// GetAudioType returns the value of AudioType.
func (s *AddAudioItemReqAttachmentsItem) GetAudioType() OptString {
	return s.AudioType
}

// GetBase64Encoding returns the value of Base64Encoding.
func (s *AddAudioItemReqAttachmentsItem) GetBase64Encoding() OptString {
	return s.Base64Encoding
}

// GetName returns the value of Name.
func (s *AddAudioItemReqAttachmentsItem) GetName() OptString {
	return s.Name
}

// SetAudioType sets the value of AudioType.
func (s *AddAudioItemReqAttachmentsItem) SetAudioType(val OptString) {
	s.AudioType = val
}

// SetBase64Encoding sets the value of Base64Encoding.
func (s *AddAudioItemReqAttachmentsItem) SetBase64Encoding(val OptString) {
	s.Base64Encoding = val
}

// SetName sets the value of Name.
func (s *AddAudioItemReqAttachmentsItem) SetName(val OptString) {
	s.Name = val
}

type AddAutoReceptionistCreated struct {
	// Extension number assigned to the auto receptionist.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// Auto receptionist ID. The unique identifier of the auto receptionist.
	ID OptString `json:"id"`
	// Name of the auto receptionist.
	Name OptString `json:"name"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *AddAutoReceptionistCreated) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *AddAutoReceptionistCreated) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *AddAutoReceptionistCreated) GetName() OptString {
	return s.Name
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *AddAutoReceptionistCreated) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *AddAutoReceptionistCreated) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *AddAutoReceptionistCreated) SetName(val OptString) {
	s.Name = val
}

type AddAutoReceptionistReq struct {
	// Provide a name to help identify the auto receptionist.
	Name string `json:"name"`
	// Unique identifier of the site where the auto receptionist is to be assigned. This field is
	// required only if you have [multiple sites](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) enabled.
	SiteID OptString `json:"site_id"`
}

// GetName returns the value of Name.
func (s *AddAutoReceptionistReq) GetName() string {
	return s.Name
}

// GetSiteID returns the value of SiteID.
func (s *AddAutoReceptionistReq) GetSiteID() OptString {
	return s.SiteID
}

// SetName sets the value of Name.
func (s *AddAutoReceptionistReq) SetName(val string) {
	s.Name = val
}

// SetSiteID sets the value of SiteID.
func (s *AddAutoReceptionistReq) SetSiteID(val OptString) {
	s.SiteID = val
}

type AddBYOCNumberCreated struct {
	PhoneNumbers []AddBYOCNumberCreatedPhoneNumbersItem `json:"phone_numbers"`
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *AddBYOCNumberCreated) GetPhoneNumbers() []AddBYOCNumberCreatedPhoneNumbersItem {
	return s.PhoneNumbers
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *AddBYOCNumberCreated) SetPhoneNumbers(val []AddBYOCNumberCreatedPhoneNumbersItem) {
	s.PhoneNumbers = val
}

type AddBYOCNumberCreatedPhoneNumbersItem struct {
	// Unique identifier of the phone number.
	ID OptString `json:"id"`
	// Phone number in e164 format.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *AddBYOCNumberCreatedPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *AddBYOCNumberCreatedPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *AddBYOCNumberCreatedPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *AddBYOCNumberCreatedPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

type AddBYOCNumberReq struct {
	// Name of the carrier.
	Carrier string `json:"carrier"`
	// Phone number(s) to be added to Zoom. The value should be in e164 format.
	PhoneNumbers []string `json:"phone_numbers"`
	// Sip group id.
	SipGroupID OptString `json:"sip_group_id"`
	// Unique identifier of the site. This field is only required if you have enabled multiple sites in
	// the account. See [Managing multiple sites](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites) or [Adding a site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15)
	// for details.
	SiteID OptString `json:"site_id"`
}

// GetCarrier returns the value of Carrier.
func (s *AddBYOCNumberReq) GetCarrier() string {
	return s.Carrier
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *AddBYOCNumberReq) GetPhoneNumbers() []string {
	return s.PhoneNumbers
}

// GetSipGroupID returns the value of SipGroupID.
func (s *AddBYOCNumberReq) GetSipGroupID() OptString {
	return s.SipGroupID
}

// GetSiteID returns the value of SiteID.
func (s *AddBYOCNumberReq) GetSiteID() OptString {
	return s.SiteID
}

// SetCarrier sets the value of Carrier.
func (s *AddBYOCNumberReq) SetCarrier(val string) {
	s.Carrier = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *AddBYOCNumberReq) SetPhoneNumbers(val []string) {
	s.PhoneNumbers = val
}

// SetSipGroupID sets the value of SipGroupID.
func (s *AddBYOCNumberReq) SetSipGroupID(val OptString) {
	s.SipGroupID = val
}

// SetSiteID sets the value of SiteID.
func (s *AddBYOCNumberReq) SetSiteID(val OptString) {
	s.SiteID = val
}

type AddCQPolicySubSettingCreated struct {
	// The shared access member list.
	VoicemailAccessMembers []AddCQPolicySubSettingCreatedVoicemailAccessMembersItem `json:"voicemail_access_members"`
}

// GetVoicemailAccessMembers returns the value of VoicemailAccessMembers.
func (s *AddCQPolicySubSettingCreated) GetVoicemailAccessMembers() []AddCQPolicySubSettingCreatedVoicemailAccessMembersItem {
	return s.VoicemailAccessMembers
}

// SetVoicemailAccessMembers sets the value of VoicemailAccessMembers.
func (s *AddCQPolicySubSettingCreated) SetVoicemailAccessMembers(val []AddCQPolicySubSettingCreatedVoicemailAccessMembersItem) {
	s.VoicemailAccessMembers = val
}

// Merged schema.
type AddCQPolicySubSettingCreatedVoicemailAccessMembersItem struct {
	// The Zoom user ID or email to share or update the access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// Specifies whether the member has download permissions. The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
	// Specifies whether the member has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// Specifies whether the member has the permission to share. The default is **false**.
	AllowSharing OptBool `json:"allow_sharing"`
	// The shared voicemail ID.
	SharedID OptString `json:"shared_id"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *AddCQPolicySubSettingCreatedVoicemailAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDownload returns the value of AllowDownload.
func (s *AddCQPolicySubSettingCreatedVoicemailAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowDelete returns the value of AllowDelete.
func (s *AddCQPolicySubSettingCreatedVoicemailAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowSharing returns the value of AllowSharing.
func (s *AddCQPolicySubSettingCreatedVoicemailAccessMembersItem) GetAllowSharing() OptBool {
	return s.AllowSharing
}

// GetSharedID returns the value of SharedID.
func (s *AddCQPolicySubSettingCreatedVoicemailAccessMembersItem) GetSharedID() OptString {
	return s.SharedID
}

// SetAccessUserID sets the value of AccessUserID.
func (s *AddCQPolicySubSettingCreatedVoicemailAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *AddCQPolicySubSettingCreatedVoicemailAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *AddCQPolicySubSettingCreatedVoicemailAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowSharing sets the value of AllowSharing.
func (s *AddCQPolicySubSettingCreatedVoicemailAccessMembersItem) SetAllowSharing(val OptBool) {
	s.AllowSharing = val
}

// SetSharedID sets the value of SharedID.
func (s *AddCQPolicySubSettingCreatedVoicemailAccessMembersItem) SetSharedID(val OptString) {
	s.SharedID = val
}

type AddCQPolicySubSettingReq struct {
	// The shared voicemail access member list. The number is limited to the minimum value of 10 or the
	// number of allowed access members account setting.
	VoicemailAccessMembers []AddCQPolicySubSettingReqVoicemailAccessMembersItem `json:"voicemail_access_members"`
}

// GetVoicemailAccessMembers returns the value of VoicemailAccessMembers.
func (s *AddCQPolicySubSettingReq) GetVoicemailAccessMembers() []AddCQPolicySubSettingReqVoicemailAccessMembersItem {
	return s.VoicemailAccessMembers
}

// SetVoicemailAccessMembers sets the value of VoicemailAccessMembers.
func (s *AddCQPolicySubSettingReq) SetVoicemailAccessMembers(val []AddCQPolicySubSettingReqVoicemailAccessMembersItem) {
	s.VoicemailAccessMembers = val
}

type AddCQPolicySubSettingReqVoicemailAccessMembersItem struct {
	// The Zoom user ID or email to share or update the access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// Specifies whether the member has download permissions. The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
	// Specifies whether the member has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// Specifies whether the member has the permission to share. The default is **false**.
	AllowSharing OptBool `json:"allow_sharing"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *AddCQPolicySubSettingReqVoicemailAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDownload returns the value of AllowDownload.
func (s *AddCQPolicySubSettingReqVoicemailAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowDelete returns the value of AllowDelete.
func (s *AddCQPolicySubSettingReqVoicemailAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowSharing returns the value of AllowSharing.
func (s *AddCQPolicySubSettingReqVoicemailAccessMembersItem) GetAllowSharing() OptBool {
	return s.AllowSharing
}

// SetAccessUserID sets the value of AccessUserID.
func (s *AddCQPolicySubSettingReqVoicemailAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *AddCQPolicySubSettingReqVoicemailAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *AddCQPolicySubSettingReqVoicemailAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowSharing sets the value of AllowSharing.
func (s *AddCQPolicySubSettingReqVoicemailAccessMembersItem) SetAllowSharing(val OptBool) {
	s.AllowSharing = val
}

// Sub_setting_type.
// AddCallHandlingCreated represents sum type.
type AddCallHandlingCreated struct {
	Type                    AddCallHandlingCreatedType // switch on this field
	AddCallHandlingCreated0 AddCallHandlingCreated0
	AddCallHandlingCreated1 AddCallHandlingCreated1
}

// AddCallHandlingCreatedType is oneOf type of AddCallHandlingCreated.
type AddCallHandlingCreatedType string

// Possible values for AddCallHandlingCreatedType.
const (
	AddCallHandlingCreated0AddCallHandlingCreated AddCallHandlingCreatedType = "AddCallHandlingCreated0"
	AddCallHandlingCreated1AddCallHandlingCreated AddCallHandlingCreatedType = "AddCallHandlingCreated1"
)

// IsAddCallHandlingCreated0 reports whether AddCallHandlingCreated is AddCallHandlingCreated0.
func (s AddCallHandlingCreated) IsAddCallHandlingCreated0() bool {
	return s.Type == AddCallHandlingCreated0AddCallHandlingCreated
}

// IsAddCallHandlingCreated1 reports whether AddCallHandlingCreated is AddCallHandlingCreated1.
func (s AddCallHandlingCreated) IsAddCallHandlingCreated1() bool {
	return s.Type == AddCallHandlingCreated1AddCallHandlingCreated
}

// SetAddCallHandlingCreated0 sets AddCallHandlingCreated to AddCallHandlingCreated0.
func (s *AddCallHandlingCreated) SetAddCallHandlingCreated0(v AddCallHandlingCreated0) {
	s.Type = AddCallHandlingCreated0AddCallHandlingCreated
	s.AddCallHandlingCreated0 = v
}

// GetAddCallHandlingCreated0 returns AddCallHandlingCreated0 and true boolean if AddCallHandlingCreated is AddCallHandlingCreated0.
func (s AddCallHandlingCreated) GetAddCallHandlingCreated0() (v AddCallHandlingCreated0, ok bool) {
	if !s.IsAddCallHandlingCreated0() {
		return v, false
	}
	return s.AddCallHandlingCreated0, true
}

// NewAddCallHandlingCreated0AddCallHandlingCreated returns new AddCallHandlingCreated from AddCallHandlingCreated0.
func NewAddCallHandlingCreated0AddCallHandlingCreated(v AddCallHandlingCreated0) AddCallHandlingCreated {
	var s AddCallHandlingCreated
	s.SetAddCallHandlingCreated0(v)
	return s
}

// SetAddCallHandlingCreated1 sets AddCallHandlingCreated to AddCallHandlingCreated1.
func (s *AddCallHandlingCreated) SetAddCallHandlingCreated1(v AddCallHandlingCreated1) {
	s.Type = AddCallHandlingCreated1AddCallHandlingCreated
	s.AddCallHandlingCreated1 = v
}

// GetAddCallHandlingCreated1 returns AddCallHandlingCreated1 and true boolean if AddCallHandlingCreated is AddCallHandlingCreated1.
func (s AddCallHandlingCreated) GetAddCallHandlingCreated1() (v AddCallHandlingCreated1, ok bool) {
	if !s.IsAddCallHandlingCreated1() {
		return v, false
	}
	return s.AddCallHandlingCreated1, true
}

// NewAddCallHandlingCreated1AddCallHandlingCreated returns new AddCallHandlingCreated from AddCallHandlingCreated1.
func NewAddCallHandlingCreated1AddCallHandlingCreated(v AddCallHandlingCreated1) AddCallHandlingCreated {
	var s AddCallHandlingCreated
	s.SetAddCallHandlingCreated1(v)
	return s
}

type AddCallHandlingCreated0 struct {
	// The call forwarding's ID. The response only returns this value when you create a `call_forwarding`
	// sub-setting.
	CallForwardingID OptString `json:"call_forwarding_id"`
}

// GetCallForwardingID returns the value of CallForwardingID.
func (s *AddCallHandlingCreated0) GetCallForwardingID() OptString {
	return s.CallForwardingID
}

// SetCallForwardingID sets the value of CallForwardingID.
func (s *AddCallHandlingCreated0) SetCallForwardingID(val OptString) {
	s.CallForwardingID = val
}

type AddCallHandlingCreated1 struct {
	// The holiday's ID. The response only returns this value when you create a `holiday` sub-setting.
	HolidayID OptString `json:"holiday_id"`
}

// GetHolidayID returns the value of HolidayID.
func (s *AddCallHandlingCreated1) GetHolidayID() OptString {
	return s.HolidayID
}

// SetHolidayID sets the value of HolidayID.
func (s *AddCallHandlingCreated1) SetHolidayID(val OptString) {
	s.HolidayID = val
}

// AddCallHandlingReq represents sum type.
type AddCallHandlingReq struct {
	Type                                   AddCallHandlingReqType // switch on this field
	PostCallHandlingSettingsCallForwarding PostCallHandlingSettingsCallForwarding
	PostCallHandlingSettingsHoliday        PostCallHandlingSettingsHoliday
}

// AddCallHandlingReqType is oneOf type of AddCallHandlingReq.
type AddCallHandlingReqType string

// Possible values for AddCallHandlingReqType.
const (
	PostCallHandlingSettingsCallForwardingAddCallHandlingReq AddCallHandlingReqType = "call_forwarding"
	PostCallHandlingSettingsHolidayAddCallHandlingReq        AddCallHandlingReqType = "holiday"
)

// IsPostCallHandlingSettingsCallForwarding reports whether AddCallHandlingReq is PostCallHandlingSettingsCallForwarding.
func (s AddCallHandlingReq) IsPostCallHandlingSettingsCallForwarding() bool {
	return s.Type == PostCallHandlingSettingsCallForwardingAddCallHandlingReq
}

// IsPostCallHandlingSettingsHoliday reports whether AddCallHandlingReq is PostCallHandlingSettingsHoliday.
func (s AddCallHandlingReq) IsPostCallHandlingSettingsHoliday() bool {
	return s.Type == PostCallHandlingSettingsHolidayAddCallHandlingReq
}

// SetPostCallHandlingSettingsCallForwarding sets AddCallHandlingReq to PostCallHandlingSettingsCallForwarding.
func (s *AddCallHandlingReq) SetPostCallHandlingSettingsCallForwarding(v PostCallHandlingSettingsCallForwarding) {
	s.Type = PostCallHandlingSettingsCallForwardingAddCallHandlingReq
	s.PostCallHandlingSettingsCallForwarding = v
}

// GetPostCallHandlingSettingsCallForwarding returns PostCallHandlingSettingsCallForwarding and true boolean if AddCallHandlingReq is PostCallHandlingSettingsCallForwarding.
func (s AddCallHandlingReq) GetPostCallHandlingSettingsCallForwarding() (v PostCallHandlingSettingsCallForwarding, ok bool) {
	if !s.IsPostCallHandlingSettingsCallForwarding() {
		return v, false
	}
	return s.PostCallHandlingSettingsCallForwarding, true
}

// NewPostCallHandlingSettingsCallForwardingAddCallHandlingReq returns new AddCallHandlingReq from PostCallHandlingSettingsCallForwarding.
func NewPostCallHandlingSettingsCallForwardingAddCallHandlingReq(v PostCallHandlingSettingsCallForwarding) AddCallHandlingReq {
	var s AddCallHandlingReq
	s.SetPostCallHandlingSettingsCallForwarding(v)
	return s
}

// SetPostCallHandlingSettingsHoliday sets AddCallHandlingReq to PostCallHandlingSettingsHoliday.
func (s *AddCallHandlingReq) SetPostCallHandlingSettingsHoliday(v PostCallHandlingSettingsHoliday) {
	s.Type = PostCallHandlingSettingsHolidayAddCallHandlingReq
	s.PostCallHandlingSettingsHoliday = v
}

// GetPostCallHandlingSettingsHoliday returns PostCallHandlingSettingsHoliday and true boolean if AddCallHandlingReq is PostCallHandlingSettingsHoliday.
func (s AddCallHandlingReq) GetPostCallHandlingSettingsHoliday() (v PostCallHandlingSettingsHoliday, ok bool) {
	if !s.IsPostCallHandlingSettingsHoliday() {
		return v, false
	}
	return s.PostCallHandlingSettingsHoliday, true
}

// NewPostCallHandlingSettingsHolidayAddCallHandlingReq returns new AddCallHandlingReq from PostCallHandlingSettingsHoliday.
func NewPostCallHandlingSettingsHolidayAddCallHandlingReq(v PostCallHandlingSettingsHoliday) AddCallHandlingReq {
	var s AddCallHandlingReq
	s.SetPostCallHandlingSettingsHoliday(v)
	return s
}

// AddClientCodeToCallLogNoContent is response for AddClientCodeToCallLog operation.
type AddClientCodeToCallLogNoContent struct{}

type AddClientCodeToCallLogReq struct {
	// The client code(3 to 16 digit number) to mark the call log.
	ClientCode string `json:"client_code"`
}

// GetClientCode returns the value of ClientCode.
func (s *AddClientCodeToCallLogReq) GetClientCode() string {
	return s.ClientCode
}

// SetClientCode sets the value of ClientCode.
func (s *AddClientCodeToCallLogReq) SetClientCode(val string) {
	s.ClientCode = val
}

type AddCommonAreaCreated struct {
	// Display name of the common area.
	DisplayName OptString `json:"display_name"`
	// Common area ID or common area extension ID.
	ID OptString `json:"id"`
}

// GetDisplayName returns the value of DisplayName.
func (s *AddCommonAreaCreated) GetDisplayName() OptString {
	return s.DisplayName
}

// GetID returns the value of ID.
func (s *AddCommonAreaCreated) GetID() OptString {
	return s.ID
}

// SetDisplayName sets the value of DisplayName.
func (s *AddCommonAreaCreated) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetID sets the value of ID.
func (s *AddCommonAreaCreated) SetID(val OptString) {
	s.ID = val
}

type AddCommonAreaOutboundCallingExceptionRuleCreated struct {
	// The IDs of the exception rules.
	ExceptionRuleID OptString `json:"exception_rule_id"`
}

// GetExceptionRuleID returns the value of ExceptionRuleID.
func (s *AddCommonAreaOutboundCallingExceptionRuleCreated) GetExceptionRuleID() OptString {
	return s.ExceptionRuleID
}

// SetExceptionRuleID sets the value of ExceptionRuleID.
func (s *AddCommonAreaOutboundCallingExceptionRuleCreated) SetExceptionRuleID(val OptString) {
	s.ExceptionRuleID = val
}

type AddCommonAreaOutboundCallingExceptionRuleReq struct {
	ExceptionRule OptAddCommonAreaOutboundCallingExceptionRuleReqExceptionRule `json:"exception_rule"`
}

// GetExceptionRule returns the value of ExceptionRule.
func (s *AddCommonAreaOutboundCallingExceptionRuleReq) GetExceptionRule() OptAddCommonAreaOutboundCallingExceptionRuleReqExceptionRule {
	return s.ExceptionRule
}

// SetExceptionRule sets the value of ExceptionRule.
func (s *AddCommonAreaOutboundCallingExceptionRuleReq) SetExceptionRule(val OptAddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) {
	s.ExceptionRule = val
}

type AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule struct {
	// The match type for the exception rule:
	// `phoneNumber`
	// `prefix`.
	MatchType string `json:"match_type"`
	// The exception rule for the phone number prefix or the phone number without the country code.
	PrefixNumber string `json:"prefix_number"`
	// A comment that identifies the exception rule number or the prefix.
	Comment OptString `json:"comment"`
	// Whether the exception rule is active or inactive.
	// `active`: The exception rule is active.
	// `inactive`: The exception rule is inactive.
	Status string `json:"status"`
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	Country string `json:"country"`
}

// GetMatchType returns the value of MatchType.
func (s *AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) GetMatchType() string {
	return s.MatchType
}

// GetPrefixNumber returns the value of PrefixNumber.
func (s *AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) GetPrefixNumber() string {
	return s.PrefixNumber
}

// GetComment returns the value of Comment.
func (s *AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) GetComment() OptString {
	return s.Comment
}

// GetStatus returns the value of Status.
func (s *AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) GetStatus() string {
	return s.Status
}

// GetCountry returns the value of Country.
func (s *AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) GetCountry() string {
	return s.Country
}

// SetMatchType sets the value of MatchType.
func (s *AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) SetMatchType(val string) {
	s.MatchType = val
}

// SetPrefixNumber sets the value of PrefixNumber.
func (s *AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) SetPrefixNumber(val string) {
	s.PrefixNumber = val
}

// SetComment sets the value of Comment.
func (s *AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) SetComment(val OptString) {
	s.Comment = val
}

// SetStatus sets the value of Status.
func (s *AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) SetStatus(val string) {
	s.Status = val
}

// SetCountry sets the value of Country.
func (s *AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) SetCountry(val string) {
	s.Country = val
}

type AddCommonAreaReq struct {
	CallingPlans []AddCommonAreaReqCallingPlansItem `json:"calling_plans"`
	// Two-lettered country [code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	CountryIsoCode OptString `json:"country_iso_code"`
	// Display name of the common area. Enter at least 3 characters.
	DisplayName string `json:"display_name"`
	// Extension number assigned to the common area. If the site code is enabled, provide the short
	// extension number instead.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672). This can
	// be retrieved from the [List Phone Sites](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/listPhoneSites) API.
	SiteID OptString `json:"site_id"`
	// [Timezone ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists)
	// for the common area.
	Timezone OptString `json:"timezone"`
}

// GetCallingPlans returns the value of CallingPlans.
func (s *AddCommonAreaReq) GetCallingPlans() []AddCommonAreaReqCallingPlansItem {
	return s.CallingPlans
}

// GetCountryIsoCode returns the value of CountryIsoCode.
func (s *AddCommonAreaReq) GetCountryIsoCode() OptString {
	return s.CountryIsoCode
}

// GetDisplayName returns the value of DisplayName.
func (s *AddCommonAreaReq) GetDisplayName() string {
	return s.DisplayName
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *AddCommonAreaReq) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetSiteID returns the value of SiteID.
func (s *AddCommonAreaReq) GetSiteID() OptString {
	return s.SiteID
}

// GetTimezone returns the value of Timezone.
func (s *AddCommonAreaReq) GetTimezone() OptString {
	return s.Timezone
}

// SetCallingPlans sets the value of CallingPlans.
func (s *AddCommonAreaReq) SetCallingPlans(val []AddCommonAreaReqCallingPlansItem) {
	s.CallingPlans = val
}

// SetCountryIsoCode sets the value of CountryIsoCode.
func (s *AddCommonAreaReq) SetCountryIsoCode(val OptString) {
	s.CountryIsoCode = val
}

// SetDisplayName sets the value of DisplayName.
func (s *AddCommonAreaReq) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *AddCommonAreaReq) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetSiteID sets the value of SiteID.
func (s *AddCommonAreaReq) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetTimezone sets the value of Timezone.
func (s *AddCommonAreaReq) SetTimezone(val OptString) {
	s.Timezone = val
}

type AddCommonAreaReqCallingPlansItem struct {
	// Zoom Phone [calling plan number](https://marketplace.zoom.
	// us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).
	Type OptInt `json:"type"`
}

// GetType returns the value of Type.
func (s *AddCommonAreaReqCallingPlansItem) GetType() OptInt {
	return s.Type
}

// SetType sets the value of Type.
func (s *AddCommonAreaReqCallingPlansItem) SetType(val OptInt) {
	s.Type = val
}

type AddCommonAreaSettingCreated struct {
	DeskPhones []AddCommonAreaSettingCreatedDeskPhonesItem `json:"desk_phones"`
}

// GetDeskPhones returns the value of DeskPhones.
func (s *AddCommonAreaSettingCreated) GetDeskPhones() []AddCommonAreaSettingCreatedDeskPhonesItem {
	return s.DeskPhones
}

// SetDeskPhones sets the value of DeskPhones.
func (s *AddCommonAreaSettingCreated) SetDeskPhones(val []AddCommonAreaSettingCreatedDeskPhonesItem) {
	s.DeskPhones = val
}

type AddCommonAreaSettingCreatedDeskPhonesItem struct {
	// Desk phone ID.
	ID OptString `json:"id"`
	// Desk phone display name.
	DisplayName OptString `json:"display_name"`
}

// GetID returns the value of ID.
func (s *AddCommonAreaSettingCreatedDeskPhonesItem) GetID() OptString {
	return s.ID
}

// GetDisplayName returns the value of DisplayName.
func (s *AddCommonAreaSettingCreatedDeskPhonesItem) GetDisplayName() OptString {
	return s.DisplayName
}

// SetID sets the value of ID.
func (s *AddCommonAreaSettingCreatedDeskPhonesItem) SetID(val OptString) {
	s.ID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *AddCommonAreaSettingCreatedDeskPhonesItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

type AddCommonAreaSettingReq struct {
	// Desk phone ID.
	DeviceID OptString `json:"device_id"`
}

// GetDeviceID returns the value of DeviceID.
func (s *AddCommonAreaSettingReq) GetDeviceID() OptString {
	return s.DeviceID
}

// SetDeviceID sets the value of DeviceID.
func (s *AddCommonAreaSettingReq) SetDeviceID(val OptString) {
	s.DeviceID = val
}

type AddEmergencyAddressCreated struct {
	// The emergency address line 1.
	AddressLine1 OptString `json:"address_line1"`
	// The emergency address line 2.
	AddressLine2 OptString `json:"address_line2"`
	// The emergency address city.
	City OptString `json:"city"`
	// The emergency address country.
	Country OptString `json:"country"`
	// The emergency address ID.
	ID OptString `json:"id"`
	// Indicates whether the emergency address is default or not.
	IsDefault OptBool `json:"is_default"`
	// The emergency address owner level:
	// * `0` - Account/Company-level emergency address.
	// * `1` - User/Personal-level emergency address.
	// * `2` - Unknown company/pending emergency address.
	Level OptInt `json:"level"`
	// The emergency address owner information for a user-level emergency address.
	Owner OptAddEmergencyAddressCreatedOwner `json:"owner"`
	// The emergency address site information.
	Site OptAddEmergencyAddressCreatedSite `json:"site"`
	// The emergency address state code.
	StateCode OptString `json:"state_code"`
	// The emergency address verification status:
	// * `1` &mdash; Verification not required.
	// * `2` &mdash; Unverified.
	// * `3` &mdash; Verification requested.
	// * `4` &mdash; Verified.
	// * `5` &mdash; Rejected.
	// * `6` &mdash; Verification failed.
	Status OptInt `json:"status"`
	// The emergency address zip code.
	Zip OptString `json:"zip"`
}

// GetAddressLine1 returns the value of AddressLine1.
func (s *AddEmergencyAddressCreated) GetAddressLine1() OptString {
	return s.AddressLine1
}

// GetAddressLine2 returns the value of AddressLine2.
func (s *AddEmergencyAddressCreated) GetAddressLine2() OptString {
	return s.AddressLine2
}

// GetCity returns the value of City.
func (s *AddEmergencyAddressCreated) GetCity() OptString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *AddEmergencyAddressCreated) GetCountry() OptString {
	return s.Country
}

// GetID returns the value of ID.
func (s *AddEmergencyAddressCreated) GetID() OptString {
	return s.ID
}

// GetIsDefault returns the value of IsDefault.
func (s *AddEmergencyAddressCreated) GetIsDefault() OptBool {
	return s.IsDefault
}

// GetLevel returns the value of Level.
func (s *AddEmergencyAddressCreated) GetLevel() OptInt {
	return s.Level
}

// GetOwner returns the value of Owner.
func (s *AddEmergencyAddressCreated) GetOwner() OptAddEmergencyAddressCreatedOwner {
	return s.Owner
}

// GetSite returns the value of Site.
func (s *AddEmergencyAddressCreated) GetSite() OptAddEmergencyAddressCreatedSite {
	return s.Site
}

// GetStateCode returns the value of StateCode.
func (s *AddEmergencyAddressCreated) GetStateCode() OptString {
	return s.StateCode
}

// GetStatus returns the value of Status.
func (s *AddEmergencyAddressCreated) GetStatus() OptInt {
	return s.Status
}

// GetZip returns the value of Zip.
func (s *AddEmergencyAddressCreated) GetZip() OptString {
	return s.Zip
}

// SetAddressLine1 sets the value of AddressLine1.
func (s *AddEmergencyAddressCreated) SetAddressLine1(val OptString) {
	s.AddressLine1 = val
}

// SetAddressLine2 sets the value of AddressLine2.
func (s *AddEmergencyAddressCreated) SetAddressLine2(val OptString) {
	s.AddressLine2 = val
}

// SetCity sets the value of City.
func (s *AddEmergencyAddressCreated) SetCity(val OptString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *AddEmergencyAddressCreated) SetCountry(val OptString) {
	s.Country = val
}

// SetID sets the value of ID.
func (s *AddEmergencyAddressCreated) SetID(val OptString) {
	s.ID = val
}

// SetIsDefault sets the value of IsDefault.
func (s *AddEmergencyAddressCreated) SetIsDefault(val OptBool) {
	s.IsDefault = val
}

// SetLevel sets the value of Level.
func (s *AddEmergencyAddressCreated) SetLevel(val OptInt) {
	s.Level = val
}

// SetOwner sets the value of Owner.
func (s *AddEmergencyAddressCreated) SetOwner(val OptAddEmergencyAddressCreatedOwner) {
	s.Owner = val
}

// SetSite sets the value of Site.
func (s *AddEmergencyAddressCreated) SetSite(val OptAddEmergencyAddressCreatedSite) {
	s.Site = val
}

// SetStateCode sets the value of StateCode.
func (s *AddEmergencyAddressCreated) SetStateCode(val OptString) {
	s.StateCode = val
}

// SetStatus sets the value of Status.
func (s *AddEmergencyAddressCreated) SetStatus(val OptInt) {
	s.Status = val
}

// SetZip sets the value of Zip.
func (s *AddEmergencyAddressCreated) SetZip(val OptString) {
	s.Zip = val
}

// The emergency address owner information for a user-level emergency address.
type AddEmergencyAddressCreatedOwner struct {
	// The emergency address owner extension number.
	ExtensionNumber OptString `json:"extension_number"`
	// The emergency address owner ID.
	ID OptString `json:"id"`
	// The emergency address owner name.
	Name OptString `json:"name"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *AddEmergencyAddressCreatedOwner) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *AddEmergencyAddressCreatedOwner) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *AddEmergencyAddressCreatedOwner) GetName() OptString {
	return s.Name
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *AddEmergencyAddressCreatedOwner) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *AddEmergencyAddressCreatedOwner) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *AddEmergencyAddressCreatedOwner) SetName(val OptString) {
	s.Name = val
}

// The emergency address site information.
type AddEmergencyAddressCreatedSite struct {
	// The site's ID.
	ID OptString `json:"id"`
	// The site's name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *AddEmergencyAddressCreatedSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *AddEmergencyAddressCreatedSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *AddEmergencyAddressCreatedSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *AddEmergencyAddressCreatedSite) SetName(val OptString) {
	s.Name = val
}

type AddEmergencyAddressReq struct {
	// The emergency address line 1.
	AddressLine1 string `json:"address_line1"`
	// The emergency address line 2.
	AddressLine2 OptString `json:"address_line2"`
	// The emergency address city.
	City string `json:"city"`
	// The emergency address country.
	Country string `json:"country"`
	// Indicates whether the emergency address is default or not.
	IsDefault OptBool `json:"is_default"`
	// The site ID. Nullable if 'user_id' is not null.
	SiteID OptString `json:"site_id"`
	// The emergency address state code.
	StateCode string `json:"state_code"`
	// User ID to which the personal emergency address belongs.
	UserID OptString `json:"user_id"`
	// The emergency address zip code.
	Zip string `json:"zip"`
}

// GetAddressLine1 returns the value of AddressLine1.
func (s *AddEmergencyAddressReq) GetAddressLine1() string {
	return s.AddressLine1
}

// GetAddressLine2 returns the value of AddressLine2.
func (s *AddEmergencyAddressReq) GetAddressLine2() OptString {
	return s.AddressLine2
}

// GetCity returns the value of City.
func (s *AddEmergencyAddressReq) GetCity() string {
	return s.City
}

// GetCountry returns the value of Country.
func (s *AddEmergencyAddressReq) GetCountry() string {
	return s.Country
}

// GetIsDefault returns the value of IsDefault.
func (s *AddEmergencyAddressReq) GetIsDefault() OptBool {
	return s.IsDefault
}

// GetSiteID returns the value of SiteID.
func (s *AddEmergencyAddressReq) GetSiteID() OptString {
	return s.SiteID
}

// GetStateCode returns the value of StateCode.
func (s *AddEmergencyAddressReq) GetStateCode() string {
	return s.StateCode
}

// GetUserID returns the value of UserID.
func (s *AddEmergencyAddressReq) GetUserID() OptString {
	return s.UserID
}

// GetZip returns the value of Zip.
func (s *AddEmergencyAddressReq) GetZip() string {
	return s.Zip
}

// SetAddressLine1 sets the value of AddressLine1.
func (s *AddEmergencyAddressReq) SetAddressLine1(val string) {
	s.AddressLine1 = val
}

// SetAddressLine2 sets the value of AddressLine2.
func (s *AddEmergencyAddressReq) SetAddressLine2(val OptString) {
	s.AddressLine2 = val
}

// SetCity sets the value of City.
func (s *AddEmergencyAddressReq) SetCity(val string) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *AddEmergencyAddressReq) SetCountry(val string) {
	s.Country = val
}

// SetIsDefault sets the value of IsDefault.
func (s *AddEmergencyAddressReq) SetIsDefault(val OptBool) {
	s.IsDefault = val
}

// SetSiteID sets the value of SiteID.
func (s *AddEmergencyAddressReq) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetStateCode sets the value of StateCode.
func (s *AddEmergencyAddressReq) SetStateCode(val string) {
	s.StateCode = val
}

// SetUserID sets the value of UserID.
func (s *AddEmergencyAddressReq) SetUserID(val OptString) {
	s.UserID = val
}

// SetZip sets the value of Zip.
func (s *AddEmergencyAddressReq) SetZip(val string) {
	s.Zip = val
}

type AddExtensionsToADeviceReq struct {
	// Available only for the account that has enabled the common area feature.
	// Extension ID of the [`user`](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods/#operation/phoneUser) or [`common area`
	// ID](https://marketplace.zoom.us/docs/api-reference/phone/methods/#operation/listCommonAreas).
	AssigneeExtensionIds []string `json:"assignee_extension_ids"`
}

// GetAssigneeExtensionIds returns the value of AssigneeExtensionIds.
func (s *AddExtensionsToADeviceReq) GetAssigneeExtensionIds() []string {
	return s.AssigneeExtensionIds
}

// SetAssigneeExtensionIds sets the value of AssigneeExtensionIds.
func (s *AddExtensionsToADeviceReq) SetAssigneeExtensionIds(val []string) {
	s.AssigneeExtensionIds = val
}

type AddExtensiontLevelInboundBlockRulesCreated struct {
	// The unique identifier of the blocked rule.
	ID OptString `json:"id"`
}

// GetID returns the value of ID.
func (s *AddExtensiontLevelInboundBlockRulesCreated) GetID() OptString {
	return s.ID
}

// SetID sets the value of ID.
func (s *AddExtensiontLevelInboundBlockRulesCreated) SetID(val OptString) {
	s.ID = val
}

type AddExtensiontLevelInboundBlockRulesReq struct {
	// The match type for the block rule:
	// * `phoneNumber`: Only a specific phone number that is shown in the `blocked_number` field is
	// blocked.
	// * `prefix`: All numbers starting with the prefix that is shown in the `blocked_number` field are
	// blocked.
	// * `SMS-shortCodes`:  Only a specific SMS short code that is shown in the `blocked_number` field is
	// blocked.
	MatchType string `json:"match_type"`
	// The block rule phone number prefix, SMS short code, or pure phone number without the country code.
	// * When the value of the `match_type` is `prefix`, enter the prefix of the phone number without the
	// country code.
	// * When the value of the `match_type` is `phoneNumber`, enter the phone number without the country
	// code.
	// * When the value of the `match_type` is `SMS-shortCodes`, enter the SMS short code.
	BlockedNumber string `json:"blocked_number"`
	// The block type for the block rule:
	// * block_for_other_reasons
	// * block_as_threat
	// **Note**: the value of `block_as_threat` can be available if the `block_calls_as_threat` setting
	// is enabled in [account setting API](https://developers.zoom.
	// us/docs/zoom-phone/apis/#operation/listZoomPhoneAccountSettings).
	Type string `json:"type"`
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	// This field is required when the value is the following:
	// * `match_type` is `phoneNumber` or `prefix`.
	Country OptString `json:"country"`
}

// GetMatchType returns the value of MatchType.
func (s *AddExtensiontLevelInboundBlockRulesReq) GetMatchType() string {
	return s.MatchType
}

// GetBlockedNumber returns the value of BlockedNumber.
func (s *AddExtensiontLevelInboundBlockRulesReq) GetBlockedNumber() string {
	return s.BlockedNumber
}

// GetType returns the value of Type.
func (s *AddExtensiontLevelInboundBlockRulesReq) GetType() string {
	return s.Type
}

// GetCountry returns the value of Country.
func (s *AddExtensiontLevelInboundBlockRulesReq) GetCountry() OptString {
	return s.Country
}

// SetMatchType sets the value of MatchType.
func (s *AddExtensiontLevelInboundBlockRulesReq) SetMatchType(val string) {
	s.MatchType = val
}

// SetBlockedNumber sets the value of BlockedNumber.
func (s *AddExtensiontLevelInboundBlockRulesReq) SetBlockedNumber(val string) {
	s.BlockedNumber = val
}

// SetType sets the value of Type.
func (s *AddExtensiontLevelInboundBlockRulesReq) SetType(val string) {
	s.Type = val
}

// SetCountry sets the value of Country.
func (s *AddExtensiontLevelInboundBlockRulesReq) SetCountry(val OptString) {
	s.Country = val
}

type AddExternalContactCreated struct {
	// The external contact's username or extension display name.
	Name OptString `json:"name"`
	// The Zoom-generated external contact ID.
	ExternalContactID OptString `json:"external_contact_id"`
}

// GetName returns the value of Name.
func (s *AddExternalContactCreated) GetName() OptString {
	return s.Name
}

// GetExternalContactID returns the value of ExternalContactID.
func (s *AddExternalContactCreated) GetExternalContactID() OptString {
	return s.ExternalContactID
}

// SetName sets the value of Name.
func (s *AddExternalContactCreated) SetName(val OptString) {
	s.Name = val
}

// SetExternalContactID sets the value of ExternalContactID.
func (s *AddExternalContactCreated) SetExternalContactID(val OptString) {
	s.ExternalContactID = val
}

type AddExternalContactReq struct {
	// The external contact's description.
	Description OptString `json:"description"`
	// The external contact's email address.
	Email OptString `json:"email"`
	// The external contact's extension number in the original phone system. Make certain that this
	// extension number is **not** duplicated with an existing extension number in the account.
	ExtensionNumber OptString `json:"extension_number"`
	// The customer-configured external contact ID. It is recommended that you use a primary key from the
	// original phone system.
	// If you do **not** use this parameter, the API automatically generates an `externalContactId`.
	ID OptString `json:"id"`
	// The external contact's username or extension display name.
	Name string `json:"name"`
	// A comma-separated list of the external contact's phone numbers. This value **must** be in [E.
	// 164](https://en.wikipedia.org/wiki/E.164) format. If you do not provide an extension number, you
	// **must** provide this value.
	PhoneNumbers []string `json:"phone_numbers"`
	// The external contact's SIP group, to define the call routing path. This is for customers that use
	// SIP trunking.
	RoutingPath OptString `json:"routing_path"`
	// Whether to allow the automatic call recording.
	AutoCallRecorded OptBool `json:"auto_call_recorded"`
}

// GetDescription returns the value of Description.
func (s *AddExternalContactReq) GetDescription() OptString {
	return s.Description
}

// GetEmail returns the value of Email.
func (s *AddExternalContactReq) GetEmail() OptString {
	return s.Email
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *AddExternalContactReq) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *AddExternalContactReq) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *AddExternalContactReq) GetName() string {
	return s.Name
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *AddExternalContactReq) GetPhoneNumbers() []string {
	return s.PhoneNumbers
}

// GetRoutingPath returns the value of RoutingPath.
func (s *AddExternalContactReq) GetRoutingPath() OptString {
	return s.RoutingPath
}

// GetAutoCallRecorded returns the value of AutoCallRecorded.
func (s *AddExternalContactReq) GetAutoCallRecorded() OptBool {
	return s.AutoCallRecorded
}

// SetDescription sets the value of Description.
func (s *AddExternalContactReq) SetDescription(val OptString) {
	s.Description = val
}

// SetEmail sets the value of Email.
func (s *AddExternalContactReq) SetEmail(val OptString) {
	s.Email = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *AddExternalContactReq) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *AddExternalContactReq) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *AddExternalContactReq) SetName(val string) {
	s.Name = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *AddExternalContactReq) SetPhoneNumbers(val []string) {
	s.PhoneNumbers = val
}

// SetRoutingPath sets the value of RoutingPath.
func (s *AddExternalContactReq) SetRoutingPath(val OptString) {
	s.RoutingPath = val
}

// SetAutoCallRecorded sets the value of AutoCallRecorded.
func (s *AddExternalContactReq) SetAutoCallRecorded(val OptBool) {
	s.AutoCallRecorded = val
}

type AddFirmwareRuleCreated struct {
	// Unique identifier of the firmware update rule.
	RuleID OptString `json:"rule_Id"`
}

// GetRuleID returns the value of RuleID.
func (s *AddFirmwareRuleCreated) GetRuleID() OptString {
	return s.RuleID
}

// SetRuleID sets the value of RuleID.
func (s *AddFirmwareRuleCreated) SetRuleID(val OptString) {
	s.RuleID = val
}

type AddFirmwareRuleReq struct {
	// Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672). This can
	// be retrieved from the [List Phone Sites](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/listPhoneSites) API. Required if multiple sites are
	// enabled.
	SiteID OptString `json:"site_id"`
	// Firmware version.
	Version string `json:"version"`
	// Device type.
	DeviceType string `json:"device_type"`
	// Device model name.
	DeviceModel string `json:"device_model"`
	// Restart type: `1` - Restart the devices immediately. `2` - Restart with the next resync or auto
	// pull.
	RestartType OptInt `json:"restart_type"`
}

// GetSiteID returns the value of SiteID.
func (s *AddFirmwareRuleReq) GetSiteID() OptString {
	return s.SiteID
}

// GetVersion returns the value of Version.
func (s *AddFirmwareRuleReq) GetVersion() string {
	return s.Version
}

// GetDeviceType returns the value of DeviceType.
func (s *AddFirmwareRuleReq) GetDeviceType() string {
	return s.DeviceType
}

// GetDeviceModel returns the value of DeviceModel.
func (s *AddFirmwareRuleReq) GetDeviceModel() string {
	return s.DeviceModel
}

// GetRestartType returns the value of RestartType.
func (s *AddFirmwareRuleReq) GetRestartType() OptInt {
	return s.RestartType
}

// SetSiteID sets the value of SiteID.
func (s *AddFirmwareRuleReq) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetVersion sets the value of Version.
func (s *AddFirmwareRuleReq) SetVersion(val string) {
	s.Version = val
}

// SetDeviceType sets the value of DeviceType.
func (s *AddFirmwareRuleReq) SetDeviceType(val string) {
	s.DeviceType = val
}

// SetDeviceModel sets the value of DeviceModel.
func (s *AddFirmwareRuleReq) SetDeviceModel(val string) {
	s.DeviceModel = val
}

// SetRestartType sets the value of RestartType.
func (s *AddFirmwareRuleReq) SetRestartType(val OptInt) {
	s.RestartType = val
}

type AddGCPCreated struct {
	// ID of the group.
	ID OptString `json:"id"`
	// Name of the group.
	DisplayName OptString `json:"display_name"`
}

// GetID returns the value of ID.
func (s *AddGCPCreated) GetID() OptString {
	return s.ID
}

// GetDisplayName returns the value of DisplayName.
func (s *AddGCPCreated) GetDisplayName() OptString {
	return s.DisplayName
}

// SetID sets the value of ID.
func (s *AddGCPCreated) SetID(val OptString) {
	s.ID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *AddGCPCreated) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// AddGCPMembersCreated is response for AddGCPMembers operation.
type AddGCPMembersCreated struct{}

type AddGCPMembersReq struct {
	MemberExtensionIds []string `json:"member_extension_ids"`
}

// GetMemberExtensionIds returns the value of MemberExtensionIds.
func (s *AddGCPMembersReq) GetMemberExtensionIds() []string {
	return s.MemberExtensionIds
}

// SetMemberExtensionIds sets the value of MemberExtensionIds.
func (s *AddGCPMembersReq) SetMemberExtensionIds(val []string) {
	s.MemberExtensionIds = val
}

type AddGCPReq struct {
	// Name of the group.
	DisplayName string `json:"display_name"`
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
	SiteID string `json:"site_id"`
	// Group call pickup description.
	Description OptString `json:"description"`
	// Short extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// Determines after how much time (in seconds) the group should be notified.
	Delay OptInt `json:"delay"`
	// This field is not available when `enable=false`.
	PlayIncomingCallsSound OptAddGCPReqPlayIncomingCallsSound `json:"play_incoming_calls_sound"`
	// Whether the ringtone is on.
	DirectedCallPickup OptBool `json:"directed_call_pickup"`
	// Extension ID.
	MemberExtensionIds []string `json:"member_extension_ids"`
}

// GetDisplayName returns the value of DisplayName.
func (s *AddGCPReq) GetDisplayName() string {
	return s.DisplayName
}

// GetSiteID returns the value of SiteID.
func (s *AddGCPReq) GetSiteID() string {
	return s.SiteID
}

// GetDescription returns the value of Description.
func (s *AddGCPReq) GetDescription() OptString {
	return s.Description
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *AddGCPReq) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetDelay returns the value of Delay.
func (s *AddGCPReq) GetDelay() OptInt {
	return s.Delay
}

// GetPlayIncomingCallsSound returns the value of PlayIncomingCallsSound.
func (s *AddGCPReq) GetPlayIncomingCallsSound() OptAddGCPReqPlayIncomingCallsSound {
	return s.PlayIncomingCallsSound
}

// GetDirectedCallPickup returns the value of DirectedCallPickup.
func (s *AddGCPReq) GetDirectedCallPickup() OptBool {
	return s.DirectedCallPickup
}

// GetMemberExtensionIds returns the value of MemberExtensionIds.
func (s *AddGCPReq) GetMemberExtensionIds() []string {
	return s.MemberExtensionIds
}

// SetDisplayName sets the value of DisplayName.
func (s *AddGCPReq) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetSiteID sets the value of SiteID.
func (s *AddGCPReq) SetSiteID(val string) {
	s.SiteID = val
}

// SetDescription sets the value of Description.
func (s *AddGCPReq) SetDescription(val OptString) {
	s.Description = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *AddGCPReq) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetDelay sets the value of Delay.
func (s *AddGCPReq) SetDelay(val OptInt) {
	s.Delay = val
}

// SetPlayIncomingCallsSound sets the value of PlayIncomingCallsSound.
func (s *AddGCPReq) SetPlayIncomingCallsSound(val OptAddGCPReqPlayIncomingCallsSound) {
	s.PlayIncomingCallsSound = val
}

// SetDirectedCallPickup sets the value of DirectedCallPickup.
func (s *AddGCPReq) SetDirectedCallPickup(val OptBool) {
	s.DirectedCallPickup = val
}

// SetMemberExtensionIds sets the value of MemberExtensionIds.
func (s *AddGCPReq) SetMemberExtensionIds(val []string) {
	s.MemberExtensionIds = val
}

// This field is not available when `enable=false`.
type AddGCPReqPlayIncomingCallsSound struct {
	// Whether to play incoming call sound in Zoom clients.
	Enable OptBool `json:"enable"`
	// Incoming call sound in Zoom clients.
	RingTone OptString `json:"ring_tone"`
	// Duration (in seconds) between ring tones.
	Duration OptInt `json:"duration"`
}

// GetEnable returns the value of Enable.
func (s *AddGCPReqPlayIncomingCallsSound) GetEnable() OptBool {
	return s.Enable
}

// GetRingTone returns the value of RingTone.
func (s *AddGCPReqPlayIncomingCallsSound) GetRingTone() OptString {
	return s.RingTone
}

// GetDuration returns the value of Duration.
func (s *AddGCPReqPlayIncomingCallsSound) GetDuration() OptInt {
	return s.Duration
}

// SetEnable sets the value of Enable.
func (s *AddGCPReqPlayIncomingCallsSound) SetEnable(val OptBool) {
	s.Enable = val
}

// SetRingTone sets the value of RingTone.
func (s *AddGCPReqPlayIncomingCallsSound) SetRingTone(val OptString) {
	s.RingTone = val
}

// SetDuration sets the value of Duration.
func (s *AddGCPReqPlayIncomingCallsSound) SetDuration(val OptInt) {
	s.Duration = val
}

type AddLocationCreated struct {
	// The phone's location ID.
	ID OptString `json:"id"`
	// The phone's location name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *AddLocationCreated) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *AddLocationCreated) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *AddLocationCreated) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *AddLocationCreated) SetName(val OptString) {
	s.Name = val
}

type AddLocationReq struct {
	// A comma-separated list of the emergency service location's BSSIDs (Basic Service Set Identifiers).
	Bssid OptString `json:"bssid"`
	// The ELIN (Emergency Location Identification Number). This value must be a phone number ID or phone
	// number in [E.164](https://en.wikipedia.org/wiki/E.164) format.
	ElinPhoneNumberID OptString `json:"elin_phone_number_id"`
	// The emergency location address ID.
	EmergencyAddressID string `json:"emergency_address_id"`
	// The emergency service location's name.
	Name string `json:"name"`
	// The parent location's ID to assign to the emergency service location.
	ParentLocationID OptString `json:"parent_location_id"`
	// A comma-separated list of the emergency service location's subnet or private IP addresses. This
	// field is required if `minimum_match_criteria` is true.
	PrivateIP OptString `json:"private_ip"`
	// A comma-separated list of the emergency service location's public IP addresses. This parameter is
	// required for top locations.
	PublicIP OptString `json:"public_ip"`
	// The SIP group ID to assign to the emergency service location. This value is not required for
	// non-top locations.
	SipGroupID OptString `json:"sip_group_id"`
	// The site ID.
	SiteID OptString `json:"site_id"`
	// If true, it requires a user's location match on both public and private IP address, or BSSID, or
	// network switch; detecting only a public IP address is not enough to detect the location.
	MinimumMatchCriteria OptBool `json:"minimum_match_criteria"`
}

// GetBssid returns the value of Bssid.
func (s *AddLocationReq) GetBssid() OptString {
	return s.Bssid
}

// GetElinPhoneNumberID returns the value of ElinPhoneNumberID.
func (s *AddLocationReq) GetElinPhoneNumberID() OptString {
	return s.ElinPhoneNumberID
}

// GetEmergencyAddressID returns the value of EmergencyAddressID.
func (s *AddLocationReq) GetEmergencyAddressID() string {
	return s.EmergencyAddressID
}

// GetName returns the value of Name.
func (s *AddLocationReq) GetName() string {
	return s.Name
}

// GetParentLocationID returns the value of ParentLocationID.
func (s *AddLocationReq) GetParentLocationID() OptString {
	return s.ParentLocationID
}

// GetPrivateIP returns the value of PrivateIP.
func (s *AddLocationReq) GetPrivateIP() OptString {
	return s.PrivateIP
}

// GetPublicIP returns the value of PublicIP.
func (s *AddLocationReq) GetPublicIP() OptString {
	return s.PublicIP
}

// GetSipGroupID returns the value of SipGroupID.
func (s *AddLocationReq) GetSipGroupID() OptString {
	return s.SipGroupID
}

// GetSiteID returns the value of SiteID.
func (s *AddLocationReq) GetSiteID() OptString {
	return s.SiteID
}

// GetMinimumMatchCriteria returns the value of MinimumMatchCriteria.
func (s *AddLocationReq) GetMinimumMatchCriteria() OptBool {
	return s.MinimumMatchCriteria
}

// SetBssid sets the value of Bssid.
func (s *AddLocationReq) SetBssid(val OptString) {
	s.Bssid = val
}

// SetElinPhoneNumberID sets the value of ElinPhoneNumberID.
func (s *AddLocationReq) SetElinPhoneNumberID(val OptString) {
	s.ElinPhoneNumberID = val
}

// SetEmergencyAddressID sets the value of EmergencyAddressID.
func (s *AddLocationReq) SetEmergencyAddressID(val string) {
	s.EmergencyAddressID = val
}

// SetName sets the value of Name.
func (s *AddLocationReq) SetName(val string) {
	s.Name = val
}

// SetParentLocationID sets the value of ParentLocationID.
func (s *AddLocationReq) SetParentLocationID(val OptString) {
	s.ParentLocationID = val
}

// SetPrivateIP sets the value of PrivateIP.
func (s *AddLocationReq) SetPrivateIP(val OptString) {
	s.PrivateIP = val
}

// SetPublicIP sets the value of PublicIP.
func (s *AddLocationReq) SetPublicIP(val OptString) {
	s.PublicIP = val
}

// SetSipGroupID sets the value of SipGroupID.
func (s *AddLocationReq) SetSipGroupID(val OptString) {
	s.SipGroupID = val
}

// SetSiteID sets the value of SiteID.
func (s *AddLocationReq) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetMinimumMatchCriteria sets the value of MinimumMatchCriteria.
func (s *AddLocationReq) SetMinimumMatchCriteria(val OptBool) {
	s.MinimumMatchCriteria = val
}

type AddMembersToCallQueueCreated struct{}

type AddMembersToCallQueueReq struct {
	// A maximum of 10 members can be added at a time.
	Members OptAddMembersToCallQueueReqMembers `json:"members"`
}

// GetMembers returns the value of Members.
func (s *AddMembersToCallQueueReq) GetMembers() OptAddMembersToCallQueueReqMembers {
	return s.Members
}

// SetMembers sets the value of Members.
func (s *AddMembersToCallQueueReq) SetMembers(val OptAddMembersToCallQueueReqMembers) {
	s.Members = val
}

// A maximum of 10 members can be added at a time.
type AddMembersToCallQueueReqMembers struct {
	// **Optional**
	// Unique identifier of the [Common Area](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods/#operation/listCommonAreas). This can be retrieved from the
	// List Common Areas API.
	CommonAreaIds []string                                   `json:"common_area_ids"`
	Users         []AddMembersToCallQueueReqMembersUsersItem `json:"users"`
}

// GetCommonAreaIds returns the value of CommonAreaIds.
func (s *AddMembersToCallQueueReqMembers) GetCommonAreaIds() []string {
	return s.CommonAreaIds
}

// GetUsers returns the value of Users.
func (s *AddMembersToCallQueueReqMembers) GetUsers() []AddMembersToCallQueueReqMembersUsersItem {
	return s.Users
}

// SetCommonAreaIds sets the value of CommonAreaIds.
func (s *AddMembersToCallQueueReqMembers) SetCommonAreaIds(val []string) {
	s.CommonAreaIds = val
}

// SetUsers sets the value of Users.
func (s *AddMembersToCallQueueReqMembers) SetUsers(val []AddMembersToCallQueueReqMembersUsersItem) {
	s.Users = val
}

type AddMembersToCallQueueReqMembersUsersItem struct {
	// Email address of the user.
	Email OptString `json:"email"`
	// User ID: Unique identifier of the user.
	ID OptString `json:"id"`
}

// GetEmail returns the value of Email.
func (s *AddMembersToCallQueueReqMembersUsersItem) GetEmail() OptString {
	return s.Email
}

// GetID returns the value of ID.
func (s *AddMembersToCallQueueReqMembersUsersItem) GetID() OptString {
	return s.ID
}

// SetEmail sets the value of Email.
func (s *AddMembersToCallQueueReqMembersUsersItem) SetEmail(val OptString) {
	s.Email = val
}

// SetID sets the value of ID.
func (s *AddMembersToCallQueueReqMembersUsersItem) SetID(val OptString) {
	s.ID = val
}

// AddMembersToSharedLineGroupCreated is response for AddMembersToSharedLineGroup operation.
type AddMembersToSharedLineGroupCreated struct{}

type AddMembersToSharedLineGroupReq struct {
	// The members can comprise of users on the account as well as common areas. You can add a maximum of
	// 10 members at once.
	Members OptAddMembersToSharedLineGroupReqMembers `json:"members"`
}

// GetMembers returns the value of Members.
func (s *AddMembersToSharedLineGroupReq) GetMembers() OptAddMembersToSharedLineGroupReqMembers {
	return s.Members
}

// SetMembers sets the value of Members.
func (s *AddMembersToSharedLineGroupReq) SetMembers(val OptAddMembersToSharedLineGroupReqMembers) {
	s.Members = val
}

// The members can comprise of users on the account as well as common areas. You can add a maximum of
// 10 members at once.
type AddMembersToSharedLineGroupReqMembers struct {
	// The unique identifier of the [common area](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods/#operation/listCommonAreas), retrievable from the List Common
	// Areas API.
	CommonAreaIds []string `json:"common_area_ids"`
	// The Zoom Phone users on the account.
	Users []AddMembersToSharedLineGroupReqMembersUsersItem `json:"users"`
}

// GetCommonAreaIds returns the value of CommonAreaIds.
func (s *AddMembersToSharedLineGroupReqMembers) GetCommonAreaIds() []string {
	return s.CommonAreaIds
}

// GetUsers returns the value of Users.
func (s *AddMembersToSharedLineGroupReqMembers) GetUsers() []AddMembersToSharedLineGroupReqMembersUsersItem {
	return s.Users
}

// SetCommonAreaIds sets the value of CommonAreaIds.
func (s *AddMembersToSharedLineGroupReqMembers) SetCommonAreaIds(val []string) {
	s.CommonAreaIds = val
}

// SetUsers sets the value of Users.
func (s *AddMembersToSharedLineGroupReqMembers) SetUsers(val []AddMembersToSharedLineGroupReqMembersUsersItem) {
	s.Users = val
}

type AddMembersToSharedLineGroupReqMembersUsersItem struct {
	// The email address of the user.
	Email OptString `json:"email"`
	// The unique identifier of the user.
	ID OptString `json:"id"`
}

// GetEmail returns the value of Email.
func (s *AddMembersToSharedLineGroupReqMembersUsersItem) GetEmail() OptString {
	return s.Email
}

// GetID returns the value of ID.
func (s *AddMembersToSharedLineGroupReqMembersUsersItem) GetID() OptString {
	return s.ID
}

// SetEmail sets the value of Email.
func (s *AddMembersToSharedLineGroupReqMembersUsersItem) SetEmail(val OptString) {
	s.Email = val
}

// SetID sets the value of ID.
func (s *AddMembersToSharedLineGroupReqMembersUsersItem) SetID(val OptString) {
	s.ID = val
}

type AddOutboundCallerNumbersReq struct {
	// The phone number IDs.
	PhoneNumberIds []string `json:"phone_number_ids"`
}

// GetPhoneNumberIds returns the value of PhoneNumberIds.
func (s *AddOutboundCallerNumbersReq) GetPhoneNumberIds() []string {
	return s.PhoneNumberIds
}

// SetPhoneNumberIds sets the value of PhoneNumberIds.
func (s *AddOutboundCallerNumbersReq) SetPhoneNumberIds(val []string) {
	s.PhoneNumberIds = val
}

type AddPeeringPhoneNumbersCreated struct {
	// The information about unprocessed phone numbers.
	UnprocessedNumbers []AddPeeringPhoneNumbersCreatedUnprocessedNumbersItem `json:"unprocessed_numbers"`
}

// GetUnprocessedNumbers returns the value of UnprocessedNumbers.
func (s *AddPeeringPhoneNumbersCreated) GetUnprocessedNumbers() []AddPeeringPhoneNumbersCreatedUnprocessedNumbersItem {
	return s.UnprocessedNumbers
}

// SetUnprocessedNumbers sets the value of UnprocessedNumbers.
func (s *AddPeeringPhoneNumbersCreated) SetUnprocessedNumbers(val []AddPeeringPhoneNumbersCreatedUnprocessedNumbersItem) {
	s.UnprocessedNumbers = val
}

type AddPeeringPhoneNumbersCreatedUnprocessedNumbersItem struct {
	// The processing failure reason.
	FailureReason OptString `json:"failure_reason"`
	// The phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
	PhoneNumber OptString `json:"phone_number"`
}

// GetFailureReason returns the value of FailureReason.
func (s *AddPeeringPhoneNumbersCreatedUnprocessedNumbersItem) GetFailureReason() OptString {
	return s.FailureReason
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *AddPeeringPhoneNumbersCreatedUnprocessedNumbersItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// SetFailureReason sets the value of FailureReason.
func (s *AddPeeringPhoneNumbersCreatedUnprocessedNumbersItem) SetFailureReason(val OptString) {
	s.FailureReason = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *AddPeeringPhoneNumbersCreatedUnprocessedNumbersItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

type AddPeeringPhoneNumbersReq struct {
	// The carrier's code. The `clientId` maps to a carrier peered with Zoom.
	// This parameter is required if you do **not** use an OAuth token or the OAuth token does not
	// contain the `clientId`.
	CarrierCode OptInt `json:"carrier_code"`
	// The information about the added phone numbers. Maximum of 200.
	PhoneNumbers []AddPeeringPhoneNumbersReqPhoneNumbersItem `json:"phone_numbers"`
}

// GetCarrierCode returns the value of CarrierCode.
func (s *AddPeeringPhoneNumbersReq) GetCarrierCode() OptInt {
	return s.CarrierCode
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *AddPeeringPhoneNumbersReq) GetPhoneNumbers() []AddPeeringPhoneNumbersReqPhoneNumbersItem {
	return s.PhoneNumbers
}

// SetCarrierCode sets the value of CarrierCode.
func (s *AddPeeringPhoneNumbersReq) SetCarrierCode(val OptInt) {
	s.CarrierCode = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *AddPeeringPhoneNumbersReq) SetPhoneNumbers(val []AddPeeringPhoneNumbersReqPhoneNumbersItem) {
	s.PhoneNumbers = val
}

type AddPeeringPhoneNumbersReqPhoneNumbersItem struct {
	// The carrier's billing reference ID. Maximum of 32 characters.
	BillingReferenceID OptString `json:"billing_reference_id"`
	// The phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
	PhoneNumber string `json:"phone_number"`
	// The carrier's service information. Maximum of 255 characters.
	ServiceInfo OptString `json:"service_info"`
	// The phone number's [SIP trunk](https://en.wikipedia.org/wiki/SIP_trunking).
	SipTrunkName string `json:"sip_trunk_name"`
	// The phone number's status:
	// * `0` &mdash; Inactive.
	// * `1` &mdash; Active.
	Status int `json:"status"`
}

// GetBillingReferenceID returns the value of BillingReferenceID.
func (s *AddPeeringPhoneNumbersReqPhoneNumbersItem) GetBillingReferenceID() OptString {
	return s.BillingReferenceID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *AddPeeringPhoneNumbersReqPhoneNumbersItem) GetPhoneNumber() string {
	return s.PhoneNumber
}

// GetServiceInfo returns the value of ServiceInfo.
func (s *AddPeeringPhoneNumbersReqPhoneNumbersItem) GetServiceInfo() OptString {
	return s.ServiceInfo
}

// GetSipTrunkName returns the value of SipTrunkName.
func (s *AddPeeringPhoneNumbersReqPhoneNumbersItem) GetSipTrunkName() string {
	return s.SipTrunkName
}

// GetStatus returns the value of Status.
func (s *AddPeeringPhoneNumbersReqPhoneNumbersItem) GetStatus() int {
	return s.Status
}

// SetBillingReferenceID sets the value of BillingReferenceID.
func (s *AddPeeringPhoneNumbersReqPhoneNumbersItem) SetBillingReferenceID(val OptString) {
	s.BillingReferenceID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *AddPeeringPhoneNumbersReqPhoneNumbersItem) SetPhoneNumber(val string) {
	s.PhoneNumber = val
}

// SetServiceInfo sets the value of ServiceInfo.
func (s *AddPeeringPhoneNumbersReqPhoneNumbersItem) SetServiceInfo(val OptString) {
	s.ServiceInfo = val
}

// SetSipTrunkName sets the value of SipTrunkName.
func (s *AddPeeringPhoneNumbersReqPhoneNumbersItem) SetSipTrunkName(val string) {
	s.SipTrunkName = val
}

// SetStatus sets the value of Status.
func (s *AddPeeringPhoneNumbersReqPhoneNumbersItem) SetStatus(val int) {
	s.Status = val
}

type AddPhoneDeviceCreated struct {
	// Unique identifier of the desk phone.
	ID OptString `json:"id"`
	// Display name of the desk phone.
	DisplayName OptString `json:"display_name"`
}

// GetID returns the value of ID.
func (s *AddPhoneDeviceCreated) GetID() OptString {
	return s.ID
}

// GetDisplayName returns the value of DisplayName.
func (s *AddPhoneDeviceCreated) GetDisplayName() OptString {
	return s.DisplayName
}

// SetID sets the value of ID.
func (s *AddPhoneDeviceCreated) SetID(val OptString) {
	s.ID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *AddPhoneDeviceCreated) SetDisplayName(val OptString) {
	s.DisplayName = val
}

type AddPhoneDeviceReq struct {
	// User ID or email address of the user to whom this device is to be assigned.
	AssignedTo OptString `json:"assigned_to"`
	// Available only for the account that has enabled the common area feature.
	// Extension ID of the [`user`](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods/#operation/phoneUser) or [`common area`
	// ID](https://marketplace.zoom.us/docs/api-reference/phone/methods/#operation/listCommonAreas).
	AssigneeExtensionIds []string `json:"assignee_extension_ids"`
	// Display name of the desk phone.
	DisplayName string `json:"display_name"`
	// The MAC address of the desk phone.
	// Note: If you're using a wireless phone, enter the wired MAC address, not the wireless MAC address.
	MACAddress string `json:"mac_address"`
	// Model name of the device.
	Model OptString `json:"model"`
	// Manufacturer (brand) name of the device.
	Type string `json:"type"`
	// Provision template id. Supported only by some devices. Empty string represents 'No value set'.
	ProvisionTemplateID OptString `json:"provision_template_id"`
}

// GetAssignedTo returns the value of AssignedTo.
func (s *AddPhoneDeviceReq) GetAssignedTo() OptString {
	return s.AssignedTo
}

// GetAssigneeExtensionIds returns the value of AssigneeExtensionIds.
func (s *AddPhoneDeviceReq) GetAssigneeExtensionIds() []string {
	return s.AssigneeExtensionIds
}

// GetDisplayName returns the value of DisplayName.
func (s *AddPhoneDeviceReq) GetDisplayName() string {
	return s.DisplayName
}

// GetMACAddress returns the value of MACAddress.
func (s *AddPhoneDeviceReq) GetMACAddress() string {
	return s.MACAddress
}

// GetModel returns the value of Model.
func (s *AddPhoneDeviceReq) GetModel() OptString {
	return s.Model
}

// GetType returns the value of Type.
func (s *AddPhoneDeviceReq) GetType() string {
	return s.Type
}

// GetProvisionTemplateID returns the value of ProvisionTemplateID.
func (s *AddPhoneDeviceReq) GetProvisionTemplateID() OptString {
	return s.ProvisionTemplateID
}

// SetAssignedTo sets the value of AssignedTo.
func (s *AddPhoneDeviceReq) SetAssignedTo(val OptString) {
	s.AssignedTo = val
}

// SetAssigneeExtensionIds sets the value of AssigneeExtensionIds.
func (s *AddPhoneDeviceReq) SetAssigneeExtensionIds(val []string) {
	s.AssigneeExtensionIds = val
}

// SetDisplayName sets the value of DisplayName.
func (s *AddPhoneDeviceReq) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetMACAddress sets the value of MACAddress.
func (s *AddPhoneDeviceReq) SetMACAddress(val string) {
	s.MACAddress = val
}

// SetModel sets the value of Model.
func (s *AddPhoneDeviceReq) SetModel(val OptString) {
	s.Model = val
}

// SetType sets the value of Type.
func (s *AddPhoneDeviceReq) SetType(val string) {
	s.Type = val
}

// SetProvisionTemplateID sets the value of ProvisionTemplateID.
func (s *AddPhoneDeviceReq) SetProvisionTemplateID(val OptString) {
	s.ProvisionTemplateID = val
}

type AddPolicyCreated struct {
	VoicemailAccessMember OptAddPolicyCreatedVoicemailAccessMember `json:"voicemail_access_member"`
}

// GetVoicemailAccessMember returns the value of VoicemailAccessMember.
func (s *AddPolicyCreated) GetVoicemailAccessMember() OptAddPolicyCreatedVoicemailAccessMember {
	return s.VoicemailAccessMember
}

// SetVoicemailAccessMember sets the value of VoicemailAccessMember.
func (s *AddPolicyCreated) SetVoicemailAccessMember(val OptAddPolicyCreatedVoicemailAccessMember) {
	s.VoicemailAccessMember = val
}

type AddPolicyCreatedVoicemailAccessMember struct {
	// Unique identifier of the shared voicemail that the user can access.
	SharedID OptString `json:"shared_id"`
	// The user that is allowed to access voicemail messages for the extension.
	AccessUserID OptString `json:"access_user_id"`
	// Specifies whether the user has delete permissions. The default is **false**.
	Delete OptBool `json:"delete"`
	// Specifies whether the user has download permissions. The default is **false**.
	Download OptBool `json:"download"`
}

// GetSharedID returns the value of SharedID.
func (s *AddPolicyCreatedVoicemailAccessMember) GetSharedID() OptString {
	return s.SharedID
}

// GetAccessUserID returns the value of AccessUserID.
func (s *AddPolicyCreatedVoicemailAccessMember) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetDelete returns the value of Delete.
func (s *AddPolicyCreatedVoicemailAccessMember) GetDelete() OptBool {
	return s.Delete
}

// GetDownload returns the value of Download.
func (s *AddPolicyCreatedVoicemailAccessMember) GetDownload() OptBool {
	return s.Download
}

// SetSharedID sets the value of SharedID.
func (s *AddPolicyCreatedVoicemailAccessMember) SetSharedID(val OptString) {
	s.SharedID = val
}

// SetAccessUserID sets the value of AccessUserID.
func (s *AddPolicyCreatedVoicemailAccessMember) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetDelete sets the value of Delete.
func (s *AddPolicyCreatedVoicemailAccessMember) SetDelete(val OptBool) {
	s.Delete = val
}

// SetDownload sets the value of Download.
func (s *AddPolicyCreatedVoicemailAccessMember) SetDownload(val OptBool) {
	s.Download = val
}

type AddPolicyReq struct {
	VoicemailAccessMember OptAddPolicyReqVoicemailAccessMember `json:"voicemail_access_member"`
}

// GetVoicemailAccessMember returns the value of VoicemailAccessMember.
func (s *AddPolicyReq) GetVoicemailAccessMember() OptAddPolicyReqVoicemailAccessMember {
	return s.VoicemailAccessMember
}

// SetVoicemailAccessMember sets the value of VoicemailAccessMember.
func (s *AddPolicyReq) SetVoicemailAccessMember(val OptAddPolicyReqVoicemailAccessMember) {
	s.VoicemailAccessMember = val
}

type AddPolicyReqVoicemailAccessMember struct {
	// The user that is allowed to access voicemail messages for the extension.
	AccessUserID OptString `json:"access_user_id"`
	// Specifies whether the user has delete permissions. The default is **false**.
	Delete OptBool `json:"delete"`
	// Specifies whether the user has download permissions. The default is **false**.
	Download OptBool `json:"download"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *AddPolicyReqVoicemailAccessMember) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetDelete returns the value of Delete.
func (s *AddPolicyReqVoicemailAccessMember) GetDelete() OptBool {
	return s.Delete
}

// GetDownload returns the value of Download.
func (s *AddPolicyReqVoicemailAccessMember) GetDownload() OptBool {
	return s.Download
}

// SetAccessUserID sets the value of AccessUserID.
func (s *AddPolicyReqVoicemailAccessMember) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetDelete sets the value of Delete.
func (s *AddPolicyReqVoicemailAccessMember) SetDelete(val OptBool) {
	s.Delete = val
}

// SetDownload sets the value of Download.
func (s *AddPolicyReqVoicemailAccessMember) SetDownload(val OptBool) {
	s.Download = val
}

type AddProvisionTemplateCreated struct {
	// The template ID.
	ID OptString `json:"id"`
	// The template name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *AddProvisionTemplateCreated) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *AddProvisionTemplateCreated) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *AddProvisionTemplateCreated) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *AddProvisionTemplateCreated) SetName(val OptString) {
	s.Name = val
}

type AddProvisionTemplateReq struct {
	// The template name.
	Name string `json:"name"`
	// The provision template description.
	Description OptString `json:"description"`
	// The [content of the provision template](https://support.zoom.
	// us/hc/en-us/articles/360035817952#h_6ef0cbf5-8d10-4237-91f0-e70f7b73a590).
	Content OptString `json:"content"`
}

// GetName returns the value of Name.
func (s *AddProvisionTemplateReq) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *AddProvisionTemplateReq) GetDescription() OptString {
	return s.Description
}

// GetContent returns the value of Content.
func (s *AddProvisionTemplateReq) GetContent() OptString {
	return s.Content
}

// SetName sets the value of Name.
func (s *AddProvisionTemplateReq) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *AddProvisionTemplateReq) SetDescription(val OptString) {
	s.Description = val
}

// SetContent sets the value of Content.
func (s *AddProvisionTemplateReq) SetContent(val OptString) {
	s.Content = val
}

// AddRoleMembersCreated is response for AddRoleMembers operation.
type AddRoleMembersCreated struct{}

type AddRoleMembersReq struct {
	// Unique identifier of the existing [role](https://support.zoom.
	// us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management) assigned to the user: used
	// when copying members' role.
	RoleID OptString `json:"role_id"`
	// Whether to copy the target: used when copying members' role.
	CopyTargets OptBool `json:"copy_targets"`
	// Whether to copy all members with the role: used when copying members' role.
	CopyAllMembers OptBool `json:"copy_all_members"`
	// The user IDs or email addresses of the user.
	UserIds []string `json:"user_ids"`
}

// GetRoleID returns the value of RoleID.
func (s *AddRoleMembersReq) GetRoleID() OptString {
	return s.RoleID
}

// GetCopyTargets returns the value of CopyTargets.
func (s *AddRoleMembersReq) GetCopyTargets() OptBool {
	return s.CopyTargets
}

// GetCopyAllMembers returns the value of CopyAllMembers.
func (s *AddRoleMembersReq) GetCopyAllMembers() OptBool {
	return s.CopyAllMembers
}

// GetUserIds returns the value of UserIds.
func (s *AddRoleMembersReq) GetUserIds() []string {
	return s.UserIds
}

// SetRoleID sets the value of RoleID.
func (s *AddRoleMembersReq) SetRoleID(val OptString) {
	s.RoleID = val
}

// SetCopyTargets sets the value of CopyTargets.
func (s *AddRoleMembersReq) SetCopyTargets(val OptBool) {
	s.CopyTargets = val
}

// SetCopyAllMembers sets the value of CopyAllMembers.
func (s *AddRoleMembersReq) SetCopyAllMembers(val OptBool) {
	s.CopyAllMembers = val
}

// SetUserIds sets the value of UserIds.
func (s *AddRoleMembersReq) SetUserIds(val []string) {
	s.UserIds = val
}

type AddRoutingRuleCreated struct {
	// The routing rule name.
	Name OptString `json:"name"`
	// The unique identifier of the routing rule.
	RoutingRuleID OptString `json:"routing_rule_id"`
}

// GetName returns the value of Name.
func (s *AddRoutingRuleCreated) GetName() OptString {
	return s.Name
}

// GetRoutingRuleID returns the value of RoutingRuleID.
func (s *AddRoutingRuleCreated) GetRoutingRuleID() OptString {
	return s.RoutingRuleID
}

// SetName sets the value of Name.
func (s *AddRoutingRuleCreated) SetName(val OptString) {
	s.Name = val
}

// SetRoutingRuleID sets the value of RoutingRuleID.
func (s *AddRoutingRuleCreated) SetRoutingRuleID(val OptString) {
	s.RoutingRuleID = val
}

type AddRoutingRuleReq struct {
	// The routing rule name.
	Name OptString `json:"name"`
	// The Perl-compatible number_pattern expression.
	NumberPattern OptString `json:"number_pattern"`
	// The unique identifier of the SIP group. it cannot be null when 'type' = 'sip_group'.
	SipGroupID OptString `json:"sip_group_id"`
	// The unique identifier of the site.`nullable`.
	SiteID OptString `json:"site_id"`
	// The optional replacement pattern. It must be in E.164 format.`nullable`.
	Translation OptString `json:"translation"`
	// The routing path type.
	Type OptString `json:"type"`
}

// GetName returns the value of Name.
func (s *AddRoutingRuleReq) GetName() OptString {
	return s.Name
}

// GetNumberPattern returns the value of NumberPattern.
func (s *AddRoutingRuleReq) GetNumberPattern() OptString {
	return s.NumberPattern
}

// GetSipGroupID returns the value of SipGroupID.
func (s *AddRoutingRuleReq) GetSipGroupID() OptString {
	return s.SipGroupID
}

// GetSiteID returns the value of SiteID.
func (s *AddRoutingRuleReq) GetSiteID() OptString {
	return s.SiteID
}

// GetTranslation returns the value of Translation.
func (s *AddRoutingRuleReq) GetTranslation() OptString {
	return s.Translation
}

// GetType returns the value of Type.
func (s *AddRoutingRuleReq) GetType() OptString {
	return s.Type
}

// SetName sets the value of Name.
func (s *AddRoutingRuleReq) SetName(val OptString) {
	s.Name = val
}

// SetNumberPattern sets the value of NumberPattern.
func (s *AddRoutingRuleReq) SetNumberPattern(val OptString) {
	s.NumberPattern = val
}

// SetSipGroupID sets the value of SipGroupID.
func (s *AddRoutingRuleReq) SetSipGroupID(val OptString) {
	s.SipGroupID = val
}

// SetSiteID sets the value of SiteID.
func (s *AddRoutingRuleReq) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetTranslation sets the value of Translation.
func (s *AddRoutingRuleReq) SetTranslation(val OptString) {
	s.Translation = val
}

// SetType sets the value of Type.
func (s *AddRoutingRuleReq) SetType(val OptString) {
	s.Type = val
}

type AddSLGPolicySubSettingCreated struct {
	// The shared access member list.
	VoicemailAccessMembers []AddSLGPolicySubSettingCreatedVoicemailAccessMembersItem `json:"voicemail_access_members"`
}

// GetVoicemailAccessMembers returns the value of VoicemailAccessMembers.
func (s *AddSLGPolicySubSettingCreated) GetVoicemailAccessMembers() []AddSLGPolicySubSettingCreatedVoicemailAccessMembersItem {
	return s.VoicemailAccessMembers
}

// SetVoicemailAccessMembers sets the value of VoicemailAccessMembers.
func (s *AddSLGPolicySubSettingCreated) SetVoicemailAccessMembers(val []AddSLGPolicySubSettingCreatedVoicemailAccessMembersItem) {
	s.VoicemailAccessMembers = val
}

// Merged schema.
type AddSLGPolicySubSettingCreatedVoicemailAccessMembersItem struct {
	// The Zoom user ID, email, or common area ID of which to share or update the access permissions.
	AccessUserID OptString `json:"access_user_id"`
	// Whether the member has download permissions. Not applicable to `commonArea`. The default is
	// **false**.
	AllowDownload OptBool `json:"allow_download"`
	// Whether the member has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// Whether the member has permission to share. The default is **false**.
	AllowSharing OptBool `json:"allow_sharing"`
	// The shared voicemail ID that the member can access.
	SharedID OptString `json:"shared_id"`
	// The type of access member: `user` or `commonArea`.
	AccessUserType OptString `json:"access_user_type"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *AddSLGPolicySubSettingCreatedVoicemailAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDownload returns the value of AllowDownload.
func (s *AddSLGPolicySubSettingCreatedVoicemailAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowDelete returns the value of AllowDelete.
func (s *AddSLGPolicySubSettingCreatedVoicemailAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowSharing returns the value of AllowSharing.
func (s *AddSLGPolicySubSettingCreatedVoicemailAccessMembersItem) GetAllowSharing() OptBool {
	return s.AllowSharing
}

// GetSharedID returns the value of SharedID.
func (s *AddSLGPolicySubSettingCreatedVoicemailAccessMembersItem) GetSharedID() OptString {
	return s.SharedID
}

// GetAccessUserType returns the value of AccessUserType.
func (s *AddSLGPolicySubSettingCreatedVoicemailAccessMembersItem) GetAccessUserType() OptString {
	return s.AccessUserType
}

// SetAccessUserID sets the value of AccessUserID.
func (s *AddSLGPolicySubSettingCreatedVoicemailAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *AddSLGPolicySubSettingCreatedVoicemailAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *AddSLGPolicySubSettingCreatedVoicemailAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowSharing sets the value of AllowSharing.
func (s *AddSLGPolicySubSettingCreatedVoicemailAccessMembersItem) SetAllowSharing(val OptBool) {
	s.AllowSharing = val
}

// SetSharedID sets the value of SharedID.
func (s *AddSLGPolicySubSettingCreatedVoicemailAccessMembersItem) SetSharedID(val OptString) {
	s.SharedID = val
}

// SetAccessUserType sets the value of AccessUserType.
func (s *AddSLGPolicySubSettingCreatedVoicemailAccessMembersItem) SetAccessUserType(val OptString) {
	s.AccessUserType = val
}

type AddSLGPolicySubSettingReq struct {
	// The shared voicemail access member list.
	VoicemailAccessMembers []AddSLGPolicySubSettingReqVoicemailAccessMembersItem `json:"voicemail_access_members"`
}

// GetVoicemailAccessMembers returns the value of VoicemailAccessMembers.
func (s *AddSLGPolicySubSettingReq) GetVoicemailAccessMembers() []AddSLGPolicySubSettingReqVoicemailAccessMembersItem {
	return s.VoicemailAccessMembers
}

// SetVoicemailAccessMembers sets the value of VoicemailAccessMembers.
func (s *AddSLGPolicySubSettingReq) SetVoicemailAccessMembers(val []AddSLGPolicySubSettingReqVoicemailAccessMembersItem) {
	s.VoicemailAccessMembers = val
}

type AddSLGPolicySubSettingReqVoicemailAccessMembersItem struct {
	// The Zoom user ID, email, or common area ID of which to share or update the access permissions.
	AccessUserID OptString `json:"access_user_id"`
	// Whether the member has download permissions. Not applicable to `commonArea`. The default is
	// **false**.
	AllowDownload OptBool `json:"allow_download"`
	// Whether the member has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// Whether the member has permission to share. The default is **false**.
	AllowSharing OptBool `json:"allow_sharing"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *AddSLGPolicySubSettingReqVoicemailAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDownload returns the value of AllowDownload.
func (s *AddSLGPolicySubSettingReqVoicemailAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowDelete returns the value of AllowDelete.
func (s *AddSLGPolicySubSettingReqVoicemailAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowSharing returns the value of AllowSharing.
func (s *AddSLGPolicySubSettingReqVoicemailAccessMembersItem) GetAllowSharing() OptBool {
	return s.AllowSharing
}

// SetAccessUserID sets the value of AccessUserID.
func (s *AddSLGPolicySubSettingReqVoicemailAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *AddSLGPolicySubSettingReqVoicemailAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *AddSLGPolicySubSettingReqVoicemailAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowSharing sets the value of AllowSharing.
func (s *AddSLGPolicySubSettingReqVoicemailAccessMembersItem) SetAllowSharing(val OptBool) {
	s.AllowSharing = val
}

type AddSettingTemplateCreated struct {
	// The template description.
	Description OptString `json:"description"`
	// The template ID.
	ID OptString `json:"id"`
	// The template name.
	Name OptString `json:"name"`
	// The type of template. Values include `user`.
	Type OptString `json:"type"`
}

// GetDescription returns the value of Description.
func (s *AddSettingTemplateCreated) GetDescription() OptString {
	return s.Description
}

// GetID returns the value of ID.
func (s *AddSettingTemplateCreated) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *AddSettingTemplateCreated) GetName() OptString {
	return s.Name
}

// GetType returns the value of Type.
func (s *AddSettingTemplateCreated) GetType() OptString {
	return s.Type
}

// SetDescription sets the value of Description.
func (s *AddSettingTemplateCreated) SetDescription(val OptString) {
	s.Description = val
}

// SetID sets the value of ID.
func (s *AddSettingTemplateCreated) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *AddSettingTemplateCreated) SetName(val OptString) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *AddSettingTemplateCreated) SetType(val OptString) {
	s.Type = val
}

type AddSettingTemplateReq struct {
	// A description of the template.
	Description OptString `json:"description"`
	// The name of the template.
	Name string `json:"name"`
	// The unique identifier of the site. It's required only when multiple sites are enabled. See
	// [Managing multiple sites](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites) for details.
	SiteID OptString `json:"site_id"`
	// The type of template. Values include `user`.
	Type string `json:"type"`
}

// GetDescription returns the value of Description.
func (s *AddSettingTemplateReq) GetDescription() OptString {
	return s.Description
}

// GetName returns the value of Name.
func (s *AddSettingTemplateReq) GetName() string {
	return s.Name
}

// GetSiteID returns the value of SiteID.
func (s *AddSettingTemplateReq) GetSiteID() OptString {
	return s.SiteID
}

// GetType returns the value of Type.
func (s *AddSettingTemplateReq) GetType() string {
	return s.Type
}

// SetDescription sets the value of Description.
func (s *AddSettingTemplateReq) SetDescription(val OptString) {
	s.Description = val
}

// SetName sets the value of Name.
func (s *AddSettingTemplateReq) SetName(val string) {
	s.Name = val
}

// SetSiteID sets the value of SiteID.
func (s *AddSettingTemplateReq) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetType sets the value of Type.
func (s *AddSettingTemplateReq) SetType(val string) {
	s.Type = val
}

type AddSiteOutboundCallerNumbersReq struct {
	// The phone number IDs.
	PhoneNumberIds []string `json:"phone_number_ids"`
}

// GetPhoneNumberIds returns the value of PhoneNumberIds.
func (s *AddSiteOutboundCallerNumbersReq) GetPhoneNumberIds() []string {
	return s.PhoneNumberIds
}

// SetPhoneNumberIds sets the value of PhoneNumberIds.
func (s *AddSiteOutboundCallerNumbersReq) SetPhoneNumberIds(val []string) {
	s.PhoneNumberIds = val
}

type AddSiteOutboundCallingExceptionRuleCreated struct {
	// The IDs of the exception rules.
	ExceptionRuleID OptString `json:"exception_rule_id"`
}

// GetExceptionRuleID returns the value of ExceptionRuleID.
func (s *AddSiteOutboundCallingExceptionRuleCreated) GetExceptionRuleID() OptString {
	return s.ExceptionRuleID
}

// SetExceptionRuleID sets the value of ExceptionRuleID.
func (s *AddSiteOutboundCallingExceptionRuleCreated) SetExceptionRuleID(val OptString) {
	s.ExceptionRuleID = val
}

type AddSiteOutboundCallingExceptionRuleReq struct {
	ExceptionRule OptAddSiteOutboundCallingExceptionRuleReqExceptionRule `json:"exception_rule"`
}

// GetExceptionRule returns the value of ExceptionRule.
func (s *AddSiteOutboundCallingExceptionRuleReq) GetExceptionRule() OptAddSiteOutboundCallingExceptionRuleReqExceptionRule {
	return s.ExceptionRule
}

// SetExceptionRule sets the value of ExceptionRule.
func (s *AddSiteOutboundCallingExceptionRuleReq) SetExceptionRule(val OptAddSiteOutboundCallingExceptionRuleReqExceptionRule) {
	s.ExceptionRule = val
}

type AddSiteOutboundCallingExceptionRuleReqExceptionRule struct {
	// The match type for the exception rule.
	// `phoneNumber`
	// `prefix`.
	MatchType string `json:"match_type"`
	// The exception rule phone number prefix or the phone number without country code.
	PrefixNumber string `json:"prefix_number"`
	// A comment that identifies the exception rule number or the prefix.
	Comment OptString `json:"comment"`
	// Whether the exception rule is active or inactive.
	// `active`: The exception rule is active.
	// `inactive`: The exception rule is inactive.
	Status string `json:"status"`
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	Country string `json:"country"`
}

// GetMatchType returns the value of MatchType.
func (s *AddSiteOutboundCallingExceptionRuleReqExceptionRule) GetMatchType() string {
	return s.MatchType
}

// GetPrefixNumber returns the value of PrefixNumber.
func (s *AddSiteOutboundCallingExceptionRuleReqExceptionRule) GetPrefixNumber() string {
	return s.PrefixNumber
}

// GetComment returns the value of Comment.
func (s *AddSiteOutboundCallingExceptionRuleReqExceptionRule) GetComment() OptString {
	return s.Comment
}

// GetStatus returns the value of Status.
func (s *AddSiteOutboundCallingExceptionRuleReqExceptionRule) GetStatus() string {
	return s.Status
}

// GetCountry returns the value of Country.
func (s *AddSiteOutboundCallingExceptionRuleReqExceptionRule) GetCountry() string {
	return s.Country
}

// SetMatchType sets the value of MatchType.
func (s *AddSiteOutboundCallingExceptionRuleReqExceptionRule) SetMatchType(val string) {
	s.MatchType = val
}

// SetPrefixNumber sets the value of PrefixNumber.
func (s *AddSiteOutboundCallingExceptionRuleReqExceptionRule) SetPrefixNumber(val string) {
	s.PrefixNumber = val
}

// SetComment sets the value of Comment.
func (s *AddSiteOutboundCallingExceptionRuleReqExceptionRule) SetComment(val OptString) {
	s.Comment = val
}

// SetStatus sets the value of Status.
func (s *AddSiteOutboundCallingExceptionRuleReqExceptionRule) SetStatus(val string) {
	s.Status = val
}

// SetCountry sets the value of Country.
func (s *AddSiteOutboundCallingExceptionRuleReqExceptionRule) SetCountry(val string) {
	s.Country = val
}

type AddSiteSettingCreated struct {
	// The settings for holiday hours.
	Holidays []AddSiteSettingCreatedHolidaysItem `json:"holidays"`
}

// GetHolidays returns the value of Holidays.
func (s *AddSiteSettingCreated) GetHolidays() []AddSiteSettingCreatedHolidaysItem {
	return s.Holidays
}

// SetHolidays sets the value of Holidays.
func (s *AddSiteSettingCreated) SetHolidays(val []AddSiteSettingCreatedHolidaysItem) {
	s.Holidays = val
}

type AddSiteSettingCreatedHolidaysItem struct {
	// The holiday ID.
	HolidayID OptString `json:"holiday_id"`
	// The name of the holiday.
	Name OptString `json:"name"`
	// The holiday start date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.
	From OptDateTime `json:"from"`
	// The holiday end date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.
	To OptDateTime `json:"to"`
}

// GetHolidayID returns the value of HolidayID.
func (s *AddSiteSettingCreatedHolidaysItem) GetHolidayID() OptString {
	return s.HolidayID
}

// GetName returns the value of Name.
func (s *AddSiteSettingCreatedHolidaysItem) GetName() OptString {
	return s.Name
}

// GetFrom returns the value of From.
func (s *AddSiteSettingCreatedHolidaysItem) GetFrom() OptDateTime {
	return s.From
}

// GetTo returns the value of To.
func (s *AddSiteSettingCreatedHolidaysItem) GetTo() OptDateTime {
	return s.To
}

// SetHolidayID sets the value of HolidayID.
func (s *AddSiteSettingCreatedHolidaysItem) SetHolidayID(val OptString) {
	s.HolidayID = val
}

// SetName sets the value of Name.
func (s *AddSiteSettingCreatedHolidaysItem) SetName(val OptString) {
	s.Name = val
}

// SetFrom sets the value of From.
func (s *AddSiteSettingCreatedHolidaysItem) SetFrom(val OptDateTime) {
	s.From = val
}

// SetTo sets the value of To.
func (s *AddSiteSettingCreatedHolidaysItem) SetTo(val OptDateTime) {
	s.To = val
}

type AddSiteSettingReq struct {
	// The device type. Enable SRTP AES-256 encryption on the site for the specified device type. Used
	// for `device_security` setting type.
	DeviceType OptString `json:"device_type"`
	// The holiday hours settings.
	Holidays []AddSiteSettingReqHolidaysItem `json:"holidays"`
}

// GetDeviceType returns the value of DeviceType.
func (s *AddSiteSettingReq) GetDeviceType() OptString {
	return s.DeviceType
}

// GetHolidays returns the value of Holidays.
func (s *AddSiteSettingReq) GetHolidays() []AddSiteSettingReqHolidaysItem {
	return s.Holidays
}

// SetDeviceType sets the value of DeviceType.
func (s *AddSiteSettingReq) SetDeviceType(val OptString) {
	s.DeviceType = val
}

// SetHolidays sets the value of Holidays.
func (s *AddSiteSettingReq) SetHolidays(val []AddSiteSettingReqHolidaysItem) {
	s.Holidays = val
}

type AddSiteSettingReqHolidaysItem struct {
	// The name of the holiday.
	Name OptString `json:"name"`
	// The holiday start date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.
	From OptDateTime `json:"from"`
	// The holiday end date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.
	To OptDateTime `json:"to"`
}

// GetName returns the value of Name.
func (s *AddSiteSettingReqHolidaysItem) GetName() OptString {
	return s.Name
}

// GetFrom returns the value of From.
func (s *AddSiteSettingReqHolidaysItem) GetFrom() OptDateTime {
	return s.From
}

// GetTo returns the value of To.
func (s *AddSiteSettingReqHolidaysItem) GetTo() OptDateTime {
	return s.To
}

// SetName sets the value of Name.
func (s *AddSiteSettingReqHolidaysItem) SetName(val OptString) {
	s.Name = val
}

// SetFrom sets the value of From.
func (s *AddSiteSettingReqHolidaysItem) SetFrom(val OptDateTime) {
	s.From = val
}

// SetTo sets the value of To.
func (s *AddSiteSettingReqHolidaysItem) SetTo(val OptDateTime) {
	s.To = val
}

type AddUserOutboundCallerNumbersReq struct {
	// The phone number IDs.
	PhoneNumberIds []string `json:"phone_number_ids"`
}

// GetPhoneNumberIds returns the value of PhoneNumberIds.
func (s *AddUserOutboundCallerNumbersReq) GetPhoneNumberIds() []string {
	return s.PhoneNumberIds
}

// SetPhoneNumberIds sets the value of PhoneNumberIds.
func (s *AddUserOutboundCallerNumbersReq) SetPhoneNumberIds(val []string) {
	s.PhoneNumberIds = val
}

type AddUserOutboundCallingExceptionRuleCreated struct {
	// The IDs of the exception rules.
	ExceptionRuleID OptString `json:"exception_rule_id"`
}

// GetExceptionRuleID returns the value of ExceptionRuleID.
func (s *AddUserOutboundCallingExceptionRuleCreated) GetExceptionRuleID() OptString {
	return s.ExceptionRuleID
}

// SetExceptionRuleID sets the value of ExceptionRuleID.
func (s *AddUserOutboundCallingExceptionRuleCreated) SetExceptionRuleID(val OptString) {
	s.ExceptionRuleID = val
}

type AddUserOutboundCallingExceptionRuleReq struct {
	ExceptionRule OptAddUserOutboundCallingExceptionRuleReqExceptionRule `json:"exception_rule"`
}

// GetExceptionRule returns the value of ExceptionRule.
func (s *AddUserOutboundCallingExceptionRuleReq) GetExceptionRule() OptAddUserOutboundCallingExceptionRuleReqExceptionRule {
	return s.ExceptionRule
}

// SetExceptionRule sets the value of ExceptionRule.
func (s *AddUserOutboundCallingExceptionRuleReq) SetExceptionRule(val OptAddUserOutboundCallingExceptionRuleReqExceptionRule) {
	s.ExceptionRule = val
}

type AddUserOutboundCallingExceptionRuleReqExceptionRule struct {
	// The match type for the exception rule.
	// `phoneNumber`
	// `prefix`.
	MatchType string `json:"match_type"`
	// The exception rule phone number prefix or the phone number without country code.
	PrefixNumber string `json:"prefix_number"`
	// A comment that identifies the exception rule number or the prefix.
	Comment OptString `json:"comment"`
	// Whether the exception rule is active or inactive.
	// `active`: The exception rule is active.
	// `inactive`: The exception rule is inactive.
	Status string `json:"status"`
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	Country string `json:"country"`
}

// GetMatchType returns the value of MatchType.
func (s *AddUserOutboundCallingExceptionRuleReqExceptionRule) GetMatchType() string {
	return s.MatchType
}

// GetPrefixNumber returns the value of PrefixNumber.
func (s *AddUserOutboundCallingExceptionRuleReqExceptionRule) GetPrefixNumber() string {
	return s.PrefixNumber
}

// GetComment returns the value of Comment.
func (s *AddUserOutboundCallingExceptionRuleReqExceptionRule) GetComment() OptString {
	return s.Comment
}

// GetStatus returns the value of Status.
func (s *AddUserOutboundCallingExceptionRuleReqExceptionRule) GetStatus() string {
	return s.Status
}

// GetCountry returns the value of Country.
func (s *AddUserOutboundCallingExceptionRuleReqExceptionRule) GetCountry() string {
	return s.Country
}

// SetMatchType sets the value of MatchType.
func (s *AddUserOutboundCallingExceptionRuleReqExceptionRule) SetMatchType(val string) {
	s.MatchType = val
}

// SetPrefixNumber sets the value of PrefixNumber.
func (s *AddUserOutboundCallingExceptionRuleReqExceptionRule) SetPrefixNumber(val string) {
	s.PrefixNumber = val
}

// SetComment sets the value of Comment.
func (s *AddUserOutboundCallingExceptionRuleReqExceptionRule) SetComment(val OptString) {
	s.Comment = val
}

// SetStatus sets the value of Status.
func (s *AddUserOutboundCallingExceptionRuleReqExceptionRule) SetStatus(val string) {
	s.Status = val
}

// SetCountry sets the value of Country.
func (s *AddUserOutboundCallingExceptionRuleReqExceptionRule) SetCountry(val string) {
	s.Country = val
}

type AddUserSettingCreated struct {
	// The user delegation.
	Delegation OptAddUserSettingCreatedDelegation `json:"delegation"`
	// This field adds a voicemail setting. &lt;b&gt;Deprecated:&lt;/b&gt; we will completely deprecate
	// this property in a future release. Use property `voicemail_access_members` instead.
	VoiceMail OptAddUserSettingCreatedVoiceMail `json:"voice_mail"`
	// The shared voicemail access member list.
	VoicemailAccessMembers []AddUserSettingCreatedVoicemailAccessMembersItem `json:"voicemail_access_members"`
	// The shared automatic call recording access member list.
	AutoCallRecordingAccessMembers []AddUserSettingCreatedAutoCallRecordingAccessMembersItem `json:"auto_call_recording_access_members"`
	// The shared ad hoc call recording access member list.
	AdHocCallRecordingAccessMembers []AddUserSettingCreatedAdHocCallRecordingAccessMembersItem `json:"ad_hoc_call_recording_access_members"`
}

// GetDelegation returns the value of Delegation.
func (s *AddUserSettingCreated) GetDelegation() OptAddUserSettingCreatedDelegation {
	return s.Delegation
}

// GetVoiceMail returns the value of VoiceMail.
func (s *AddUserSettingCreated) GetVoiceMail() OptAddUserSettingCreatedVoiceMail {
	return s.VoiceMail
}

// GetVoicemailAccessMembers returns the value of VoicemailAccessMembers.
func (s *AddUserSettingCreated) GetVoicemailAccessMembers() []AddUserSettingCreatedVoicemailAccessMembersItem {
	return s.VoicemailAccessMembers
}

// GetAutoCallRecordingAccessMembers returns the value of AutoCallRecordingAccessMembers.
func (s *AddUserSettingCreated) GetAutoCallRecordingAccessMembers() []AddUserSettingCreatedAutoCallRecordingAccessMembersItem {
	return s.AutoCallRecordingAccessMembers
}

// GetAdHocCallRecordingAccessMembers returns the value of AdHocCallRecordingAccessMembers.
func (s *AddUserSettingCreated) GetAdHocCallRecordingAccessMembers() []AddUserSettingCreatedAdHocCallRecordingAccessMembersItem {
	return s.AdHocCallRecordingAccessMembers
}

// SetDelegation sets the value of Delegation.
func (s *AddUserSettingCreated) SetDelegation(val OptAddUserSettingCreatedDelegation) {
	s.Delegation = val
}

// SetVoiceMail sets the value of VoiceMail.
func (s *AddUserSettingCreated) SetVoiceMail(val OptAddUserSettingCreatedVoiceMail) {
	s.VoiceMail = val
}

// SetVoicemailAccessMembers sets the value of VoicemailAccessMembers.
func (s *AddUserSettingCreated) SetVoicemailAccessMembers(val []AddUserSettingCreatedVoicemailAccessMembersItem) {
	s.VoicemailAccessMembers = val
}

// SetAutoCallRecordingAccessMembers sets the value of AutoCallRecordingAccessMembers.
func (s *AddUserSettingCreated) SetAutoCallRecordingAccessMembers(val []AddUserSettingCreatedAutoCallRecordingAccessMembersItem) {
	s.AutoCallRecordingAccessMembers = val
}

// SetAdHocCallRecordingAccessMembers sets the value of AdHocCallRecordingAccessMembers.
func (s *AddUserSettingCreated) SetAdHocCallRecordingAccessMembers(val []AddUserSettingCreatedAdHocCallRecordingAccessMembersItem) {
	s.AdHocCallRecordingAccessMembers = val
}

// Merged schema.
type AddUserSettingCreatedAdHocCallRecordingAccessMembersItem struct {
	// The Zoom user ID to share the access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// This field specifies whether the user has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// This field specifies whether the user has download permissions. The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
	// The unique identifier of the shared sub-setting that the user can access.
	SharedID OptString `json:"shared_id"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *AddUserSettingCreatedAdHocCallRecordingAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDelete returns the value of AllowDelete.
func (s *AddUserSettingCreatedAdHocCallRecordingAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *AddUserSettingCreatedAdHocCallRecordingAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetSharedID returns the value of SharedID.
func (s *AddUserSettingCreatedAdHocCallRecordingAccessMembersItem) GetSharedID() OptString {
	return s.SharedID
}

// SetAccessUserID sets the value of AccessUserID.
func (s *AddUserSettingCreatedAdHocCallRecordingAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *AddUserSettingCreatedAdHocCallRecordingAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *AddUserSettingCreatedAdHocCallRecordingAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetSharedID sets the value of SharedID.
func (s *AddUserSettingCreatedAdHocCallRecordingAccessMembersItem) SetSharedID(val OptString) {
	s.SharedID = val
}

// Merged schema.
type AddUserSettingCreatedAutoCallRecordingAccessMembersItem struct {
	// The Zoom user ID to share the access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// This field specifies whether the user has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// This field specifies whether the user has download permissions. The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
	// The unique identifier of the shared sub-setting that the user can access.
	SharedID OptString `json:"shared_id"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *AddUserSettingCreatedAutoCallRecordingAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDelete returns the value of AllowDelete.
func (s *AddUserSettingCreatedAutoCallRecordingAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *AddUserSettingCreatedAutoCallRecordingAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetSharedID returns the value of SharedID.
func (s *AddUserSettingCreatedAutoCallRecordingAccessMembersItem) GetSharedID() OptString {
	return s.SharedID
}

// SetAccessUserID sets the value of AccessUserID.
func (s *AddUserSettingCreatedAutoCallRecordingAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *AddUserSettingCreatedAutoCallRecordingAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *AddUserSettingCreatedAutoCallRecordingAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetSharedID sets the value of SharedID.
func (s *AddUserSettingCreatedAutoCallRecordingAccessMembersItem) SetSharedID(val OptString) {
	s.SharedID = val
}

// The user delegation.
type AddUserSettingCreatedDelegation struct {
	// The delegation assistants.
	Assistants []AddUserSettingCreatedDelegationAssistantsItem `json:"assistants"`
	// Whether to allow members to prevent others from picking up a held call, and listening, whispering,
	// barging, or taking over a call if it's configured.
	Privacy OptBool `json:"privacy"`
	// The delegation privileges. 1-Place Calls, 2-Answer Calls, 3- Pick Up Hold Calls.
	Privileges []int `json:"privileges"`
}

// GetAssistants returns the value of Assistants.
func (s *AddUserSettingCreatedDelegation) GetAssistants() []AddUserSettingCreatedDelegationAssistantsItem {
	return s.Assistants
}

// GetPrivacy returns the value of Privacy.
func (s *AddUserSettingCreatedDelegation) GetPrivacy() OptBool {
	return s.Privacy
}

// GetPrivileges returns the value of Privileges.
func (s *AddUserSettingCreatedDelegation) GetPrivileges() []int {
	return s.Privileges
}

// SetAssistants sets the value of Assistants.
func (s *AddUserSettingCreatedDelegation) SetAssistants(val []AddUserSettingCreatedDelegationAssistantsItem) {
	s.Assistants = val
}

// SetPrivacy sets the value of Privacy.
func (s *AddUserSettingCreatedDelegation) SetPrivacy(val OptBool) {
	s.Privacy = val
}

// SetPrivileges sets the value of Privileges.
func (s *AddUserSettingCreatedDelegation) SetPrivileges(val []int) {
	s.Privileges = val
}

type AddUserSettingCreatedDelegationAssistantsItem struct {
	// The display name.
	DisplayName OptString `json:"display_name"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The extension type: `user` or `commonArea`.
	ExtensionType OptString `json:"extension_type"`
	// The user or common area ID.
	ID OptString `json:"id"`
}

// GetDisplayName returns the value of DisplayName.
func (s *AddUserSettingCreatedDelegationAssistantsItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *AddUserSettingCreatedDelegationAssistantsItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *AddUserSettingCreatedDelegationAssistantsItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *AddUserSettingCreatedDelegationAssistantsItem) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetID returns the value of ID.
func (s *AddUserSettingCreatedDelegationAssistantsItem) GetID() OptString {
	return s.ID
}

// SetDisplayName sets the value of DisplayName.
func (s *AddUserSettingCreatedDelegationAssistantsItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *AddUserSettingCreatedDelegationAssistantsItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *AddUserSettingCreatedDelegationAssistantsItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *AddUserSettingCreatedDelegationAssistantsItem) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetID sets the value of ID.
func (s *AddUserSettingCreatedDelegationAssistantsItem) SetID(val OptString) {
	s.ID = val
}

// This field adds a voicemail setting. &lt;b&gt;Deprecated:&lt;/b&gt; we will completely deprecate
// this property in a future release. Use property `voicemail_access_members` instead.
type AddUserSettingCreatedVoiceMail struct {
	// The user that is allowed to access voicemail messages for the extension.
	AccessUserID OptString `json:"access_user_id"`
	// Whether the user has delete permissions. The default is **false**.
	Delete OptBool `json:"delete"`
	// Whether the user has download permissions. The default is **false**.
	Download OptBool `json:"download"`
	// The unique identifier of the voicemail that the user can access.
	SharedID OptString `json:"shared_id"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *AddUserSettingCreatedVoiceMail) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetDelete returns the value of Delete.
func (s *AddUserSettingCreatedVoiceMail) GetDelete() OptBool {
	return s.Delete
}

// GetDownload returns the value of Download.
func (s *AddUserSettingCreatedVoiceMail) GetDownload() OptBool {
	return s.Download
}

// GetSharedID returns the value of SharedID.
func (s *AddUserSettingCreatedVoiceMail) GetSharedID() OptString {
	return s.SharedID
}

// SetAccessUserID sets the value of AccessUserID.
func (s *AddUserSettingCreatedVoiceMail) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetDelete sets the value of Delete.
func (s *AddUserSettingCreatedVoiceMail) SetDelete(val OptBool) {
	s.Delete = val
}

// SetDownload sets the value of Download.
func (s *AddUserSettingCreatedVoiceMail) SetDownload(val OptBool) {
	s.Download = val
}

// SetSharedID sets the value of SharedID.
func (s *AddUserSettingCreatedVoiceMail) SetSharedID(val OptString) {
	s.SharedID = val
}

// Merged schema.
type AddUserSettingCreatedVoicemailAccessMembersItem struct {
	// The Zoom user ID to share the voicemail access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// Whether the user has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// Whether the user has download permissions. The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
	// Whether the user has permission to share. The default is **false**.
	AllowSharing OptBool `json:"allow_sharing"`
	// The unique identifier of the shared sub-setting that the user can access.
	SharedID OptString `json:"shared_id"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *AddUserSettingCreatedVoicemailAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDelete returns the value of AllowDelete.
func (s *AddUserSettingCreatedVoicemailAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *AddUserSettingCreatedVoicemailAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowSharing returns the value of AllowSharing.
func (s *AddUserSettingCreatedVoicemailAccessMembersItem) GetAllowSharing() OptBool {
	return s.AllowSharing
}

// GetSharedID returns the value of SharedID.
func (s *AddUserSettingCreatedVoicemailAccessMembersItem) GetSharedID() OptString {
	return s.SharedID
}

// SetAccessUserID sets the value of AccessUserID.
func (s *AddUserSettingCreatedVoicemailAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *AddUserSettingCreatedVoicemailAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *AddUserSettingCreatedVoicemailAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowSharing sets the value of AllowSharing.
func (s *AddUserSettingCreatedVoicemailAccessMembersItem) SetAllowSharing(val OptBool) {
	s.AllowSharing = val
}

// SetSharedID sets the value of SharedID.
func (s *AddUserSettingCreatedVoicemailAccessMembersItem) SetSharedID(val OptString) {
	s.SharedID = val
}

type AddUserSettingReq struct {
	// The extension ID of the delegation assistant: `user` or `common area`.
	DelegationAssistantExtensionID OptString `json:"delegation_assistant_extension_id"`
	// The device ID.
	DeviceID OptString `json:"device_id"`
	// This field updates the voicemail setting. &lt;b&gt;Deprecated:&lt;/b&gt; we will completely
	// deprecate this property in a future release. Use property `voicemail_access_members` instead.
	VoiceMail OptAddUserSettingReqVoiceMail `json:"voice_mail"`
	// The shared voicemail access member list.
	VoicemailAccessMembers []AddUserSettingReqVoicemailAccessMembersItem `json:"voicemail_access_members"`
	// The shared automatic call recording access member list.
	AutoCallRecordingAccessMembers []AddUserSettingReqAutoCallRecordingAccessMembersItem `json:"auto_call_recording_access_members"`
	// The shared ad hoc call recording access member list.
	AdHocCallRecordingAccessMembers []AddUserSettingReqAdHocCallRecordingAccessMembersItem `json:"ad_hoc_call_recording_access_members"`
}

// GetDelegationAssistantExtensionID returns the value of DelegationAssistantExtensionID.
func (s *AddUserSettingReq) GetDelegationAssistantExtensionID() OptString {
	return s.DelegationAssistantExtensionID
}

// GetDeviceID returns the value of DeviceID.
func (s *AddUserSettingReq) GetDeviceID() OptString {
	return s.DeviceID
}

// GetVoiceMail returns the value of VoiceMail.
func (s *AddUserSettingReq) GetVoiceMail() OptAddUserSettingReqVoiceMail {
	return s.VoiceMail
}

// GetVoicemailAccessMembers returns the value of VoicemailAccessMembers.
func (s *AddUserSettingReq) GetVoicemailAccessMembers() []AddUserSettingReqVoicemailAccessMembersItem {
	return s.VoicemailAccessMembers
}

// GetAutoCallRecordingAccessMembers returns the value of AutoCallRecordingAccessMembers.
func (s *AddUserSettingReq) GetAutoCallRecordingAccessMembers() []AddUserSettingReqAutoCallRecordingAccessMembersItem {
	return s.AutoCallRecordingAccessMembers
}

// GetAdHocCallRecordingAccessMembers returns the value of AdHocCallRecordingAccessMembers.
func (s *AddUserSettingReq) GetAdHocCallRecordingAccessMembers() []AddUserSettingReqAdHocCallRecordingAccessMembersItem {
	return s.AdHocCallRecordingAccessMembers
}

// SetDelegationAssistantExtensionID sets the value of DelegationAssistantExtensionID.
func (s *AddUserSettingReq) SetDelegationAssistantExtensionID(val OptString) {
	s.DelegationAssistantExtensionID = val
}

// SetDeviceID sets the value of DeviceID.
func (s *AddUserSettingReq) SetDeviceID(val OptString) {
	s.DeviceID = val
}

// SetVoiceMail sets the value of VoiceMail.
func (s *AddUserSettingReq) SetVoiceMail(val OptAddUserSettingReqVoiceMail) {
	s.VoiceMail = val
}

// SetVoicemailAccessMembers sets the value of VoicemailAccessMembers.
func (s *AddUserSettingReq) SetVoicemailAccessMembers(val []AddUserSettingReqVoicemailAccessMembersItem) {
	s.VoicemailAccessMembers = val
}

// SetAutoCallRecordingAccessMembers sets the value of AutoCallRecordingAccessMembers.
func (s *AddUserSettingReq) SetAutoCallRecordingAccessMembers(val []AddUserSettingReqAutoCallRecordingAccessMembersItem) {
	s.AutoCallRecordingAccessMembers = val
}

// SetAdHocCallRecordingAccessMembers sets the value of AdHocCallRecordingAccessMembers.
func (s *AddUserSettingReq) SetAdHocCallRecordingAccessMembers(val []AddUserSettingReqAdHocCallRecordingAccessMembersItem) {
	s.AdHocCallRecordingAccessMembers = val
}

type AddUserSettingReqAdHocCallRecordingAccessMembersItem struct {
	// The Zoom user ID to share the access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// This field specifies whether the user has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// This field specifies whether the user has download permissions. The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *AddUserSettingReqAdHocCallRecordingAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDelete returns the value of AllowDelete.
func (s *AddUserSettingReqAdHocCallRecordingAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *AddUserSettingReqAdHocCallRecordingAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// SetAccessUserID sets the value of AccessUserID.
func (s *AddUserSettingReqAdHocCallRecordingAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *AddUserSettingReqAdHocCallRecordingAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *AddUserSettingReqAdHocCallRecordingAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

type AddUserSettingReqAutoCallRecordingAccessMembersItem struct {
	// The Zoom user ID to share the access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// This field specifies whether the user has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// This field specifies whether the user has download permissions. The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *AddUserSettingReqAutoCallRecordingAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDelete returns the value of AllowDelete.
func (s *AddUserSettingReqAutoCallRecordingAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *AddUserSettingReqAutoCallRecordingAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// SetAccessUserID sets the value of AccessUserID.
func (s *AddUserSettingReqAutoCallRecordingAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *AddUserSettingReqAutoCallRecordingAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *AddUserSettingReqAutoCallRecordingAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// This field updates the voicemail setting. &lt;b&gt;Deprecated:&lt;/b&gt; we will completely
// deprecate this property in a future release. Use property `voicemail_access_members` instead.
type AddUserSettingReqVoiceMail struct {
	// The Zoom user ID to share the voicemail access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// Whether the user has delete permissions. The default is **false**.
	Delete OptBool `json:"delete"`
	// Whether the user has download permissions. The default is **false**.
	Download OptBool `json:"download"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *AddUserSettingReqVoiceMail) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetDelete returns the value of Delete.
func (s *AddUserSettingReqVoiceMail) GetDelete() OptBool {
	return s.Delete
}

// GetDownload returns the value of Download.
func (s *AddUserSettingReqVoiceMail) GetDownload() OptBool {
	return s.Download
}

// SetAccessUserID sets the value of AccessUserID.
func (s *AddUserSettingReqVoiceMail) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetDelete sets the value of Delete.
func (s *AddUserSettingReqVoiceMail) SetDelete(val OptBool) {
	s.Delete = val
}

// SetDownload sets the value of Download.
func (s *AddUserSettingReqVoiceMail) SetDownload(val OptBool) {
	s.Download = val
}

type AddUserSettingReqVoicemailAccessMembersItem struct {
	// The Zoom user ID to share the voicemail access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// Whether the user has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// Whether the user has download permissions. The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
	// Whether the user has permission to share. The default is **false**.
	AllowSharing OptBool `json:"allow_sharing"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *AddUserSettingReqVoicemailAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDelete returns the value of AllowDelete.
func (s *AddUserSettingReqVoicemailAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *AddUserSettingReqVoicemailAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowSharing returns the value of AllowSharing.
func (s *AddUserSettingReqVoicemailAccessMembersItem) GetAllowSharing() OptBool {
	return s.AllowSharing
}

// SetAccessUserID sets the value of AccessUserID.
func (s *AddUserSettingReqVoicemailAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *AddUserSettingReqVoicemailAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *AddUserSettingReqVoicemailAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowSharing sets the value of AllowSharing.
func (s *AddUserSettingReqVoicemailAccessMembersItem) SetAllowSharing(val OptBool) {
	s.AllowSharing = val
}

// AddUsersToDirectoryBySiteCreated is response for AddUsersToDirectoryBySite operation.
type AddUsersToDirectoryBySiteCreated struct{}

type AddUsersToDirectoryBySiteReq struct {
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites) to which users to add  belongs.
	SiteID OptString `json:"site_id"`
	// The IDs of user's extension. If the value is not specified, only add value of `site_id` to
	// `included sites`.
	ExtensionIds []string `json:"extension_ids"`
}

// GetSiteID returns the value of SiteID.
func (s *AddUsersToDirectoryBySiteReq) GetSiteID() OptString {
	return s.SiteID
}

// GetExtensionIds returns the value of ExtensionIds.
func (s *AddUsersToDirectoryBySiteReq) GetExtensionIds() []string {
	return s.ExtensionIds
}

// SetSiteID sets the value of SiteID.
func (s *AddUsersToDirectoryBySiteReq) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetExtensionIds sets the value of ExtensionIds.
func (s *AddUsersToDirectoryBySiteReq) SetExtensionIds(val []string) {
	s.ExtensionIds = val
}

// AddUsersToDirectoryCreated is response for AddUsersToDirectory operation.
type AddUsersToDirectoryCreated struct{}

type AddUsersToDirectoryReq struct {
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites).
	SiteID string `json:"site_id"`
	// The IDs of user's extension. If the value is not specified, only add value of `site_id` to
	// `included sites`.
	ExtensionIds []string `json:"extension_ids"`
}

// GetSiteID returns the value of SiteID.
func (s *AddUsersToDirectoryReq) GetSiteID() string {
	return s.SiteID
}

// GetExtensionIds returns the value of ExtensionIds.
func (s *AddUsersToDirectoryReq) GetExtensionIds() []string {
	return s.ExtensionIds
}

// SetSiteID sets the value of SiteID.
func (s *AddUsersToDirectoryReq) SetSiteID(val string) {
	s.SiteID = val
}

// SetExtensionIds sets the value of ExtensionIds.
func (s *AddUsersToDirectoryReq) SetExtensionIds(val []string) {
	s.ExtensionIds = val
}

type AddZoomRoomReq struct {
	// The Zoom Room ID.
	ID OptString `json:"id"`
	// The ID of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
	SiteID       OptString                        `json:"site_id"`
	CallingPlans []AddZoomRoomReqCallingPlansItem `json:"calling_plans"`
}

// GetID returns the value of ID.
func (s *AddZoomRoomReq) GetID() OptString {
	return s.ID
}

// GetSiteID returns the value of SiteID.
func (s *AddZoomRoomReq) GetSiteID() OptString {
	return s.SiteID
}

// GetCallingPlans returns the value of CallingPlans.
func (s *AddZoomRoomReq) GetCallingPlans() []AddZoomRoomReqCallingPlansItem {
	return s.CallingPlans
}

// SetID sets the value of ID.
func (s *AddZoomRoomReq) SetID(val OptString) {
	s.ID = val
}

// SetSiteID sets the value of SiteID.
func (s *AddZoomRoomReq) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetCallingPlans sets the value of CallingPlans.
func (s *AddZoomRoomReq) SetCallingPlans(val []AddZoomRoomReqCallingPlansItem) {
	s.CallingPlans = val
}

type AddZoomRoomReqCallingPlansItem struct {
	// The [Type](https://marketplace.zoom.
	// us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan.
	Type OptInt `json:"type"`
}

// GetType returns the value of Type.
func (s *AddZoomRoomReqCallingPlansItem) GetType() OptInt {
	return s.Type
}

// SetType sets the value of Type.
func (s *AddZoomRoomReqCallingPlansItem) SetType(val OptInt) {
	s.Type = val
}

type AssignCallingPlanReq struct {
	CallingPlans []AssignCallingPlanReqCallingPlansItem `json:"calling_plans"`
}

// GetCallingPlans returns the value of CallingPlans.
func (s *AssignCallingPlanReq) GetCallingPlans() []AssignCallingPlanReqCallingPlansItem {
	return s.CallingPlans
}

// SetCallingPlans sets the value of CallingPlans.
func (s *AssignCallingPlanReq) SetCallingPlans(val []AssignCallingPlanReqCallingPlansItem) {
	s.CallingPlans = val
}

type AssignCallingPlanReqCallingPlansItem struct {
	// The [type](https://marketplace.zoom.
	// us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan.
	Type OptInt `json:"type"`
	// The billing account ID. If the user is located in India, the field is required.
	BillingAccountID OptString `json:"billing_account_id"`
}

// GetType returns the value of Type.
func (s *AssignCallingPlanReqCallingPlansItem) GetType() OptInt {
	return s.Type
}

// GetBillingAccountID returns the value of BillingAccountID.
func (s *AssignCallingPlanReqCallingPlansItem) GetBillingAccountID() OptString {
	return s.BillingAccountID
}

// SetType sets the value of Type.
func (s *AssignCallingPlanReqCallingPlansItem) SetType(val OptInt) {
	s.Type = val
}

// SetBillingAccountID sets the value of BillingAccountID.
func (s *AssignCallingPlanReqCallingPlansItem) SetBillingAccountID(val OptString) {
	s.BillingAccountID = val
}

type AssignCallingPlanToRoomReq struct {
	CallingPlans []AssignCallingPlanToRoomReqCallingPlansItem `json:"calling_plans"`
}

// GetCallingPlans returns the value of CallingPlans.
func (s *AssignCallingPlanToRoomReq) GetCallingPlans() []AssignCallingPlanToRoomReqCallingPlansItem {
	return s.CallingPlans
}

// SetCallingPlans sets the value of CallingPlans.
func (s *AssignCallingPlanToRoomReq) SetCallingPlans(val []AssignCallingPlanToRoomReqCallingPlansItem) {
	s.CallingPlans = val
}

type AssignCallingPlanToRoomReqCallingPlansItem struct {
	// [Type](https://marketplace.zoom.
	// us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan.
	Type OptInt `json:"type"`
	// Billing account ID. If the zoom room is located in India, the field is required.
	BillingAccountID OptString `json:"billing_account_id"`
}

// GetType returns the value of Type.
func (s *AssignCallingPlanToRoomReqCallingPlansItem) GetType() OptInt {
	return s.Type
}

// GetBillingAccountID returns the value of BillingAccountID.
func (s *AssignCallingPlanToRoomReqCallingPlansItem) GetBillingAccountID() OptString {
	return s.BillingAccountID
}

// SetType sets the value of Type.
func (s *AssignCallingPlanToRoomReqCallingPlansItem) SetType(val OptInt) {
	s.Type = val
}

// SetBillingAccountID sets the value of BillingAccountID.
func (s *AssignCallingPlanToRoomReqCallingPlansItem) SetBillingAccountID(val OptString) {
	s.BillingAccountID = val
}

type AssignCallingPlansToCommonAreaCreated struct {
	CallingPlans []AssignCallingPlansToCommonAreaCreatedCallingPlansItem `json:"calling_plans"`
}

// GetCallingPlans returns the value of CallingPlans.
func (s *AssignCallingPlansToCommonAreaCreated) GetCallingPlans() []AssignCallingPlansToCommonAreaCreatedCallingPlansItem {
	return s.CallingPlans
}

// SetCallingPlans sets the value of CallingPlans.
func (s *AssignCallingPlansToCommonAreaCreated) SetCallingPlans(val []AssignCallingPlansToCommonAreaCreatedCallingPlansItem) {
	s.CallingPlans = val
}

type AssignCallingPlansToCommonAreaCreatedCallingPlansItem struct {
	// Calling plan name.
	Name OptString `json:"name"`
	// The Zoom Phone [calling plan number](https://marketplace.zoom.
	// us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).
	Type OptInt `json:"type"`
	// The billing account ID. It displays when the common area is in India.
	BillingAccountID OptString `json:"billing_account_id"`
	// The billing account name. It displays when the common area is in India.
	BillingAccountName OptString `json:"billing_account_name"`
}

// GetName returns the value of Name.
func (s *AssignCallingPlansToCommonAreaCreatedCallingPlansItem) GetName() OptString {
	return s.Name
}

// GetType returns the value of Type.
func (s *AssignCallingPlansToCommonAreaCreatedCallingPlansItem) GetType() OptInt {
	return s.Type
}

// GetBillingAccountID returns the value of BillingAccountID.
func (s *AssignCallingPlansToCommonAreaCreatedCallingPlansItem) GetBillingAccountID() OptString {
	return s.BillingAccountID
}

// GetBillingAccountName returns the value of BillingAccountName.
func (s *AssignCallingPlansToCommonAreaCreatedCallingPlansItem) GetBillingAccountName() OptString {
	return s.BillingAccountName
}

// SetName sets the value of Name.
func (s *AssignCallingPlansToCommonAreaCreatedCallingPlansItem) SetName(val OptString) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *AssignCallingPlansToCommonAreaCreatedCallingPlansItem) SetType(val OptInt) {
	s.Type = val
}

// SetBillingAccountID sets the value of BillingAccountID.
func (s *AssignCallingPlansToCommonAreaCreatedCallingPlansItem) SetBillingAccountID(val OptString) {
	s.BillingAccountID = val
}

// SetBillingAccountName sets the value of BillingAccountName.
func (s *AssignCallingPlansToCommonAreaCreatedCallingPlansItem) SetBillingAccountName(val OptString) {
	s.BillingAccountName = val
}

type AssignCallingPlansToCommonAreaReq struct {
	CallingPlans []AssignCallingPlansToCommonAreaReqCallingPlansItem `json:"calling_plans"`
}

// GetCallingPlans returns the value of CallingPlans.
func (s *AssignCallingPlansToCommonAreaReq) GetCallingPlans() []AssignCallingPlansToCommonAreaReqCallingPlansItem {
	return s.CallingPlans
}

// SetCallingPlans sets the value of CallingPlans.
func (s *AssignCallingPlansToCommonAreaReq) SetCallingPlans(val []AssignCallingPlansToCommonAreaReqCallingPlansItem) {
	s.CallingPlans = val
}

type AssignCallingPlansToCommonAreaReqCallingPlansItem struct {
	// Zoom Phone [calling plan number](https://marketplace.zoom.
	// us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).
	Type int `json:"type"`
	// Billing account ID. If the user is in India, the field is required.
	BillingAccountID OptString `json:"billing_account_id"`
}

// GetType returns the value of Type.
func (s *AssignCallingPlansToCommonAreaReqCallingPlansItem) GetType() int {
	return s.Type
}

// GetBillingAccountID returns the value of BillingAccountID.
func (s *AssignCallingPlansToCommonAreaReqCallingPlansItem) GetBillingAccountID() OptString {
	return s.BillingAccountID
}

// SetType sets the value of Type.
func (s *AssignCallingPlansToCommonAreaReqCallingPlansItem) SetType(val int) {
	s.Type = val
}

// SetBillingAccountID sets the value of BillingAccountID.
func (s *AssignCallingPlansToCommonAreaReqCallingPlansItem) SetBillingAccountID(val OptString) {
	s.BillingAccountID = val
}

type AssignCampaignPhoneNumbersCreated struct {
	// Assigned phone numbers.
	PhoneNumbers []AssignCampaignPhoneNumbersCreatedPhoneNumbersItem `json:"phone_numbers"`
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *AssignCampaignPhoneNumbersCreated) GetPhoneNumbers() []AssignCampaignPhoneNumbersCreatedPhoneNumbersItem {
	return s.PhoneNumbers
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *AssignCampaignPhoneNumbersCreated) SetPhoneNumbers(val []AssignCampaignPhoneNumbersCreatedPhoneNumbersItem) {
	s.PhoneNumbers = val
}

type AssignCampaignPhoneNumbersCreatedPhoneNumbersItem struct {
	// The phone number ID.
	ID OptString `json:"id"`
	// The phone number (in E164 format) that is assigned to the SMS campaign.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *AssignCampaignPhoneNumbersCreatedPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *AssignCampaignPhoneNumbersCreatedPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *AssignCampaignPhoneNumbersCreatedPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *AssignCampaignPhoneNumbersCreatedPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

type AssignCampaignPhoneNumbersReq struct {
	PhoneNumbers []AssignCampaignPhoneNumbersReqPhoneNumbersItem `json:"phone_numbers"`
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *AssignCampaignPhoneNumbersReq) GetPhoneNumbers() []AssignCampaignPhoneNumbersReqPhoneNumbersItem {
	return s.PhoneNumbers
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *AssignCampaignPhoneNumbersReq) SetPhoneNumbers(val []AssignCampaignPhoneNumbersReqPhoneNumbersItem) {
	s.PhoneNumbers = val
}

type AssignCampaignPhoneNumbersReqPhoneNumbersItem struct {
	// The phone number ID.
	ID OptString `json:"id"`
	// The phone number in E164 format.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *AssignCampaignPhoneNumbersReqPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *AssignCampaignPhoneNumbersReqPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *AssignCampaignPhoneNumbersReqPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *AssignCampaignPhoneNumbersReqPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

type AssignPhoneNumberCreated struct {
	// Assigned phone number.
	PhoneNumbers []AssignPhoneNumberCreatedPhoneNumbersItem `json:"phone_numbers"`
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *AssignPhoneNumberCreated) GetPhoneNumbers() []AssignPhoneNumberCreatedPhoneNumbersItem {
	return s.PhoneNumbers
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *AssignPhoneNumberCreated) SetPhoneNumbers(val []AssignPhoneNumberCreatedPhoneNumbersItem) {
	s.PhoneNumbers = val
}

type AssignPhoneNumberCreatedPhoneNumbersItem struct {
	// ID of the phone number.
	ID OptString `json:"id"`
	// The phone number that is assigned to the user.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *AssignPhoneNumberCreatedPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *AssignPhoneNumberCreatedPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *AssignPhoneNumberCreatedPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *AssignPhoneNumberCreatedPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

type AssignPhoneNumberReq struct {
	PhoneNumbers []AssignPhoneNumberReqPhoneNumbersItem `json:"phone_numbers"`
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *AssignPhoneNumberReq) GetPhoneNumbers() []AssignPhoneNumberReqPhoneNumbersItem {
	return s.PhoneNumbers
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *AssignPhoneNumberReq) SetPhoneNumbers(val []AssignPhoneNumberReqPhoneNumbersItem) {
	s.PhoneNumbers = val
}

type AssignPhoneNumberReqPhoneNumbersItem struct {
	// ID for phone number.
	ID OptString `json:"id"`
	// Phone number in E164 format.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *AssignPhoneNumberReqPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *AssignPhoneNumberReqPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *AssignPhoneNumberReqPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *AssignPhoneNumberReqPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

type AssignPhoneNumberToZoomRoomReq struct {
	PhoneNumbers []AssignPhoneNumberToZoomRoomReqPhoneNumbersItem `json:"phone_numbers"`
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *AssignPhoneNumberToZoomRoomReq) GetPhoneNumbers() []AssignPhoneNumberToZoomRoomReqPhoneNumbersItem {
	return s.PhoneNumbers
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *AssignPhoneNumberToZoomRoomReq) SetPhoneNumbers(val []AssignPhoneNumberToZoomRoomReqPhoneNumbersItem) {
	s.PhoneNumbers = val
}

type AssignPhoneNumberToZoomRoomReqPhoneNumbersItem struct {
	// ID for phone number.
	ID OptString `json:"id"`
	// Phone number in E164 format.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *AssignPhoneNumberToZoomRoomReqPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *AssignPhoneNumberToZoomRoomReqPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *AssignPhoneNumberToZoomRoomReqPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *AssignPhoneNumberToZoomRoomReqPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

// AssignPhoneNumbersAutoReceptionistNoContent is response for AssignPhoneNumbersAutoReceptionist operation.
type AssignPhoneNumbersAutoReceptionistNoContent struct{}

type AssignPhoneNumbersAutoReceptionistReq struct {
	// Provide either the unique identifier of the Phone Number  in the `id` field or provide the phone
	// number in the `number` field.
	PhoneNumbers []AssignPhoneNumbersAutoReceptionistReqPhoneNumbersItem `json:"phone_numbers"`
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *AssignPhoneNumbersAutoReceptionistReq) GetPhoneNumbers() []AssignPhoneNumbersAutoReceptionistReqPhoneNumbersItem {
	return s.PhoneNumbers
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *AssignPhoneNumbersAutoReceptionistReq) SetPhoneNumbers(val []AssignPhoneNumbersAutoReceptionistReqPhoneNumbersItem) {
	s.PhoneNumbers = val
}

type AssignPhoneNumbersAutoReceptionistReqPhoneNumbersItem struct {
	// Unique Identifier of the Phone number.
	ID OptString `json:"id"`
	// Phone number in e164 format.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *AssignPhoneNumbersAutoReceptionistReqPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *AssignPhoneNumbersAutoReceptionistReqPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *AssignPhoneNumbersAutoReceptionistReqPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *AssignPhoneNumbersAutoReceptionistReqPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

// AssignPhoneNumbersSLGCreated is response for AssignPhoneNumbersSLG operation.
type AssignPhoneNumbersSLGCreated struct{}

type AssignPhoneNumbersSLGReq struct {
	// The phone number(s) to be assigned to the shared line group.
	PhoneNumbers []AssignPhoneNumbersSLGReqPhoneNumbersItem `json:"phone_numbers"`
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *AssignPhoneNumbersSLGReq) GetPhoneNumbers() []AssignPhoneNumbersSLGReqPhoneNumbersItem {
	return s.PhoneNumbers
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *AssignPhoneNumbersSLGReq) SetPhoneNumbers(val []AssignPhoneNumbersSLGReqPhoneNumbersItem) {
	s.PhoneNumbers = val
}

type AssignPhoneNumbersSLGReqPhoneNumbersItem struct {
	// The unique identifier of the phone number.
	ID OptString `json:"id"`
	// The phone number.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *AssignPhoneNumbersSLGReqPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *AssignPhoneNumbersSLGReqPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *AssignPhoneNumbersSLGReqPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *AssignPhoneNumbersSLGReqPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

type AssignPhoneNumbersToCommonAreaCreated struct {
	PhoneNumbers []AssignPhoneNumbersToCommonAreaCreatedPhoneNumbersItem `json:"phone_numbers"`
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *AssignPhoneNumbersToCommonAreaCreated) GetPhoneNumbers() []AssignPhoneNumbersToCommonAreaCreatedPhoneNumbersItem {
	return s.PhoneNumbers
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *AssignPhoneNumbersToCommonAreaCreated) SetPhoneNumbers(val []AssignPhoneNumbersToCommonAreaCreatedPhoneNumbersItem) {
	s.PhoneNumbers = val
}

type AssignPhoneNumbersToCommonAreaCreatedPhoneNumbersItem struct {
	// The phone number ID.
	ID OptString `json:"id"`
	// The phone number.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *AssignPhoneNumbersToCommonAreaCreatedPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *AssignPhoneNumbersToCommonAreaCreatedPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *AssignPhoneNumbersToCommonAreaCreatedPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *AssignPhoneNumbersToCommonAreaCreatedPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

type AssignPhoneNumbersToCommonAreaReq struct {
	PhoneNumbers []AssignPhoneNumbersToCommonAreaReqPhoneNumbersItem `json:"phone_numbers"`
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *AssignPhoneNumbersToCommonAreaReq) GetPhoneNumbers() []AssignPhoneNumbersToCommonAreaReqPhoneNumbersItem {
	return s.PhoneNumbers
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *AssignPhoneNumbersToCommonAreaReq) SetPhoneNumbers(val []AssignPhoneNumbersToCommonAreaReqPhoneNumbersItem) {
	s.PhoneNumbers = val
}

type AssignPhoneNumbersToCommonAreaReqPhoneNumbersItem struct {
	// Phone number ID.
	ID OptString `json:"id"`
	// The phone number.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *AssignPhoneNumbersToCommonAreaReqPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *AssignPhoneNumbersToCommonAreaReqPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *AssignPhoneNumbersToCommonAreaReqPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *AssignPhoneNumbersToCommonAreaReqPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

// AssignPhoneToCallQueueCreated is response for AssignPhoneToCallQueue operation.
type AssignPhoneToCallQueueCreated struct{}

type AssignPhoneToCallQueueReq struct {
	// Provide either the `id` or the `number` field. Only a max of 5 numbers can be assigned to a call
	// queue at a time.
	PhoneNumbers []AssignPhoneToCallQueueReqPhoneNumbersItem `json:"phone_numbers"`
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *AssignPhoneToCallQueueReq) GetPhoneNumbers() []AssignPhoneToCallQueueReqPhoneNumbersItem {
	return s.PhoneNumbers
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *AssignPhoneToCallQueueReq) SetPhoneNumbers(val []AssignPhoneToCallQueueReqPhoneNumbersItem) {
	s.PhoneNumbers = val
}

type AssignPhoneToCallQueueReqPhoneNumbersItem struct {
	// Unique identifier of the phone number.
	ID OptString `json:"id"`
	// Phone number.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *AssignPhoneToCallQueueReqPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *AssignPhoneToCallQueueReqPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *AssignPhoneToCallQueueReqPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *AssignPhoneToCallQueueReqPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

type BatchAddLocationsCreated struct {
	Locations []BatchAddLocationsCreatedLocationsItem `json:"locations"`
}

// GetLocations returns the value of Locations.
func (s *BatchAddLocationsCreated) GetLocations() []BatchAddLocationsCreatedLocationsItem {
	return s.Locations
}

// SetLocations sets the value of Locations.
func (s *BatchAddLocationsCreated) SetLocations(val []BatchAddLocationsCreatedLocationsItem) {
	s.Locations = val
}

type BatchAddLocationsCreatedLocationsItem struct {
	// The location's display name.
	DisplayName OptString `json:"display_name"`
	// The location ID.
	LocationID OptString `json:"location_id"`
}

// GetDisplayName returns the value of DisplayName.
func (s *BatchAddLocationsCreatedLocationsItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetLocationID returns the value of LocationID.
func (s *BatchAddLocationsCreatedLocationsItem) GetLocationID() OptString {
	return s.LocationID
}

// SetDisplayName sets the value of DisplayName.
func (s *BatchAddLocationsCreatedLocationsItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetLocationID sets the value of LocationID.
func (s *BatchAddLocationsCreatedLocationsItem) SetLocationID(val OptString) {
	s.LocationID = val
}

type BatchAddLocationsReq struct {
	Locations []BatchAddLocationsReqLocationsItem `json:"locations"`
	// The site's ID.
	SiteID OptString `json:"site_id"`
}

// GetLocations returns the value of Locations.
func (s *BatchAddLocationsReq) GetLocations() []BatchAddLocationsReqLocationsItem {
	return s.Locations
}

// GetSiteID returns the value of SiteID.
func (s *BatchAddLocationsReq) GetSiteID() OptString {
	return s.SiteID
}

// SetLocations sets the value of Locations.
func (s *BatchAddLocationsReq) SetLocations(val []BatchAddLocationsReqLocationsItem) {
	s.Locations = val
}

// SetSiteID sets the value of SiteID.
func (s *BatchAddLocationsReq) SetSiteID(val OptString) {
	s.SiteID = val
}

type BatchAddLocationsReqLocationsItem struct {
	// The location's BSSID (Basic Service Set Identifier).
	Bssid          OptString                                       `json:"bssid"`
	CompanyAddress BatchAddLocationsReqLocationsItemCompanyAddress `json:"company_address"`
	// The location's display name.
	DisplayName string `json:"display_name"`
	// The location's ELIN (Emergency Location Identification Number). This value can be a BYOC number.
	// If you use a BYOC number, you will need to manually update the BYOC address with your carrier.
	Elin OptString `json:"elin"`
	// The location's ID.
	Identifier      string                                                 `json:"identifier"`
	NetworkSwitches []BatchAddLocationsReqLocationsItemNetworkSwitchesItem `json:"network_switches"`
	// The location's parent location ID. Leave this value empty if the current location is a top
	// location.
	ParentIdentifier OptString `json:"parent_identifier"`
	// The location's subnet or private IP address. This field is required if `minimum_match_criteria` is
	// true.
	PrivateIP OptString `json:"private_ip"`
	// The location's public IP address. This field is required for top locations.
	PublicIP OptString `json:"public_ip"`
	// The location's assigned SIP routing group for outgoing calls. The system routes the call to the
	// defined [SIP trunk](https://en.wikipedia.org/wiki/SIP_trunking) in the SIP groups when
	// location-based routing is enabled.
	// This only affects top locations and ignores all other locations.
	SipGroupName OptString `json:"sip_group_name"`
	// If true, it requires a user's location match on both public and private IP address, or BSSID, or
	// network switch; detecting only a public IP address is not enough to detect the location.
	MinimumMatchCriteria OptBool `json:"minimum_match_criteria"`
}

// GetBssid returns the value of Bssid.
func (s *BatchAddLocationsReqLocationsItem) GetBssid() OptString {
	return s.Bssid
}

// GetCompanyAddress returns the value of CompanyAddress.
func (s *BatchAddLocationsReqLocationsItem) GetCompanyAddress() BatchAddLocationsReqLocationsItemCompanyAddress {
	return s.CompanyAddress
}

// GetDisplayName returns the value of DisplayName.
func (s *BatchAddLocationsReqLocationsItem) GetDisplayName() string {
	return s.DisplayName
}

// GetElin returns the value of Elin.
func (s *BatchAddLocationsReqLocationsItem) GetElin() OptString {
	return s.Elin
}

// GetIdentifier returns the value of Identifier.
func (s *BatchAddLocationsReqLocationsItem) GetIdentifier() string {
	return s.Identifier
}

// GetNetworkSwitches returns the value of NetworkSwitches.
func (s *BatchAddLocationsReqLocationsItem) GetNetworkSwitches() []BatchAddLocationsReqLocationsItemNetworkSwitchesItem {
	return s.NetworkSwitches
}

// GetParentIdentifier returns the value of ParentIdentifier.
func (s *BatchAddLocationsReqLocationsItem) GetParentIdentifier() OptString {
	return s.ParentIdentifier
}

// GetPrivateIP returns the value of PrivateIP.
func (s *BatchAddLocationsReqLocationsItem) GetPrivateIP() OptString {
	return s.PrivateIP
}

// GetPublicIP returns the value of PublicIP.
func (s *BatchAddLocationsReqLocationsItem) GetPublicIP() OptString {
	return s.PublicIP
}

// GetSipGroupName returns the value of SipGroupName.
func (s *BatchAddLocationsReqLocationsItem) GetSipGroupName() OptString {
	return s.SipGroupName
}

// GetMinimumMatchCriteria returns the value of MinimumMatchCriteria.
func (s *BatchAddLocationsReqLocationsItem) GetMinimumMatchCriteria() OptBool {
	return s.MinimumMatchCriteria
}

// SetBssid sets the value of Bssid.
func (s *BatchAddLocationsReqLocationsItem) SetBssid(val OptString) {
	s.Bssid = val
}

// SetCompanyAddress sets the value of CompanyAddress.
func (s *BatchAddLocationsReqLocationsItem) SetCompanyAddress(val BatchAddLocationsReqLocationsItemCompanyAddress) {
	s.CompanyAddress = val
}

// SetDisplayName sets the value of DisplayName.
func (s *BatchAddLocationsReqLocationsItem) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetElin sets the value of Elin.
func (s *BatchAddLocationsReqLocationsItem) SetElin(val OptString) {
	s.Elin = val
}

// SetIdentifier sets the value of Identifier.
func (s *BatchAddLocationsReqLocationsItem) SetIdentifier(val string) {
	s.Identifier = val
}

// SetNetworkSwitches sets the value of NetworkSwitches.
func (s *BatchAddLocationsReqLocationsItem) SetNetworkSwitches(val []BatchAddLocationsReqLocationsItemNetworkSwitchesItem) {
	s.NetworkSwitches = val
}

// SetParentIdentifier sets the value of ParentIdentifier.
func (s *BatchAddLocationsReqLocationsItem) SetParentIdentifier(val OptString) {
	s.ParentIdentifier = val
}

// SetPrivateIP sets the value of PrivateIP.
func (s *BatchAddLocationsReqLocationsItem) SetPrivateIP(val OptString) {
	s.PrivateIP = val
}

// SetPublicIP sets the value of PublicIP.
func (s *BatchAddLocationsReqLocationsItem) SetPublicIP(val OptString) {
	s.PublicIP = val
}

// SetSipGroupName sets the value of SipGroupName.
func (s *BatchAddLocationsReqLocationsItem) SetSipGroupName(val OptString) {
	s.SipGroupName = val
}

// SetMinimumMatchCriteria sets the value of MinimumMatchCriteria.
func (s *BatchAddLocationsReqLocationsItem) SetMinimumMatchCriteria(val OptBool) {
	s.MinimumMatchCriteria = val
}

type BatchAddLocationsReqLocationsItemCompanyAddress struct {
	// The location's physical address.
	AddressLine1 string `json:"address_line1"`
	// The location's optional physical address information. For example, a suite number.
	AddressLine2 OptString `json:"address_line2"`
	// The location's city.
	City OptString `json:"city"`
	// The location's country.
	Country string `json:"country"`
	// The location's state, province, or territory.
	StateCode OptString `json:"state_code"`
	// The location's VAT/NIF/CIF number. This number gets a new phone number online.
	// **Note:** For Belgium, Netherlands, Portugal, Spain, and Switzerland, this field is required.
	VatNumber OptString `json:"vat_number"`
	// The location's ZIP or postal code.
	Zip OptString `json:"zip"`
}

// GetAddressLine1 returns the value of AddressLine1.
func (s *BatchAddLocationsReqLocationsItemCompanyAddress) GetAddressLine1() string {
	return s.AddressLine1
}

// GetAddressLine2 returns the value of AddressLine2.
func (s *BatchAddLocationsReqLocationsItemCompanyAddress) GetAddressLine2() OptString {
	return s.AddressLine2
}

// GetCity returns the value of City.
func (s *BatchAddLocationsReqLocationsItemCompanyAddress) GetCity() OptString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *BatchAddLocationsReqLocationsItemCompanyAddress) GetCountry() string {
	return s.Country
}

// GetStateCode returns the value of StateCode.
func (s *BatchAddLocationsReqLocationsItemCompanyAddress) GetStateCode() OptString {
	return s.StateCode
}

// GetVatNumber returns the value of VatNumber.
func (s *BatchAddLocationsReqLocationsItemCompanyAddress) GetVatNumber() OptString {
	return s.VatNumber
}

// GetZip returns the value of Zip.
func (s *BatchAddLocationsReqLocationsItemCompanyAddress) GetZip() OptString {
	return s.Zip
}

// SetAddressLine1 sets the value of AddressLine1.
func (s *BatchAddLocationsReqLocationsItemCompanyAddress) SetAddressLine1(val string) {
	s.AddressLine1 = val
}

// SetAddressLine2 sets the value of AddressLine2.
func (s *BatchAddLocationsReqLocationsItemCompanyAddress) SetAddressLine2(val OptString) {
	s.AddressLine2 = val
}

// SetCity sets the value of City.
func (s *BatchAddLocationsReqLocationsItemCompanyAddress) SetCity(val OptString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *BatchAddLocationsReqLocationsItemCompanyAddress) SetCountry(val string) {
	s.Country = val
}

// SetStateCode sets the value of StateCode.
func (s *BatchAddLocationsReqLocationsItemCompanyAddress) SetStateCode(val OptString) {
	s.StateCode = val
}

// SetVatNumber sets the value of VatNumber.
func (s *BatchAddLocationsReqLocationsItemCompanyAddress) SetVatNumber(val OptString) {
	s.VatNumber = val
}

// SetZip sets the value of Zip.
func (s *BatchAddLocationsReqLocationsItemCompanyAddress) SetZip(val OptString) {
	s.Zip = val
}

type BatchAddLocationsReqLocationsItemNetworkSwitchesItem struct {
	// The location's assigned MAC address. It's required if the `network_switches` value is set.
	MACAddress OptString `json:"mac_address"`
	// The location's port label. You **cannot** pass this parameter with the `port_prefix` and
	// `port_range` parameter.
	Port OptString `json:"port"`
	// The location's port prefix. The prefix value **cannot** end with a digit.
	// This parameter passes with the `port_range_from` and `port_range_to` parameters.
	PortPrefix OptString `json:"port_prefix"`
	// The location's port starting range number. It can be a non-negative integer value.
	// This value **must** be less than or equal to the `port_range_to` value.
	PortRangeFrom OptString `json:"port_range_from"`
	// The location's port ending range number. It can be a non-negative integer value.
	// This value **cannot** be less than the `port_range_from` value.
	PortRangeTo OptString `json:"port_range_to"`
}

// GetMACAddress returns the value of MACAddress.
func (s *BatchAddLocationsReqLocationsItemNetworkSwitchesItem) GetMACAddress() OptString {
	return s.MACAddress
}

// GetPort returns the value of Port.
func (s *BatchAddLocationsReqLocationsItemNetworkSwitchesItem) GetPort() OptString {
	return s.Port
}

// GetPortPrefix returns the value of PortPrefix.
func (s *BatchAddLocationsReqLocationsItemNetworkSwitchesItem) GetPortPrefix() OptString {
	return s.PortPrefix
}

// GetPortRangeFrom returns the value of PortRangeFrom.
func (s *BatchAddLocationsReqLocationsItemNetworkSwitchesItem) GetPortRangeFrom() OptString {
	return s.PortRangeFrom
}

// GetPortRangeTo returns the value of PortRangeTo.
func (s *BatchAddLocationsReqLocationsItemNetworkSwitchesItem) GetPortRangeTo() OptString {
	return s.PortRangeTo
}

// SetMACAddress sets the value of MACAddress.
func (s *BatchAddLocationsReqLocationsItemNetworkSwitchesItem) SetMACAddress(val OptString) {
	s.MACAddress = val
}

// SetPort sets the value of Port.
func (s *BatchAddLocationsReqLocationsItemNetworkSwitchesItem) SetPort(val OptString) {
	s.Port = val
}

// SetPortPrefix sets the value of PortPrefix.
func (s *BatchAddLocationsReqLocationsItemNetworkSwitchesItem) SetPortPrefix(val OptString) {
	s.PortPrefix = val
}

// SetPortRangeFrom sets the value of PortRangeFrom.
func (s *BatchAddLocationsReqLocationsItemNetworkSwitchesItem) SetPortRangeFrom(val OptString) {
	s.PortRangeFrom = val
}

// SetPortRangeTo sets the value of PortRangeTo.
func (s *BatchAddLocationsReqLocationsItemNetworkSwitchesItem) SetPortRangeTo(val OptString) {
	s.PortRangeTo = val
}

type BatchAddUsersCreatedItem struct {
	// The imported user email.
	Email OptString `json:"email"`
	// The user ID.
	ID OptString `json:"id"`
}

// GetEmail returns the value of Email.
func (s *BatchAddUsersCreatedItem) GetEmail() OptString {
	return s.Email
}

// GetID returns the value of ID.
func (s *BatchAddUsersCreatedItem) GetID() OptString {
	return s.ID
}

// SetEmail sets the value of Email.
func (s *BatchAddUsersCreatedItem) SetEmail(val OptString) {
	s.Email = val
}

// SetID sets the value of ID.
func (s *BatchAddUsersCreatedItem) SetID(val OptString) {
	s.ID = val
}

type BatchAddUsersReq struct {
	Users []BatchAddUsersReqUsersItem `json:"users"`
}

// GetUsers returns the value of Users.
func (s *BatchAddUsersReq) GetUsers() []BatchAddUsersReqUsersItem {
	return s.Users
}

// SetUsers sets the value of Users.
func (s *BatchAddUsersReq) SetUsers(val []BatchAddUsersReqUsersItem) {
	s.Users = val
}

type BatchAddUsersReqUsersItem struct {
	// The user email. It ensures the users are active in your Zoom account.
	Email string `json:"email"`
	// The user's first name. It ensures the users are active in your Zoom account.
	FirstName OptString `json:"first_name"`
	// The user's last name. It ensures the users are active in your Zoom account.
	LastName OptString `json:"last_name"`
	// The calling plan.
	// * Type &quot;AU/NZ Metered&quot; if the assigned package is &quot;Australia/New Zealand Metered
	// Calling Plan&quot;.
	// * Type &quot;AU/NZ Unlimited&quot; if the assigned package is &quot;Australia/New Zealand
	// Unlimited Calling Plan&quot;.
	// * Type &quot;UK/Ireland Metered&quot; if the assigned package is &quot;United Kingdom/Ireland
	// Metered Calling Plan&quot;.
	// * Type &quot;UK/Ireland Unlimited&quot; if the assigned package is &quot;United Kingdom/Ireland
	// Unlimited Calling Plan&quot;.
	// * Type &quot;US/CA Metered&quot; if the assigned package is &quot;United States/Canada Metered
	// Calling Plan&quot;.
	// * Type &quot;US/CA Unlimited&quot; if the assigned package is &quot;United States/Canada Unlimited
	// Calling Plan&quot;.
	// * Type &quot;Europe Zone A Metered&quot; if the assigned package is &quot;Europe Zone A Metered
	// Calling Plan&quot;.
	// * Type &quot;Europe Zone A Unlimited&quot; if the assigned package is &quot;Europe Zone A
	// Unlimited Calling Plan&quot;.
	// * Type &quot;Europe Zone B Metered&quot; if the assigned package is &quot;Europe Zone B Metered
	// Calling Plan&quot;.
	// * Type &quot;Europe Zone B Unlimited&quot; if the assigned package is &quot;Europe Zone B
	// Unlimited Calling Plan&quot;.
	// * Type &quot;JP Metered&quot; if the assigned package is &quot;Japan Metered Calling Plan&quot;.
	// * Type &quot;JP Unlimited&quot; if the assigned package is &quot;Japan Unlimited Calling Plan&quot;
	// .
	// * Type &quot;IN Metered&quot; if the assigned package is &quot;India Metered Calling Plan&quot;.
	// * Type &quot;IN Unlimited&quot; if the assigned package is &quot;India Unlimited Calling Plan&quot;
	// .
	// * Type &quot;IN Pro&quot; if the assigned package is &quot;Zoom Phone India Pro&quot;.
	// * Type &quot;IN International Calling Add-On&quot; if the assigned package is &quot;India
	// International Calling Add-On&quot;.
	// * Type &quot;Global Select Metered&quot; if the assigned package is &quot;Global Select Metered
	// Calling Plan&quot;.
	// * Type &quot;Global Select&quot; if the assigned package is &quot;Global Select Calling Plan&quot;.
	// * Type &quot;International Calling Add-On&quot; if the assigned package is &quot;International
	// Calling Add-On&quot;.
	// * Type &quot;Beta&quot; if the assigned package is &quot;Beta Calling Plan&quot;.
	// * Type &quot;Pro&quot; if the assigned package is &quot;Zoom Phone Pro&quot;.
	// * Type &quot;Power Pack&quot; if the assigned package is &quot;Zoom Phone Power Pack&quot;.
	// Leave this section blank if no package has been assigned.
	CallingPlans []string `json:"calling_plans"`
	// The site code. It's required if the site name is not provided or if Indian plans are assigned.
	SiteCode OptString `json:"site_code"`
	// The site name. It's required if the site code is not provided or if Indian plans are assigned.
	SiteName OptString `json:"site_name"`
	// The template name. Configure the user setting according to the specified template. The template
	// must belong to the same site as the user.
	TemplateName OptString `json:"template_name"`
	// The extension number. Do not include the site code in an extension number if the site code is
	// enabled.
	ExtensionNumber string `json:"extension_number"`
	// The phone numbers in E164 format. Separate multiple phone number entries with commas. Make sure
	// that these numbers have been ported to your account as unassigned phone numbers.
	PhoneNumbers []string `json:"phone_numbers"`
	// The outbound caller ID. Hides the caller ID if left blank. You can set an extension's phone number
	// or any company number as the outbound caller ID.
	OutboundCallerID OptString `json:"outbound_caller_id"`
	// Whether to allow this extension to change the outbound caller ID when placing calls.
	SelectOutboundCallerID OptBool `json:"select_outbound_caller_id"`
	// Whether to enable SMS for this user.
	SMS OptBool `json:"sms"`
	// Required: brand, model, and MAC address of each desk phone.
	// Optional: provision template. Skips the provision template not supported by the device. For more
	// information, see [supported devices](https://support.zoom.
	// us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices).
	// Each user can be assigned up to 3 desk phones.
	// All users must belong to the same site if a desk phone is assigned to multiple users.
	DeskPhones []jx.Raw `json:"desk_phones"`
}

// GetEmail returns the value of Email.
func (s *BatchAddUsersReqUsersItem) GetEmail() string {
	return s.Email
}

// GetFirstName returns the value of FirstName.
func (s *BatchAddUsersReqUsersItem) GetFirstName() OptString {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *BatchAddUsersReqUsersItem) GetLastName() OptString {
	return s.LastName
}

// GetCallingPlans returns the value of CallingPlans.
func (s *BatchAddUsersReqUsersItem) GetCallingPlans() []string {
	return s.CallingPlans
}

// GetSiteCode returns the value of SiteCode.
func (s *BatchAddUsersReqUsersItem) GetSiteCode() OptString {
	return s.SiteCode
}

// GetSiteName returns the value of SiteName.
func (s *BatchAddUsersReqUsersItem) GetSiteName() OptString {
	return s.SiteName
}

// GetTemplateName returns the value of TemplateName.
func (s *BatchAddUsersReqUsersItem) GetTemplateName() OptString {
	return s.TemplateName
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *BatchAddUsersReqUsersItem) GetExtensionNumber() string {
	return s.ExtensionNumber
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *BatchAddUsersReqUsersItem) GetPhoneNumbers() []string {
	return s.PhoneNumbers
}

// GetOutboundCallerID returns the value of OutboundCallerID.
func (s *BatchAddUsersReqUsersItem) GetOutboundCallerID() OptString {
	return s.OutboundCallerID
}

// GetSelectOutboundCallerID returns the value of SelectOutboundCallerID.
func (s *BatchAddUsersReqUsersItem) GetSelectOutboundCallerID() OptBool {
	return s.SelectOutboundCallerID
}

// GetSMS returns the value of SMS.
func (s *BatchAddUsersReqUsersItem) GetSMS() OptBool {
	return s.SMS
}

// GetDeskPhones returns the value of DeskPhones.
func (s *BatchAddUsersReqUsersItem) GetDeskPhones() []jx.Raw {
	return s.DeskPhones
}

// SetEmail sets the value of Email.
func (s *BatchAddUsersReqUsersItem) SetEmail(val string) {
	s.Email = val
}

// SetFirstName sets the value of FirstName.
func (s *BatchAddUsersReqUsersItem) SetFirstName(val OptString) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *BatchAddUsersReqUsersItem) SetLastName(val OptString) {
	s.LastName = val
}

// SetCallingPlans sets the value of CallingPlans.
func (s *BatchAddUsersReqUsersItem) SetCallingPlans(val []string) {
	s.CallingPlans = val
}

// SetSiteCode sets the value of SiteCode.
func (s *BatchAddUsersReqUsersItem) SetSiteCode(val OptString) {
	s.SiteCode = val
}

// SetSiteName sets the value of SiteName.
func (s *BatchAddUsersReqUsersItem) SetSiteName(val OptString) {
	s.SiteName = val
}

// SetTemplateName sets the value of TemplateName.
func (s *BatchAddUsersReqUsersItem) SetTemplateName(val OptString) {
	s.TemplateName = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *BatchAddUsersReqUsersItem) SetExtensionNumber(val string) {
	s.ExtensionNumber = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *BatchAddUsersReqUsersItem) SetPhoneNumbers(val []string) {
	s.PhoneNumbers = val
}

// SetOutboundCallerID sets the value of OutboundCallerID.
func (s *BatchAddUsersReqUsersItem) SetOutboundCallerID(val OptString) {
	s.OutboundCallerID = val
}

// SetSelectOutboundCallerID sets the value of SelectOutboundCallerID.
func (s *BatchAddUsersReqUsersItem) SetSelectOutboundCallerID(val OptBool) {
	s.SelectOutboundCallerID = val
}

// SetSMS sets the value of SMS.
func (s *BatchAddUsersReqUsersItem) SetSMS(val OptBool) {
	s.SMS = val
}

// SetDeskPhones sets the value of DeskPhones.
func (s *BatchAddUsersReqUsersItem) SetDeskPhones(val []jx.Raw) {
	s.DeskPhones = val
}

// BatchUpdateDeviceLineKeySettingNoContent is response for BatchUpdateDeviceLineKeySetting operation.
type BatchUpdateDeviceLineKeySettingNoContent struct{}

type BatchUpdateDeviceLineKeySettingReq struct {
	// Device line key position.
	Positions []BatchUpdateDeviceLineKeySettingReqPositionsItem `json:"positions"`
}

// GetPositions returns the value of Positions.
func (s *BatchUpdateDeviceLineKeySettingReq) GetPositions() []BatchUpdateDeviceLineKeySettingReqPositionsItem {
	return s.Positions
}

// SetPositions sets the value of Positions.
func (s *BatchUpdateDeviceLineKeySettingReq) SetPositions(val []BatchUpdateDeviceLineKeySettingReqPositionsItem) {
	s.Positions = val
}

type BatchUpdateDeviceLineKeySettingReqPositionsItem struct {
	// Extension ID of the `user` or `common area`.
	ExtensionID OptString `json:"extension_id"`
	// The order of the device line key.
	Index OptInt `json:"index"`
}

// GetExtensionID returns the value of ExtensionID.
func (s *BatchUpdateDeviceLineKeySettingReqPositionsItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetIndex returns the value of Index.
func (s *BatchUpdateDeviceLineKeySettingReqPositionsItem) GetIndex() OptInt {
	return s.Index
}

// SetExtensionID sets the value of ExtensionID.
func (s *BatchUpdateDeviceLineKeySettingReqPositionsItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetIndex sets the value of Index.
func (s *BatchUpdateDeviceLineKeySettingReqPositionsItem) SetIndex(val OptInt) {
	s.Index = val
}

// BatchUpdateLineKeySettingNoContent is response for BatchUpdateLineKeySetting operation.
type BatchUpdateLineKeySettingNoContent struct{}

type BatchUpdateLineKeySettingReq struct {
	// The line key position.
	LineKeys []BatchUpdateLineKeySettingReqLineKeysItem `json:"line_keys"`
}

// GetLineKeys returns the value of LineKeys.
func (s *BatchUpdateLineKeySettingReq) GetLineKeys() []BatchUpdateLineKeySettingReqLineKeysItem {
	return s.LineKeys
}

// SetLineKeys sets the value of LineKeys.
func (s *BatchUpdateLineKeySettingReq) SetLineKeys(val []BatchUpdateLineKeySettingReqLineKeysItem) {
	s.LineKeys = val
}

type BatchUpdateLineKeySettingReqLineKeysItem struct {
	// The line key ID.
	LineKeyID OptString `json:"line_key_id"`
	// The order of the line key on the phone.
	Index OptInt `json:"index"`
	// The line key type.
	// `line`: Line/Shared line access/Shared line group.
	// `blf`: Busy lamp field.
	// `speed_dial`: Speed-dial a phone number.
	// `zoom_meeting`: Desk phone companion mode.
	// `call_park`: Call park. Users don't need to dial the retrieval codes with this setting.
	// `group_call_pickup`: Pick up inbound calls for call pickup groups.
	Type OptString `json:"type"`
	// The line key assignment information.
	KeyAssignment OptBatchUpdateLineKeySettingReqLineKeysItemKeyAssignment `json:"key_assignment"`
	// The user-defined display name for each line key of the device. The alias can be up to 32
	// characters in length.
	Alias OptString `json:"alias"`
	// The mapping ID of the parameter `outbound_caller_number`. Hides the caller ID if set to
	// `anonymous`.
	OutboundCallerID OptString `json:"outbound_caller_id"`
}

// GetLineKeyID returns the value of LineKeyID.
func (s *BatchUpdateLineKeySettingReqLineKeysItem) GetLineKeyID() OptString {
	return s.LineKeyID
}

// GetIndex returns the value of Index.
func (s *BatchUpdateLineKeySettingReqLineKeysItem) GetIndex() OptInt {
	return s.Index
}

// GetType returns the value of Type.
func (s *BatchUpdateLineKeySettingReqLineKeysItem) GetType() OptString {
	return s.Type
}

// GetKeyAssignment returns the value of KeyAssignment.
func (s *BatchUpdateLineKeySettingReqLineKeysItem) GetKeyAssignment() OptBatchUpdateLineKeySettingReqLineKeysItemKeyAssignment {
	return s.KeyAssignment
}

// GetAlias returns the value of Alias.
func (s *BatchUpdateLineKeySettingReqLineKeysItem) GetAlias() OptString {
	return s.Alias
}

// GetOutboundCallerID returns the value of OutboundCallerID.
func (s *BatchUpdateLineKeySettingReqLineKeysItem) GetOutboundCallerID() OptString {
	return s.OutboundCallerID
}

// SetLineKeyID sets the value of LineKeyID.
func (s *BatchUpdateLineKeySettingReqLineKeysItem) SetLineKeyID(val OptString) {
	s.LineKeyID = val
}

// SetIndex sets the value of Index.
func (s *BatchUpdateLineKeySettingReqLineKeysItem) SetIndex(val OptInt) {
	s.Index = val
}

// SetType sets the value of Type.
func (s *BatchUpdateLineKeySettingReqLineKeysItem) SetType(val OptString) {
	s.Type = val
}

// SetKeyAssignment sets the value of KeyAssignment.
func (s *BatchUpdateLineKeySettingReqLineKeysItem) SetKeyAssignment(val OptBatchUpdateLineKeySettingReqLineKeysItemKeyAssignment) {
	s.KeyAssignment = val
}

// SetAlias sets the value of Alias.
func (s *BatchUpdateLineKeySettingReqLineKeysItem) SetAlias(val OptString) {
	s.Alias = val
}

// SetOutboundCallerID sets the value of OutboundCallerID.
func (s *BatchUpdateLineKeySettingReqLineKeysItem) SetOutboundCallerID(val OptString) {
	s.OutboundCallerID = val
}

// The line key assignment information.
type BatchUpdateLineKeySettingReqLineKeysItemKeyAssignment struct {
	// The extension ID of the line assigned to the line key.
	ExtensionID OptString `json:"extension_id"`
	// The speed dial number used for `speed_dial_number` line key type.
	SpeedDialNumber OptString `json:"speed_dial_number"`
	// The call park retrieval code for `call_park` line key type.
	RetrievalCode OptString `json:"retrieval_code"`
}

// GetExtensionID returns the value of ExtensionID.
func (s *BatchUpdateLineKeySettingReqLineKeysItemKeyAssignment) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetSpeedDialNumber returns the value of SpeedDialNumber.
func (s *BatchUpdateLineKeySettingReqLineKeysItemKeyAssignment) GetSpeedDialNumber() OptString {
	return s.SpeedDialNumber
}

// GetRetrievalCode returns the value of RetrievalCode.
func (s *BatchUpdateLineKeySettingReqLineKeysItemKeyAssignment) GetRetrievalCode() OptString {
	return s.RetrievalCode
}

// SetExtensionID sets the value of ExtensionID.
func (s *BatchUpdateLineKeySettingReqLineKeysItemKeyAssignment) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetSpeedDialNumber sets the value of SpeedDialNumber.
func (s *BatchUpdateLineKeySettingReqLineKeysItemKeyAssignment) SetSpeedDialNumber(val OptString) {
	s.SpeedDialNumber = val
}

// SetRetrievalCode sets the value of RetrievalCode.
func (s *BatchUpdateLineKeySettingReqLineKeysItemKeyAssignment) SetRetrievalCode(val OptString) {
	s.RetrievalCode = val
}

type CreateASharedLineGroupCreated struct {
	// The unique identifier of the shared line group.
	ID OptString `json:"id"`
	// The display name of the shared line group.
	DisplayName OptString `json:"display_name"`
}

// GetID returns the value of ID.
func (s *CreateASharedLineGroupCreated) GetID() OptString {
	return s.ID
}

// GetDisplayName returns the value of DisplayName.
func (s *CreateASharedLineGroupCreated) GetDisplayName() OptString {
	return s.DisplayName
}

// SetID sets the value of ID.
func (s *CreateASharedLineGroupCreated) SetID(val OptString) {
	s.ID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *CreateASharedLineGroupCreated) SetDisplayName(val OptString) {
	s.DisplayName = val
}

type CreateASharedLineGroupReq struct {
	// The description for the shared line group.
	Description OptString `json:"description"`
	// The name to identify the shared line group.
	DisplayName string `json:"display_name"`
	// Extension number to be assigned to the shared line group. If a [site code has been
	// assigned](https://support.zoom.
	// us/hc/en-us/articles/360020809672#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b) to the site, provide the
	// short extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites) that you would like to use for the
	// shared line group. You will only be able to add members that belong to this site to the shared
	// line group.
	// This field is required only if the [multiple sites](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites) option has been enabled for the account.
	SiteID OptString `json:"site_id"`
}

// GetDescription returns the value of Description.
func (s *CreateASharedLineGroupReq) GetDescription() OptString {
	return s.Description
}

// GetDisplayName returns the value of DisplayName.
func (s *CreateASharedLineGroupReq) GetDisplayName() string {
	return s.DisplayName
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *CreateASharedLineGroupReq) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetSiteID returns the value of SiteID.
func (s *CreateASharedLineGroupReq) GetSiteID() OptString {
	return s.SiteID
}

// SetDescription sets the value of Description.
func (s *CreateASharedLineGroupReq) SetDescription(val OptString) {
	s.Description = val
}

// SetDisplayName sets the value of DisplayName.
func (s *CreateASharedLineGroupReq) SetDisplayName(val string) {
	s.DisplayName = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *CreateASharedLineGroupReq) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetSiteID sets the value of SiteID.
func (s *CreateASharedLineGroupReq) SetSiteID(val OptString) {
	s.SiteID = val
}

// CreateCRPhoneNumbersCreated is response for CreateCRPhoneNumbers operation.
type CreateCRPhoneNumbersCreated struct{}

// Number up to 200.
type CreateCRPhoneNumbersReqItem struct {
	// Phone number in E164 format.
	PhoneNumber OptString `json:"phone_number"`
	// `nullable` Status of phone number. default value is 'inactive'.
	Status OptString `json:"status"`
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *CreateCRPhoneNumbersReqItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetStatus returns the value of Status.
func (s *CreateCRPhoneNumbersReqItem) GetStatus() OptString {
	return s.Status
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *CreateCRPhoneNumbersReqItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetStatus sets the value of Status.
func (s *CreateCRPhoneNumbersReqItem) SetStatus(val OptString) {
	s.Status = val
}

type CreateCallQueueCreated struct {
	// Extension number assigned for the Call Queue.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// Unique identifier of the Call Queue.
	ID OptString `json:"id"`
	// Name of the Call Queue.
	Name OptString `json:"name"`
	// Status of the Call Queue.
	// `active`: Call queue is enabled and active.
	// `inactive`: Call queue is inactive. Inactive call queues cannot be called but will retain its
	// settings and appear in the [Call Queues](https://zoom.us/pbx/page/telephone/groups#/groups) page.
	Status OptString `json:"status"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *CreateCallQueueCreated) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *CreateCallQueueCreated) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *CreateCallQueueCreated) GetName() OptString {
	return s.Name
}

// GetStatus returns the value of Status.
func (s *CreateCallQueueCreated) GetStatus() OptString {
	return s.Status
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *CreateCallQueueCreated) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *CreateCallQueueCreated) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *CreateCallQueueCreated) SetName(val OptString) {
	s.Name = val
}

// SetStatus sets the value of Status.
func (s *CreateCallQueueCreated) SetStatus(val OptString) {
	s.Status = val
}

type CreateCallQueueReq struct {
	// Cost center name.
	CostCenter OptString `json:"cost_center"`
	// Department name.
	Department OptString `json:"department"`
	// Description for the Call Queue.
	Description OptString `json:"description"`
	// Phone extension number for the site.
	// If a site code has been [assigned](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b)
	// to the site, provide the short extension number instead of the original extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// A list of one or more phone users to be included in the call queue. Provide either users or common
	// area(s). Provide at least one user in the users object.
	Members OptCreateCallQueueReqMembers `json:"members"`
	// Name of the Call Queue.
	Name string `json:"name"`
	// Unique identifier of the site. Required only if [multiple sites](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) have been enabled. This can be
	// retrieved from the [List Phone Sites](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/listPhoneSites) API.
	SiteID OptString `json:"site_id"`
}

// GetCostCenter returns the value of CostCenter.
func (s *CreateCallQueueReq) GetCostCenter() OptString {
	return s.CostCenter
}

// GetDepartment returns the value of Department.
func (s *CreateCallQueueReq) GetDepartment() OptString {
	return s.Department
}

// GetDescription returns the value of Description.
func (s *CreateCallQueueReq) GetDescription() OptString {
	return s.Description
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *CreateCallQueueReq) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetMembers returns the value of Members.
func (s *CreateCallQueueReq) GetMembers() OptCreateCallQueueReqMembers {
	return s.Members
}

// GetName returns the value of Name.
func (s *CreateCallQueueReq) GetName() string {
	return s.Name
}

// GetSiteID returns the value of SiteID.
func (s *CreateCallQueueReq) GetSiteID() OptString {
	return s.SiteID
}

// SetCostCenter sets the value of CostCenter.
func (s *CreateCallQueueReq) SetCostCenter(val OptString) {
	s.CostCenter = val
}

// SetDepartment sets the value of Department.
func (s *CreateCallQueueReq) SetDepartment(val OptString) {
	s.Department = val
}

// SetDescription sets the value of Description.
func (s *CreateCallQueueReq) SetDescription(val OptString) {
	s.Description = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *CreateCallQueueReq) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetMembers sets the value of Members.
func (s *CreateCallQueueReq) SetMembers(val OptCreateCallQueueReqMembers) {
	s.Members = val
}

// SetName sets the value of Name.
func (s *CreateCallQueueReq) SetName(val string) {
	s.Name = val
}

// SetSiteID sets the value of SiteID.
func (s *CreateCallQueueReq) SetSiteID(val OptString) {
	s.SiteID = val
}

// A list of one or more phone users to be included in the call queue. Provide either users or common
// area(s). Provide at least one user in the users object.
type CreateCallQueueReqMembers struct {
	// **Optional**
	// Unique identifier of the [Common Area](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods/#operation/listCommonAreas). This can be retrieved from the
	// List Common Areas API.
	CommonAreaIds []string `json:"common_area_ids"`
	// Users object. Provide either the id (userId) field or the email address of the user.
	Users []CreateCallQueueReqMembersUsersItem `json:"users"`
}

// GetCommonAreaIds returns the value of CommonAreaIds.
func (s *CreateCallQueueReqMembers) GetCommonAreaIds() []string {
	return s.CommonAreaIds
}

// GetUsers returns the value of Users.
func (s *CreateCallQueueReqMembers) GetUsers() []CreateCallQueueReqMembersUsersItem {
	return s.Users
}

// SetCommonAreaIds sets the value of CommonAreaIds.
func (s *CreateCallQueueReqMembers) SetCommonAreaIds(val []string) {
	s.CommonAreaIds = val
}

// SetUsers sets the value of Users.
func (s *CreateCallQueueReqMembers) SetUsers(val []CreateCallQueueReqMembersUsersItem) {
	s.Users = val
}

type CreateCallQueueReqMembersUsersItem struct {
	// Email address of the user. This can be retrieved from the [List Users](https://marketplace.zoom.
	// us/docs/api-reference/zoom-api/methods#operation/users) API.
	Email OptString `json:"email"`
	// User Id of the user. This can be retrieved from the [List Users](https://marketplace.zoom.
	// us/docs/api-reference/zoom-api/methods#operation/users) API.
	ID OptString `json:"id"`
}

// GetEmail returns the value of Email.
func (s *CreateCallQueueReqMembersUsersItem) GetEmail() OptString {
	return s.Email
}

// GetID returns the value of ID.
func (s *CreateCallQueueReqMembersUsersItem) GetID() OptString {
	return s.ID
}

// SetEmail sets the value of Email.
func (s *CreateCallQueueReqMembersUsersItem) SetEmail(val OptString) {
	s.Email = val
}

// SetID sets the value of ID.
func (s *CreateCallQueueReqMembersUsersItem) SetID(val OptString) {
	s.ID = val
}

type CreateMonitoringGroupCreated struct {
	// The monitoring group ID.
	ID OptString `json:"id"`
	// The monitoring group's name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *CreateMonitoringGroupCreated) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *CreateMonitoringGroupCreated) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *CreateMonitoringGroupCreated) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *CreateMonitoringGroupCreated) SetName(val OptString) {
	s.Name = val
}

type CreateMonitoringGroupReq struct {
	// This field sets monitoring group's privileges.
	MonitoringPrivileges []string `json:"monitoring_privileges"`
	// The monitoring group's name.
	Name OptString `json:"name"`
	// Whether to play a disclaimer prompt to the call participants.
	Prompt OptBool `json:"prompt"`
	// The unique identifier of the monitoring group's site.
	SiteID OptString `json:"site_id"`
	// The monitoring type.
	// * `1` &mdash; Users &amp; Common Areas.
	// * `2` &mdash; Call Queues.
	// * `3` &mdash; Shared Line Group.
	// * `4` &mdash; Shared Line Appearance.
	Type OptInt `json:"type"`
}

// GetMonitoringPrivileges returns the value of MonitoringPrivileges.
func (s *CreateMonitoringGroupReq) GetMonitoringPrivileges() []string {
	return s.MonitoringPrivileges
}

// GetName returns the value of Name.
func (s *CreateMonitoringGroupReq) GetName() OptString {
	return s.Name
}

// GetPrompt returns the value of Prompt.
func (s *CreateMonitoringGroupReq) GetPrompt() OptBool {
	return s.Prompt
}

// GetSiteID returns the value of SiteID.
func (s *CreateMonitoringGroupReq) GetSiteID() OptString {
	return s.SiteID
}

// GetType returns the value of Type.
func (s *CreateMonitoringGroupReq) GetType() OptInt {
	return s.Type
}

// SetMonitoringPrivileges sets the value of MonitoringPrivileges.
func (s *CreateMonitoringGroupReq) SetMonitoringPrivileges(val []string) {
	s.MonitoringPrivileges = val
}

// SetName sets the value of Name.
func (s *CreateMonitoringGroupReq) SetName(val OptString) {
	s.Name = val
}

// SetPrompt sets the value of Prompt.
func (s *CreateMonitoringGroupReq) SetPrompt(val OptBool) {
	s.Prompt = val
}

// SetSiteID sets the value of SiteID.
func (s *CreateMonitoringGroupReq) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetType sets the value of Type.
func (s *CreateMonitoringGroupReq) SetType(val OptInt) {
	s.Type = val
}

type CreatePhoneSiteCreated struct {
	// The site ID is the unique identifier of a site.
	ID OptString `json:"id"`
	// The name of the site.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *CreatePhoneSiteCreated) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *CreatePhoneSiteCreated) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *CreatePhoneSiteCreated) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *CreatePhoneSiteCreated) SetName(val OptString) {
	s.Name = val
}

type CreatePhoneSiteReq struct {
	// The display name of the [auto-receptionist](https://support.zoom.
	// us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-)
	// for the site.
	AutoReceptionistName string `json:"auto_receptionist_name"`
	// The ID of the [auto-receptionist](https://support.zoom.
	// us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-)
	// that you can copy.
	SourceAutoReceptionistID OptString `json:"source_auto_receptionist_id"`
	// The default emergency address. If the address provided is not an exact match, it uses the system
	// generated corrected address.
	DefaultEmergencyAddress CreatePhoneSiteReqDefaultEmergencyAddress `json:"default_emergency_address"`
	// The name of the site.
	Name string `json:"name"`
	// The short extension of the phone site.
	ShortExtension OptCreatePhoneSiteReqShortExtension `json:"short_extension"`
	// The identifier for a site. This field is required when the site code is enabled.
	SiteCode OptInt `json:"site_code"`
	// If the account enabled the `Display Custom SIP Zone Options on Web Portal` feature, then selecting
	// a SIP zone nearest to your site might help reduce latency and improve call quality.
	SipZone OptCreatePhoneSiteReqSipZone `json:"sip_zone"`
	// It requires the account to enable the `Force Calls out to the PSTN network` feature.
	ForceOffNet OptCreatePhoneSiteReqForceOffNet `json:"force_off_net"`
}

// GetAutoReceptionistName returns the value of AutoReceptionistName.
func (s *CreatePhoneSiteReq) GetAutoReceptionistName() string {
	return s.AutoReceptionistName
}

// GetSourceAutoReceptionistID returns the value of SourceAutoReceptionistID.
func (s *CreatePhoneSiteReq) GetSourceAutoReceptionistID() OptString {
	return s.SourceAutoReceptionistID
}

// GetDefaultEmergencyAddress returns the value of DefaultEmergencyAddress.
func (s *CreatePhoneSiteReq) GetDefaultEmergencyAddress() CreatePhoneSiteReqDefaultEmergencyAddress {
	return s.DefaultEmergencyAddress
}

// GetName returns the value of Name.
func (s *CreatePhoneSiteReq) GetName() string {
	return s.Name
}

// GetShortExtension returns the value of ShortExtension.
func (s *CreatePhoneSiteReq) GetShortExtension() OptCreatePhoneSiteReqShortExtension {
	return s.ShortExtension
}

// GetSiteCode returns the value of SiteCode.
func (s *CreatePhoneSiteReq) GetSiteCode() OptInt {
	return s.SiteCode
}

// GetSipZone returns the value of SipZone.
func (s *CreatePhoneSiteReq) GetSipZone() OptCreatePhoneSiteReqSipZone {
	return s.SipZone
}

// GetForceOffNet returns the value of ForceOffNet.
func (s *CreatePhoneSiteReq) GetForceOffNet() OptCreatePhoneSiteReqForceOffNet {
	return s.ForceOffNet
}

// SetAutoReceptionistName sets the value of AutoReceptionistName.
func (s *CreatePhoneSiteReq) SetAutoReceptionistName(val string) {
	s.AutoReceptionistName = val
}

// SetSourceAutoReceptionistID sets the value of SourceAutoReceptionistID.
func (s *CreatePhoneSiteReq) SetSourceAutoReceptionistID(val OptString) {
	s.SourceAutoReceptionistID = val
}

// SetDefaultEmergencyAddress sets the value of DefaultEmergencyAddress.
func (s *CreatePhoneSiteReq) SetDefaultEmergencyAddress(val CreatePhoneSiteReqDefaultEmergencyAddress) {
	s.DefaultEmergencyAddress = val
}

// SetName sets the value of Name.
func (s *CreatePhoneSiteReq) SetName(val string) {
	s.Name = val
}

// SetShortExtension sets the value of ShortExtension.
func (s *CreatePhoneSiteReq) SetShortExtension(val OptCreatePhoneSiteReqShortExtension) {
	s.ShortExtension = val
}

// SetSiteCode sets the value of SiteCode.
func (s *CreatePhoneSiteReq) SetSiteCode(val OptInt) {
	s.SiteCode = val
}

// SetSipZone sets the value of SipZone.
func (s *CreatePhoneSiteReq) SetSipZone(val OptCreatePhoneSiteReqSipZone) {
	s.SipZone = val
}

// SetForceOffNet sets the value of ForceOffNet.
func (s *CreatePhoneSiteReq) SetForceOffNet(val OptCreatePhoneSiteReqForceOffNet) {
	s.ForceOffNet = val
}

// The default emergency address. If the address provided is not an exact match, it uses the system
// generated corrected address.
type CreatePhoneSiteReqDefaultEmergencyAddress struct {
	// The address Line 1 of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that contains the house number and
	// street name.
	AddressLine1 string `json:"address_line1"`
	// The address Line 2 of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that contains the building number,
	// floor number, unit, and others.
	AddressLine2 OptString `json:"address_line2"`
	// The city of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	City string `json:"city"`
	// The two-lettered country code (Alpha-2 code in ISO-3166 format) of the site's [emergency
	// address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	Country string `json:"country"`
	// The state code of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	StateCode string `json:"state_code"`
	// The zip code of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	Zip string `json:"zip"`
}

// GetAddressLine1 returns the value of AddressLine1.
func (s *CreatePhoneSiteReqDefaultEmergencyAddress) GetAddressLine1() string {
	return s.AddressLine1
}

// GetAddressLine2 returns the value of AddressLine2.
func (s *CreatePhoneSiteReqDefaultEmergencyAddress) GetAddressLine2() OptString {
	return s.AddressLine2
}

// GetCity returns the value of City.
func (s *CreatePhoneSiteReqDefaultEmergencyAddress) GetCity() string {
	return s.City
}

// GetCountry returns the value of Country.
func (s *CreatePhoneSiteReqDefaultEmergencyAddress) GetCountry() string {
	return s.Country
}

// GetStateCode returns the value of StateCode.
func (s *CreatePhoneSiteReqDefaultEmergencyAddress) GetStateCode() string {
	return s.StateCode
}

// GetZip returns the value of Zip.
func (s *CreatePhoneSiteReqDefaultEmergencyAddress) GetZip() string {
	return s.Zip
}

// SetAddressLine1 sets the value of AddressLine1.
func (s *CreatePhoneSiteReqDefaultEmergencyAddress) SetAddressLine1(val string) {
	s.AddressLine1 = val
}

// SetAddressLine2 sets the value of AddressLine2.
func (s *CreatePhoneSiteReqDefaultEmergencyAddress) SetAddressLine2(val OptString) {
	s.AddressLine2 = val
}

// SetCity sets the value of City.
func (s *CreatePhoneSiteReqDefaultEmergencyAddress) SetCity(val string) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *CreatePhoneSiteReqDefaultEmergencyAddress) SetCountry(val string) {
	s.Country = val
}

// SetStateCode sets the value of StateCode.
func (s *CreatePhoneSiteReqDefaultEmergencyAddress) SetStateCode(val string) {
	s.StateCode = val
}

// SetZip sets the value of Zip.
func (s *CreatePhoneSiteReqDefaultEmergencyAddress) SetZip(val string) {
	s.Zip = val
}

// It requires the account to enable the `Force Calls out to the PSTN network` feature.
type CreatePhoneSiteReqForceOffNet struct {
	// By enabling Force Off-Net, calls from users or extensions between sites route through the PSTN
	// network. Users in this site are only allowed to be part of the advanced functionality (eg. Auto
	// Receptionists, Call Queues) configured in this site.
	Enable OptBool `json:"enable"`
	// This setting allows extension only users to call to users outside the site.
	AllowExtensionOnlyUsersCallUsersOutsideSite OptBool `json:"allow_extension_only_users_call_users_outside_site"`
}

// GetEnable returns the value of Enable.
func (s *CreatePhoneSiteReqForceOffNet) GetEnable() OptBool {
	return s.Enable
}

// GetAllowExtensionOnlyUsersCallUsersOutsideSite returns the value of AllowExtensionOnlyUsersCallUsersOutsideSite.
func (s *CreatePhoneSiteReqForceOffNet) GetAllowExtensionOnlyUsersCallUsersOutsideSite() OptBool {
	return s.AllowExtensionOnlyUsersCallUsersOutsideSite
}

// SetEnable sets the value of Enable.
func (s *CreatePhoneSiteReqForceOffNet) SetEnable(val OptBool) {
	s.Enable = val
}

// SetAllowExtensionOnlyUsersCallUsersOutsideSite sets the value of AllowExtensionOnlyUsersCallUsersOutsideSite.
func (s *CreatePhoneSiteReqForceOffNet) SetAllowExtensionOnlyUsersCallUsersOutsideSite(val OptBool) {
	s.AllowExtensionOnlyUsersCallUsersOutsideSite = val
}

// The short extension of the phone site.
type CreatePhoneSiteReqShortExtension struct {
	// The length of short extension numbers for the site.
	// Since there is a default 6-digit limit on extensions, the short extension can be two to five
	// digits. The length of site code added to the length of short extension cannot exceed a value of
	// `6` For example, the length of `site_code`+ length of `short_extension` should always be less than
	// or equal to 6.
	Length OptInt `json:"length"`
}

// GetLength returns the value of Length.
func (s *CreatePhoneSiteReqShortExtension) GetLength() OptInt {
	return s.Length
}

// SetLength sets the value of Length.
func (s *CreatePhoneSiteReqShortExtension) SetLength(val OptInt) {
	s.Length = val
}

// If the account enabled the `Display Custom SIP Zone Options on Web Portal` feature, then selecting
// a SIP zone nearest to your site might help reduce latency and improve call quality.
type CreatePhoneSiteReqSipZone struct {
	// The SIP zone ID.
	ID OptString `json:"id"`
}

// GetID returns the value of ID.
func (s *CreatePhoneSiteReqSipZone) GetID() OptString {
	return s.ID
}

// SetID sets the value of ID.
func (s *CreatePhoneSiteReqSipZone) SetID(val OptString) {
	s.ID = val
}

// DelRoleMembersNoContent is response for DelRoleMembers operation.
type DelRoleMembersNoContent struct{}

// DeleteABlockedListNoContent is response for DeleteABlockedList operation.
type DeleteABlockedListNoContent struct{}

// DeleteACallQueueNoContent is response for DeleteACallQueue operation.
type DeleteACallQueueNoContent struct{}

// DeleteADeviceNoContent is response for DeleteADevice operation.
type DeleteADeviceNoContent struct{}

// DeleteAExternalContactNoContent is response for DeleteAExternalContact operation.
type DeleteAExternalContactNoContent struct{}

// DeleteAMemberSLGNoContent is response for DeleteAMemberSLG operation.
type DeleteAMemberSLGNoContent struct{}

// DeleteAPhoneNumberSLGNoContent is response for DeleteAPhoneNumberSLG operation.
type DeleteAPhoneNumberSLGNoContent struct{}

// DeleteASharedLineGroupNoContent is response for DeleteASharedLineGroup operation.
type DeleteASharedLineGroupNoContent struct{}

// DeleteAccountLevelInboundBlockRulesNoContent is response for DeleteAccountLevelInboundBlockRules operation.
type DeleteAccountLevelInboundBlockRulesNoContent struct{}

// DeleteAccountLevelInboundBlockedStatisticsNoContent is response for DeleteAccountLevelInboundBlockedStatistics operation.
type DeleteAccountLevelInboundBlockedStatisticsNoContent struct{}

// DeleteAccountOutboundCallingExceptionRuleNoContent is response for DeleteAccountOutboundCallingExceptionRule operation.
type DeleteAccountOutboundCallingExceptionRuleNoContent struct{}

// DeleteAnAlertSettingNoContent is response for DeleteAnAlertSetting operation.
type DeleteAnAlertSettingNoContent struct{}

// DeleteAudioItemNoContent is response for DeleteAudioItem operation.
type DeleteAudioItemNoContent struct{}

// DeleteAutoReceptionistNoContent is response for DeleteAutoReceptionist operation.
type DeleteAutoReceptionistNoContent struct{}

// DeleteCRPhoneNumberNoContent is response for DeleteCRPhoneNumber operation.
type DeleteCRPhoneNumberNoContent struct{}

// DeleteCallHandlingNoContent is response for DeleteCallHandling operation.
type DeleteCallHandlingNoContent struct{}

// DeleteCallLogNoContent is response for DeleteCallLog operation.
type DeleteCallLogNoContent struct{}

// DeleteCallRecordingNoContent is response for DeleteCallRecording operation.
type DeleteCallRecordingNoContent struct{}

// DeleteCommonAreaNoContent is response for DeleteCommonArea operation.
type DeleteCommonAreaNoContent struct{}

// DeleteCommonAreaOutboundCallingExceptionRuleNoContent is response for DeleteCommonAreaOutboundCallingExceptionRule operation.
type DeleteCommonAreaOutboundCallingExceptionRuleNoContent struct{}

// DeleteCommonAreaSettingNoContent is response for DeleteCommonAreaSetting operation.
type DeleteCommonAreaSettingNoContent struct{}

// DeleteEmergencyAddressNoContent is response for DeleteEmergencyAddress operation.
type DeleteEmergencyAddressNoContent struct{}

// DeleteExtensionFromADeviceNoContent is response for DeleteExtensionFromADevice operation.
type DeleteExtensionFromADeviceNoContent struct{}

// DeleteExtensiontLevelInboundBlockRulesNoContent is response for DeleteExtensiontLevelInboundBlockRules operation.
type DeleteExtensiontLevelInboundBlockRulesNoContent struct{}

// DeleteFirmwareUpdateRuleNoContent is response for DeleteFirmwareUpdateRule operation.
type DeleteFirmwareUpdateRuleNoContent struct{}

// DeleteGCPNoContent is response for DeleteGCP operation.
type DeleteGCPNoContent struct{}

// DeleteLineKeyNoContent is response for DeleteLineKey operation.
type DeleteLineKeyNoContent struct{}

// DeleteLocationNoContent is response for DeleteLocation operation.
type DeleteLocationNoContent struct{}

// DeleteMembersOfSLGNoContent is response for DeleteMembersOfSLG operation.
type DeleteMembersOfSLGNoContent struct{}

// DeleteMonitoringGroupNoContent is response for DeleteMonitoringGroup operation.
type DeleteMonitoringGroupNoContent struct{}

// DeleteOutboundCallerNumbersNoContent is response for DeleteOutboundCallerNumbers operation.
type DeleteOutboundCallerNumbersNoContent struct{}

type DeletePeeringPhoneNumbersOK struct {
	// The information about unprocessed phone numbers.
	UnprocessedNumbers []DeletePeeringPhoneNumbersOKUnprocessedNumbersItem `json:"unprocessed_numbers"`
}

// GetUnprocessedNumbers returns the value of UnprocessedNumbers.
func (s *DeletePeeringPhoneNumbersOK) GetUnprocessedNumbers() []DeletePeeringPhoneNumbersOKUnprocessedNumbersItem {
	return s.UnprocessedNumbers
}

// SetUnprocessedNumbers sets the value of UnprocessedNumbers.
func (s *DeletePeeringPhoneNumbersOK) SetUnprocessedNumbers(val []DeletePeeringPhoneNumbersOKUnprocessedNumbersItem) {
	s.UnprocessedNumbers = val
}

type DeletePeeringPhoneNumbersOKUnprocessedNumbersItem struct {
	// The reason for processing failures.
	FailureReason OptString `json:"failure_reason"`
	// The phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
	PhoneNumber OptString `json:"phone_number"`
}

// GetFailureReason returns the value of FailureReason.
func (s *DeletePeeringPhoneNumbersOKUnprocessedNumbersItem) GetFailureReason() OptString {
	return s.FailureReason
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *DeletePeeringPhoneNumbersOKUnprocessedNumbersItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// SetFailureReason sets the value of FailureReason.
func (s *DeletePeeringPhoneNumbersOKUnprocessedNumbersItem) SetFailureReason(val OptString) {
	s.FailureReason = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *DeletePeeringPhoneNumbersOKUnprocessedNumbersItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

type DeletePeeringPhoneNumbersReq struct {
	// The carrier's code. The `clientId` maps to a carrier peered with Zoom.
	// This parameter is required if you do **not** use an OAuth token or the OAuth token does not
	// contain the `clientId`.
	CarrierCode OptInt `json:"carrier_code"`
	// The information about the removed phone numbers. Maximum of 200.
	PhoneNumbers []string `json:"phone_numbers"`
}

// GetCarrierCode returns the value of CarrierCode.
func (s *DeletePeeringPhoneNumbersReq) GetCarrierCode() OptInt {
	return s.CarrierCode
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *DeletePeeringPhoneNumbersReq) GetPhoneNumbers() []string {
	return s.PhoneNumbers
}

// SetCarrierCode sets the value of CarrierCode.
func (s *DeletePeeringPhoneNumbersReq) SetCarrierCode(val OptInt) {
	s.CarrierCode = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *DeletePeeringPhoneNumbersReq) SetPhoneNumbers(val []string) {
	s.PhoneNumbers = val
}

// DeletePhoneNumbersSLGNoContent is response for DeletePhoneNumbersSLG operation.
type DeletePhoneNumbersSLGNoContent struct{}

// DeletePhoneRoleNoContent is response for DeletePhoneRole operation.
type DeletePhoneRoleNoContent struct{}

// DeletePhoneSiteNoContent is response for DeletePhoneSite operation.
type DeletePhoneSiteNoContent struct{}

// DeletePolicyNoContent is response for DeletePolicy operation.
type DeletePolicyNoContent struct{}

// DeleteProvisionTemplateNoContent is response for DeleteProvisionTemplate operation.
type DeleteProvisionTemplateNoContent struct{}

// DeleteRoutingRuleNoContent is response for DeleteRoutingRule operation.
type DeleteRoutingRuleNoContent struct{}

// DeleteSiteOutboundCallerNumbersNoContent is response for DeleteSiteOutboundCallerNumbers operation.
type DeleteSiteOutboundCallerNumbersNoContent struct{}

// DeleteSiteOutboundCallingExceptionRuleNoContent is response for DeleteSiteOutboundCallingExceptionRule operation.
type DeleteSiteOutboundCallingExceptionRuleNoContent struct{}

// DeleteSiteSettingNoContent is response for DeleteSiteSetting operation.
type DeleteSiteSettingNoContent struct{}

// DeleteUnassignedPhoneNumbersNoContent is response for DeleteUnassignedPhoneNumbers operation.
type DeleteUnassignedPhoneNumbersNoContent struct{}

// DeleteUserOutboundCallerNumbersNoContent is response for DeleteUserOutboundCallerNumbers operation.
type DeleteUserOutboundCallerNumbersNoContent struct{}

// DeleteUserOutboundCallingExceptionRuleNoContent is response for DeleteUserOutboundCallingExceptionRule operation.
type DeleteUserOutboundCallingExceptionRuleNoContent struct{}

// DeleteUserSettingNoContent is response for DeleteUserSetting operation.
type DeleteUserSettingNoContent struct{}

// DeleteUsersFromDirectoryBySiteNoContent is response for DeleteUsersFromDirectoryBySite operation.
type DeleteUsersFromDirectoryBySiteNoContent struct{}

// DeleteUsersFromDirectoryNoContent is response for DeleteUsersFromDirectory operation.
type DeleteUsersFromDirectoryNoContent struct{}

type DuplicatePhoneRoleCreated struct {
	// Unique identifier of the newly duplicated [role](https://support.zoom.
	// us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management) assigned to the user.
	ID OptString `json:"id"`
	// User's [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control)
	// name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *DuplicatePhoneRoleCreated) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *DuplicatePhoneRoleCreated) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *DuplicatePhoneRoleCreated) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *DuplicatePhoneRoleCreated) SetName(val OptString) {
	s.Name = val
}

type DuplicatePhoneRoleReq struct {
	// Unique identifier of the source [role](https://support.zoom.
	// us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management) assigned to the user.
	RoleID string `json:"role_id"`
	// User's [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control)
	// name.
	Name OptString `json:"name"`
	// Role description.
	Description OptString `json:"description"`
}

// GetRoleID returns the value of RoleID.
func (s *DuplicatePhoneRoleReq) GetRoleID() string {
	return s.RoleID
}

// GetName returns the value of Name.
func (s *DuplicatePhoneRoleReq) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *DuplicatePhoneRoleReq) GetDescription() OptString {
	return s.Description
}

// SetRoleID sets the value of RoleID.
func (s *DuplicatePhoneRoleReq) SetRoleID(val string) {
	s.RoleID = val
}

// SetName sets the value of Name.
func (s *DuplicatePhoneRoleReq) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *DuplicatePhoneRoleReq) SetDescription(val OptString) {
	s.Description = val
}

// Ref: #/components/schemas/ErrorResponse
type ErrorResponse struct {
	Code    OptInt                    `json:"code"`
	Message OptString                 `json:"message"`
	Errors  []ErrorResponseErrorsItem `json:"errors"`
}

// GetCode returns the value of Code.
func (s *ErrorResponse) GetCode() OptInt {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *ErrorResponse) GetMessage() OptString {
	return s.Message
}

// GetErrors returns the value of Errors.
func (s *ErrorResponse) GetErrors() []ErrorResponseErrorsItem {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *ErrorResponse) SetCode(val OptInt) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *ErrorResponse) SetMessage(val OptString) {
	s.Message = val
}

// SetErrors sets the value of Errors.
func (s *ErrorResponse) SetErrors(val []ErrorResponseErrorsItem) {
	s.Errors = val
}

type ErrorResponseErrorsItem struct {
	Field      OptString `json:"field"`
	FieldValue OptString `json:"field_value"`
	Message    OptString `json:"message"`
}

// GetField returns the value of Field.
func (s *ErrorResponseErrorsItem) GetField() OptString {
	return s.Field
}

// GetFieldValue returns the value of FieldValue.
func (s *ErrorResponseErrorsItem) GetFieldValue() OptString {
	return s.FieldValue
}

// GetMessage returns the value of Message.
func (s *ErrorResponseErrorsItem) GetMessage() OptString {
	return s.Message
}

// SetField sets the value of Field.
func (s *ErrorResponseErrorsItem) SetField(val OptString) {
	s.Field = val
}

// SetFieldValue sets the value of FieldValue.
func (s *ErrorResponseErrorsItem) SetFieldValue(val OptString) {
	s.FieldValue = val
}

// SetMessage sets the value of Message.
func (s *ErrorResponseErrorsItem) SetMessage(val OptString) {
	s.Message = val
}

// ErrorResponseStatusCode wraps ErrorResponse with StatusCode.
type ErrorResponseStatusCode struct {
	StatusCode int
	Response   ErrorResponse
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorResponseStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorResponseStatusCode) GetResponse() ErrorResponse {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorResponseStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorResponseStatusCode) SetResponse(val ErrorResponse) {
	s.Response = val
}

type GetABillingAccountOK struct {
	// The billing account ID.
	ID OptString `json:"id"`
	// The billing account name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetABillingAccountOK) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetABillingAccountOK) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetABillingAccountOK) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetABillingAccountOK) SetName(val OptString) {
	s.Name = val
}

type GetABlockedListOK struct {
	// Block type.
	// * `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in
	// to phone users.
	// * `outbound`: The phone users  are prevented from calling the blocked number or numbers with the
	// specified prefix.
	BlockType OptString `json:"block_type"`
	// Provide a comment to help you identify the blocked number or prefix.
	Comment OptString `json:"comment"`
	// Unique identifier of the blocked list.
	ID OptString `json:"id"`
	// Indicates the match type for the blocked list. The values can be one of the following:
	// * `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number`
	// field is blocked.
	// * `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number`
	// field are blocked.
	MatchType OptString `json:"match_type"`
	// The phone number or the prefix number that is blocked based on the `match_type`. Displayed in E164
	// format.
	PhoneNumber OptString `json:"phone_number"`
	// Indicates whether the blocking is active or inactive.
	// *n`active`: The blocked list is active.
	// * `inactive`: The blocked list is inactive.
	Status OptString `json:"status"`
}

// GetBlockType returns the value of BlockType.
func (s *GetABlockedListOK) GetBlockType() OptString {
	return s.BlockType
}

// GetComment returns the value of Comment.
func (s *GetABlockedListOK) GetComment() OptString {
	return s.Comment
}

// GetID returns the value of ID.
func (s *GetABlockedListOK) GetID() OptString {
	return s.ID
}

// GetMatchType returns the value of MatchType.
func (s *GetABlockedListOK) GetMatchType() OptString {
	return s.MatchType
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *GetABlockedListOK) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetStatus returns the value of Status.
func (s *GetABlockedListOK) GetStatus() OptString {
	return s.Status
}

// SetBlockType sets the value of BlockType.
func (s *GetABlockedListOK) SetBlockType(val OptString) {
	s.BlockType = val
}

// SetComment sets the value of Comment.
func (s *GetABlockedListOK) SetComment(val OptString) {
	s.Comment = val
}

// SetID sets the value of ID.
func (s *GetABlockedListOK) SetID(val OptString) {
	s.ID = val
}

// SetMatchType sets the value of MatchType.
func (s *GetABlockedListOK) SetMatchType(val OptString) {
	s.MatchType = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *GetABlockedListOK) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetStatus sets the value of Status.
func (s *GetABlockedListOK) SetStatus(val OptString) {
	s.Status = val
}

type GetACallQueueOK struct {
	// Cost center name.
	CostCenter OptString `json:"cost_center"`
	// Department name.
	Department OptString `json:"department"`
	// Extension ID.
	ExtensionID OptString `json:"extension_id"`
	// Extension number assigned to the Call Queue.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// Unique identifier of the Call Queue.
	ID      OptString                 `json:"id"`
	Members OptGetACallQueueOKMembers `json:"members"`
	// Name of the Call Queue.
	Name         OptString                         `json:"name"`
	PhoneNumbers []GetACallQueueOKPhoneNumbersItem `json:"phone_numbers"`
	Site         OptGetACallQueueOKSite            `json:"site"`
	// Status of the Call Queue.
	Status OptString `json:"status"`
	// The call queue policy list.
	Policy jx.Raw `json:"policy"`
}

// GetCostCenter returns the value of CostCenter.
func (s *GetACallQueueOK) GetCostCenter() OptString {
	return s.CostCenter
}

// GetDepartment returns the value of Department.
func (s *GetACallQueueOK) GetDepartment() OptString {
	return s.Department
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetACallQueueOK) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetACallQueueOK) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *GetACallQueueOK) GetID() OptString {
	return s.ID
}

// GetMembers returns the value of Members.
func (s *GetACallQueueOK) GetMembers() OptGetACallQueueOKMembers {
	return s.Members
}

// GetName returns the value of Name.
func (s *GetACallQueueOK) GetName() OptString {
	return s.Name
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *GetACallQueueOK) GetPhoneNumbers() []GetACallQueueOKPhoneNumbersItem {
	return s.PhoneNumbers
}

// GetSite returns the value of Site.
func (s *GetACallQueueOK) GetSite() OptGetACallQueueOKSite {
	return s.Site
}

// GetStatus returns the value of Status.
func (s *GetACallQueueOK) GetStatus() OptString {
	return s.Status
}

// GetPolicy returns the value of Policy.
func (s *GetACallQueueOK) GetPolicy() jx.Raw {
	return s.Policy
}

// SetCostCenter sets the value of CostCenter.
func (s *GetACallQueueOK) SetCostCenter(val OptString) {
	s.CostCenter = val
}

// SetDepartment sets the value of Department.
func (s *GetACallQueueOK) SetDepartment(val OptString) {
	s.Department = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetACallQueueOK) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetACallQueueOK) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *GetACallQueueOK) SetID(val OptString) {
	s.ID = val
}

// SetMembers sets the value of Members.
func (s *GetACallQueueOK) SetMembers(val OptGetACallQueueOKMembers) {
	s.Members = val
}

// SetName sets the value of Name.
func (s *GetACallQueueOK) SetName(val OptString) {
	s.Name = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *GetACallQueueOK) SetPhoneNumbers(val []GetACallQueueOKPhoneNumbersItem) {
	s.PhoneNumbers = val
}

// SetSite sets the value of Site.
func (s *GetACallQueueOK) SetSite(val OptGetACallQueueOKSite) {
	s.Site = val
}

// SetStatus sets the value of Status.
func (s *GetACallQueueOK) SetStatus(val OptString) {
	s.Status = val
}

// SetPolicy sets the value of Policy.
func (s *GetACallQueueOK) SetPolicy(val jx.Raw) {
	s.Policy = val
}

type GetACallQueueOKMembers struct {
	Users       []GetACallQueueOKMembersUsersItem       `json:"users"`
	CommonAreas []GetACallQueueOKMembersCommonAreasItem `json:"common_areas"`
}

// GetUsers returns the value of Users.
func (s *GetACallQueueOKMembers) GetUsers() []GetACallQueueOKMembersUsersItem {
	return s.Users
}

// GetCommonAreas returns the value of CommonAreas.
func (s *GetACallQueueOKMembers) GetCommonAreas() []GetACallQueueOKMembersCommonAreasItem {
	return s.CommonAreas
}

// SetUsers sets the value of Users.
func (s *GetACallQueueOKMembers) SetUsers(val []GetACallQueueOKMembersUsersItem) {
	s.Users = val
}

// SetCommonAreas sets the value of CommonAreas.
func (s *GetACallQueueOKMembers) SetCommonAreas(val []GetACallQueueOKMembersCommonAreasItem) {
	s.CommonAreas = val
}

type GetACallQueueOKMembersCommonAreasItem struct {
	// Unique identifier of the common area.
	ID OptString `json:"id"`
	// Name of the common area.
	Name OptString `json:"name"`
	// Extension ID of common area.
	ExtensionID OptString `json:"extension_id"`
}

// GetID returns the value of ID.
func (s *GetACallQueueOKMembersCommonAreasItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetACallQueueOKMembersCommonAreasItem) GetName() OptString {
	return s.Name
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetACallQueueOKMembersCommonAreasItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// SetID sets the value of ID.
func (s *GetACallQueueOKMembersCommonAreasItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetACallQueueOKMembersCommonAreasItem) SetName(val OptString) {
	s.Name = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetACallQueueOKMembersCommonAreasItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

type GetACallQueueOKMembersUsersItem struct {
	// User ID: Unique identifier of the user.
	ID OptString `json:"id"`
	// Level of the user. The value can be one of the following:
	// `manager`: A call queue manager has the privilege to change call queue settings, policy settings
	// and manage recordings and voicemail inbox. There can only be one manager for each call queue.
	// `user`: Regular user without the privileges of a manager.
	Level OptString `json:"level"`
	// Name of the user.
	Name OptString `json:"name"`
	// Determines whether the user can receive calls or not.
	ReceiveCall OptBool `json:"receive_call"`
	// Extension ID of the user.
	ExtensionID OptString `json:"extension_id"`
}

// GetID returns the value of ID.
func (s *GetACallQueueOKMembersUsersItem) GetID() OptString {
	return s.ID
}

// GetLevel returns the value of Level.
func (s *GetACallQueueOKMembersUsersItem) GetLevel() OptString {
	return s.Level
}

// GetName returns the value of Name.
func (s *GetACallQueueOKMembersUsersItem) GetName() OptString {
	return s.Name
}

// GetReceiveCall returns the value of ReceiveCall.
func (s *GetACallQueueOKMembersUsersItem) GetReceiveCall() OptBool {
	return s.ReceiveCall
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetACallQueueOKMembersUsersItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// SetID sets the value of ID.
func (s *GetACallQueueOKMembersUsersItem) SetID(val OptString) {
	s.ID = val
}

// SetLevel sets the value of Level.
func (s *GetACallQueueOKMembersUsersItem) SetLevel(val OptString) {
	s.Level = val
}

// SetName sets the value of Name.
func (s *GetACallQueueOKMembersUsersItem) SetName(val OptString) {
	s.Name = val
}

// SetReceiveCall sets the value of ReceiveCall.
func (s *GetACallQueueOKMembersUsersItem) SetReceiveCall(val OptBool) {
	s.ReceiveCall = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetACallQueueOKMembersUsersItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

type GetACallQueueOKPhoneNumbersItem struct {
	// Unique identifier of the number.
	ID OptString `json:"id"`
	// Phone number.
	Number OptString `json:"number"`
	// Source.
	Source OptString `json:"source"`
}

// GetID returns the value of ID.
func (s *GetACallQueueOKPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *GetACallQueueOKPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// GetSource returns the value of Source.
func (s *GetACallQueueOKPhoneNumbersItem) GetSource() OptString {
	return s.Source
}

// SetID sets the value of ID.
func (s *GetACallQueueOKPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *GetACallQueueOKPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

// SetSource sets the value of Source.
func (s *GetACallQueueOKPhoneNumbersItem) SetSource(val OptString) {
	s.Source = val
}

type GetACallQueueOKSite struct {
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned.
	ID OptString `json:"id"`
	// Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetACallQueueOKSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetACallQueueOKSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetACallQueueOKSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetACallQueueOKSite) SetName(val OptString) {
	s.Name = val
}

type GetACommonAreaOK struct {
	// Area code of the common area.
	AreaCode     OptString                          `json:"area_code"`
	CallingPlans []GetACommonAreaOKCallingPlansItem `json:"calling_plans"`
	// The cost center the common area belongs to.
	CostCenter OptString `json:"cost_center"`
	// The common area country information.
	Country OptGetACommonAreaOKCountry `json:"country"`
	// The department the common area belongs to.
	Department OptString `json:"department"`
	// Display name of the common area.
	DisplayName OptString `json:"display_name"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The emergency address information.
	EmergencyAddress OptGetACommonAreaOKEmergencyAddress `json:"emergency_address"`
	// Common area ID or common area extension ID.
	ID                OptString                               `json:"id"`
	OutboundCallerIds []GetACommonAreaOKOutboundCallerIdsItem `json:"outbound_caller_ids"`
	PhoneNumbers      []GetACommonAreaOKPhoneNumbersItem      `json:"phone_numbers"`
	// A list of the common area's policies. Policies are exceptions to the common area's restrictions.
	Policy OptGetACommonAreaOKPolicy `json:"policy"`
	Site   OptGetACommonAreaOKSite   `json:"site"`
	// Status of the common area. It can be either `online` or `offline`.
	Status OptString `json:"status"`
}

// GetAreaCode returns the value of AreaCode.
func (s *GetACommonAreaOK) GetAreaCode() OptString {
	return s.AreaCode
}

// GetCallingPlans returns the value of CallingPlans.
func (s *GetACommonAreaOK) GetCallingPlans() []GetACommonAreaOKCallingPlansItem {
	return s.CallingPlans
}

// GetCostCenter returns the value of CostCenter.
func (s *GetACommonAreaOK) GetCostCenter() OptString {
	return s.CostCenter
}

// GetCountry returns the value of Country.
func (s *GetACommonAreaOK) GetCountry() OptGetACommonAreaOKCountry {
	return s.Country
}

// GetDepartment returns the value of Department.
func (s *GetACommonAreaOK) GetDepartment() OptString {
	return s.Department
}

// GetDisplayName returns the value of DisplayName.
func (s *GetACommonAreaOK) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetACommonAreaOK) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetEmergencyAddress returns the value of EmergencyAddress.
func (s *GetACommonAreaOK) GetEmergencyAddress() OptGetACommonAreaOKEmergencyAddress {
	return s.EmergencyAddress
}

// GetID returns the value of ID.
func (s *GetACommonAreaOK) GetID() OptString {
	return s.ID
}

// GetOutboundCallerIds returns the value of OutboundCallerIds.
func (s *GetACommonAreaOK) GetOutboundCallerIds() []GetACommonAreaOKOutboundCallerIdsItem {
	return s.OutboundCallerIds
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *GetACommonAreaOK) GetPhoneNumbers() []GetACommonAreaOKPhoneNumbersItem {
	return s.PhoneNumbers
}

// GetPolicy returns the value of Policy.
func (s *GetACommonAreaOK) GetPolicy() OptGetACommonAreaOKPolicy {
	return s.Policy
}

// GetSite returns the value of Site.
func (s *GetACommonAreaOK) GetSite() OptGetACommonAreaOKSite {
	return s.Site
}

// GetStatus returns the value of Status.
func (s *GetACommonAreaOK) GetStatus() OptString {
	return s.Status
}

// SetAreaCode sets the value of AreaCode.
func (s *GetACommonAreaOK) SetAreaCode(val OptString) {
	s.AreaCode = val
}

// SetCallingPlans sets the value of CallingPlans.
func (s *GetACommonAreaOK) SetCallingPlans(val []GetACommonAreaOKCallingPlansItem) {
	s.CallingPlans = val
}

// SetCostCenter sets the value of CostCenter.
func (s *GetACommonAreaOK) SetCostCenter(val OptString) {
	s.CostCenter = val
}

// SetCountry sets the value of Country.
func (s *GetACommonAreaOK) SetCountry(val OptGetACommonAreaOKCountry) {
	s.Country = val
}

// SetDepartment sets the value of Department.
func (s *GetACommonAreaOK) SetDepartment(val OptString) {
	s.Department = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetACommonAreaOK) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetACommonAreaOK) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetEmergencyAddress sets the value of EmergencyAddress.
func (s *GetACommonAreaOK) SetEmergencyAddress(val OptGetACommonAreaOKEmergencyAddress) {
	s.EmergencyAddress = val
}

// SetID sets the value of ID.
func (s *GetACommonAreaOK) SetID(val OptString) {
	s.ID = val
}

// SetOutboundCallerIds sets the value of OutboundCallerIds.
func (s *GetACommonAreaOK) SetOutboundCallerIds(val []GetACommonAreaOKOutboundCallerIdsItem) {
	s.OutboundCallerIds = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *GetACommonAreaOK) SetPhoneNumbers(val []GetACommonAreaOKPhoneNumbersItem) {
	s.PhoneNumbers = val
}

// SetPolicy sets the value of Policy.
func (s *GetACommonAreaOK) SetPolicy(val OptGetACommonAreaOKPolicy) {
	s.Policy = val
}

// SetSite sets the value of Site.
func (s *GetACommonAreaOK) SetSite(val OptGetACommonAreaOKSite) {
	s.Site = val
}

// SetStatus sets the value of Status.
func (s *GetACommonAreaOK) SetStatus(val OptString) {
	s.Status = val
}

type GetACommonAreaOKCallingPlansItem struct {
	// Calling plan name.
	Name OptString `json:"name"`
	// Calling plan type.
	Type OptInt `json:"type"`
	// Billing account ID. Displayed when the common area is in India.
	BillingAccountID OptString `json:"billing_account_id"`
	// Billing account name. Displayed when the common area is in India.
	BillingAccountName OptString `json:"billing_account_name"`
}

// GetName returns the value of Name.
func (s *GetACommonAreaOKCallingPlansItem) GetName() OptString {
	return s.Name
}

// GetType returns the value of Type.
func (s *GetACommonAreaOKCallingPlansItem) GetType() OptInt {
	return s.Type
}

// GetBillingAccountID returns the value of BillingAccountID.
func (s *GetACommonAreaOKCallingPlansItem) GetBillingAccountID() OptString {
	return s.BillingAccountID
}

// GetBillingAccountName returns the value of BillingAccountName.
func (s *GetACommonAreaOKCallingPlansItem) GetBillingAccountName() OptString {
	return s.BillingAccountName
}

// SetName sets the value of Name.
func (s *GetACommonAreaOKCallingPlansItem) SetName(val OptString) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *GetACommonAreaOKCallingPlansItem) SetType(val OptInt) {
	s.Type = val
}

// SetBillingAccountID sets the value of BillingAccountID.
func (s *GetACommonAreaOKCallingPlansItem) SetBillingAccountID(val OptString) {
	s.BillingAccountID = val
}

// SetBillingAccountName sets the value of BillingAccountName.
func (s *GetACommonAreaOKCallingPlansItem) SetBillingAccountName(val OptString) {
	s.BillingAccountName = val
}

// The common area country information.
type GetACommonAreaOKCountry struct {
	// Two-lettered country [code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	Code OptString `json:"code"`
	// The country calling code.
	CountryCode OptString `json:"country_code"`
	// The common area's country name.
	Name OptString `json:"name"`
}

// GetCode returns the value of Code.
func (s *GetACommonAreaOKCountry) GetCode() OptString {
	return s.Code
}

// GetCountryCode returns the value of CountryCode.
func (s *GetACommonAreaOKCountry) GetCountryCode() OptString {
	return s.CountryCode
}

// GetName returns the value of Name.
func (s *GetACommonAreaOKCountry) GetName() OptString {
	return s.Name
}

// SetCode sets the value of Code.
func (s *GetACommonAreaOKCountry) SetCode(val OptString) {
	s.Code = val
}

// SetCountryCode sets the value of CountryCode.
func (s *GetACommonAreaOKCountry) SetCountryCode(val OptString) {
	s.CountryCode = val
}

// SetName sets the value of Name.
func (s *GetACommonAreaOKCountry) SetName(val OptString) {
	s.Name = val
}

// The emergency address information.
type GetACommonAreaOKEmergencyAddress struct {
	// The emergency location address line 1.
	AddressLine1 OptString `json:"address_line1"`
	// The emergency location address line 2.
	AddressLine2 OptString `json:"address_line2"`
	// The emergency location address city.
	City OptString `json:"city"`
	// The country of the emergency location.
	Country OptString `json:"country"`
	// The emergency location address ID.
	ID OptString `json:"id"`
	// The emergency location address state code.
	StateCode OptString `json:"state_code"`
	// The emergency address verification status.:
	// * `1` &mdash; Verification not Required.
	// * `2` &mdash; Unverified.
	// * `3` &mdash; Verification requested.
	// * `4` &mdash; Verfied.
	// * `5` &mdash; Rejected.
	// * `6` &mdash; Verification failed.
	Status OptInt `json:"status"`
	// The emergency address Zip Code.
	Zip OptString `json:"zip"`
}

// GetAddressLine1 returns the value of AddressLine1.
func (s *GetACommonAreaOKEmergencyAddress) GetAddressLine1() OptString {
	return s.AddressLine1
}

// GetAddressLine2 returns the value of AddressLine2.
func (s *GetACommonAreaOKEmergencyAddress) GetAddressLine2() OptString {
	return s.AddressLine2
}

// GetCity returns the value of City.
func (s *GetACommonAreaOKEmergencyAddress) GetCity() OptString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *GetACommonAreaOKEmergencyAddress) GetCountry() OptString {
	return s.Country
}

// GetID returns the value of ID.
func (s *GetACommonAreaOKEmergencyAddress) GetID() OptString {
	return s.ID
}

// GetStateCode returns the value of StateCode.
func (s *GetACommonAreaOKEmergencyAddress) GetStateCode() OptString {
	return s.StateCode
}

// GetStatus returns the value of Status.
func (s *GetACommonAreaOKEmergencyAddress) GetStatus() OptInt {
	return s.Status
}

// GetZip returns the value of Zip.
func (s *GetACommonAreaOKEmergencyAddress) GetZip() OptString {
	return s.Zip
}

// SetAddressLine1 sets the value of AddressLine1.
func (s *GetACommonAreaOKEmergencyAddress) SetAddressLine1(val OptString) {
	s.AddressLine1 = val
}

// SetAddressLine2 sets the value of AddressLine2.
func (s *GetACommonAreaOKEmergencyAddress) SetAddressLine2(val OptString) {
	s.AddressLine2 = val
}

// SetCity sets the value of City.
func (s *GetACommonAreaOKEmergencyAddress) SetCity(val OptString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *GetACommonAreaOKEmergencyAddress) SetCountry(val OptString) {
	s.Country = val
}

// SetID sets the value of ID.
func (s *GetACommonAreaOKEmergencyAddress) SetID(val OptString) {
	s.ID = val
}

// SetStateCode sets the value of StateCode.
func (s *GetACommonAreaOKEmergencyAddress) SetStateCode(val OptString) {
	s.StateCode = val
}

// SetStatus sets the value of Status.
func (s *GetACommonAreaOKEmergencyAddress) SetStatus(val OptInt) {
	s.Status = val
}

// SetZip sets the value of Zip.
func (s *GetACommonAreaOKEmergencyAddress) SetZip(val OptString) {
	s.Zip = val
}

type GetACommonAreaOKOutboundCallerIdsItem struct {
	// Whether the outbound caller ID is the default one: if `true`, the outbound caller ID is the
	// default caller ID.
	IsDefault OptBool `json:"is_default"`
	// Outbound caller name.
	Name OptString `json:"name"`
	// Outbound caller number.
	Number OptString `json:"number"`
}

// GetIsDefault returns the value of IsDefault.
func (s *GetACommonAreaOKOutboundCallerIdsItem) GetIsDefault() OptBool {
	return s.IsDefault
}

// GetName returns the value of Name.
func (s *GetACommonAreaOKOutboundCallerIdsItem) GetName() OptString {
	return s.Name
}

// GetNumber returns the value of Number.
func (s *GetACommonAreaOKOutboundCallerIdsItem) GetNumber() OptString {
	return s.Number
}

// SetIsDefault sets the value of IsDefault.
func (s *GetACommonAreaOKOutboundCallerIdsItem) SetIsDefault(val OptBool) {
	s.IsDefault = val
}

// SetName sets the value of Name.
func (s *GetACommonAreaOKOutboundCallerIdsItem) SetName(val OptString) {
	s.Name = val
}

// SetNumber sets the value of Number.
func (s *GetACommonAreaOKOutboundCallerIdsItem) SetNumber(val OptString) {
	s.Number = val
}

type GetACommonAreaOKPhoneNumbersItem struct {
	// The display name of the phone number.
	DisplayName OptString `json:"display_name"`
	// The phone number ID.
	ID OptString `json:"id"`
	// The phone number.
	Number OptString `json:"number"`
	// Phone number source: `internal` or `external`.
	Source OptString `json:"source"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetACommonAreaOKPhoneNumbersItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetID returns the value of ID.
func (s *GetACommonAreaOKPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *GetACommonAreaOKPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// GetSource returns the value of Source.
func (s *GetACommonAreaOKPhoneNumbersItem) GetSource() OptString {
	return s.Source
}

// SetDisplayName sets the value of DisplayName.
func (s *GetACommonAreaOKPhoneNumbersItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetID sets the value of ID.
func (s *GetACommonAreaOKPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *GetACommonAreaOKPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

// SetSource sets the value of Source.
func (s *GetACommonAreaOKPhoneNumbersItem) SetSource(val OptString) {
	s.Source = val
}

// A list of the common area's policies. Policies are exceptions to the common area's restrictions.
type GetACommonAreaOKPolicy struct {
	// Whether the current extension can make international calls outside of their calling plan.
	InternationalCalling OptGetACommonAreaOKPolicyInternationalCalling `json:"international_calling"`
	OutboundCalling      OptGetACommonAreaOKPolicyOutboundCalling      `json:"outbound_calling"`
}

// GetInternationalCalling returns the value of InternationalCalling.
func (s *GetACommonAreaOKPolicy) GetInternationalCalling() OptGetACommonAreaOKPolicyInternationalCalling {
	return s.InternationalCalling
}

// GetOutboundCalling returns the value of OutboundCalling.
func (s *GetACommonAreaOKPolicy) GetOutboundCalling() OptGetACommonAreaOKPolicyOutboundCalling {
	return s.OutboundCalling
}

// SetInternationalCalling sets the value of InternationalCalling.
func (s *GetACommonAreaOKPolicy) SetInternationalCalling(val OptGetACommonAreaOKPolicyInternationalCalling) {
	s.InternationalCalling = val
}

// SetOutboundCalling sets the value of OutboundCalling.
func (s *GetACommonAreaOKPolicy) SetOutboundCalling(val OptGetACommonAreaOKPolicyOutboundCalling) {
	s.OutboundCalling = val
}

// Whether the current extension can make international calls outside of their calling plan.
type GetACommonAreaOKPolicyInternationalCalling struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetACommonAreaOKPolicyInternationalCalling) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetACommonAreaOKPolicyInternationalCalling) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetACommonAreaOKPolicyInternationalCalling) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetACommonAreaOKPolicyInternationalCalling) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetACommonAreaOKPolicyInternationalCalling) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetACommonAreaOKPolicyInternationalCalling) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetACommonAreaOKPolicyInternationalCalling) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetACommonAreaOKPolicyInternationalCalling) SetModified(val OptBool) {
	s.Modified = val
}

type GetACommonAreaOKPolicyOutboundCalling struct {
	// Whether to define calling rules to restrict user or extension from calling specific countries,
	// cities or numbers.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetACommonAreaOKPolicyOutboundCalling) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetACommonAreaOKPolicyOutboundCalling) GetLocked() OptBool {
	return s.Locked
}

// GetModified returns the value of Modified.
func (s *GetACommonAreaOKPolicyOutboundCalling) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetACommonAreaOKPolicyOutboundCalling) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetACommonAreaOKPolicyOutboundCalling) SetLocked(val OptBool) {
	s.Locked = val
}

// SetModified sets the value of Modified.
func (s *GetACommonAreaOKPolicyOutboundCalling) SetModified(val OptBool) {
	s.Modified = val
}

type GetACommonAreaOKSite struct {
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is
	// assigned.
	ID OptString `json:"id"`
	// Name of the site.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetACommonAreaOKSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetACommonAreaOKSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetACommonAreaOKSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetACommonAreaOKSite) SetName(val OptString) {
	s.Name = val
}

type GetADeviceOK struct {
	// User to whom the device has been assigned.
	Assignee  OptGetADeviceOKAssignee     `json:"assignee"`
	Assignees []GetADeviceOKAssigneesItem `json:"assignees"`
	// Includes manufacturer name and the model name.
	DeviceType OptString `json:"device_type"`
	// Display name of the device.
	DisplayName OptString `json:"display_name"`
	// Device ID - Unique identifier of the Device.
	ID OptString `json:"id"`
	// MAC address or serial number of the device.
	MACAddress OptString `json:"mac_address"`
	// Provisioning information of a device.
	Provision OptGetADeviceOKProvision `json:"provision"`
	Site      OptGetADeviceOKSite      `json:"site"`
	// Status of the device. The value is either `online` or `offline`.
	Status OptString `json:"status"`
	// Provision template id. Supported only by some devices. Empty string represents 'No value set'.
	ProvisionTemplateID OptString `json:"provision_template_id"`
}

// GetAssignee returns the value of Assignee.
func (s *GetADeviceOK) GetAssignee() OptGetADeviceOKAssignee {
	return s.Assignee
}

// GetAssignees returns the value of Assignees.
func (s *GetADeviceOK) GetAssignees() []GetADeviceOKAssigneesItem {
	return s.Assignees
}

// GetDeviceType returns the value of DeviceType.
func (s *GetADeviceOK) GetDeviceType() OptString {
	return s.DeviceType
}

// GetDisplayName returns the value of DisplayName.
func (s *GetADeviceOK) GetDisplayName() OptString {
	return s.DisplayName
}

// GetID returns the value of ID.
func (s *GetADeviceOK) GetID() OptString {
	return s.ID
}

// GetMACAddress returns the value of MACAddress.
func (s *GetADeviceOK) GetMACAddress() OptString {
	return s.MACAddress
}

// GetProvision returns the value of Provision.
func (s *GetADeviceOK) GetProvision() OptGetADeviceOKProvision {
	return s.Provision
}

// GetSite returns the value of Site.
func (s *GetADeviceOK) GetSite() OptGetADeviceOKSite {
	return s.Site
}

// GetStatus returns the value of Status.
func (s *GetADeviceOK) GetStatus() OptString {
	return s.Status
}

// GetProvisionTemplateID returns the value of ProvisionTemplateID.
func (s *GetADeviceOK) GetProvisionTemplateID() OptString {
	return s.ProvisionTemplateID
}

// SetAssignee sets the value of Assignee.
func (s *GetADeviceOK) SetAssignee(val OptGetADeviceOKAssignee) {
	s.Assignee = val
}

// SetAssignees sets the value of Assignees.
func (s *GetADeviceOK) SetAssignees(val []GetADeviceOKAssigneesItem) {
	s.Assignees = val
}

// SetDeviceType sets the value of DeviceType.
func (s *GetADeviceOK) SetDeviceType(val OptString) {
	s.DeviceType = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetADeviceOK) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetID sets the value of ID.
func (s *GetADeviceOK) SetID(val OptString) {
	s.ID = val
}

// SetMACAddress sets the value of MACAddress.
func (s *GetADeviceOK) SetMACAddress(val OptString) {
	s.MACAddress = val
}

// SetProvision sets the value of Provision.
func (s *GetADeviceOK) SetProvision(val OptGetADeviceOKProvision) {
	s.Provision = val
}

// SetSite sets the value of Site.
func (s *GetADeviceOK) SetSite(val OptGetADeviceOKSite) {
	s.Site = val
}

// SetStatus sets the value of Status.
func (s *GetADeviceOK) SetStatus(val OptString) {
	s.Status = val
}

// SetProvisionTemplateID sets the value of ProvisionTemplateID.
func (s *GetADeviceOK) SetProvisionTemplateID(val OptString) {
	s.ProvisionTemplateID = val
}

// User to whom the device has been assigned.
type GetADeviceOKAssignee struct {
	// Extension number of the Zoom Phone used by the `user` or `commonArea`.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// ID of the user or commonArea to whom the device has been assigned.
	ID OptString `json:"id"`
	// Name.
	Name OptString `json:"name"`
	// Type of the assignee. Available only if the device is assigned.
	ExtensionType OptString `json:"extension_type"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetADeviceOKAssignee) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *GetADeviceOKAssignee) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetADeviceOKAssignee) GetName() OptString {
	return s.Name
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetADeviceOKAssignee) GetExtensionType() OptString {
	return s.ExtensionType
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetADeviceOKAssignee) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *GetADeviceOKAssignee) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetADeviceOKAssignee) SetName(val OptString) {
	s.Name = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetADeviceOKAssignee) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

type GetADeviceOKAssigneesItem struct {
	// Extension number of the Zoom Phone used by the `user` or `commonArea`.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// ID of the user or commonArea to whom the device has been assigned.
	ID OptString `json:"id"`
	// Name.
	Name OptString `json:"name"`
	// Type of the assignee. Available only if the device is assigned.
	ExtensionType OptString `json:"extension_type"`
	// Extension ID of the `user` or `common area`.
	ExtensionID OptString `json:"extension_id"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetADeviceOKAssigneesItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *GetADeviceOKAssigneesItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetADeviceOKAssigneesItem) GetName() OptString {
	return s.Name
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetADeviceOKAssigneesItem) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetADeviceOKAssigneesItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetADeviceOKAssigneesItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *GetADeviceOKAssigneesItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetADeviceOKAssigneesItem) SetName(val OptString) {
	s.Name = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetADeviceOKAssigneesItem) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetADeviceOKAssigneesItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// Provisioning information of a device.
type GetADeviceOKProvision struct {
	// SIP Account details registered during the device provisioning process. This object will only be
	// returned if manual provisioning was used for the device.
	SipAccounts []GetADeviceOKProvisionSipAccountsItem `json:"sip_accounts"`
	// [Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one
	// of the following:
	// * `ztp` : Zero touch provisioning.
	// * `assisted`: Assisted provisioning.
	// * `manual`: Manual provisioning.
	Type OptString `json:"type"`
	// Provisioning URL. This field will only be returned for devices that were provisioned via
	// `assisted` provisioning type.
	URL OptString `json:"url"`
}

// GetSipAccounts returns the value of SipAccounts.
func (s *GetADeviceOKProvision) GetSipAccounts() []GetADeviceOKProvisionSipAccountsItem {
	return s.SipAccounts
}

// GetType returns the value of Type.
func (s *GetADeviceOKProvision) GetType() OptString {
	return s.Type
}

// GetURL returns the value of URL.
func (s *GetADeviceOKProvision) GetURL() OptString {
	return s.URL
}

// SetSipAccounts sets the value of SipAccounts.
func (s *GetADeviceOKProvision) SetSipAccounts(val []GetADeviceOKProvisionSipAccountsItem) {
	s.SipAccounts = val
}

// SetType sets the value of Type.
func (s *GetADeviceOKProvision) SetType(val OptString) {
	s.Type = val
}

// SetURL sets the value of URL.
func (s *GetADeviceOKProvision) SetURL(val OptString) {
	s.URL = val
}

type GetADeviceOKProvisionSipAccountsItem struct {
	// Authorization ID of the SIP account provided in the provisioning process.
	AuthorizationID OptString `json:"authorization_id"`
	// Outbound proxy provided in the provisioning process.
	OutboundProxy OptString `json:"outbound_proxy"`
	// Password entered during the  provisioning process.
	Password OptString `json:"password"`
	// The secondary outbound proxy provided in the provisioning process.
	SecondaryOutboundProxy OptString `json:"secondary_outbound_proxy"`
	// Return additional provisioning information with generic device SIP credentials.
	SharedLine OptGetADeviceOKProvisionSipAccountsItemSharedLine `json:"shared_line"`
	// SIP Domain provided in the provisioning process.
	SipDomain OptString `json:"sip_domain"`
	// User name of the SIP account provided in the provisioning process.
	UserName OptString `json:"user_name"`
}

// GetAuthorizationID returns the value of AuthorizationID.
func (s *GetADeviceOKProvisionSipAccountsItem) GetAuthorizationID() OptString {
	return s.AuthorizationID
}

// GetOutboundProxy returns the value of OutboundProxy.
func (s *GetADeviceOKProvisionSipAccountsItem) GetOutboundProxy() OptString {
	return s.OutboundProxy
}

// GetPassword returns the value of Password.
func (s *GetADeviceOKProvisionSipAccountsItem) GetPassword() OptString {
	return s.Password
}

// GetSecondaryOutboundProxy returns the value of SecondaryOutboundProxy.
func (s *GetADeviceOKProvisionSipAccountsItem) GetSecondaryOutboundProxy() OptString {
	return s.SecondaryOutboundProxy
}

// GetSharedLine returns the value of SharedLine.
func (s *GetADeviceOKProvisionSipAccountsItem) GetSharedLine() OptGetADeviceOKProvisionSipAccountsItemSharedLine {
	return s.SharedLine
}

// GetSipDomain returns the value of SipDomain.
func (s *GetADeviceOKProvisionSipAccountsItem) GetSipDomain() OptString {
	return s.SipDomain
}

// GetUserName returns the value of UserName.
func (s *GetADeviceOKProvisionSipAccountsItem) GetUserName() OptString {
	return s.UserName
}

// SetAuthorizationID sets the value of AuthorizationID.
func (s *GetADeviceOKProvisionSipAccountsItem) SetAuthorizationID(val OptString) {
	s.AuthorizationID = val
}

// SetOutboundProxy sets the value of OutboundProxy.
func (s *GetADeviceOKProvisionSipAccountsItem) SetOutboundProxy(val OptString) {
	s.OutboundProxy = val
}

// SetPassword sets the value of Password.
func (s *GetADeviceOKProvisionSipAccountsItem) SetPassword(val OptString) {
	s.Password = val
}

// SetSecondaryOutboundProxy sets the value of SecondaryOutboundProxy.
func (s *GetADeviceOKProvisionSipAccountsItem) SetSecondaryOutboundProxy(val OptString) {
	s.SecondaryOutboundProxy = val
}

// SetSharedLine sets the value of SharedLine.
func (s *GetADeviceOKProvisionSipAccountsItem) SetSharedLine(val OptGetADeviceOKProvisionSipAccountsItemSharedLine) {
	s.SharedLine = val
}

// SetSipDomain sets the value of SipDomain.
func (s *GetADeviceOKProvisionSipAccountsItem) SetSipDomain(val OptString) {
	s.SipDomain = val
}

// SetUserName sets the value of UserName.
func (s *GetADeviceOKProvisionSipAccountsItem) SetUserName(val OptString) {
	s.UserName = val
}

// Return additional provisioning information with generic device SIP credentials.
type GetADeviceOKProvisionSipAccountsItemSharedLine struct {
	// Alias.
	Alias OptString `json:"alias"`
	// Line subscription.
	LineSubscription OptGetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription `json:"line_subscription"`
	// Outbound caller ID.
	OutboundCallerID OptString `json:"outbound_caller_id"`
}

// GetAlias returns the value of Alias.
func (s *GetADeviceOKProvisionSipAccountsItemSharedLine) GetAlias() OptString {
	return s.Alias
}

// GetLineSubscription returns the value of LineSubscription.
func (s *GetADeviceOKProvisionSipAccountsItemSharedLine) GetLineSubscription() OptGetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription {
	return s.LineSubscription
}

// GetOutboundCallerID returns the value of OutboundCallerID.
func (s *GetADeviceOKProvisionSipAccountsItemSharedLine) GetOutboundCallerID() OptString {
	return s.OutboundCallerID
}

// SetAlias sets the value of Alias.
func (s *GetADeviceOKProvisionSipAccountsItemSharedLine) SetAlias(val OptString) {
	s.Alias = val
}

// SetLineSubscription sets the value of LineSubscription.
func (s *GetADeviceOKProvisionSipAccountsItemSharedLine) SetLineSubscription(val OptGetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription) {
	s.LineSubscription = val
}

// SetOutboundCallerID sets the value of OutboundCallerID.
func (s *GetADeviceOKProvisionSipAccountsItemSharedLine) SetOutboundCallerID(val OptString) {
	s.OutboundCallerID = val
}

// Line subscription.
type GetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription struct {
	// Display name.
	DisplayName OptString `json:"display_name"`
	// Extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// Phone number.
	PhoneNumber OptString `json:"phone_number"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *GetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// SetDisplayName sets the value of DisplayName.
func (s *GetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *GetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

type GetADeviceOKSite struct {
	// The [site](https://support.zoom.us/hc/en-us/articles/360020809672) of the phone user.
	ID OptString `json:"id"`
	// Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672).
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetADeviceOKSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetADeviceOKSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetADeviceOKSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetADeviceOKSite) SetName(val OptString) {
	s.Name = val
}

type GetAExternalContactOK struct {
	// The external contact's description.
	Description OptString `json:"description"`
	// The external contact's email address.
	Email OptString `json:"email"`
	// The external contact's extension number.
	ExtensionNumber OptString `json:"extension_number"`
	// The Zoom-generated external contact ID.
	ExternalContactID OptString `json:"external_contact_id"`
	// The customer-configured external contact ID.
	ID OptString `json:"id"`
	// The external contact's username or extension display name.
	Name OptString `json:"name"`
	// The external contact's phone numbers.
	PhoneNumbers []string `json:"phone_numbers"`
	// Whether to allow the automatic call recording.
	AutoCallRecorded OptBool `json:"auto_call_recorded"`
}

// GetDescription returns the value of Description.
func (s *GetAExternalContactOK) GetDescription() OptString {
	return s.Description
}

// GetEmail returns the value of Email.
func (s *GetAExternalContactOK) GetEmail() OptString {
	return s.Email
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetAExternalContactOK) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetExternalContactID returns the value of ExternalContactID.
func (s *GetAExternalContactOK) GetExternalContactID() OptString {
	return s.ExternalContactID
}

// GetID returns the value of ID.
func (s *GetAExternalContactOK) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetAExternalContactOK) GetName() OptString {
	return s.Name
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *GetAExternalContactOK) GetPhoneNumbers() []string {
	return s.PhoneNumbers
}

// GetAutoCallRecorded returns the value of AutoCallRecorded.
func (s *GetAExternalContactOK) GetAutoCallRecorded() OptBool {
	return s.AutoCallRecorded
}

// SetDescription sets the value of Description.
func (s *GetAExternalContactOK) SetDescription(val OptString) {
	s.Description = val
}

// SetEmail sets the value of Email.
func (s *GetAExternalContactOK) SetEmail(val OptString) {
	s.Email = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetAExternalContactOK) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetExternalContactID sets the value of ExternalContactID.
func (s *GetAExternalContactOK) SetExternalContactID(val OptString) {
	s.ExternalContactID = val
}

// SetID sets the value of ID.
func (s *GetAExternalContactOK) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetAExternalContactOK) SetName(val OptString) {
	s.Name = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *GetAExternalContactOK) SetPhoneNumbers(val []string) {
	s.PhoneNumbers = val
}

// SetAutoCallRecorded sets the value of AutoCallRecorded.
func (s *GetAExternalContactOK) SetAutoCallRecorded(val OptBool) {
	s.AutoCallRecorded = val
}

type GetASharedLineGroupOK struct {
	// The display name of the shared line group.
	DisplayName OptString `json:"display_name"`
	// The extension ID of the shared line group.
	ExtensionID OptString `json:"extension_id"`
	// The extension number assigned to the shared line group.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The unique identifier of the shared line group.
	ID OptString `json:"id"`
	// This field allows you to view current [members](https://support.zoom.
	// us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups#h_3ffbbb77-a009-4c09-91e4-81fc264b61d6) of the shared line group.
	Members OptGetASharedLineGroupOKMembers `json:"members"`
	// The object representing information about phone number(s) assigned to the group.
	PhoneNumbers []GetASharedLineGroupOKPhoneNumbersItem `json:"phone_numbers"`
	// If you have multiple direct phone numbers assigned to the shared line group, this is the primary
	// number selected for desk phones.
	// The primary number shares the same line as the extension number. This means if a caller is routed
	// to the shared line group through an auto receptionist, the line associated with the primary number
	// will be used.
	PrimaryNumber OptString `json:"primary_number"`
	// The site assigned to the shared line group.
	Site OptGetASharedLineGroupOKSite `json:"site"`
	// The status of the shared line group.
	Status OptString `json:"status"`
	// The timezone used for the business hours.
	Timezone OptString `json:"timezone"`
	// The shared line group policy list.
	Policy OptGetASharedLineGroupOKPolicy `json:"policy"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetASharedLineGroupOK) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetASharedLineGroupOK) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetASharedLineGroupOK) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *GetASharedLineGroupOK) GetID() OptString {
	return s.ID
}

// GetMembers returns the value of Members.
func (s *GetASharedLineGroupOK) GetMembers() OptGetASharedLineGroupOKMembers {
	return s.Members
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *GetASharedLineGroupOK) GetPhoneNumbers() []GetASharedLineGroupOKPhoneNumbersItem {
	return s.PhoneNumbers
}

// GetPrimaryNumber returns the value of PrimaryNumber.
func (s *GetASharedLineGroupOK) GetPrimaryNumber() OptString {
	return s.PrimaryNumber
}

// GetSite returns the value of Site.
func (s *GetASharedLineGroupOK) GetSite() OptGetASharedLineGroupOKSite {
	return s.Site
}

// GetStatus returns the value of Status.
func (s *GetASharedLineGroupOK) GetStatus() OptString {
	return s.Status
}

// GetTimezone returns the value of Timezone.
func (s *GetASharedLineGroupOK) GetTimezone() OptString {
	return s.Timezone
}

// GetPolicy returns the value of Policy.
func (s *GetASharedLineGroupOK) GetPolicy() OptGetASharedLineGroupOKPolicy {
	return s.Policy
}

// SetDisplayName sets the value of DisplayName.
func (s *GetASharedLineGroupOK) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetASharedLineGroupOK) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetASharedLineGroupOK) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *GetASharedLineGroupOK) SetID(val OptString) {
	s.ID = val
}

// SetMembers sets the value of Members.
func (s *GetASharedLineGroupOK) SetMembers(val OptGetASharedLineGroupOKMembers) {
	s.Members = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *GetASharedLineGroupOK) SetPhoneNumbers(val []GetASharedLineGroupOKPhoneNumbersItem) {
	s.PhoneNumbers = val
}

// SetPrimaryNumber sets the value of PrimaryNumber.
func (s *GetASharedLineGroupOK) SetPrimaryNumber(val OptString) {
	s.PrimaryNumber = val
}

// SetSite sets the value of Site.
func (s *GetASharedLineGroupOK) SetSite(val OptGetASharedLineGroupOKSite) {
	s.Site = val
}

// SetStatus sets the value of Status.
func (s *GetASharedLineGroupOK) SetStatus(val OptString) {
	s.Status = val
}

// SetTimezone sets the value of Timezone.
func (s *GetASharedLineGroupOK) SetTimezone(val OptString) {
	s.Timezone = val
}

// SetPolicy sets the value of Policy.
func (s *GetASharedLineGroupOK) SetPolicy(val OptGetASharedLineGroupOKPolicy) {
	s.Policy = val
}

// This field allows you to view current [members](https://support.zoom.
// us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups#h_3ffbbb77-a009-4c09-91e4-81fc264b61d6) of the shared line group.
type GetASharedLineGroupOKMembers struct {
	// The users who are members of the shared line group.
	Users       []GetASharedLineGroupOKMembersUsersItem       `json:"users"`
	CommonAreas []GetASharedLineGroupOKMembersCommonAreasItem `json:"common_areas"`
}

// GetUsers returns the value of Users.
func (s *GetASharedLineGroupOKMembers) GetUsers() []GetASharedLineGroupOKMembersUsersItem {
	return s.Users
}

// GetCommonAreas returns the value of CommonAreas.
func (s *GetASharedLineGroupOKMembers) GetCommonAreas() []GetASharedLineGroupOKMembersCommonAreasItem {
	return s.CommonAreas
}

// SetUsers sets the value of Users.
func (s *GetASharedLineGroupOKMembers) SetUsers(val []GetASharedLineGroupOKMembersUsersItem) {
	s.Users = val
}

// SetCommonAreas sets the value of CommonAreas.
func (s *GetASharedLineGroupOKMembers) SetCommonAreas(val []GetASharedLineGroupOKMembersCommonAreasItem) {
	s.CommonAreas = val
}

type GetASharedLineGroupOKMembersCommonAreasItem struct {
	// The unique identifier of the common area.
	ID OptString `json:"id"`
	// The name of the common area.
	Name OptString `json:"name"`
	// The extension ID of the common area.
	ExtensionID OptString `json:"extension_id"`
}

// GetID returns the value of ID.
func (s *GetASharedLineGroupOKMembersCommonAreasItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetASharedLineGroupOKMembersCommonAreasItem) GetName() OptString {
	return s.Name
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetASharedLineGroupOKMembersCommonAreasItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// SetID sets the value of ID.
func (s *GetASharedLineGroupOKMembersCommonAreasItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetASharedLineGroupOKMembersCommonAreasItem) SetName(val OptString) {
	s.Name = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetASharedLineGroupOKMembersCommonAreasItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

type GetASharedLineGroupOKMembersUsersItem struct {
	// The unique identifier of the user.
	ID OptString `json:"id"`
	// The name of the user.
	Name OptString `json:"name"`
	// The extension ID of the user.
	ExtensionID OptString `json:"extension_id"`
}

// GetID returns the value of ID.
func (s *GetASharedLineGroupOKMembersUsersItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetASharedLineGroupOKMembersUsersItem) GetName() OptString {
	return s.Name
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetASharedLineGroupOKMembersUsersItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// SetID sets the value of ID.
func (s *GetASharedLineGroupOKMembersUsersItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetASharedLineGroupOKMembersUsersItem) SetName(val OptString) {
	s.Name = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetASharedLineGroupOKMembersUsersItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

type GetASharedLineGroupOKPhoneNumbersItem struct {
	// The unique identifier of the phone number.
	ID OptString `json:"id"`
	// The phone number in E164 format.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *GetASharedLineGroupOKPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *GetASharedLineGroupOKPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *GetASharedLineGroupOKPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *GetASharedLineGroupOKPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

// The shared line group policy list.
type GetASharedLineGroupOKPolicy struct {
	// The shared voicemail access member list.
	VoicemailAccessMembers []GetASharedLineGroupOKPolicyVoicemailAccessMembersItem `json:"voicemail_access_members"`
}

// GetVoicemailAccessMembers returns the value of VoicemailAccessMembers.
func (s *GetASharedLineGroupOKPolicy) GetVoicemailAccessMembers() []GetASharedLineGroupOKPolicyVoicemailAccessMembersItem {
	return s.VoicemailAccessMembers
}

// SetVoicemailAccessMembers sets the value of VoicemailAccessMembers.
func (s *GetASharedLineGroupOKPolicy) SetVoicemailAccessMembers(val []GetASharedLineGroupOKPolicyVoicemailAccessMembersItem) {
	s.VoicemailAccessMembers = val
}

// Merged schema.
type GetASharedLineGroupOKPolicyVoicemailAccessMembersItem struct {
	// The Zoom user ID or email or common area ID to share or update the access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// This field specifies whether the member has download permissions. Not applicable to `commonArea`.
	// The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
	// This field specifies whether the member has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// This field specifies whether the member has permission to share. The default is **false**.
	AllowSharing OptBool `json:"allow_sharing"`
	// The shared voicemail ID that the member can access.
	SharedID OptString `json:"shared_id"`
	// The type of access member: `user` or `commonArea`.
	AccessUserType OptString `json:"access_user_type"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *GetASharedLineGroupOKPolicyVoicemailAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDownload returns the value of AllowDownload.
func (s *GetASharedLineGroupOKPolicyVoicemailAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowDelete returns the value of AllowDelete.
func (s *GetASharedLineGroupOKPolicyVoicemailAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowSharing returns the value of AllowSharing.
func (s *GetASharedLineGroupOKPolicyVoicemailAccessMembersItem) GetAllowSharing() OptBool {
	return s.AllowSharing
}

// GetSharedID returns the value of SharedID.
func (s *GetASharedLineGroupOKPolicyVoicemailAccessMembersItem) GetSharedID() OptString {
	return s.SharedID
}

// GetAccessUserType returns the value of AccessUserType.
func (s *GetASharedLineGroupOKPolicyVoicemailAccessMembersItem) GetAccessUserType() OptString {
	return s.AccessUserType
}

// SetAccessUserID sets the value of AccessUserID.
func (s *GetASharedLineGroupOKPolicyVoicemailAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *GetASharedLineGroupOKPolicyVoicemailAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *GetASharedLineGroupOKPolicyVoicemailAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowSharing sets the value of AllowSharing.
func (s *GetASharedLineGroupOKPolicyVoicemailAccessMembersItem) SetAllowSharing(val OptBool) {
	s.AllowSharing = val
}

// SetSharedID sets the value of SharedID.
func (s *GetASharedLineGroupOKPolicyVoicemailAccessMembersItem) SetSharedID(val OptString) {
	s.SharedID = val
}

// SetAccessUserType sets the value of AccessUserType.
func (s *GetASharedLineGroupOKPolicyVoicemailAccessMembersItem) SetAccessUserType(val OptString) {
	s.AccessUserType = val
}

// The site assigned to the shared line group.
type GetASharedLineGroupOKSite struct {
	// The unique identifier of the [site](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/getASite).
	ID OptString `json:"id"`
	// The name of the site.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetASharedLineGroupOKSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetASharedLineGroupOKSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetASharedLineGroupOKSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetASharedLineGroupOKSite) SetName(val OptString) {
	s.Name = val
}

type GetASiteOK struct {
	// The country of the site.
	Country OptGetASiteOKCountry `json:"country"`
	// The site ID is the unique identifier of the site.
	ID OptString `json:"id"`
	// The [main auto receptionist](https://support.zoom.
	// us/hc/en-us/articles/360021121312#h_bc7ff1d5-0e6c-40cd-b889-62010cb98c57) for each site.
	MainAutoReceptionist OptGetASiteOKMainAutoReceptionist `json:"main_auto_receptionist"`
	// The name of the site.
	Name OptString `json:"name"`
	// The short extension of the phone site.
	ShortExtension OptGetASiteOKShortExtension `json:"short_extension"`
	// The [site code](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b).
	SiteCode OptInt `json:"site_code"`
	// The [site policy setting](https://support.zoom.
	// us/hc/en-us/articles/360033511872-Changing-Zoom-Phone-policy-settings#h_af4d1935-9cb1-44d2-9a10-9bfba10d58a7).
	Policy OptGetASiteOKPolicy `json:"policy"`
	// When you select a SIP zone nearest to your site, it might help reduce latency and improve call
	// quality.
	SipZone OptGetASiteOKSipZone `json:"sip_zone"`
	// When you place an outbound call with a number as the caller ID, the caller ID name and the number
	// display to the called party. The caller ID name can be up to 15 characters.
	CallerIDName OptString `json:"caller_id_name"`
}

// GetCountry returns the value of Country.
func (s *GetASiteOK) GetCountry() OptGetASiteOKCountry {
	return s.Country
}

// GetID returns the value of ID.
func (s *GetASiteOK) GetID() OptString {
	return s.ID
}

// GetMainAutoReceptionist returns the value of MainAutoReceptionist.
func (s *GetASiteOK) GetMainAutoReceptionist() OptGetASiteOKMainAutoReceptionist {
	return s.MainAutoReceptionist
}

// GetName returns the value of Name.
func (s *GetASiteOK) GetName() OptString {
	return s.Name
}

// GetShortExtension returns the value of ShortExtension.
func (s *GetASiteOK) GetShortExtension() OptGetASiteOKShortExtension {
	return s.ShortExtension
}

// GetSiteCode returns the value of SiteCode.
func (s *GetASiteOK) GetSiteCode() OptInt {
	return s.SiteCode
}

// GetPolicy returns the value of Policy.
func (s *GetASiteOK) GetPolicy() OptGetASiteOKPolicy {
	return s.Policy
}

// GetSipZone returns the value of SipZone.
func (s *GetASiteOK) GetSipZone() OptGetASiteOKSipZone {
	return s.SipZone
}

// GetCallerIDName returns the value of CallerIDName.
func (s *GetASiteOK) GetCallerIDName() OptString {
	return s.CallerIDName
}

// SetCountry sets the value of Country.
func (s *GetASiteOK) SetCountry(val OptGetASiteOKCountry) {
	s.Country = val
}

// SetID sets the value of ID.
func (s *GetASiteOK) SetID(val OptString) {
	s.ID = val
}

// SetMainAutoReceptionist sets the value of MainAutoReceptionist.
func (s *GetASiteOK) SetMainAutoReceptionist(val OptGetASiteOKMainAutoReceptionist) {
	s.MainAutoReceptionist = val
}

// SetName sets the value of Name.
func (s *GetASiteOK) SetName(val OptString) {
	s.Name = val
}

// SetShortExtension sets the value of ShortExtension.
func (s *GetASiteOK) SetShortExtension(val OptGetASiteOKShortExtension) {
	s.ShortExtension = val
}

// SetSiteCode sets the value of SiteCode.
func (s *GetASiteOK) SetSiteCode(val OptInt) {
	s.SiteCode = val
}

// SetPolicy sets the value of Policy.
func (s *GetASiteOK) SetPolicy(val OptGetASiteOKPolicy) {
	s.Policy = val
}

// SetSipZone sets the value of SipZone.
func (s *GetASiteOK) SetSipZone(val OptGetASiteOKSipZone) {
	s.SipZone = val
}

// SetCallerIDName sets the value of CallerIDName.
func (s *GetASiteOK) SetCallerIDName(val OptString) {
	s.CallerIDName = val
}

// The country of the site.
type GetASiteOKCountry struct {
	// The two lettered country [code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	Code OptString `json:"code"`
	// The name of the country.
	Name OptString `json:"name"`
}

// GetCode returns the value of Code.
func (s *GetASiteOKCountry) GetCode() OptString {
	return s.Code
}

// GetName returns the value of Name.
func (s *GetASiteOKCountry) GetName() OptString {
	return s.Name
}

// SetCode sets the value of Code.
func (s *GetASiteOKCountry) SetCode(val OptString) {
	s.Code = val
}

// SetName sets the value of Name.
func (s *GetASiteOKCountry) SetName(val OptString) {
	s.Name = val
}

// The [main auto receptionist](https://support.zoom.
// us/hc/en-us/articles/360021121312#h_bc7ff1d5-0e6c-40cd-b889-62010cb98c57) for each site.
type GetASiteOKMainAutoReceptionist struct {
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The unique identifier of the auto receptionist.
	ID OptString `json:"id"`
	// The name of the auto receptionist.
	Name OptString `json:"name"`
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetASiteOKMainAutoReceptionist) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetASiteOKMainAutoReceptionist) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *GetASiteOKMainAutoReceptionist) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetASiteOKMainAutoReceptionist) GetName() OptString {
	return s.Name
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetASiteOKMainAutoReceptionist) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetASiteOKMainAutoReceptionist) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *GetASiteOKMainAutoReceptionist) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetASiteOKMainAutoReceptionist) SetName(val OptString) {
	s.Name = val
}

// The [site policy setting](https://support.zoom.
// us/hc/en-us/articles/360033511872-Changing-Zoom-Phone-policy-settings#h_af4d1935-9cb1-44d2-9a10-9bfba10d58a7).
type GetASiteOKPolicy struct {
	SelectOutboundCallerID OptGetASiteOKPolicySelectOutboundCallerID `json:"select_outbound_caller_id"`
	PersonalAudioLibrary   OptGetASiteOKPolicyPersonalAudioLibrary   `json:"personal_audio_library"`
	Voicemail              OptGetASiteOKPolicyVoicemail              `json:"voicemail"`
	VoicemailTranscription OptGetASiteOKPolicyVoicemailTranscription `json:"voicemail_transcription"`
	// Once enabled, users receive email notifications when there is a new voicemail from users, call
	// queues, auto receptionists, or shared line groups. Users who disabled the shared voicemail
	// notification by email policy receive notifications. They display when the voicemail policy uses
	// the new policy framework.
	VoicemailNotificationByEmail OptGetASiteOKPolicyVoicemailNotificationByEmail `json:"voicemail_notification_by_email"`
	// Once enabled, users will receive email notification when there is a new shared voicemail/videomail.
	//  If the extension that shares the voicemail or videomail has disabled the voicemail or videomail
	// notification by email policy, users will not receive notifications. They only display when the
	// voicemail policy uses the new policy framework.
	SharedVoicemailNotificationByEmail OptGetASiteOKPolicySharedVoicemailNotificationByEmail `json:"shared_voicemail_notification_by_email"`
	// Whether to allow extensions to place international calls outside of the calling plan.
	InternationalCalling  OptGetASiteOKPolicyInternationalCalling  `json:"international_calling"`
	ZoomPhoneOnMobile     OptGetASiteOKPolicyZoomPhoneOnMobile     `json:"zoom_phone_on_mobile"`
	SMS                   OptGetASiteOKPolicySMS                   `json:"sms"`
	ElevateToMeeting      OptGetASiteOKPolicyElevateToMeeting      `json:"elevate_to_meeting"`
	HandOffToRoom         OptGetASiteOKPolicyHandOffToRoom         `json:"hand_off_to_room"`
	MobileSwitchToCarrier OptGetASiteOKPolicyMobileSwitchToCarrier `json:"mobile_switch_to_carrier"`
	// Whether the user can use [call delegation](https://support.zoom.
	// us/hc/en-us/articles/360032881731-Setting-up-call-delegation-shared-lines-appearance-).
	Delegation OptGetASiteOKPolicyDelegation `json:"delegation"`
	// A list of ad hoc call recording settings.
	AdHocCallRecording OptGetASiteOKPolicyAdHocCallRecording `json:"ad_hoc_call_recording"`
	// A list of the site's automatic call recording settings.
	AutoCallRecording OptGetASiteOKPolicyAutoCallRecording `json:"auto_call_recording"`
	// Whether to allow users to forward their calls to other numbers.
	CallHandlingForwardingToOtherUsers OptGetASiteOKPolicyCallHandlingForwardingToOtherUsers `json:"call_handling_forwarding_to_other_users"`
	// Whether to allow extension owners or members of a shared line group to check voicemails for
	// extension numbers over the phone using PIN code.
	CheckVoicemailsOverPhone OptGetASiteOKPolicyCheckVoicemailsOverPhone `json:"check_voicemails_over_phone"`
	// After enabling the feature, a unique pickup code generates for each queue, which can be customized
	// in the `Call Queue` profile. Queued calls can be answered with the pickup code by the users under
	// the same site.
	CallQueuePickupCode OptGetASiteOKPolicyCallQueuePickupCode `json:"call_queue_pickup_code"`
	// The opt-out reasons for call queues. When enabled, call queue members need to select an opt-out
	// reason when they turn off the `receive queue call` feature.
	CallQueueOptOutReason OptGetASiteOKPolicyCallQueueOptOutReason `json:"call_queue_opt_out_reason"`
	// Whether to show the user who last transferred the call. Viewing preferences display on the
	// incoming call panel. Selections made here do not affect the information shown in call logs.
	ShowUserLastTransferredCall          OptBool                                                 `json:"show_user_last_transferred_call"`
	AutoDeleteDataAfterRetentionDuration OptGetASiteOKPolicyAutoDeleteDataAfterRetentionDuration `json:"auto_delete_data_after_retention_duration"`
	CallPark                             OptGetASiteOKPolicyCallPark                             `json:"call_park"`
	CallOverflow                         OptGetASiteOKPolicyCallOverflow                         `json:"call_overflow"`
	CallTransferring                     OptGetASiteOKPolicyCallTransferring                     `json:"call_transferring"`
	// Whether to allow hands-free peer-to-peer conversations. When you receive an intercom call, the
	// phone beeps to notify the user of the incoming intercom call, and the user's phone automatically
	// answers the intercom call.
	AudioIntercom OptGetASiteOKPolicyAudioIntercom `json:"audio_intercom"`
	// Whether to calls without caller ID will be blocked.
	BlockCallsWithoutCallerID OptGetASiteOKPolicyBlockCallsWithoutCallerID `json:"block_calls_without_caller_id"`
	// Set rules for blocking external calls during business, closed, and holiday hours. This feature is
	// only available for user, Zoom Room and common areas.
	BlockExternalCalls OptGetASiteOKPolicyBlockExternalCalls `json:"block_external_calls"`
	// It requires the account to enable the `Force Calls out to the PSTN network` feature.
	ForceOffNet OptGetASiteOKPolicyForceOffNet `json:"force_off_net"`
}

// GetSelectOutboundCallerID returns the value of SelectOutboundCallerID.
func (s *GetASiteOKPolicy) GetSelectOutboundCallerID() OptGetASiteOKPolicySelectOutboundCallerID {
	return s.SelectOutboundCallerID
}

// GetPersonalAudioLibrary returns the value of PersonalAudioLibrary.
func (s *GetASiteOKPolicy) GetPersonalAudioLibrary() OptGetASiteOKPolicyPersonalAudioLibrary {
	return s.PersonalAudioLibrary
}

// GetVoicemail returns the value of Voicemail.
func (s *GetASiteOKPolicy) GetVoicemail() OptGetASiteOKPolicyVoicemail {
	return s.Voicemail
}

// GetVoicemailTranscription returns the value of VoicemailTranscription.
func (s *GetASiteOKPolicy) GetVoicemailTranscription() OptGetASiteOKPolicyVoicemailTranscription {
	return s.VoicemailTranscription
}

// GetVoicemailNotificationByEmail returns the value of VoicemailNotificationByEmail.
func (s *GetASiteOKPolicy) GetVoicemailNotificationByEmail() OptGetASiteOKPolicyVoicemailNotificationByEmail {
	return s.VoicemailNotificationByEmail
}

// GetSharedVoicemailNotificationByEmail returns the value of SharedVoicemailNotificationByEmail.
func (s *GetASiteOKPolicy) GetSharedVoicemailNotificationByEmail() OptGetASiteOKPolicySharedVoicemailNotificationByEmail {
	return s.SharedVoicemailNotificationByEmail
}

// GetInternationalCalling returns the value of InternationalCalling.
func (s *GetASiteOKPolicy) GetInternationalCalling() OptGetASiteOKPolicyInternationalCalling {
	return s.InternationalCalling
}

// GetZoomPhoneOnMobile returns the value of ZoomPhoneOnMobile.
func (s *GetASiteOKPolicy) GetZoomPhoneOnMobile() OptGetASiteOKPolicyZoomPhoneOnMobile {
	return s.ZoomPhoneOnMobile
}

// GetSMS returns the value of SMS.
func (s *GetASiteOKPolicy) GetSMS() OptGetASiteOKPolicySMS {
	return s.SMS
}

// GetElevateToMeeting returns the value of ElevateToMeeting.
func (s *GetASiteOKPolicy) GetElevateToMeeting() OptGetASiteOKPolicyElevateToMeeting {
	return s.ElevateToMeeting
}

// GetHandOffToRoom returns the value of HandOffToRoom.
func (s *GetASiteOKPolicy) GetHandOffToRoom() OptGetASiteOKPolicyHandOffToRoom {
	return s.HandOffToRoom
}

// GetMobileSwitchToCarrier returns the value of MobileSwitchToCarrier.
func (s *GetASiteOKPolicy) GetMobileSwitchToCarrier() OptGetASiteOKPolicyMobileSwitchToCarrier {
	return s.MobileSwitchToCarrier
}

// GetDelegation returns the value of Delegation.
func (s *GetASiteOKPolicy) GetDelegation() OptGetASiteOKPolicyDelegation {
	return s.Delegation
}

// GetAdHocCallRecording returns the value of AdHocCallRecording.
func (s *GetASiteOKPolicy) GetAdHocCallRecording() OptGetASiteOKPolicyAdHocCallRecording {
	return s.AdHocCallRecording
}

// GetAutoCallRecording returns the value of AutoCallRecording.
func (s *GetASiteOKPolicy) GetAutoCallRecording() OptGetASiteOKPolicyAutoCallRecording {
	return s.AutoCallRecording
}

// GetCallHandlingForwardingToOtherUsers returns the value of CallHandlingForwardingToOtherUsers.
func (s *GetASiteOKPolicy) GetCallHandlingForwardingToOtherUsers() OptGetASiteOKPolicyCallHandlingForwardingToOtherUsers {
	return s.CallHandlingForwardingToOtherUsers
}

// GetCheckVoicemailsOverPhone returns the value of CheckVoicemailsOverPhone.
func (s *GetASiteOKPolicy) GetCheckVoicemailsOverPhone() OptGetASiteOKPolicyCheckVoicemailsOverPhone {
	return s.CheckVoicemailsOverPhone
}

// GetCallQueuePickupCode returns the value of CallQueuePickupCode.
func (s *GetASiteOKPolicy) GetCallQueuePickupCode() OptGetASiteOKPolicyCallQueuePickupCode {
	return s.CallQueuePickupCode
}

// GetCallQueueOptOutReason returns the value of CallQueueOptOutReason.
func (s *GetASiteOKPolicy) GetCallQueueOptOutReason() OptGetASiteOKPolicyCallQueueOptOutReason {
	return s.CallQueueOptOutReason
}

// GetShowUserLastTransferredCall returns the value of ShowUserLastTransferredCall.
func (s *GetASiteOKPolicy) GetShowUserLastTransferredCall() OptBool {
	return s.ShowUserLastTransferredCall
}

// GetAutoDeleteDataAfterRetentionDuration returns the value of AutoDeleteDataAfterRetentionDuration.
func (s *GetASiteOKPolicy) GetAutoDeleteDataAfterRetentionDuration() OptGetASiteOKPolicyAutoDeleteDataAfterRetentionDuration {
	return s.AutoDeleteDataAfterRetentionDuration
}

// GetCallPark returns the value of CallPark.
func (s *GetASiteOKPolicy) GetCallPark() OptGetASiteOKPolicyCallPark {
	return s.CallPark
}

// GetCallOverflow returns the value of CallOverflow.
func (s *GetASiteOKPolicy) GetCallOverflow() OptGetASiteOKPolicyCallOverflow {
	return s.CallOverflow
}

// GetCallTransferring returns the value of CallTransferring.
func (s *GetASiteOKPolicy) GetCallTransferring() OptGetASiteOKPolicyCallTransferring {
	return s.CallTransferring
}

// GetAudioIntercom returns the value of AudioIntercom.
func (s *GetASiteOKPolicy) GetAudioIntercom() OptGetASiteOKPolicyAudioIntercom {
	return s.AudioIntercom
}

// GetBlockCallsWithoutCallerID returns the value of BlockCallsWithoutCallerID.
func (s *GetASiteOKPolicy) GetBlockCallsWithoutCallerID() OptGetASiteOKPolicyBlockCallsWithoutCallerID {
	return s.BlockCallsWithoutCallerID
}

// GetBlockExternalCalls returns the value of BlockExternalCalls.
func (s *GetASiteOKPolicy) GetBlockExternalCalls() OptGetASiteOKPolicyBlockExternalCalls {
	return s.BlockExternalCalls
}

// GetForceOffNet returns the value of ForceOffNet.
func (s *GetASiteOKPolicy) GetForceOffNet() OptGetASiteOKPolicyForceOffNet {
	return s.ForceOffNet
}

// SetSelectOutboundCallerID sets the value of SelectOutboundCallerID.
func (s *GetASiteOKPolicy) SetSelectOutboundCallerID(val OptGetASiteOKPolicySelectOutboundCallerID) {
	s.SelectOutboundCallerID = val
}

// SetPersonalAudioLibrary sets the value of PersonalAudioLibrary.
func (s *GetASiteOKPolicy) SetPersonalAudioLibrary(val OptGetASiteOKPolicyPersonalAudioLibrary) {
	s.PersonalAudioLibrary = val
}

// SetVoicemail sets the value of Voicemail.
func (s *GetASiteOKPolicy) SetVoicemail(val OptGetASiteOKPolicyVoicemail) {
	s.Voicemail = val
}

// SetVoicemailTranscription sets the value of VoicemailTranscription.
func (s *GetASiteOKPolicy) SetVoicemailTranscription(val OptGetASiteOKPolicyVoicemailTranscription) {
	s.VoicemailTranscription = val
}

// SetVoicemailNotificationByEmail sets the value of VoicemailNotificationByEmail.
func (s *GetASiteOKPolicy) SetVoicemailNotificationByEmail(val OptGetASiteOKPolicyVoicemailNotificationByEmail) {
	s.VoicemailNotificationByEmail = val
}

// SetSharedVoicemailNotificationByEmail sets the value of SharedVoicemailNotificationByEmail.
func (s *GetASiteOKPolicy) SetSharedVoicemailNotificationByEmail(val OptGetASiteOKPolicySharedVoicemailNotificationByEmail) {
	s.SharedVoicemailNotificationByEmail = val
}

// SetInternationalCalling sets the value of InternationalCalling.
func (s *GetASiteOKPolicy) SetInternationalCalling(val OptGetASiteOKPolicyInternationalCalling) {
	s.InternationalCalling = val
}

// SetZoomPhoneOnMobile sets the value of ZoomPhoneOnMobile.
func (s *GetASiteOKPolicy) SetZoomPhoneOnMobile(val OptGetASiteOKPolicyZoomPhoneOnMobile) {
	s.ZoomPhoneOnMobile = val
}

// SetSMS sets the value of SMS.
func (s *GetASiteOKPolicy) SetSMS(val OptGetASiteOKPolicySMS) {
	s.SMS = val
}

// SetElevateToMeeting sets the value of ElevateToMeeting.
func (s *GetASiteOKPolicy) SetElevateToMeeting(val OptGetASiteOKPolicyElevateToMeeting) {
	s.ElevateToMeeting = val
}

// SetHandOffToRoom sets the value of HandOffToRoom.
func (s *GetASiteOKPolicy) SetHandOffToRoom(val OptGetASiteOKPolicyHandOffToRoom) {
	s.HandOffToRoom = val
}

// SetMobileSwitchToCarrier sets the value of MobileSwitchToCarrier.
func (s *GetASiteOKPolicy) SetMobileSwitchToCarrier(val OptGetASiteOKPolicyMobileSwitchToCarrier) {
	s.MobileSwitchToCarrier = val
}

// SetDelegation sets the value of Delegation.
func (s *GetASiteOKPolicy) SetDelegation(val OptGetASiteOKPolicyDelegation) {
	s.Delegation = val
}

// SetAdHocCallRecording sets the value of AdHocCallRecording.
func (s *GetASiteOKPolicy) SetAdHocCallRecording(val OptGetASiteOKPolicyAdHocCallRecording) {
	s.AdHocCallRecording = val
}

// SetAutoCallRecording sets the value of AutoCallRecording.
func (s *GetASiteOKPolicy) SetAutoCallRecording(val OptGetASiteOKPolicyAutoCallRecording) {
	s.AutoCallRecording = val
}

// SetCallHandlingForwardingToOtherUsers sets the value of CallHandlingForwardingToOtherUsers.
func (s *GetASiteOKPolicy) SetCallHandlingForwardingToOtherUsers(val OptGetASiteOKPolicyCallHandlingForwardingToOtherUsers) {
	s.CallHandlingForwardingToOtherUsers = val
}

// SetCheckVoicemailsOverPhone sets the value of CheckVoicemailsOverPhone.
func (s *GetASiteOKPolicy) SetCheckVoicemailsOverPhone(val OptGetASiteOKPolicyCheckVoicemailsOverPhone) {
	s.CheckVoicemailsOverPhone = val
}

// SetCallQueuePickupCode sets the value of CallQueuePickupCode.
func (s *GetASiteOKPolicy) SetCallQueuePickupCode(val OptGetASiteOKPolicyCallQueuePickupCode) {
	s.CallQueuePickupCode = val
}

// SetCallQueueOptOutReason sets the value of CallQueueOptOutReason.
func (s *GetASiteOKPolicy) SetCallQueueOptOutReason(val OptGetASiteOKPolicyCallQueueOptOutReason) {
	s.CallQueueOptOutReason = val
}

// SetShowUserLastTransferredCall sets the value of ShowUserLastTransferredCall.
func (s *GetASiteOKPolicy) SetShowUserLastTransferredCall(val OptBool) {
	s.ShowUserLastTransferredCall = val
}

// SetAutoDeleteDataAfterRetentionDuration sets the value of AutoDeleteDataAfterRetentionDuration.
func (s *GetASiteOKPolicy) SetAutoDeleteDataAfterRetentionDuration(val OptGetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) {
	s.AutoDeleteDataAfterRetentionDuration = val
}

// SetCallPark sets the value of CallPark.
func (s *GetASiteOKPolicy) SetCallPark(val OptGetASiteOKPolicyCallPark) {
	s.CallPark = val
}

// SetCallOverflow sets the value of CallOverflow.
func (s *GetASiteOKPolicy) SetCallOverflow(val OptGetASiteOKPolicyCallOverflow) {
	s.CallOverflow = val
}

// SetCallTransferring sets the value of CallTransferring.
func (s *GetASiteOKPolicy) SetCallTransferring(val OptGetASiteOKPolicyCallTransferring) {
	s.CallTransferring = val
}

// SetAudioIntercom sets the value of AudioIntercom.
func (s *GetASiteOKPolicy) SetAudioIntercom(val OptGetASiteOKPolicyAudioIntercom) {
	s.AudioIntercom = val
}

// SetBlockCallsWithoutCallerID sets the value of BlockCallsWithoutCallerID.
func (s *GetASiteOKPolicy) SetBlockCallsWithoutCallerID(val OptGetASiteOKPolicyBlockCallsWithoutCallerID) {
	s.BlockCallsWithoutCallerID = val
}

// SetBlockExternalCalls sets the value of BlockExternalCalls.
func (s *GetASiteOKPolicy) SetBlockExternalCalls(val OptGetASiteOKPolicyBlockExternalCalls) {
	s.BlockExternalCalls = val
}

// SetForceOffNet sets the value of ForceOffNet.
func (s *GetASiteOKPolicy) SetForceOffNet(val OptGetASiteOKPolicyForceOffNet) {
	s.ForceOffNet = val
}

// A list of ad hoc call recording settings.
type GetASiteOKPolicyAdHocCallRecording struct {
	// Whether the current extension can record and save calls to the cloud.
	Enable OptBool `json:"enable"`
	// Whether a prompt plays to call participants when the recording has started.
	RecordingStartPrompt OptBool `json:"recording_start_prompt"`
	// Whether the call recording transcription is enabled.
	RecordingTranscription OptBool                                                    `json:"recording_transcription"`
	PlayRecordingBeepTone  OptGetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone `json:"play_recording_beep_tone"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset and display when
	// using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyAdHocCallRecording) GetEnable() OptBool {
	return s.Enable
}

// GetRecordingStartPrompt returns the value of RecordingStartPrompt.
func (s *GetASiteOKPolicyAdHocCallRecording) GetRecordingStartPrompt() OptBool {
	return s.RecordingStartPrompt
}

// GetRecordingTranscription returns the value of RecordingTranscription.
func (s *GetASiteOKPolicyAdHocCallRecording) GetRecordingTranscription() OptBool {
	return s.RecordingTranscription
}

// GetPlayRecordingBeepTone returns the value of PlayRecordingBeepTone.
func (s *GetASiteOKPolicyAdHocCallRecording) GetPlayRecordingBeepTone() OptGetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone {
	return s.PlayRecordingBeepTone
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyAdHocCallRecording) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyAdHocCallRecording) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyAdHocCallRecording) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyAdHocCallRecording) SetEnable(val OptBool) {
	s.Enable = val
}

// SetRecordingStartPrompt sets the value of RecordingStartPrompt.
func (s *GetASiteOKPolicyAdHocCallRecording) SetRecordingStartPrompt(val OptBool) {
	s.RecordingStartPrompt = val
}

// SetRecordingTranscription sets the value of RecordingTranscription.
func (s *GetASiteOKPolicyAdHocCallRecording) SetRecordingTranscription(val OptBool) {
	s.RecordingTranscription = val
}

// SetPlayRecordingBeepTone sets the value of PlayRecordingBeepTone.
func (s *GetASiteOKPolicyAdHocCallRecording) SetPlayRecordingBeepTone(val OptGetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone) {
	s.PlayRecordingBeepTone = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyAdHocCallRecording) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyAdHocCallRecording) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyAdHocCallRecording) SetModified(val OptBool) {
	s.Modified = val
}

type GetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone struct {
	// Whether to play the side tone beep for recorded users while recording. It displays only when ad
	// hoc call recording policy uses the new framework.
	Enable OptBool `json:"enable"`
	// The side tone beep volume. It displays only when `enable` is set to `true`.
	PlayBeepVolume OptInt `json:"play_beep_volume"`
	// The beep time interval in seconds. It displays only when `enable` is set to true.
	PlayBeepTimeInterval OptInt `json:"play_beep_time_interval"`
	// The beep sides. It displays only when `enable` is set to true.
	PlayBeepMember OptString `json:"play_beep_member"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone) GetEnable() OptBool {
	return s.Enable
}

// GetPlayBeepVolume returns the value of PlayBeepVolume.
func (s *GetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone) GetPlayBeepVolume() OptInt {
	return s.PlayBeepVolume
}

// GetPlayBeepTimeInterval returns the value of PlayBeepTimeInterval.
func (s *GetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone) GetPlayBeepTimeInterval() OptInt {
	return s.PlayBeepTimeInterval
}

// GetPlayBeepMember returns the value of PlayBeepMember.
func (s *GetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone) GetPlayBeepMember() OptString {
	return s.PlayBeepMember
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone) SetEnable(val OptBool) {
	s.Enable = val
}

// SetPlayBeepVolume sets the value of PlayBeepVolume.
func (s *GetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone) SetPlayBeepVolume(val OptInt) {
	s.PlayBeepVolume = val
}

// SetPlayBeepTimeInterval sets the value of PlayBeepTimeInterval.
func (s *GetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone) SetPlayBeepTimeInterval(val OptInt) {
	s.PlayBeepTimeInterval = val
}

// SetPlayBeepMember sets the value of PlayBeepMember.
func (s *GetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone) SetPlayBeepMember(val OptString) {
	s.PlayBeepMember = val
}

// Whether to allow hands-free peer-to-peer conversations. When you receive an intercom call, the
// phone beeps to notify the user of the incoming intercom call, and the user's phone automatically
// answers the intercom call.
type GetASiteOKPolicyAudioIntercom struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset and display when
	// using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyAudioIntercom) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyAudioIntercom) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyAudioIntercom) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyAudioIntercom) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyAudioIntercom) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyAudioIntercom) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyAudioIntercom) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyAudioIntercom) SetModified(val OptBool) {
	s.Modified = val
}

// A list of the site's automatic call recording settings.
type GetASiteOKPolicyAutoCallRecording struct {
	// Whether the stop and resume of automatic call recording is enabled.
	AllowStopResumeRecording OptBool `json:"allow_stop_resume_recording"`
	// Whether a call disconnects when there is an issue with the automatic call recording and the call
	// cannot reconnect after five seconds. This does **not** include emergency calls.
	DisconnectOnRecordingFailure OptBool `json:"disconnect_on_recording_failure"`
	// Whether automatic call recording is enabled.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset and display when
	// using the new policy framework.
	Modified OptBool `json:"modified"`
	// The type of calls automatically recorded:
	// * `inbound`
	// * `outbound`
	// * `both`.
	RecordingCalls OptString `json:"recording_calls"`
	// Whether the `Press 1 option that provides recording consent` is enabled.
	RecordingExplicitConsent OptBool `json:"recording_explicit_consent"`
	// Whether a prompt plays to call participants when the recording has started.
	RecordingStartPrompt OptBool `json:"recording_start_prompt"`
	// Whether the call recording transcription is enabled.
	RecordingTranscription OptBool                                                   `json:"recording_transcription"`
	PlayRecordingBeepTone  OptGetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone `json:"play_recording_beep_tone"`
}

// GetAllowStopResumeRecording returns the value of AllowStopResumeRecording.
func (s *GetASiteOKPolicyAutoCallRecording) GetAllowStopResumeRecording() OptBool {
	return s.AllowStopResumeRecording
}

// GetDisconnectOnRecordingFailure returns the value of DisconnectOnRecordingFailure.
func (s *GetASiteOKPolicyAutoCallRecording) GetDisconnectOnRecordingFailure() OptBool {
	return s.DisconnectOnRecordingFailure
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyAutoCallRecording) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyAutoCallRecording) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyAutoCallRecording) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyAutoCallRecording) GetModified() OptBool {
	return s.Modified
}

// GetRecordingCalls returns the value of RecordingCalls.
func (s *GetASiteOKPolicyAutoCallRecording) GetRecordingCalls() OptString {
	return s.RecordingCalls
}

// GetRecordingExplicitConsent returns the value of RecordingExplicitConsent.
func (s *GetASiteOKPolicyAutoCallRecording) GetRecordingExplicitConsent() OptBool {
	return s.RecordingExplicitConsent
}

// GetRecordingStartPrompt returns the value of RecordingStartPrompt.
func (s *GetASiteOKPolicyAutoCallRecording) GetRecordingStartPrompt() OptBool {
	return s.RecordingStartPrompt
}

// GetRecordingTranscription returns the value of RecordingTranscription.
func (s *GetASiteOKPolicyAutoCallRecording) GetRecordingTranscription() OptBool {
	return s.RecordingTranscription
}

// GetPlayRecordingBeepTone returns the value of PlayRecordingBeepTone.
func (s *GetASiteOKPolicyAutoCallRecording) GetPlayRecordingBeepTone() OptGetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone {
	return s.PlayRecordingBeepTone
}

// SetAllowStopResumeRecording sets the value of AllowStopResumeRecording.
func (s *GetASiteOKPolicyAutoCallRecording) SetAllowStopResumeRecording(val OptBool) {
	s.AllowStopResumeRecording = val
}

// SetDisconnectOnRecordingFailure sets the value of DisconnectOnRecordingFailure.
func (s *GetASiteOKPolicyAutoCallRecording) SetDisconnectOnRecordingFailure(val OptBool) {
	s.DisconnectOnRecordingFailure = val
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyAutoCallRecording) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyAutoCallRecording) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyAutoCallRecording) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyAutoCallRecording) SetModified(val OptBool) {
	s.Modified = val
}

// SetRecordingCalls sets the value of RecordingCalls.
func (s *GetASiteOKPolicyAutoCallRecording) SetRecordingCalls(val OptString) {
	s.RecordingCalls = val
}

// SetRecordingExplicitConsent sets the value of RecordingExplicitConsent.
func (s *GetASiteOKPolicyAutoCallRecording) SetRecordingExplicitConsent(val OptBool) {
	s.RecordingExplicitConsent = val
}

// SetRecordingStartPrompt sets the value of RecordingStartPrompt.
func (s *GetASiteOKPolicyAutoCallRecording) SetRecordingStartPrompt(val OptBool) {
	s.RecordingStartPrompt = val
}

// SetRecordingTranscription sets the value of RecordingTranscription.
func (s *GetASiteOKPolicyAutoCallRecording) SetRecordingTranscription(val OptBool) {
	s.RecordingTranscription = val
}

// SetPlayRecordingBeepTone sets the value of PlayRecordingBeepTone.
func (s *GetASiteOKPolicyAutoCallRecording) SetPlayRecordingBeepTone(val OptGetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone) {
	s.PlayRecordingBeepTone = val
}

type GetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone struct {
	// Whether to play the side tone beep for recorded users while recording. It displays only when auto
	// call recording policy uses the new framework.
	Enable OptBool `json:"enable"`
	// The side tone beep volume. It displays only when `enable` is set to `true`.
	PlayBeepVolume OptInt `json:"play_beep_volume"`
	// The beep time interval in seconds. It displays only when the `enable` is set to true.
	PlayBeepTimeInterval OptInt `json:"play_beep_time_interval"`
	// The beep sides. It displays only when the `enable` is set to true.
	PlayBeepMember OptString `json:"play_beep_member"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone) GetEnable() OptBool {
	return s.Enable
}

// GetPlayBeepVolume returns the value of PlayBeepVolume.
func (s *GetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone) GetPlayBeepVolume() OptInt {
	return s.PlayBeepVolume
}

// GetPlayBeepTimeInterval returns the value of PlayBeepTimeInterval.
func (s *GetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone) GetPlayBeepTimeInterval() OptInt {
	return s.PlayBeepTimeInterval
}

// GetPlayBeepMember returns the value of PlayBeepMember.
func (s *GetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone) GetPlayBeepMember() OptString {
	return s.PlayBeepMember
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone) SetEnable(val OptBool) {
	s.Enable = val
}

// SetPlayBeepVolume sets the value of PlayBeepVolume.
func (s *GetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone) SetPlayBeepVolume(val OptInt) {
	s.PlayBeepVolume = val
}

// SetPlayBeepTimeInterval sets the value of PlayBeepTimeInterval.
func (s *GetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone) SetPlayBeepTimeInterval(val OptInt) {
	s.PlayBeepTimeInterval = val
}

// SetPlayBeepMember sets the value of PlayBeepMember.
func (s *GetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone) SetPlayBeepMember(val OptString) {
	s.PlayBeepMember = val
}

type GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration struct {
	// This field allows Zoom to automatically delete data after the retention duration has lapsed.
	Enable OptBool `json:"enable"`
	// Whether the current settings will use the phone account's settings if the current settings use the
	// new policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString                                                       `json:"locked_by"`
	Items    []GetASiteOKPolicyAutoDeleteDataAfterRetentionDurationItemsItem `json:"items"`
	// The delete policy.
	// * 1 - soft delete
	// * 2 - permanent delete.
	DeleteType OptInt `json:"delete_type"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) GetLockedBy() OptString {
	return s.LockedBy
}

// GetItems returns the value of Items.
func (s *GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) GetItems() []GetASiteOKPolicyAutoDeleteDataAfterRetentionDurationItemsItem {
	return s.Items
}

// GetDeleteType returns the value of DeleteType.
func (s *GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) GetDeleteType() OptInt {
	return s.DeleteType
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetItems sets the value of Items.
func (s *GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) SetItems(val []GetASiteOKPolicyAutoDeleteDataAfterRetentionDurationItemsItem) {
	s.Items = val
}

// SetDeleteType sets the value of DeleteType.
func (s *GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) SetDeleteType(val OptInt) {
	s.DeleteType = val
}

type GetASiteOKPolicyAutoDeleteDataAfterRetentionDurationItemsItem struct {
	// The data types.
	Type OptString `json:"type"`
	// The retention duration where -1 means unlimited. For units of time, see the `time_unit` below. For
	// `year`, the duration:-1, 1-10; for `day`, the duration:-1, 1-60; for `month`, the duration:-1,
	// 1-18.
	Duration OptInt `json:"duration"`
	// The unit of time.
	TimeUnit OptString `json:"time_unit"`
}

// GetType returns the value of Type.
func (s *GetASiteOKPolicyAutoDeleteDataAfterRetentionDurationItemsItem) GetType() OptString {
	return s.Type
}

// GetDuration returns the value of Duration.
func (s *GetASiteOKPolicyAutoDeleteDataAfterRetentionDurationItemsItem) GetDuration() OptInt {
	return s.Duration
}

// GetTimeUnit returns the value of TimeUnit.
func (s *GetASiteOKPolicyAutoDeleteDataAfterRetentionDurationItemsItem) GetTimeUnit() OptString {
	return s.TimeUnit
}

// SetType sets the value of Type.
func (s *GetASiteOKPolicyAutoDeleteDataAfterRetentionDurationItemsItem) SetType(val OptString) {
	s.Type = val
}

// SetDuration sets the value of Duration.
func (s *GetASiteOKPolicyAutoDeleteDataAfterRetentionDurationItemsItem) SetDuration(val OptInt) {
	s.Duration = val
}

// SetTimeUnit sets the value of TimeUnit.
func (s *GetASiteOKPolicyAutoDeleteDataAfterRetentionDurationItemsItem) SetTimeUnit(val OptString) {
	s.TimeUnit = val
}

// Whether to calls without caller ID will be blocked.
type GetASiteOKPolicyBlockCallsWithoutCallerID struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset and display when
	// using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyBlockCallsWithoutCallerID) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyBlockCallsWithoutCallerID) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyBlockCallsWithoutCallerID) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyBlockCallsWithoutCallerID) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyBlockCallsWithoutCallerID) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyBlockCallsWithoutCallerID) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyBlockCallsWithoutCallerID) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyBlockCallsWithoutCallerID) SetModified(val OptBool) {
	s.Modified = val
}

// Set rules for blocking external calls during business, closed, and holiday hours. This feature is
// only available for user, Zoom Room and common areas.
type GetASiteOKPolicyBlockExternalCalls struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset and display when
	// using old or new policy framework.
	Modified           OptBool `json:"modified"`
	BlockBusinessHours OptBool `json:"block_business_hours"`
	BlockClosedHours   OptBool `json:"block_closed_hours"`
	BlockHolidayHours  OptBool `json:"block_holiday_hours"`
	// The action when a call is blocked. `9` - Disconnect, `0`- Forward to voicemail or videomail.
	BlockCallAction OptInt `json:"block_call_action"`
	// This setting applies only in the old policy framework. It applies changes to new extensions or all
	// extensions. `1` - All extension, `0` - New extensions.
	BlockCallChangeType OptInt                                             `json:"block_call_change_type"`
	E2eEncryption       OptGetASiteOKPolicyBlockExternalCallsE2eEncryption `json:"e2e_encryption"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyBlockExternalCalls) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyBlockExternalCalls) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyBlockExternalCalls) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyBlockExternalCalls) GetModified() OptBool {
	return s.Modified
}

// GetBlockBusinessHours returns the value of BlockBusinessHours.
func (s *GetASiteOKPolicyBlockExternalCalls) GetBlockBusinessHours() OptBool {
	return s.BlockBusinessHours
}

// GetBlockClosedHours returns the value of BlockClosedHours.
func (s *GetASiteOKPolicyBlockExternalCalls) GetBlockClosedHours() OptBool {
	return s.BlockClosedHours
}

// GetBlockHolidayHours returns the value of BlockHolidayHours.
func (s *GetASiteOKPolicyBlockExternalCalls) GetBlockHolidayHours() OptBool {
	return s.BlockHolidayHours
}

// GetBlockCallAction returns the value of BlockCallAction.
func (s *GetASiteOKPolicyBlockExternalCalls) GetBlockCallAction() OptInt {
	return s.BlockCallAction
}

// GetBlockCallChangeType returns the value of BlockCallChangeType.
func (s *GetASiteOKPolicyBlockExternalCalls) GetBlockCallChangeType() OptInt {
	return s.BlockCallChangeType
}

// GetE2eEncryption returns the value of E2eEncryption.
func (s *GetASiteOKPolicyBlockExternalCalls) GetE2eEncryption() OptGetASiteOKPolicyBlockExternalCallsE2eEncryption {
	return s.E2eEncryption
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyBlockExternalCalls) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyBlockExternalCalls) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyBlockExternalCalls) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyBlockExternalCalls) SetModified(val OptBool) {
	s.Modified = val
}

// SetBlockBusinessHours sets the value of BlockBusinessHours.
func (s *GetASiteOKPolicyBlockExternalCalls) SetBlockBusinessHours(val OptBool) {
	s.BlockBusinessHours = val
}

// SetBlockClosedHours sets the value of BlockClosedHours.
func (s *GetASiteOKPolicyBlockExternalCalls) SetBlockClosedHours(val OptBool) {
	s.BlockClosedHours = val
}

// SetBlockHolidayHours sets the value of BlockHolidayHours.
func (s *GetASiteOKPolicyBlockExternalCalls) SetBlockHolidayHours(val OptBool) {
	s.BlockHolidayHours = val
}

// SetBlockCallAction sets the value of BlockCallAction.
func (s *GetASiteOKPolicyBlockExternalCalls) SetBlockCallAction(val OptInt) {
	s.BlockCallAction = val
}

// SetBlockCallChangeType sets the value of BlockCallChangeType.
func (s *GetASiteOKPolicyBlockExternalCalls) SetBlockCallChangeType(val OptInt) {
	s.BlockCallChangeType = val
}

// SetE2eEncryption sets the value of E2eEncryption.
func (s *GetASiteOKPolicyBlockExternalCalls) SetE2eEncryption(val OptGetASiteOKPolicyBlockExternalCallsE2eEncryption) {
	s.E2eEncryption = val
}

type GetASiteOKPolicyBlockExternalCallsE2eEncryption struct {
	// Whether to allow users to switch their calls to `End-to-End Encryption`. If users have `Automatic
	// Call Recording` turned on, they cannot use `End-to-End Encryption`.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset and display when
	// using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyBlockExternalCallsE2eEncryption) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyBlockExternalCallsE2eEncryption) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyBlockExternalCallsE2eEncryption) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyBlockExternalCallsE2eEncryption) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyBlockExternalCallsE2eEncryption) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyBlockExternalCallsE2eEncryption) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyBlockExternalCallsE2eEncryption) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyBlockExternalCallsE2eEncryption) SetModified(val OptBool) {
	s.Modified = val
}

// Whether to allow users to forward their calls to other numbers.
type GetASiteOKPolicyCallHandlingForwardingToOtherUsers struct {
	Enable OptBool `json:"enable"`
	// `1` - Low restriction (external numbers not allowed)
	// `2` - Medium restriction (external numbers and external contacts not allowed)
	// `3` - High restriction (external numbers, external contacts and internal extensions without
	// inbound automatic call recording not allowed)
	// `4` - No restriction.
	CallForwardingType OptInt `json:"call_forwarding_type"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset and display when
	// using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyCallHandlingForwardingToOtherUsers) GetEnable() OptBool {
	return s.Enable
}

// GetCallForwardingType returns the value of CallForwardingType.
func (s *GetASiteOKPolicyCallHandlingForwardingToOtherUsers) GetCallForwardingType() OptInt {
	return s.CallForwardingType
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyCallHandlingForwardingToOtherUsers) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyCallHandlingForwardingToOtherUsers) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyCallHandlingForwardingToOtherUsers) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyCallHandlingForwardingToOtherUsers) SetEnable(val OptBool) {
	s.Enable = val
}

// SetCallForwardingType sets the value of CallForwardingType.
func (s *GetASiteOKPolicyCallHandlingForwardingToOtherUsers) SetCallForwardingType(val OptInt) {
	s.CallForwardingType = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyCallHandlingForwardingToOtherUsers) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyCallHandlingForwardingToOtherUsers) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyCallHandlingForwardingToOtherUsers) SetModified(val OptBool) {
	s.Modified = val
}

type GetASiteOKPolicyCallOverflow struct {
	// `1` - Can forward to internal extensions and to external contacts
	// `2` - Can forward only to internal extensions
	// `3` - Can forward only to internal extensions that require inbound Automatic Call Recording
	// `4` - Can forward to internal extensions, external contacts, and external numbers.
	CallOverflowType OptInt `json:"call_overflow_type"`
	// Whether to allow users to forward their calls to other numbers.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator can prohibit users from modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset and display when
	// using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetCallOverflowType returns the value of CallOverflowType.
func (s *GetASiteOKPolicyCallOverflow) GetCallOverflowType() OptInt {
	return s.CallOverflowType
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyCallOverflow) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyCallOverflow) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyCallOverflow) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyCallOverflow) GetModified() OptBool {
	return s.Modified
}

// SetCallOverflowType sets the value of CallOverflowType.
func (s *GetASiteOKPolicyCallOverflow) SetCallOverflowType(val OptInt) {
	s.CallOverflowType = val
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyCallOverflow) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyCallOverflow) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyCallOverflow) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyCallOverflow) SetModified(val OptBool) {
	s.Modified = val
}

type GetASiteOKPolicyCallPark struct {
	// The action when a parked call is not picked up.
	// `100` - Ring back to parker
	// `0` - Forward to voicemail of the parker
	// `9` - Disconnect
	// `50` - Forward to another extension.
	CallNotPickedUpAction OptInt `json:"call_not_picked_up_action"`
	// Whether to allow calls placed on hold to be resumed from another location with a retrieval code.
	Enable OptBool `json:"enable"`
	// A time limit for parked calls in minutes. After the expiration period ends, the retrieval code is
	// no longer valid and a new code generates.
	ExpirationPeriod OptInt `json:"expiration_period"`
	// The extension's forwarding information.
	ForwardTo OptGetASiteOKPolicyCallParkForwardTo `json:"forward_to"`
	// This field chooses how parked calls are assigned to a BLF (Busy Lamp Field) key. Sequential
	// assignment parks the call at the next available BLF key. Random assignment parks the call at a
	// randomly selected BLF key.
	// `0` - Random
	// `1` - Sequential.
	Sequence OptInt `json:"sequence"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset and display when
	// using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetCallNotPickedUpAction returns the value of CallNotPickedUpAction.
func (s *GetASiteOKPolicyCallPark) GetCallNotPickedUpAction() OptInt {
	return s.CallNotPickedUpAction
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyCallPark) GetEnable() OptBool {
	return s.Enable
}

// GetExpirationPeriod returns the value of ExpirationPeriod.
func (s *GetASiteOKPolicyCallPark) GetExpirationPeriod() OptInt {
	return s.ExpirationPeriod
}

// GetForwardTo returns the value of ForwardTo.
func (s *GetASiteOKPolicyCallPark) GetForwardTo() OptGetASiteOKPolicyCallParkForwardTo {
	return s.ForwardTo
}

// GetSequence returns the value of Sequence.
func (s *GetASiteOKPolicyCallPark) GetSequence() OptInt {
	return s.Sequence
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyCallPark) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyCallPark) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyCallPark) GetModified() OptBool {
	return s.Modified
}

// SetCallNotPickedUpAction sets the value of CallNotPickedUpAction.
func (s *GetASiteOKPolicyCallPark) SetCallNotPickedUpAction(val OptInt) {
	s.CallNotPickedUpAction = val
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyCallPark) SetEnable(val OptBool) {
	s.Enable = val
}

// SetExpirationPeriod sets the value of ExpirationPeriod.
func (s *GetASiteOKPolicyCallPark) SetExpirationPeriod(val OptInt) {
	s.ExpirationPeriod = val
}

// SetForwardTo sets the value of ForwardTo.
func (s *GetASiteOKPolicyCallPark) SetForwardTo(val OptGetASiteOKPolicyCallParkForwardTo) {
	s.ForwardTo = val
}

// SetSequence sets the value of Sequence.
func (s *GetASiteOKPolicyCallPark) SetSequence(val OptInt) {
	s.Sequence = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyCallPark) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyCallPark) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyCallPark) SetModified(val OptBool) {
	s.Modified = val
}

// The extension's forwarding information.
type GetASiteOKPolicyCallParkForwardTo struct {
	// The extension's name.
	DisplayName OptString `json:"display_name"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The type of extension:
	// * `user`
	// * `zoomRoom`
	// * `commonArea`
	// * `ciscoRoom/polycomRoom`
	// * `autoReceptionist`
	// * `sharedLineGroup`
	// * `callQueue`.
	ExtensionType OptString `json:"extension_type"`
	// The ID of the extension `user`, `zoomRoom`, `commonArea`, `ciscoRoom/polycomRoom`,
	// `autoReceptionist`, `callQueue` or `sharedLineGroup`.
	ID OptString `json:"id"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetASiteOKPolicyCallParkForwardTo) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetASiteOKPolicyCallParkForwardTo) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetASiteOKPolicyCallParkForwardTo) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetASiteOKPolicyCallParkForwardTo) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetID returns the value of ID.
func (s *GetASiteOKPolicyCallParkForwardTo) GetID() OptString {
	return s.ID
}

// SetDisplayName sets the value of DisplayName.
func (s *GetASiteOKPolicyCallParkForwardTo) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetASiteOKPolicyCallParkForwardTo) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetASiteOKPolicyCallParkForwardTo) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetASiteOKPolicyCallParkForwardTo) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetID sets the value of ID.
func (s *GetASiteOKPolicyCallParkForwardTo) SetID(val OptString) {
	s.ID = val
}

// The opt-out reasons for call queues. When enabled, call queue members need to select an opt-out
// reason when they turn off the `receive queue call` feature.
type GetASiteOKPolicyCallQueueOptOutReason struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset and display when
	// using the new policy framework.
	Modified                   OptBool                                                               `json:"modified"`
	CallQueueOptOutReasonsList []GetASiteOKPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem `json:"call_queue_opt_out_reasons_list"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyCallQueueOptOutReason) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyCallQueueOptOutReason) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyCallQueueOptOutReason) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyCallQueueOptOutReason) GetModified() OptBool {
	return s.Modified
}

// GetCallQueueOptOutReasonsList returns the value of CallQueueOptOutReasonsList.
func (s *GetASiteOKPolicyCallQueueOptOutReason) GetCallQueueOptOutReasonsList() []GetASiteOKPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem {
	return s.CallQueueOptOutReasonsList
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyCallQueueOptOutReason) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyCallQueueOptOutReason) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyCallQueueOptOutReason) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyCallQueueOptOutReason) SetModified(val OptBool) {
	s.Modified = val
}

// SetCallQueueOptOutReasonsList sets the value of CallQueueOptOutReasonsList.
func (s *GetASiteOKPolicyCallQueueOptOutReason) SetCallQueueOptOutReasonsList(val []GetASiteOKPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem) {
	s.CallQueueOptOutReasonsList = val
}

type GetASiteOKPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem struct {
	Code OptString `json:"code"`
	// The system default reason. It cannot be edited.
	System OptBool `json:"system"`
	Enable OptBool `json:"enable"`
}

// GetCode returns the value of Code.
func (s *GetASiteOKPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem) GetCode() OptString {
	return s.Code
}

// GetSystem returns the value of System.
func (s *GetASiteOKPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem) GetSystem() OptBool {
	return s.System
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem) GetEnable() OptBool {
	return s.Enable
}

// SetCode sets the value of Code.
func (s *GetASiteOKPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem) SetCode(val OptString) {
	s.Code = val
}

// SetSystem sets the value of System.
func (s *GetASiteOKPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem) SetSystem(val OptBool) {
	s.System = val
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem) SetEnable(val OptBool) {
	s.Enable = val
}

// After enabling the feature, a unique pickup code generates for each queue, which can be customized
// in the `Call Queue` profile. Queued calls can be answered with the pickup code by the users under
// the same site.
type GetASiteOKPolicyCallQueuePickupCode struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset and display when
	// using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyCallQueuePickupCode) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyCallQueuePickupCode) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyCallQueuePickupCode) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyCallQueuePickupCode) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyCallQueuePickupCode) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyCallQueuePickupCode) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyCallQueuePickupCode) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyCallQueuePickupCode) SetModified(val OptBool) {
	s.Modified = val
}

type GetASiteOKPolicyCallTransferring struct {
	// 1-No restriction
	// 2-Medium restriction (external numbers and external contacts not allowed)
	// 3-High restriction (external numbers, unrecorded external contacts, and internal extensions
	// without inbound automatic recording not allowed)
	// 4-Low restriction (external numbers not allowed).
	CallTransferringType OptInt `json:"call_transferring_type"`
	// Whether to allow users to warm or blind transfer their calls. This does not apply to warm transfer
	// on IP Phones except for Yealink.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset and display when
	// using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetCallTransferringType returns the value of CallTransferringType.
func (s *GetASiteOKPolicyCallTransferring) GetCallTransferringType() OptInt {
	return s.CallTransferringType
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyCallTransferring) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyCallTransferring) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyCallTransferring) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyCallTransferring) GetModified() OptBool {
	return s.Modified
}

// SetCallTransferringType sets the value of CallTransferringType.
func (s *GetASiteOKPolicyCallTransferring) SetCallTransferringType(val OptInt) {
	s.CallTransferringType = val
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyCallTransferring) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyCallTransferring) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyCallTransferring) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyCallTransferring) SetModified(val OptBool) {
	s.Modified = val
}

// Whether to allow extension owners or members of a shared line group to check voicemails for
// extension numbers over the phone using PIN code.
type GetASiteOKPolicyCheckVoicemailsOverPhone struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator can prohibit users to modify the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset and display when
	// using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyCheckVoicemailsOverPhone) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyCheckVoicemailsOverPhone) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyCheckVoicemailsOverPhone) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyCheckVoicemailsOverPhone) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyCheckVoicemailsOverPhone) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyCheckVoicemailsOverPhone) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyCheckVoicemailsOverPhone) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyCheckVoicemailsOverPhone) SetModified(val OptBool) {
	s.Modified = val
}

// Whether the user can use [call delegation](https://support.zoom.
// us/hc/en-us/articles/360032881731-Setting-up-call-delegation-shared-lines-appearance-).
type GetASiteOKPolicyDelegation struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset and display when
	// using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyDelegation) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyDelegation) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyDelegation) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyDelegation) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyDelegation) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyDelegation) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyDelegation) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyDelegation) SetModified(val OptBool) {
	s.Modified = val
}

type GetASiteOKPolicyElevateToMeeting struct {
	// Whether to allow users to elevate their phone calls to a meeting.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator can prohibit users to modify the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset and display when
	// using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyElevateToMeeting) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyElevateToMeeting) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyElevateToMeeting) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyElevateToMeeting) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyElevateToMeeting) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyElevateToMeeting) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyElevateToMeeting) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyElevateToMeeting) SetModified(val OptBool) {
	s.Modified = val
}

// It requires the account to enable the `Force Calls out to the PSTN network` feature.
type GetASiteOKPolicyForceOffNet struct {
	// By enabling Force Off-Net, calls from users or extensions between sites route through the PSTN
	// network. Users within this site can only be part of advanced functionality (eg. Auto Receptionists,
	//  Call Queues) for this site. Users require a paid Zoom license and BYOC-P phone numbers to call
	// between sites.
	Enable OptBool `json:"enable"`
	// This setting allows extension only users to call to users outside the site.
	AllowExtensionOnlyUsersCallUsersOutsideSite OptBool `json:"allow_extension_only_users_call_users_outside_site"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyForceOffNet) GetEnable() OptBool {
	return s.Enable
}

// GetAllowExtensionOnlyUsersCallUsersOutsideSite returns the value of AllowExtensionOnlyUsersCallUsersOutsideSite.
func (s *GetASiteOKPolicyForceOffNet) GetAllowExtensionOnlyUsersCallUsersOutsideSite() OptBool {
	return s.AllowExtensionOnlyUsersCallUsersOutsideSite
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyForceOffNet) SetEnable(val OptBool) {
	s.Enable = val
}

// SetAllowExtensionOnlyUsersCallUsersOutsideSite sets the value of AllowExtensionOnlyUsersCallUsersOutsideSite.
func (s *GetASiteOKPolicyForceOffNet) SetAllowExtensionOnlyUsersCallUsersOutsideSite(val OptBool) {
	s.AllowExtensionOnlyUsersCallUsersOutsideSite = val
}

type GetASiteOKPolicyHandOffToRoom struct {
	// Whether to allow users to send a call to a Zoom Room.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator can prohibit users to modify the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset. The settings
	// display when using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyHandOffToRoom) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyHandOffToRoom) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyHandOffToRoom) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyHandOffToRoom) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyHandOffToRoom) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyHandOffToRoom) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyHandOffToRoom) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyHandOffToRoom) SetModified(val OptBool) {
	s.Modified = val
}

// Whether to allow extensions to place international calls outside of the calling plan.
type GetASiteOKPolicyInternationalCalling struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator can prohibit users to modify the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset. The settings
	// display when using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyInternationalCalling) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyInternationalCalling) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyInternationalCalling) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyInternationalCalling) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyInternationalCalling) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyInternationalCalling) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyInternationalCalling) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyInternationalCalling) SetModified(val OptBool) {
	s.Modified = val
}

type GetASiteOKPolicyMobileSwitchToCarrier struct {
	// Whether to allow the user to switch from a Zoom Phone to their native carrier.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset and display when
	// using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyMobileSwitchToCarrier) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyMobileSwitchToCarrier) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyMobileSwitchToCarrier) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyMobileSwitchToCarrier) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyMobileSwitchToCarrier) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyMobileSwitchToCarrier) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyMobileSwitchToCarrier) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyMobileSwitchToCarrier) SetModified(val OptBool) {
	s.Modified = val
}

type GetASiteOKPolicyPersonalAudioLibrary struct {
	// This field allows users to access, share, download, or delete voicemail or videomail.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset. The settings
	// display when using the new policy framework.
	Modified OptBool `json:"modified"`
	// Whether to allow music on hold customization.
	AllowMusicOnHoldCustomization OptBool `json:"allow_music_on_hold_customization"`
	// Whether to allow voicemail and message greeting customization.
	AllowVoicemailAndMessageGreetingCustomization OptBool `json:"allow_voicemail_and_message_greeting_customization"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyPersonalAudioLibrary) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyPersonalAudioLibrary) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyPersonalAudioLibrary) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyPersonalAudioLibrary) GetModified() OptBool {
	return s.Modified
}

// GetAllowMusicOnHoldCustomization returns the value of AllowMusicOnHoldCustomization.
func (s *GetASiteOKPolicyPersonalAudioLibrary) GetAllowMusicOnHoldCustomization() OptBool {
	return s.AllowMusicOnHoldCustomization
}

// GetAllowVoicemailAndMessageGreetingCustomization returns the value of AllowVoicemailAndMessageGreetingCustomization.
func (s *GetASiteOKPolicyPersonalAudioLibrary) GetAllowVoicemailAndMessageGreetingCustomization() OptBool {
	return s.AllowVoicemailAndMessageGreetingCustomization
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyPersonalAudioLibrary) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyPersonalAudioLibrary) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyPersonalAudioLibrary) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyPersonalAudioLibrary) SetModified(val OptBool) {
	s.Modified = val
}

// SetAllowMusicOnHoldCustomization sets the value of AllowMusicOnHoldCustomization.
func (s *GetASiteOKPolicyPersonalAudioLibrary) SetAllowMusicOnHoldCustomization(val OptBool) {
	s.AllowMusicOnHoldCustomization = val
}

// SetAllowVoicemailAndMessageGreetingCustomization sets the value of AllowVoicemailAndMessageGreetingCustomization.
func (s *GetASiteOKPolicyPersonalAudioLibrary) SetAllowVoicemailAndMessageGreetingCustomization(val OptBool) {
	s.AllowVoicemailAndMessageGreetingCustomization = val
}

type GetASiteOKPolicySMS struct {
	// Whether to allow users, call queues, and auto receptionists to send and receive messages. You need
	// to assign a valid calling plan and phone number to each user for them to send and receive messages.
	Enable OptBool `json:"enable"`
	// Whether the user can send and receive international messages.
	InternationalSMS OptBool `json:"international_sms"`
	// The country to which users can send and receive international messages. The [country ISO
	// code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	InternationalSMSCountries []string `json:"international_sms_countries"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset. The settings
	// display when using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicySMS) GetEnable() OptBool {
	return s.Enable
}

// GetInternationalSMS returns the value of InternationalSMS.
func (s *GetASiteOKPolicySMS) GetInternationalSMS() OptBool {
	return s.InternationalSMS
}

// GetInternationalSMSCountries returns the value of InternationalSMSCountries.
func (s *GetASiteOKPolicySMS) GetInternationalSMSCountries() []string {
	return s.InternationalSMSCountries
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicySMS) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicySMS) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicySMS) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicySMS) SetEnable(val OptBool) {
	s.Enable = val
}

// SetInternationalSMS sets the value of InternationalSMS.
func (s *GetASiteOKPolicySMS) SetInternationalSMS(val OptBool) {
	s.InternationalSMS = val
}

// SetInternationalSMSCountries sets the value of InternationalSMSCountries.
func (s *GetASiteOKPolicySMS) SetInternationalSMSCountries(val []string) {
	s.InternationalSMSCountries = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicySMS) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicySMS) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicySMS) SetModified(val OptBool) {
	s.Modified = val
}

type GetASiteOKPolicySelectOutboundCallerID struct {
	// Whether to allow the current extension to change the outbound caller ID when placing calls.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset. The settings
	// display when using the new policy framework.
	Modified OptBool `json:"modified"`
	// Whether to allow the current extension to hide outbound caller ID.
	AllowHideOutboundCallerID OptBool `json:"allow_hide_outbound_caller_id"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicySelectOutboundCallerID) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicySelectOutboundCallerID) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicySelectOutboundCallerID) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicySelectOutboundCallerID) GetModified() OptBool {
	return s.Modified
}

// GetAllowHideOutboundCallerID returns the value of AllowHideOutboundCallerID.
func (s *GetASiteOKPolicySelectOutboundCallerID) GetAllowHideOutboundCallerID() OptBool {
	return s.AllowHideOutboundCallerID
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicySelectOutboundCallerID) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicySelectOutboundCallerID) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicySelectOutboundCallerID) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicySelectOutboundCallerID) SetModified(val OptBool) {
	s.Modified = val
}

// SetAllowHideOutboundCallerID sets the value of AllowHideOutboundCallerID.
func (s *GetASiteOKPolicySelectOutboundCallerID) SetAllowHideOutboundCallerID(val OptBool) {
	s.AllowHideOutboundCallerID = val
}

// Once enabled, users will receive email notification when there is a new shared voicemail/videomail.
//
//	If the extension that shares the voicemail or videomail has disabled the voicemail or videomail
//
// notification by email policy, users will not receive notifications. They only display when the
// voicemail policy uses the new policy framework.
type GetASiteOKPolicySharedVoicemailNotificationByEmail struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator can prohibit users to modify the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset and display when
	// using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicySharedVoicemailNotificationByEmail) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicySharedVoicemailNotificationByEmail) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicySharedVoicemailNotificationByEmail) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicySharedVoicemailNotificationByEmail) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicySharedVoicemailNotificationByEmail) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicySharedVoicemailNotificationByEmail) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicySharedVoicemailNotificationByEmail) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicySharedVoicemailNotificationByEmail) SetModified(val OptBool) {
	s.Modified = val
}

type GetASiteOKPolicyVoicemail struct {
	// This setting allows users to delete their own voicemail. It displays only when using the new
	// policy framework.
	AllowDelete OptBool `json:"allow_delete"`
	// This setting allows users to download their own voicemail. It displays only when using the new
	// policy framework.
	AllowDownload OptBool `json:"allow_download"`
	// This setting allows users to access, share, download or delete video mail.
	AllowVideomail OptBool `json:"allow_videomail"`
	// This setting allows users to access, receive, or share voicemail and video mail.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator can prohibit users to modify the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset. The settings
	// display when using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetAllowDelete returns the value of AllowDelete.
func (s *GetASiteOKPolicyVoicemail) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *GetASiteOKPolicyVoicemail) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowVideomail returns the value of AllowVideomail.
func (s *GetASiteOKPolicyVoicemail) GetAllowVideomail() OptBool {
	return s.AllowVideomail
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyVoicemail) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyVoicemail) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyVoicemail) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyVoicemail) GetModified() OptBool {
	return s.Modified
}

// SetAllowDelete sets the value of AllowDelete.
func (s *GetASiteOKPolicyVoicemail) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *GetASiteOKPolicyVoicemail) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowVideomail sets the value of AllowVideomail.
func (s *GetASiteOKPolicyVoicemail) SetAllowVideomail(val OptBool) {
	s.AllowVideomail = val
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyVoicemail) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyVoicemail) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyVoicemail) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyVoicemail) SetModified(val OptBool) {
	s.Modified = val
}

// Once enabled, users receive email notifications when there is a new voicemail from users, call
// queues, auto receptionists, or shared line groups. Users who disabled the shared voicemail
// notification by email policy receive notifications. They display when the voicemail policy uses
// the new policy framework.
type GetASiteOKPolicyVoicemailNotificationByEmail struct {
	// Whether to include the voicemail file.
	IncludeVoicemailFile OptBool `json:"include_voicemail_file"`
	// Whether to include the voicemail transcription.
	IncludeVoicemailTranscription OptBool `json:"include_voicemail_transcription"`
	// Whether to forward the voicemail to email.
	ForwardVoicemailToEmail OptBool `json:"forward_voicemail_to_email"`
	Enable                  OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset. The settings
	// display when using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetIncludeVoicemailFile returns the value of IncludeVoicemailFile.
func (s *GetASiteOKPolicyVoicemailNotificationByEmail) GetIncludeVoicemailFile() OptBool {
	return s.IncludeVoicemailFile
}

// GetIncludeVoicemailTranscription returns the value of IncludeVoicemailTranscription.
func (s *GetASiteOKPolicyVoicemailNotificationByEmail) GetIncludeVoicemailTranscription() OptBool {
	return s.IncludeVoicemailTranscription
}

// GetForwardVoicemailToEmail returns the value of ForwardVoicemailToEmail.
func (s *GetASiteOKPolicyVoicemailNotificationByEmail) GetForwardVoicemailToEmail() OptBool {
	return s.ForwardVoicemailToEmail
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyVoicemailNotificationByEmail) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyVoicemailNotificationByEmail) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyVoicemailNotificationByEmail) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyVoicemailNotificationByEmail) GetModified() OptBool {
	return s.Modified
}

// SetIncludeVoicemailFile sets the value of IncludeVoicemailFile.
func (s *GetASiteOKPolicyVoicemailNotificationByEmail) SetIncludeVoicemailFile(val OptBool) {
	s.IncludeVoicemailFile = val
}

// SetIncludeVoicemailTranscription sets the value of IncludeVoicemailTranscription.
func (s *GetASiteOKPolicyVoicemailNotificationByEmail) SetIncludeVoicemailTranscription(val OptBool) {
	s.IncludeVoicemailTranscription = val
}

// SetForwardVoicemailToEmail sets the value of ForwardVoicemailToEmail.
func (s *GetASiteOKPolicyVoicemailNotificationByEmail) SetForwardVoicemailToEmail(val OptBool) {
	s.ForwardVoicemailToEmail = val
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyVoicemailNotificationByEmail) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyVoicemailNotificationByEmail) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyVoicemailNotificationByEmail) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyVoicemailNotificationByEmail) SetModified(val OptBool) {
	s.Modified = val
}

type GetASiteOKPolicyVoicemailTranscription struct {
	// Whether to allow users to access transcriptions of voicemails from the Zoom client, the Zoom web
	// portal, and email notifications.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset. The settings
	// display when using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyVoicemailTranscription) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyVoicemailTranscription) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyVoicemailTranscription) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyVoicemailTranscription) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyVoicemailTranscription) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyVoicemailTranscription) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyVoicemailTranscription) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyVoicemailTranscription) SetModified(val OptBool) {
	s.Modified = val
}

type GetASiteOKPolicyZoomPhoneOnMobile struct {
	// This field allows calling and SMS/MMS functions on mobile.
	AllowCallingSMSMms OptBool `json:"allow_calling_sms_mms"`
	// This field allows users to use Zoom Phone on mobile clients (iOS, iPad OS and Android).
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, you can reset settings to display
	// when using the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetAllowCallingSMSMms returns the value of AllowCallingSMSMms.
func (s *GetASiteOKPolicyZoomPhoneOnMobile) GetAllowCallingSMSMms() OptBool {
	return s.AllowCallingSMSMms
}

// GetEnable returns the value of Enable.
func (s *GetASiteOKPolicyZoomPhoneOnMobile) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetASiteOKPolicyZoomPhoneOnMobile) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetASiteOKPolicyZoomPhoneOnMobile) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetASiteOKPolicyZoomPhoneOnMobile) GetModified() OptBool {
	return s.Modified
}

// SetAllowCallingSMSMms sets the value of AllowCallingSMSMms.
func (s *GetASiteOKPolicyZoomPhoneOnMobile) SetAllowCallingSMSMms(val OptBool) {
	s.AllowCallingSMSMms = val
}

// SetEnable sets the value of Enable.
func (s *GetASiteOKPolicyZoomPhoneOnMobile) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetASiteOKPolicyZoomPhoneOnMobile) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetASiteOKPolicyZoomPhoneOnMobile) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetASiteOKPolicyZoomPhoneOnMobile) SetModified(val OptBool) {
	s.Modified = val
}

// The short extension of the phone site.
type GetASiteOKShortExtension struct {
	// The length of the short extension number for the site.
	Length OptInt `json:"length"`
}

// GetLength returns the value of Length.
func (s *GetASiteOKShortExtension) GetLength() OptInt {
	return s.Length
}

// SetLength sets the value of Length.
func (s *GetASiteOKShortExtension) SetLength(val OptInt) {
	s.Length = val
}

// When you select a SIP zone nearest to your site, it might help reduce latency and improve call
// quality.
type GetASiteOKSipZone struct {
	// The SIP Zone ID.
	ID OptString `json:"id"`
	// The SIP Zone name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetASiteOKSipZone) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetASiteOKSipZone) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetASiteOKSipZone) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetASiteOKSipZone) SetName(val OptString) {
	s.Name = val
}

type GetAccountOutboundCallingCountriesAndRegionsOK struct {
	CountriesRegions []GetAccountOutboundCallingCountriesAndRegionsOKCountriesRegionsItem `json:"countries_regions"`
	// The next page token paginates through large set of results. A next page token returns whenever the
	// set of available results exceeds the current page size. The expiration period for this token is 15
	// minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The total number of records in a single API call.
	PageSize OptInt `json:"page_size"`
}

// GetCountriesRegions returns the value of CountriesRegions.
func (s *GetAccountOutboundCallingCountriesAndRegionsOK) GetCountriesRegions() []GetAccountOutboundCallingCountriesAndRegionsOKCountriesRegionsItem {
	return s.CountriesRegions
}

// GetNextPageToken returns the value of NextPageToken.
func (s *GetAccountOutboundCallingCountriesAndRegionsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *GetAccountOutboundCallingCountriesAndRegionsOK) GetPageSize() OptInt {
	return s.PageSize
}

// SetCountriesRegions sets the value of CountriesRegions.
func (s *GetAccountOutboundCallingCountriesAndRegionsOK) SetCountriesRegions(val []GetAccountOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) {
	s.CountriesRegions = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *GetAccountOutboundCallingCountriesAndRegionsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *GetAccountOutboundCallingCountriesAndRegionsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

type GetAccountOutboundCallingCountriesAndRegionsOKCountriesRegionsItem struct {
	// The country name.
	Name OptString `json:"name"`
	// The country code.
	Code OptInt `json:"code"`
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	IsoCode OptString `json:"iso_code"`
	// The default outbound calling rule.
	// `1` Allowed
	// `2` Blocked
	// `3` Requires local number, caller ID, or plan
	// `4` Requires the extension number and PIN code.
	Rule OptInt `json:"rule"`
	// The enabled carrier, which could be "ZOOM" or "BYOC".
	EnabledCarrier []string `json:"enabled_carrier"`
}

// GetName returns the value of Name.
func (s *GetAccountOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetName() OptString {
	return s.Name
}

// GetCode returns the value of Code.
func (s *GetAccountOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetCode() OptInt {
	return s.Code
}

// GetIsoCode returns the value of IsoCode.
func (s *GetAccountOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetIsoCode() OptString {
	return s.IsoCode
}

// GetRule returns the value of Rule.
func (s *GetAccountOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetRule() OptInt {
	return s.Rule
}

// GetEnabledCarrier returns the value of EnabledCarrier.
func (s *GetAccountOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetEnabledCarrier() []string {
	return s.EnabledCarrier
}

// SetName sets the value of Name.
func (s *GetAccountOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetName(val OptString) {
	s.Name = val
}

// SetCode sets the value of Code.
func (s *GetAccountOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetCode(val OptInt) {
	s.Code = val
}

// SetIsoCode sets the value of IsoCode.
func (s *GetAccountOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetIsoCode(val OptString) {
	s.IsoCode = val
}

// SetRule sets the value of Rule.
func (s *GetAccountOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetRule(val OptInt) {
	s.Rule = val
}

// SetEnabledCarrier sets the value of EnabledCarrier.
func (s *GetAccountOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetEnabledCarrier(val []string) {
	s.EnabledCarrier = val
}

type GetAlertSettingDetailsOK struct {
	// The unique identifier of the alert setting.
	AlertSettingID OptString `json:"alert_setting_id"`
	// The name of the alert setting.
	AlertSettingName OptString `json:"alert_setting_name"`
	// The module of the alert. The module and its code mappings displays as: `Call Queue Management`-`1`,
	//  `Route Group Management`-`2`, `Devices &amp; Phones Management`-`3`, `Call Quality
	// Management`-`4`, `Emergency Services Management`-`5`.
	Module OptInt `json:"module"`
	// The rule of the alert. The rule and its code mappings displays as: `Service Level`-`1`, `Inbound
	// Abandoned Calls`-`2`, `Inbound Overflowed Calls`-`3`, `Inbound Avg Call Waiting Time`-`4`,
	// `Inbound Forwarded to Voicemail`-`5`, `Number of Waiting Calls`-`6`, `Member Availability
	// (Active)`-`7`, `Member Availability (Opt-in/Opt-out)`-`8`, `Route groups status change`-`9`,
	// `Devices go offline`-`10`, `Devices go online`-`11`, `Device offline rate`-`12`, `QoS Alert`-`13`,
	// `Emergency Call Alert`-`14`.
	Rule OptInt `json:"rule"`
	// The rule conditions.
	RuleConditions []GetAlertSettingDetailsOKRuleConditionsItem `json:"rule_conditions"`
	// The targets of the alert.
	Targets []GetAlertSettingDetailsOKTargetsItem `json:"targets"`
	// The time frame type.
	// The available values: `all_day`, `specific_time`.
	TimeFrameType OptString `json:"time_frame_type"`
	// The start time of time frame in which the alert was triggered, in `HH:mm:ss` format.
	// When the `time_frame_type` is `all_day`, the value is `00:00:00`.
	TimeFrameFrom OptString `json:"time_frame_from"`
	// The end time of time frame in which the alert was triggered, in `HH:mm:ss` format.
	// When the `time_frame_type` is `all_day`, the value is `00:00:00`.
	TimeFrameTo OptString `json:"time_frame_to"`
	// The frequency of alert triggers. The unit is `minutes`.
	// It's used when the value of `module` represents `Call Queue Management`, `Route Group Management`,
	// `Devices &amp; Phones Management`, or `Call Quality Management`.
	Frequency OptInt `json:"frequency"`
	// The email addresses of recipients.
	EmailRecipients []string `json:"email_recipients"`
	// The chat channels. This field applies when the value of `module` represents `Call Queue
	// Management`, `Route Group Management`, `Devices &amp; Phones Management`, or `Call Quality
	// Management`.
	ChatChannels []GetAlertSettingDetailsOKChatChannelsItem `json:"chat_channels"`
	// The alert's status:
	// * `0` — Inactive.
	// * `1` — Active.
	Status OptInt `json:"status"`
}

// GetAlertSettingID returns the value of AlertSettingID.
func (s *GetAlertSettingDetailsOK) GetAlertSettingID() OptString {
	return s.AlertSettingID
}

// GetAlertSettingName returns the value of AlertSettingName.
func (s *GetAlertSettingDetailsOK) GetAlertSettingName() OptString {
	return s.AlertSettingName
}

// GetModule returns the value of Module.
func (s *GetAlertSettingDetailsOK) GetModule() OptInt {
	return s.Module
}

// GetRule returns the value of Rule.
func (s *GetAlertSettingDetailsOK) GetRule() OptInt {
	return s.Rule
}

// GetRuleConditions returns the value of RuleConditions.
func (s *GetAlertSettingDetailsOK) GetRuleConditions() []GetAlertSettingDetailsOKRuleConditionsItem {
	return s.RuleConditions
}

// GetTargets returns the value of Targets.
func (s *GetAlertSettingDetailsOK) GetTargets() []GetAlertSettingDetailsOKTargetsItem {
	return s.Targets
}

// GetTimeFrameType returns the value of TimeFrameType.
func (s *GetAlertSettingDetailsOK) GetTimeFrameType() OptString {
	return s.TimeFrameType
}

// GetTimeFrameFrom returns the value of TimeFrameFrom.
func (s *GetAlertSettingDetailsOK) GetTimeFrameFrom() OptString {
	return s.TimeFrameFrom
}

// GetTimeFrameTo returns the value of TimeFrameTo.
func (s *GetAlertSettingDetailsOK) GetTimeFrameTo() OptString {
	return s.TimeFrameTo
}

// GetFrequency returns the value of Frequency.
func (s *GetAlertSettingDetailsOK) GetFrequency() OptInt {
	return s.Frequency
}

// GetEmailRecipients returns the value of EmailRecipients.
func (s *GetAlertSettingDetailsOK) GetEmailRecipients() []string {
	return s.EmailRecipients
}

// GetChatChannels returns the value of ChatChannels.
func (s *GetAlertSettingDetailsOK) GetChatChannels() []GetAlertSettingDetailsOKChatChannelsItem {
	return s.ChatChannels
}

// GetStatus returns the value of Status.
func (s *GetAlertSettingDetailsOK) GetStatus() OptInt {
	return s.Status
}

// SetAlertSettingID sets the value of AlertSettingID.
func (s *GetAlertSettingDetailsOK) SetAlertSettingID(val OptString) {
	s.AlertSettingID = val
}

// SetAlertSettingName sets the value of AlertSettingName.
func (s *GetAlertSettingDetailsOK) SetAlertSettingName(val OptString) {
	s.AlertSettingName = val
}

// SetModule sets the value of Module.
func (s *GetAlertSettingDetailsOK) SetModule(val OptInt) {
	s.Module = val
}

// SetRule sets the value of Rule.
func (s *GetAlertSettingDetailsOK) SetRule(val OptInt) {
	s.Rule = val
}

// SetRuleConditions sets the value of RuleConditions.
func (s *GetAlertSettingDetailsOK) SetRuleConditions(val []GetAlertSettingDetailsOKRuleConditionsItem) {
	s.RuleConditions = val
}

// SetTargets sets the value of Targets.
func (s *GetAlertSettingDetailsOK) SetTargets(val []GetAlertSettingDetailsOKTargetsItem) {
	s.Targets = val
}

// SetTimeFrameType sets the value of TimeFrameType.
func (s *GetAlertSettingDetailsOK) SetTimeFrameType(val OptString) {
	s.TimeFrameType = val
}

// SetTimeFrameFrom sets the value of TimeFrameFrom.
func (s *GetAlertSettingDetailsOK) SetTimeFrameFrom(val OptString) {
	s.TimeFrameFrom = val
}

// SetTimeFrameTo sets the value of TimeFrameTo.
func (s *GetAlertSettingDetailsOK) SetTimeFrameTo(val OptString) {
	s.TimeFrameTo = val
}

// SetFrequency sets the value of Frequency.
func (s *GetAlertSettingDetailsOK) SetFrequency(val OptInt) {
	s.Frequency = val
}

// SetEmailRecipients sets the value of EmailRecipients.
func (s *GetAlertSettingDetailsOK) SetEmailRecipients(val []string) {
	s.EmailRecipients = val
}

// SetChatChannels sets the value of ChatChannels.
func (s *GetAlertSettingDetailsOK) SetChatChannels(val []GetAlertSettingDetailsOKChatChannelsItem) {
	s.ChatChannels = val
}

// SetStatus sets the value of Status.
func (s *GetAlertSettingDetailsOK) SetStatus(val OptInt) {
	s.Status = val
}

type GetAlertSettingDetailsOKChatChannelsItem struct {
	// The channel name.
	ChatChannelName OptString `json:"chat_channel_name"`
	// The verification token.
	Token OptString `json:"token"`
	// The end point.
	EndPoint OptString `json:"end_point"`
}

// GetChatChannelName returns the value of ChatChannelName.
func (s *GetAlertSettingDetailsOKChatChannelsItem) GetChatChannelName() OptString {
	return s.ChatChannelName
}

// GetToken returns the value of Token.
func (s *GetAlertSettingDetailsOKChatChannelsItem) GetToken() OptString {
	return s.Token
}

// GetEndPoint returns the value of EndPoint.
func (s *GetAlertSettingDetailsOKChatChannelsItem) GetEndPoint() OptString {
	return s.EndPoint
}

// SetChatChannelName sets the value of ChatChannelName.
func (s *GetAlertSettingDetailsOKChatChannelsItem) SetChatChannelName(val OptString) {
	s.ChatChannelName = val
}

// SetToken sets the value of Token.
func (s *GetAlertSettingDetailsOKChatChannelsItem) SetToken(val OptString) {
	s.Token = val
}

// SetEndPoint sets the value of EndPoint.
func (s *GetAlertSettingDetailsOKChatChannelsItem) SetEndPoint(val OptString) {
	s.EndPoint = val
}

type GetAlertSettingDetailsOKRuleConditionsItem struct {
	// The condition type.
	// * `1`-`Threshold`
	// * `2`-`Warning`
	// * `3`-`Critical`
	// * `4`-`Alert`
	// * `5`-`Severity`.
	// The `Threshold` is used for the `Service Level` rule.
	// The `Warning` or `Critical` is used for the `Service Level`, `Inbound Abandoned Calls`, `Inbound
	// Overflowed Calls`, `Number of Waiting Calls`, `Inbound Forwarded to Voicemail`, `Member
	// Availability (Active)`, `Member Availability (Opt-in/Opt-out)`, `Device offline rate`, `Inbound
	// Avg Call Waiting Time`, or `QoS Alert` rule.
	// The `Alert` is used for the `Devices go offline` or `device_online_time` rule.
	// The `Severity` is used for the `Emergency Call Alert` or `Route groups status change` rule.
	RuleConditionType OptInt `json:"rule_condition_type"`
	// The rule condition value.
	// If the `rule_condition_type` is `1`, the available values are `15`, `30`, `60`, `120`, `180`,
	// `240`, and `300`.
	// In the case of the value of `rule_condition_type `is `2` or `3`, when the value of `rule`
	// represents `Service Level`, `Inbound Abandoned Calls`, `Inbound Overflowed Calls`, `Inbound
	// Forwarded to Voicemail`, `Member Availability (Active)`, `Member Availability (Opt-in/Opt-out)`,
	// or `Device offline rate`, the unit is `percentage`. The value can only be in the range of `1` to
	// `100`, when the value of `rule` represents `Inbound Avg Call Waiting Time`, the unit is `seconds`.
	// The available values are `10`, `15`, `20`, `25`, `30`, `45`, `60`, `120`, `180`, `240`, `300`,
	// `600`, `900`, `1200`, `1500`, and `1800`. When the value of `rule` represents `QoS Alert`, the
	// value can be only in the range of `0` to `5`.
	// In the case of the value of `rule_condition_type` is `4`, the available values are`5`, `10`, `15`,
	// `30`, and `60`.
	// In the case of the value of `rule_condition_type` is `5`, the available values are `Warning`
	// and`Critical`.
	RuleConditionValue OptString `json:"rule_condition_value"`
}

// GetRuleConditionType returns the value of RuleConditionType.
func (s *GetAlertSettingDetailsOKRuleConditionsItem) GetRuleConditionType() OptInt {
	return s.RuleConditionType
}

// GetRuleConditionValue returns the value of RuleConditionValue.
func (s *GetAlertSettingDetailsOKRuleConditionsItem) GetRuleConditionValue() OptString {
	return s.RuleConditionValue
}

// SetRuleConditionType sets the value of RuleConditionType.
func (s *GetAlertSettingDetailsOKRuleConditionsItem) SetRuleConditionType(val OptInt) {
	s.RuleConditionType = val
}

// SetRuleConditionValue sets the value of RuleConditionValue.
func (s *GetAlertSettingDetailsOKRuleConditionsItem) SetRuleConditionValue(val OptString) {
	s.RuleConditionValue = val
}

type GetAlertSettingDetailsOKTargetsItem struct {
	// The target ID.
	TargetID OptString `json:"target_id"`
	// The target name.
	TargetName OptString `json:"target_name"`
	// The target type.
	// * `1`-`User`
	// * `2`-`Account`
	// * `3`-`Call Queue`
	// * `4`-`Site`
	// * `5`-`Device`.
	TargetType OptInt `json:"target_type"`
	// The extension number of the Zoom Phone that the `User` uses.
	TargetExtensionNumber OptInt64                                   `json:"target_extension_number"`
	Site                  OptGetAlertSettingDetailsOKTargetsItemSite `json:"site"`
	// This field applies when the the value of `target_type` represents `Devices`.
	Assignees []GetAlertSettingDetailsOKTargetsItemAssigneesItem `json:"assignees"`
}

// GetTargetID returns the value of TargetID.
func (s *GetAlertSettingDetailsOKTargetsItem) GetTargetID() OptString {
	return s.TargetID
}

// GetTargetName returns the value of TargetName.
func (s *GetAlertSettingDetailsOKTargetsItem) GetTargetName() OptString {
	return s.TargetName
}

// GetTargetType returns the value of TargetType.
func (s *GetAlertSettingDetailsOKTargetsItem) GetTargetType() OptInt {
	return s.TargetType
}

// GetTargetExtensionNumber returns the value of TargetExtensionNumber.
func (s *GetAlertSettingDetailsOKTargetsItem) GetTargetExtensionNumber() OptInt64 {
	return s.TargetExtensionNumber
}

// GetSite returns the value of Site.
func (s *GetAlertSettingDetailsOKTargetsItem) GetSite() OptGetAlertSettingDetailsOKTargetsItemSite {
	return s.Site
}

// GetAssignees returns the value of Assignees.
func (s *GetAlertSettingDetailsOKTargetsItem) GetAssignees() []GetAlertSettingDetailsOKTargetsItemAssigneesItem {
	return s.Assignees
}

// SetTargetID sets the value of TargetID.
func (s *GetAlertSettingDetailsOKTargetsItem) SetTargetID(val OptString) {
	s.TargetID = val
}

// SetTargetName sets the value of TargetName.
func (s *GetAlertSettingDetailsOKTargetsItem) SetTargetName(val OptString) {
	s.TargetName = val
}

// SetTargetType sets the value of TargetType.
func (s *GetAlertSettingDetailsOKTargetsItem) SetTargetType(val OptInt) {
	s.TargetType = val
}

// SetTargetExtensionNumber sets the value of TargetExtensionNumber.
func (s *GetAlertSettingDetailsOKTargetsItem) SetTargetExtensionNumber(val OptInt64) {
	s.TargetExtensionNumber = val
}

// SetSite sets the value of Site.
func (s *GetAlertSettingDetailsOKTargetsItem) SetSite(val OptGetAlertSettingDetailsOKTargetsItemSite) {
	s.Site = val
}

// SetAssignees sets the value of Assignees.
func (s *GetAlertSettingDetailsOKTargetsItem) SetAssignees(val []GetAlertSettingDetailsOKTargetsItemAssigneesItem) {
	s.Assignees = val
}

type GetAlertSettingDetailsOKTargetsItemAssigneesItem struct {
	// The extension number of the Zoom Phone the `user` or `commonArea` uses.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// Name.
	Name OptString `json:"name"`
	// The type of the assignee. It's available only if the device is assigned.
	ExtensionType OptString `json:"extension_type"`
	// The extension ID of the `user` or `common area`.
	ExtensionID OptString `json:"extension_id"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetAlertSettingDetailsOKTargetsItemAssigneesItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetName returns the value of Name.
func (s *GetAlertSettingDetailsOKTargetsItemAssigneesItem) GetName() OptString {
	return s.Name
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetAlertSettingDetailsOKTargetsItemAssigneesItem) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetAlertSettingDetailsOKTargetsItemAssigneesItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetAlertSettingDetailsOKTargetsItemAssigneesItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetName sets the value of Name.
func (s *GetAlertSettingDetailsOKTargetsItemAssigneesItem) SetName(val OptString) {
	s.Name = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetAlertSettingDetailsOKTargetsItemAssigneesItem) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetAlertSettingDetailsOKTargetsItemAssigneesItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

type GetAlertSettingDetailsOKTargetsItemSite struct {
	// The [site](https://support.zoom.us/hc/en-us/articles/360020809672) of the phone user.
	ID OptString `json:"id"`
	// The name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672).
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetAlertSettingDetailsOKTargetsItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetAlertSettingDetailsOKTargetsItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetAlertSettingDetailsOKTargetsItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetAlertSettingDetailsOKTargetsItemSite) SetName(val OptString) {
	s.Name = val
}

type GetAudioItemOK struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
	// The URL of the audio file. (The URL is valid for 6 hours.).
	PlayURL OptString `json:"play_url"`
	// The message to play. The maximum message length is 3000.
	Text OptString `json:"text"`
	// The audio voice language. The language and its code mappings, such as:  `American English`-`en-US`,
	//  or  `British English`-`en-GB`.
	VoiceLanguage OptString `json:"voice_language"`
	// The accent of the audio file, such as `Joanna-Female` or `Joey-Male`.
	VoiceAccent OptString `json:"voice_accent"`
}

// GetAudioID returns the value of AudioID.
func (s *GetAudioItemOK) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetAudioItemOK) GetName() OptString {
	return s.Name
}

// GetPlayURL returns the value of PlayURL.
func (s *GetAudioItemOK) GetPlayURL() OptString {
	return s.PlayURL
}

// GetText returns the value of Text.
func (s *GetAudioItemOK) GetText() OptString {
	return s.Text
}

// GetVoiceLanguage returns the value of VoiceLanguage.
func (s *GetAudioItemOK) GetVoiceLanguage() OptString {
	return s.VoiceLanguage
}

// GetVoiceAccent returns the value of VoiceAccent.
func (s *GetAudioItemOK) GetVoiceAccent() OptString {
	return s.VoiceAccent
}

// SetAudioID sets the value of AudioID.
func (s *GetAudioItemOK) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetAudioItemOK) SetName(val OptString) {
	s.Name = val
}

// SetPlayURL sets the value of PlayURL.
func (s *GetAudioItemOK) SetPlayURL(val OptString) {
	s.PlayURL = val
}

// SetText sets the value of Text.
func (s *GetAudioItemOK) SetText(val OptString) {
	s.Text = val
}

// SetVoiceLanguage sets the value of VoiceLanguage.
func (s *GetAudioItemOK) SetVoiceLanguage(val OptString) {
	s.VoiceLanguage = val
}

// SetVoiceAccent sets the value of VoiceAccent.
func (s *GetAudioItemOK) SetVoiceAccent(val OptString) {
	s.VoiceAccent = val
}

type GetAutoReceptionistDetailOK struct {
	// `nullable` Cost center name.
	CostCenter OptString `json:"cost_center"`
	// `nullable` Department name.
	Department OptString `json:"department"`
	// Extension ID.
	ExtensionID OptString `json:"extension_id"`
	// Extension number of the auto receptionist.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// Name of the auto receptionist.
	Name OptString `json:"name"`
	// [Timezone](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#timezones) of the Auto Receptionist.
	Timezone OptString `json:"timezone"`
	// The language for all default audio prompts for the auto receptionist.
	// * `en-US` : English (US)
	// * `en-GB` : English (UK)
	// * `es-US` : Spanish (US)
	// * `fr-CA` : French (Canada)
	// * `da-DK` : Danish (Denmark)
	// * `de-DE` : German (Germany)
	// * `es-ES` : Spanish (Spain)
	// * `fr-FR` : French (France)
	// * `it-IT` : Italian (Italy)
	// * `nl-NL` : Dutch (Netherlands)
	// * `pt-PT` : Portuguese (Portugal)
	// * `ja` : Japanese
	// * `ko-KR` : Korean (Korea)
	// * `pt-BR` : Portuguese (Brazil)
	// * `zh-CN` : Chinese (PRC).
	AudioPromptLanguage OptString `json:"audio_prompt_language"`
	// The holiday hours.
	HolidayHours []GetAutoReceptionistDetailOKHolidayHoursItem `json:"holiday_hours"`
	PhoneNumbers []GetAutoReceptionistDetailOKPhoneNumbersItem `json:"phone_numbers"`
	Site         OptGetAutoReceptionistDetailOKSite            `json:"site"`
	// Determine where recording will be stored. Recording includes Phone recordings, voicemail,
	// voicemail transcripts, and custom greeting prompts.
	// * `US` : United States
	// * `AU` : Australia
	// * `CA` : Canada
	// * `DE` : Germany
	// * `IN` : India
	// * `JP` : Japan
	// * `SG` : Singapore
	// * `BR` : Brazil
	// * `CN` : China
	// * `MX` : Mexico
	// <b>Note:</b>
	// * If the setting is locked at the Account level, it can't be updated.
	RecordingStorageLocation OptString `json:"recording_storage_location"`
	// The name of your own storage. Use your own storage provided by Oracle Cloud Infrastructure (OCI)
	// to store Zoom Phone recordings, voicemails, and voicemail transcripts, and custom greeting prompts.
	OwnStorageName OptString `json:"own_storage_name"`
}

// GetCostCenter returns the value of CostCenter.
func (s *GetAutoReceptionistDetailOK) GetCostCenter() OptString {
	return s.CostCenter
}

// GetDepartment returns the value of Department.
func (s *GetAutoReceptionistDetailOK) GetDepartment() OptString {
	return s.Department
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetAutoReceptionistDetailOK) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetAutoReceptionistDetailOK) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetName returns the value of Name.
func (s *GetAutoReceptionistDetailOK) GetName() OptString {
	return s.Name
}

// GetTimezone returns the value of Timezone.
func (s *GetAutoReceptionistDetailOK) GetTimezone() OptString {
	return s.Timezone
}

// GetAudioPromptLanguage returns the value of AudioPromptLanguage.
func (s *GetAutoReceptionistDetailOK) GetAudioPromptLanguage() OptString {
	return s.AudioPromptLanguage
}

// GetHolidayHours returns the value of HolidayHours.
func (s *GetAutoReceptionistDetailOK) GetHolidayHours() []GetAutoReceptionistDetailOKHolidayHoursItem {
	return s.HolidayHours
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *GetAutoReceptionistDetailOK) GetPhoneNumbers() []GetAutoReceptionistDetailOKPhoneNumbersItem {
	return s.PhoneNumbers
}

// GetSite returns the value of Site.
func (s *GetAutoReceptionistDetailOK) GetSite() OptGetAutoReceptionistDetailOKSite {
	return s.Site
}

// GetRecordingStorageLocation returns the value of RecordingStorageLocation.
func (s *GetAutoReceptionistDetailOK) GetRecordingStorageLocation() OptString {
	return s.RecordingStorageLocation
}

// GetOwnStorageName returns the value of OwnStorageName.
func (s *GetAutoReceptionistDetailOK) GetOwnStorageName() OptString {
	return s.OwnStorageName
}

// SetCostCenter sets the value of CostCenter.
func (s *GetAutoReceptionistDetailOK) SetCostCenter(val OptString) {
	s.CostCenter = val
}

// SetDepartment sets the value of Department.
func (s *GetAutoReceptionistDetailOK) SetDepartment(val OptString) {
	s.Department = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetAutoReceptionistDetailOK) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetAutoReceptionistDetailOK) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetName sets the value of Name.
func (s *GetAutoReceptionistDetailOK) SetName(val OptString) {
	s.Name = val
}

// SetTimezone sets the value of Timezone.
func (s *GetAutoReceptionistDetailOK) SetTimezone(val OptString) {
	s.Timezone = val
}

// SetAudioPromptLanguage sets the value of AudioPromptLanguage.
func (s *GetAutoReceptionistDetailOK) SetAudioPromptLanguage(val OptString) {
	s.AudioPromptLanguage = val
}

// SetHolidayHours sets the value of HolidayHours.
func (s *GetAutoReceptionistDetailOK) SetHolidayHours(val []GetAutoReceptionistDetailOKHolidayHoursItem) {
	s.HolidayHours = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *GetAutoReceptionistDetailOK) SetPhoneNumbers(val []GetAutoReceptionistDetailOKPhoneNumbersItem) {
	s.PhoneNumbers = val
}

// SetSite sets the value of Site.
func (s *GetAutoReceptionistDetailOK) SetSite(val OptGetAutoReceptionistDetailOKSite) {
	s.Site = val
}

// SetRecordingStorageLocation sets the value of RecordingStorageLocation.
func (s *GetAutoReceptionistDetailOK) SetRecordingStorageLocation(val OptString) {
	s.RecordingStorageLocation = val
}

// SetOwnStorageName sets the value of OwnStorageName.
func (s *GetAutoReceptionistDetailOK) SetOwnStorageName(val OptString) {
	s.OwnStorageName = val
}

type GetAutoReceptionistDetailOKHolidayHoursItem struct {
	// The holiday ID.
	ID OptString `json:"id"`
	// The name of the holiday.
	Name OptString `json:"name"`
	// The holiday start date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.
	From OptDateTime `json:"from"`
	// The holiday end date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.
	To OptDateTime `json:"to"`
}

// GetID returns the value of ID.
func (s *GetAutoReceptionistDetailOKHolidayHoursItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetAutoReceptionistDetailOKHolidayHoursItem) GetName() OptString {
	return s.Name
}

// GetFrom returns the value of From.
func (s *GetAutoReceptionistDetailOKHolidayHoursItem) GetFrom() OptDateTime {
	return s.From
}

// GetTo returns the value of To.
func (s *GetAutoReceptionistDetailOKHolidayHoursItem) GetTo() OptDateTime {
	return s.To
}

// SetID sets the value of ID.
func (s *GetAutoReceptionistDetailOKHolidayHoursItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetAutoReceptionistDetailOKHolidayHoursItem) SetName(val OptString) {
	s.Name = val
}

// SetFrom sets the value of From.
func (s *GetAutoReceptionistDetailOKHolidayHoursItem) SetFrom(val OptDateTime) {
	s.From = val
}

// SetTo sets the value of To.
func (s *GetAutoReceptionistDetailOKHolidayHoursItem) SetTo(val OptDateTime) {
	s.To = val
}

type GetAutoReceptionistDetailOKPhoneNumbersItem struct {
	// Unique identifier of the phone number.
	ID OptString `json:"id"`
	// Phone number.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *GetAutoReceptionistDetailOKPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *GetAutoReceptionistDetailOKPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *GetAutoReceptionistDetailOKPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *GetAutoReceptionistDetailOKPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

type GetAutoReceptionistDetailOKSite struct {
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is
	// assigned.
	ID OptString `json:"id"`
	// Name of the site.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetAutoReceptionistDetailOKSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetAutoReceptionistDetailOKSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetAutoReceptionistDetailOKSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetAutoReceptionistDetailOKSite) SetName(val OptString) {
	s.Name = val
}

type GetAutoReceptionistIVROK struct {
	AudioPrompt OptGetAutoReceptionistIVROKAudioPrompt `json:"audio_prompt"`
	// The action if caller enters no action after the prompt played.
	CallerEntersNoAction OptGetAutoReceptionistIVROKCallerEntersNoAction `json:"caller_enters_no_action"`
	// IVR routing options.
	KeyActions []GetAutoReceptionistIVROKKeyActionsItem `json:"key_actions"`
}

// GetAudioPrompt returns the value of AudioPrompt.
func (s *GetAutoReceptionistIVROK) GetAudioPrompt() OptGetAutoReceptionistIVROKAudioPrompt {
	return s.AudioPrompt
}

// GetCallerEntersNoAction returns the value of CallerEntersNoAction.
func (s *GetAutoReceptionistIVROK) GetCallerEntersNoAction() OptGetAutoReceptionistIVROKCallerEntersNoAction {
	return s.CallerEntersNoAction
}

// GetKeyActions returns the value of KeyActions.
func (s *GetAutoReceptionistIVROK) GetKeyActions() []GetAutoReceptionistIVROKKeyActionsItem {
	return s.KeyActions
}

// SetAudioPrompt sets the value of AudioPrompt.
func (s *GetAutoReceptionistIVROK) SetAudioPrompt(val OptGetAutoReceptionistIVROKAudioPrompt) {
	s.AudioPrompt = val
}

// SetCallerEntersNoAction sets the value of CallerEntersNoAction.
func (s *GetAutoReceptionistIVROK) SetCallerEntersNoAction(val OptGetAutoReceptionistIVROKCallerEntersNoAction) {
	s.CallerEntersNoAction = val
}

// SetKeyActions sets the value of KeyActions.
func (s *GetAutoReceptionistIVROK) SetKeyActions(val []GetAutoReceptionistIVROKKeyActionsItem) {
	s.KeyActions = val
}

type GetAutoReceptionistIVROKAudioPrompt struct {
	// The audio prompt file ID. If the audio was removed from the user's audio library, it will be
	// marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio
	// ID to get the audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	ID OptString `json:"id"`
	// The audio prompt file name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetAutoReceptionistIVROKAudioPrompt) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetAutoReceptionistIVROKAudioPrompt) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetAutoReceptionistIVROKAudioPrompt) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetAutoReceptionistIVROKAudioPrompt) SetName(val OptString) {
	s.Name = val
}

// The action if caller enters no action after the prompt played.
type GetAutoReceptionistIVROKCallerEntersNoAction struct {
	// The action if the caller enters no action after the prompt played.
	// `-1` Disconnect the call
	// `2` Forward to the user
	// `4` Forward to the common area
	// `5` Forward to Cisco/Polycom Room
	// `6` Forward to the auto receptionist
	// `7` Forward to the call queue
	// `8` Forward to the shared line group
	// `15` Forward to the Contact Center.
	Action OptInt `json:"action"`
	// The number of times to repeat the audio prompt.
	AudioPromptRepeat OptInt                                                   `json:"audio_prompt_repeat"`
	ForwardTo         OptGetAutoReceptionistIVROKCallerEntersNoActionForwardTo `json:"forward_to"`
}

// GetAction returns the value of Action.
func (s *GetAutoReceptionistIVROKCallerEntersNoAction) GetAction() OptInt {
	return s.Action
}

// GetAudioPromptRepeat returns the value of AudioPromptRepeat.
func (s *GetAutoReceptionistIVROKCallerEntersNoAction) GetAudioPromptRepeat() OptInt {
	return s.AudioPromptRepeat
}

// GetForwardTo returns the value of ForwardTo.
func (s *GetAutoReceptionistIVROKCallerEntersNoAction) GetForwardTo() OptGetAutoReceptionistIVROKCallerEntersNoActionForwardTo {
	return s.ForwardTo
}

// SetAction sets the value of Action.
func (s *GetAutoReceptionistIVROKCallerEntersNoAction) SetAction(val OptInt) {
	s.Action = val
}

// SetAudioPromptRepeat sets the value of AudioPromptRepeat.
func (s *GetAutoReceptionistIVROKCallerEntersNoAction) SetAudioPromptRepeat(val OptInt) {
	s.AudioPromptRepeat = val
}

// SetForwardTo sets the value of ForwardTo.
func (s *GetAutoReceptionistIVROKCallerEntersNoAction) SetForwardTo(val OptGetAutoReceptionistIVROKCallerEntersNoActionForwardTo) {
	s.ForwardTo = val
}

type GetAutoReceptionistIVROKCallerEntersNoActionForwardTo struct {
	// The display name.
	DisplayName OptString `json:"display_name"`
	// The extension ID or contact center setting ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptString `json:"extension_number"`
	// The user, common area, Zoom Room, Cisco/Polycom room, auto receptionist, call queue, or shared
	// line group ID.
	ID OptString `json:"id"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetAutoReceptionistIVROKCallerEntersNoActionForwardTo) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetAutoReceptionistIVROKCallerEntersNoActionForwardTo) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetAutoReceptionistIVROKCallerEntersNoActionForwardTo) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *GetAutoReceptionistIVROKCallerEntersNoActionForwardTo) GetID() OptString {
	return s.ID
}

// SetDisplayName sets the value of DisplayName.
func (s *GetAutoReceptionistIVROKCallerEntersNoActionForwardTo) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetAutoReceptionistIVROKCallerEntersNoActionForwardTo) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetAutoReceptionistIVROKCallerEntersNoActionForwardTo) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *GetAutoReceptionistIVROKCallerEntersNoActionForwardTo) SetID(val OptString) {
	s.ID = val
}

type GetAutoReceptionistIVROKKeyActionsItem struct {
	// The action after clicking the key.
	// For key `0`-`9`
	// `100` Leave voicemail to the current extension
	// `200` Leave voicemail to the user
	// `300` Leave voicemail to the auto receptionist
	// `400` Leave voicemail to the  call queue
	// `500` Leave voicemail to the shared line group
	// `2` Forward to the user
	// `3` Forward to Zoom Room
	// `4` Forward to the common area
	// `5` Forward to Cisco/Polycom Room
	// `6` Forward to the auto receptionist
	// `7` Forward to the call queue
	// `8` Forward to the shared line group
	// `9` Forward to external contacts
	// `10` Forward to a phone number
	// `15` Forward to the contact center
	// `16` Forward to the meeting service
	// `17` Forward to the meeting service number
	// `-1` Disabled
	// For key * or #
	// `21` Repeat menu greeting
	// `22` Return to the root menu
	// `23` Return to the previous menu
	// `-1` Disabled.
	Action OptInt `json:"action"`
	// The key. The following values are supported: numeric('0'-'9'), *, #.
	Key OptString `json:"key"`
	// The route to an extension, phone number, or a contact center.
	Target OptGetAutoReceptionistIVROKKeyActionsItemTarget `json:"target"`
	// The voicemail greeting.
	VoicemailGreeting OptGetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting `json:"voicemail_greeting"`
}

// GetAction returns the value of Action.
func (s *GetAutoReceptionistIVROKKeyActionsItem) GetAction() OptInt {
	return s.Action
}

// GetKey returns the value of Key.
func (s *GetAutoReceptionistIVROKKeyActionsItem) GetKey() OptString {
	return s.Key
}

// GetTarget returns the value of Target.
func (s *GetAutoReceptionistIVROKKeyActionsItem) GetTarget() OptGetAutoReceptionistIVROKKeyActionsItemTarget {
	return s.Target
}

// GetVoicemailGreeting returns the value of VoicemailGreeting.
func (s *GetAutoReceptionistIVROKKeyActionsItem) GetVoicemailGreeting() OptGetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting {
	return s.VoicemailGreeting
}

// SetAction sets the value of Action.
func (s *GetAutoReceptionistIVROKKeyActionsItem) SetAction(val OptInt) {
	s.Action = val
}

// SetKey sets the value of Key.
func (s *GetAutoReceptionistIVROKKeyActionsItem) SetKey(val OptString) {
	s.Key = val
}

// SetTarget sets the value of Target.
func (s *GetAutoReceptionistIVROKKeyActionsItem) SetTarget(val OptGetAutoReceptionistIVROKKeyActionsItemTarget) {
	s.Target = val
}

// SetVoicemailGreeting sets the value of VoicemailGreeting.
func (s *GetAutoReceptionistIVROKKeyActionsItem) SetVoicemailGreeting(val OptGetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting) {
	s.VoicemailGreeting = val
}

// The route to an extension, phone number, or a contact center.
type GetAutoReceptionistIVROKKeyActionsItemTarget struct {
	// The display name.
	DisplayName OptString `json:"display_name"`
	// The extension ID or contact center setting ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptString `json:"extension_number"`
	// The user, common area, Zoom Room, Cisco/Polycom room, auto receptionist, call queue, or shared
	// line group ID.
	ID OptString `json:"id"`
	// The phone number to forward to in E164 format.
	PhoneNumber OptString `json:"phone_number"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetAutoReceptionistIVROKKeyActionsItemTarget) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetAutoReceptionistIVROKKeyActionsItemTarget) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetAutoReceptionistIVROKKeyActionsItemTarget) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *GetAutoReceptionistIVROKKeyActionsItemTarget) GetID() OptString {
	return s.ID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *GetAutoReceptionistIVROKKeyActionsItemTarget) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// SetDisplayName sets the value of DisplayName.
func (s *GetAutoReceptionistIVROKKeyActionsItemTarget) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetAutoReceptionistIVROKKeyActionsItemTarget) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetAutoReceptionistIVROKKeyActionsItemTarget) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *GetAutoReceptionistIVROKKeyActionsItemTarget) SetID(val OptString) {
	s.ID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *GetAutoReceptionistIVROKKeyActionsItemTarget) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// The voicemail greeting.
type GetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting struct {
	// The voicemail greeting file ID. If the audio was removed from the user's audio library, it will be
	// marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio
	// ID to get the audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	ID OptString `json:"id"`
	// The voicemail greeting file name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting) SetName(val OptString) {
	s.Name = val
}

type GetAutoReceptionistsPolicyOK struct {
	// Shared voicemail access member list.
	VoicemailAccessMembers []GetAutoReceptionistsPolicyOKVoicemailAccessMembersItem `json:"voicemail_access_members"`
	VoicemailTranscription OptGetAutoReceptionistsPolicyOKVoicemailTranscription    `json:"voicemail_transcription"`
	// Once enabled, users will receive email notifications when there is a new voicemail from users,
	// call queues, auto receptionists or shared line groups. Users who disabled the shared voicemail
	// notification by email policy will not receive notifications. Only displayed when the voicemail
	// policy is using the new policy framework.
	VoicemailNotificationByEmail OptGetAutoReceptionistsPolicyOKVoicemailNotificationByEmail `json:"voicemail_notification_by_email"`
	SMS                          OptGetAutoReceptionistsPolicyOKSMS                          `json:"sms"`
}

// GetVoicemailAccessMembers returns the value of VoicemailAccessMembers.
func (s *GetAutoReceptionistsPolicyOK) GetVoicemailAccessMembers() []GetAutoReceptionistsPolicyOKVoicemailAccessMembersItem {
	return s.VoicemailAccessMembers
}

// GetVoicemailTranscription returns the value of VoicemailTranscription.
func (s *GetAutoReceptionistsPolicyOK) GetVoicemailTranscription() OptGetAutoReceptionistsPolicyOKVoicemailTranscription {
	return s.VoicemailTranscription
}

// GetVoicemailNotificationByEmail returns the value of VoicemailNotificationByEmail.
func (s *GetAutoReceptionistsPolicyOK) GetVoicemailNotificationByEmail() OptGetAutoReceptionistsPolicyOKVoicemailNotificationByEmail {
	return s.VoicemailNotificationByEmail
}

// GetSMS returns the value of SMS.
func (s *GetAutoReceptionistsPolicyOK) GetSMS() OptGetAutoReceptionistsPolicyOKSMS {
	return s.SMS
}

// SetVoicemailAccessMembers sets the value of VoicemailAccessMembers.
func (s *GetAutoReceptionistsPolicyOK) SetVoicemailAccessMembers(val []GetAutoReceptionistsPolicyOKVoicemailAccessMembersItem) {
	s.VoicemailAccessMembers = val
}

// SetVoicemailTranscription sets the value of VoicemailTranscription.
func (s *GetAutoReceptionistsPolicyOK) SetVoicemailTranscription(val OptGetAutoReceptionistsPolicyOKVoicemailTranscription) {
	s.VoicemailTranscription = val
}

// SetVoicemailNotificationByEmail sets the value of VoicemailNotificationByEmail.
func (s *GetAutoReceptionistsPolicyOK) SetVoicemailNotificationByEmail(val OptGetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) {
	s.VoicemailNotificationByEmail = val
}

// SetSMS sets the value of SMS.
func (s *GetAutoReceptionistsPolicyOK) SetSMS(val OptGetAutoReceptionistsPolicyOKSMS) {
	s.SMS = val
}

type GetAutoReceptionistsPolicyOKSMS struct {
	// Whether to allow users, call queues and auto receptionists to send and receive messages. You will
	// still need to assign a valid calling plan and phone number to each user in order for them to send
	// and receive messages.
	Enable OptBool `json:"enable"`
	// Whether the user can send and receive international messages.
	InternationalSMS OptBool `json:"international_sms"`
	// The country to which users can send and receive international messages. The [country ISO
	// code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	InternationalSMSCountries []string `json:"international_sms_countries"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetAutoReceptionistsPolicyOKSMS) GetEnable() OptBool {
	return s.Enable
}

// GetInternationalSMS returns the value of InternationalSMS.
func (s *GetAutoReceptionistsPolicyOKSMS) GetInternationalSMS() OptBool {
	return s.InternationalSMS
}

// GetInternationalSMSCountries returns the value of InternationalSMSCountries.
func (s *GetAutoReceptionistsPolicyOKSMS) GetInternationalSMSCountries() []string {
	return s.InternationalSMSCountries
}

// GetLocked returns the value of Locked.
func (s *GetAutoReceptionistsPolicyOKSMS) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetAutoReceptionistsPolicyOKSMS) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetAutoReceptionistsPolicyOKSMS) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetAutoReceptionistsPolicyOKSMS) SetEnable(val OptBool) {
	s.Enable = val
}

// SetInternationalSMS sets the value of InternationalSMS.
func (s *GetAutoReceptionistsPolicyOKSMS) SetInternationalSMS(val OptBool) {
	s.InternationalSMS = val
}

// SetInternationalSMSCountries sets the value of InternationalSMSCountries.
func (s *GetAutoReceptionistsPolicyOKSMS) SetInternationalSMSCountries(val []string) {
	s.InternationalSMSCountries = val
}

// SetLocked sets the value of Locked.
func (s *GetAutoReceptionistsPolicyOKSMS) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetAutoReceptionistsPolicyOKSMS) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetAutoReceptionistsPolicyOKSMS) SetModified(val OptBool) {
	s.Modified = val
}

type GetAutoReceptionistsPolicyOKVoicemailAccessMembersItem struct {
	// Unique identifier of the shared voicemail that the user can access.
	SharedID OptString `json:"shared_id"`
	// The Zoom user ID to share the voicemail access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// Specifies whether the user has delete permissions. The default is **false**.
	Delete OptBool `json:"delete"`
	// Specifies whether the user has download permissions. The default is **false**.
	Download OptBool `json:"download"`
}

// GetSharedID returns the value of SharedID.
func (s *GetAutoReceptionistsPolicyOKVoicemailAccessMembersItem) GetSharedID() OptString {
	return s.SharedID
}

// GetAccessUserID returns the value of AccessUserID.
func (s *GetAutoReceptionistsPolicyOKVoicemailAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetDelete returns the value of Delete.
func (s *GetAutoReceptionistsPolicyOKVoicemailAccessMembersItem) GetDelete() OptBool {
	return s.Delete
}

// GetDownload returns the value of Download.
func (s *GetAutoReceptionistsPolicyOKVoicemailAccessMembersItem) GetDownload() OptBool {
	return s.Download
}

// SetSharedID sets the value of SharedID.
func (s *GetAutoReceptionistsPolicyOKVoicemailAccessMembersItem) SetSharedID(val OptString) {
	s.SharedID = val
}

// SetAccessUserID sets the value of AccessUserID.
func (s *GetAutoReceptionistsPolicyOKVoicemailAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetDelete sets the value of Delete.
func (s *GetAutoReceptionistsPolicyOKVoicemailAccessMembersItem) SetDelete(val OptBool) {
	s.Delete = val
}

// SetDownload sets the value of Download.
func (s *GetAutoReceptionistsPolicyOKVoicemailAccessMembersItem) SetDownload(val OptBool) {
	s.Download = val
}

// Once enabled, users will receive email notifications when there is a new voicemail from users,
// call queues, auto receptionists or shared line groups. Users who disabled the shared voicemail
// notification by email policy will not receive notifications. Only displayed when the voicemail
// policy is using the new policy framework.
type GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail struct {
	// Whether to include the voicemail file.
	IncludeVoicemailFile OptBool `json:"include_voicemail_file"`
	// Whether to include the voicemail transcription.
	IncludeVoicemailTranscription OptBool `json:"include_voicemail_transcription"`
	// Whether to forward the voicemail to email.
	ForwardVoicemailToEmail OptBool `json:"forward_voicemail_to_email"`
	Enable                  OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetIncludeVoicemailFile returns the value of IncludeVoicemailFile.
func (s *GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) GetIncludeVoicemailFile() OptBool {
	return s.IncludeVoicemailFile
}

// GetIncludeVoicemailTranscription returns the value of IncludeVoicemailTranscription.
func (s *GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) GetIncludeVoicemailTranscription() OptBool {
	return s.IncludeVoicemailTranscription
}

// GetForwardVoicemailToEmail returns the value of ForwardVoicemailToEmail.
func (s *GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) GetForwardVoicemailToEmail() OptBool {
	return s.ForwardVoicemailToEmail
}

// GetEnable returns the value of Enable.
func (s *GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) GetModified() OptBool {
	return s.Modified
}

// SetIncludeVoicemailFile sets the value of IncludeVoicemailFile.
func (s *GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) SetIncludeVoicemailFile(val OptBool) {
	s.IncludeVoicemailFile = val
}

// SetIncludeVoicemailTranscription sets the value of IncludeVoicemailTranscription.
func (s *GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) SetIncludeVoicemailTranscription(val OptBool) {
	s.IncludeVoicemailTranscription = val
}

// SetForwardVoicemailToEmail sets the value of ForwardVoicemailToEmail.
func (s *GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) SetForwardVoicemailToEmail(val OptBool) {
	s.ForwardVoicemailToEmail = val
}

// SetEnable sets the value of Enable.
func (s *GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) SetModified(val OptBool) {
	s.Modified = val
}

type GetAutoReceptionistsPolicyOKVoicemailTranscription struct {
	// Whether to allow users to access transcriptions of voicemails from the Zoom client, the Zoom web
	// portal and email notifications.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetAutoReceptionistsPolicyOKVoicemailTranscription) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetAutoReceptionistsPolicyOKVoicemailTranscription) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetAutoReceptionistsPolicyOKVoicemailTranscription) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetAutoReceptionistsPolicyOKVoicemailTranscription) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetAutoReceptionistsPolicyOKVoicemailTranscription) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetAutoReceptionistsPolicyOKVoicemailTranscription) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetAutoReceptionistsPolicyOKVoicemailTranscription) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetAutoReceptionistsPolicyOKVoicemailTranscription) SetModified(val OptBool) {
	s.Modified = val
}

type GetCallChargesUsageReportOK struct {
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The given page size.
	PageSize OptInt `json:"page_size"`
	// The total number of records returned within a single API call.
	TotalRecords OptInt `json:"total_records"`
	// The start time and date of the call.
	From OptString `json:"from"`
	// The end time and date of the SMS/MMS.
	To OptString `json:"to"`
	// An array of call charges.
	CallCharges []GetCallChargesUsageReportOKCallChargesItem `json:"call_charges"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *GetCallChargesUsageReportOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *GetCallChargesUsageReportOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *GetCallChargesUsageReportOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// GetFrom returns the value of From.
func (s *GetCallChargesUsageReportOK) GetFrom() OptString {
	return s.From
}

// GetTo returns the value of To.
func (s *GetCallChargesUsageReportOK) GetTo() OptString {
	return s.To
}

// GetCallCharges returns the value of CallCharges.
func (s *GetCallChargesUsageReportOK) GetCallCharges() []GetCallChargesUsageReportOKCallChargesItem {
	return s.CallCharges
}

// SetNextPageToken sets the value of NextPageToken.
func (s *GetCallChargesUsageReportOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *GetCallChargesUsageReportOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *GetCallChargesUsageReportOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

// SetFrom sets the value of From.
func (s *GetCallChargesUsageReportOK) SetFrom(val OptString) {
	s.From = val
}

// SetTo sets the value of To.
func (s *GetCallChargesUsageReportOK) SetTo(val OptString) {
	s.To = val
}

// SetCallCharges sets the value of CallCharges.
func (s *GetCallChargesUsageReportOK) SetCallCharges(val []GetCallChargesUsageReportOKCallChargesItem) {
	s.CallCharges = val
}

type GetCallChargesUsageReportOKCallChargesItem struct {
	// The ID of the call log. You can use this value to fetch the details of the call log using [Get
	// call log details](https://developers.zoom.
	// us/docs/api/rest/reference/phone/methods/#operation/getCallLogDetails).
	CallLogID OptString `json:"call_log_id"`
	// The caller's phone number.
	CallerNumber OptString `json:"caller_number"`
	// The caller's billing phone number.
	CallerBillingNumber OptString `json:"caller_billing_number"`
	// The callee's phone number.
	CalleeNumber OptString `json:"callee_number"`
	// The callee's billing phone number.
	CalleeBillingNumber OptString `json:"callee_billing_number"`
	// The type of call:
	// * `voip` (Voice over IP)
	// * `local` (Public Switched Telephone Network)
	// * `tollfree`
	// * `international`
	// * `callCenter`.
	CallType OptString `json:"call_type"`
	// The type of service:
	// * `meeting`
	// * `call` (normal call)`.
	ServiceType OptString `json:"service_type"`
	// The name of the calling party.
	CallingPartyName OptString `json:"calling_party_name"`
	// The name of the cost center.
	CostCenter OptString `json:"cost_center"`
	// The employee's ID.
	EmployeeID OptString `json:"employee_id"`
	// The name of the department.
	Department OptString `json:"department"`
	// The call end time in GMT `date-time` format.
	EndTime OptString `json:"end_time"`
	// The duration of the call in minutes.
	Duration OptInt `json:"duration"`
	// The mode of charging.
	ChargeMode OptString `json:"charge_mode"`
	// The rate of billing.
	Rate OptString `json:"rate"`
	// The currency of the billed amount.
	Currency OptString `json:"currency"`
	// The total charge.
	TotalCharge OptString `json:"total_charge"`
	// The billing number.
	BillingNumber OptString `json:"billing_number"`
	// The billing for the forward number.
	ForwardNumberBilling OptString `json:"forward_number_billing"`
}

// GetCallLogID returns the value of CallLogID.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetCallLogID() OptString {
	return s.CallLogID
}

// GetCallerNumber returns the value of CallerNumber.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetCallerNumber() OptString {
	return s.CallerNumber
}

// GetCallerBillingNumber returns the value of CallerBillingNumber.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetCallerBillingNumber() OptString {
	return s.CallerBillingNumber
}

// GetCalleeNumber returns the value of CalleeNumber.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetCalleeNumber() OptString {
	return s.CalleeNumber
}

// GetCalleeBillingNumber returns the value of CalleeBillingNumber.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetCalleeBillingNumber() OptString {
	return s.CalleeBillingNumber
}

// GetCallType returns the value of CallType.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetCallType() OptString {
	return s.CallType
}

// GetServiceType returns the value of ServiceType.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetServiceType() OptString {
	return s.ServiceType
}

// GetCallingPartyName returns the value of CallingPartyName.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetCallingPartyName() OptString {
	return s.CallingPartyName
}

// GetCostCenter returns the value of CostCenter.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetCostCenter() OptString {
	return s.CostCenter
}

// GetEmployeeID returns the value of EmployeeID.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetEmployeeID() OptString {
	return s.EmployeeID
}

// GetDepartment returns the value of Department.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetDepartment() OptString {
	return s.Department
}

// GetEndTime returns the value of EndTime.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetEndTime() OptString {
	return s.EndTime
}

// GetDuration returns the value of Duration.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetDuration() OptInt {
	return s.Duration
}

// GetChargeMode returns the value of ChargeMode.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetChargeMode() OptString {
	return s.ChargeMode
}

// GetRate returns the value of Rate.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetRate() OptString {
	return s.Rate
}

// GetCurrency returns the value of Currency.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetCurrency() OptString {
	return s.Currency
}

// GetTotalCharge returns the value of TotalCharge.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetTotalCharge() OptString {
	return s.TotalCharge
}

// GetBillingNumber returns the value of BillingNumber.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetBillingNumber() OptString {
	return s.BillingNumber
}

// GetForwardNumberBilling returns the value of ForwardNumberBilling.
func (s *GetCallChargesUsageReportOKCallChargesItem) GetForwardNumberBilling() OptString {
	return s.ForwardNumberBilling
}

// SetCallLogID sets the value of CallLogID.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetCallLogID(val OptString) {
	s.CallLogID = val
}

// SetCallerNumber sets the value of CallerNumber.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetCallerNumber(val OptString) {
	s.CallerNumber = val
}

// SetCallerBillingNumber sets the value of CallerBillingNumber.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetCallerBillingNumber(val OptString) {
	s.CallerBillingNumber = val
}

// SetCalleeNumber sets the value of CalleeNumber.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetCalleeNumber(val OptString) {
	s.CalleeNumber = val
}

// SetCalleeBillingNumber sets the value of CalleeBillingNumber.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetCalleeBillingNumber(val OptString) {
	s.CalleeBillingNumber = val
}

// SetCallType sets the value of CallType.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetCallType(val OptString) {
	s.CallType = val
}

// SetServiceType sets the value of ServiceType.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetServiceType(val OptString) {
	s.ServiceType = val
}

// SetCallingPartyName sets the value of CallingPartyName.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetCallingPartyName(val OptString) {
	s.CallingPartyName = val
}

// SetCostCenter sets the value of CostCenter.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetCostCenter(val OptString) {
	s.CostCenter = val
}

// SetEmployeeID sets the value of EmployeeID.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetEmployeeID(val OptString) {
	s.EmployeeID = val
}

// SetDepartment sets the value of Department.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetDepartment(val OptString) {
	s.Department = val
}

// SetEndTime sets the value of EndTime.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetEndTime(val OptString) {
	s.EndTime = val
}

// SetDuration sets the value of Duration.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetDuration(val OptInt) {
	s.Duration = val
}

// SetChargeMode sets the value of ChargeMode.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetChargeMode(val OptString) {
	s.ChargeMode = val
}

// SetRate sets the value of Rate.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetRate(val OptString) {
	s.Rate = val
}

// SetCurrency sets the value of Currency.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetCurrency(val OptString) {
	s.Currency = val
}

// SetTotalCharge sets the value of TotalCharge.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetTotalCharge(val OptString) {
	s.TotalCharge = val
}

// SetBillingNumber sets the value of BillingNumber.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetBillingNumber(val OptString) {
	s.BillingNumber = val
}

// SetForwardNumberBilling sets the value of ForwardNumberBilling.
func (s *GetCallChargesUsageReportOKCallChargesItem) SetForwardNumberBilling(val OptString) {
	s.ForwardNumberBilling = val
}

type GetCallHandlingOK struct {
	// The information about business hours settings.
	BusinessHours []GetCallHandlingOKBusinessHoursItem `json:"business_hours"`
	// The information about the closed hours settings.
	ClosedHours []GetCallHandlingOKClosedHoursItem `json:"closed_hours"`
	// The information about the holiday hours settings.
	HolidayHours []GetCallHandlingOKHolidayHoursItem `json:"holiday_hours"`
}

// GetBusinessHours returns the value of BusinessHours.
func (s *GetCallHandlingOK) GetBusinessHours() []GetCallHandlingOKBusinessHoursItem {
	return s.BusinessHours
}

// GetClosedHours returns the value of ClosedHours.
func (s *GetCallHandlingOK) GetClosedHours() []GetCallHandlingOKClosedHoursItem {
	return s.ClosedHours
}

// GetHolidayHours returns the value of HolidayHours.
func (s *GetCallHandlingOK) GetHolidayHours() []GetCallHandlingOKHolidayHoursItem {
	return s.HolidayHours
}

// SetBusinessHours sets the value of BusinessHours.
func (s *GetCallHandlingOK) SetBusinessHours(val []GetCallHandlingOKBusinessHoursItem) {
	s.BusinessHours = val
}

// SetClosedHours sets the value of ClosedHours.
func (s *GetCallHandlingOK) SetClosedHours(val []GetCallHandlingOKClosedHoursItem) {
	s.ClosedHours = val
}

// SetHolidayHours sets the value of HolidayHours.
func (s *GetCallHandlingOK) SetHolidayHours(val []GetCallHandlingOKHolidayHoursItem) {
	s.HolidayHours = val
}

type GetCallHandlingOKBusinessHoursItem struct {
	// The business hours settings.
	Settings OptGetCallHandlingOKBusinessHoursItemSettings `json:"settings"`
	// The type of sub-setting:
	// * `call_forwarding`
	// * `custom_hours`
	// * `call_handling`.
	SubSettingType OptString `json:"sub_setting_type"`
}

// GetSettings returns the value of Settings.
func (s *GetCallHandlingOKBusinessHoursItem) GetSettings() OptGetCallHandlingOKBusinessHoursItemSettings {
	return s.Settings
}

// GetSubSettingType returns the value of SubSettingType.
func (s *GetCallHandlingOKBusinessHoursItem) GetSubSettingType() OptString {
	return s.SubSettingType
}

// SetSettings sets the value of Settings.
func (s *GetCallHandlingOKBusinessHoursItem) SetSettings(val OptGetCallHandlingOKBusinessHoursItemSettings) {
	s.Settings = val
}

// SetSubSettingType sets the value of SubSettingType.
func (s *GetCallHandlingOKBusinessHoursItem) SetSubSettingType(val OptString) {
	s.SubSettingType = val
}

// The business hours settings.
type GetCallHandlingOKBusinessHoursItemSettings struct {
	// Whether to allow the callers to check voicemails over a phone. Required only when the
	// `call_not_answer_action` setting is set to `1` (Forward to a voicemail).
	AllowCallersCheckVoicemail OptBool `json:"allow_callers_check_voicemail"`
	// This field allows queue members to set their own business hours. It allows queue members' business
	// hours to override the default hours of the call queue.
	// Required for `Call Queue custom_hours` sub-setting.
	AllowMembersToReset OptBool `json:"allow_members_to_reset"`
	// The audio while connecting the prompt. This option can select the audio played for the inbound
	// callers when they are waiting to be routed to the next available call queue member.
	// empty char - default and `0` - disable
	// Returned only for the `Call Queue` `call_handling` sub-setting.
	AudioWhileConnecting OptGetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting `json:"audio_while_connecting"`
	// This option distributes incoming calls.
	// If `Sequential` or `Rotating` is selected, calls ring for a specific time before trying the next
	// available queue member.
	// Returned only for the `call_handling` sub-setting.
	CallDistribution OptGetCallHandlingOKBusinessHoursItemSettingsCallDistribution `json:"call_distribution"`
	// The call forwarding settings. It returns only for the `call_forwarding` sub-setting.
	CallForwardingSettings []GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItem `json:"call_forwarding_settings"`
	// The action to take when a call is not answered:
	// * `1` &mdash; Forward to a voicemail.
	// * `2` &mdash; Forward to the user.
	// * `4` &mdash; Forward to the common area.
	// * `6` &mdash; Forward to the auto receptionist.
	// * `7` &mdash; Forward to a call queue.
	// * `8` &mdash; Forward to a shared line group.
	// * `9` &mdash; Forward to an external contact.
	// * `10` - Forward to a phone number.
	// * `11` &mdash; Disconnect.
	// * `12` &mdash; Play a message, then disconnect.
	// * `13` - Forward to message.
	// * `14` - Forward to interactive voice response (IVR).
	// Returned only for the `call_handling` sub-setting.
	CallNotAnswerAction OptInt `json:"call_not_answer_action"`
	// Whether to allow callers to reach an operator. Returns only when `call_not_answer_action` is set
	// to `1` (Forward to a voicemail).
	ConnectToOperator OptBool `json:"connect_to_operator"`
	// The custom hours settings. It returns only for the `custom_hours` sub-setting.
	CustomHoursSettings []GetCallHandlingOKBusinessHoursItemSettingsCustomHoursSettingsItem `json:"custom_hours_settings"`
	// The greeting audio prompt
	// Returns only for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting.
	GreetingPrompt OptGetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt `json:"greeting_prompt"`
	// The maximum number of calls in queue.
	// Specify the maximum number of callers to place in the queue. When this number is exceeded, callers
	// will be routed based on the overflow option. Up to 60.
	// Returned only for the `Call Queue` `call_handling` sub-setting.
	MaxCallInQueue OptInt `json:"max_call_in_queue"`
	// The maximum wait time, in seconds, for `simultaneous` ring mode or the ring duration for each
	// device for `sequential` ring mode:
	// * `10`
	// * `15`
	// * `20`
	// * `25`
	// * `30`
	// * `35`
	// * `40`
	// * `45`
	// * `50`
	// * `55`
	// * `60`
	// Specify how long a caller waits in the queue. Once the wait time is exceeded, the caller is
	// rerouted based on the overflow option for call queue`:
	// * `10`
	// * `15`
	// * `20`
	// * `25`
	// * `30`
	// * `35`
	// * `40`
	// * `45`
	// * `50`
	// * `55`
	// * `60`
	// * `120`
	// * `180`
	// * `240`
	// * `300`
	// * `600`
	// * `900`
	// * `1200`
	// * `1500`
	// * `1800`
	// Returned only for the `call_handling` sub-setting.
	MaxWaitTime OptInt `json:"max_wait_time"`
	// The music on hold prompt. This field is an option to choose music for inbound callers when they're
	// placed on hold by a call queue member.
	// empty char - default and `0` - disable.
	// Returned only for the `Call Queue` `call_handling` sub-setting.
	MusicOnHold OptGetCallHandlingOKBusinessHoursItemSettingsMusicOnHold `json:"music_on_hold"`
	// This field enables calls to be received during a current call. When enabled, call queue members
	// can receive new incoming calls notification even on the call.
	// Returned only for the `Call Queue` `call_handling` sub-setting.
	ReceiveCall OptBool `json:"receive_call"`
	// When a call is forwarded to a personal phone number, whether the user must press &quot;1&quot;
	// before the call connects. This field helps to ensure missed calls do not reach to your personal
	// voicemail. This field returns only for the `call_forwarding` sub-setting.
	RequirePress1BeforeConnecting OptBool `json:"require_press_1_before_connecting"`
	// The call handling ring mode:
	// * `simultaneous`
	// * `sequential`
	// Returned only for the `call_handling` sub-setting.
	RingMode OptString `json:"ring_mode"`
	// The extension's forwarding or overflow information. It returns the response when
	// `call_not_answer_action` or `busy_on_another_call_action` is set to `1` (Forward to a voicemail),
	// `2` (Forward to the user), `4` (Forward to the common area), `6` (Forward to the auto
	// receptionist), `7` (Forward to a call queue), `8` (Forward to a shared line group), `9` (Forward
	// to an external contact), or `10` (Forward to an external number).
	Routing OptGetCallHandlingOKBusinessHoursItemSettingsRouting `json:"routing"`
	// The extension's forwarding or overflow information. It returns the response when
	// `call_not_answer_action` or `busy_on_another_call_action` is set to `1` (Forward to a voicemail),
	// `2` (Forward to the user), `4` (Forward to the common area), `6` (Forward to the auto
	// receptionist), `7` (Forward to a call queue), `8` (Forward to a shared line group), `9` (Forward
	// to an external contact), or `10` (Forward to an external number).
	BusyRouting OptGetCallHandlingOKBusinessHoursItemSettingsBusyRouting `json:"busy_routing"`
	// The type of custom hours:
	// * `1` &mdash; 24 hours, 7 days a week.
	// * `2` &mdash; Custom hours.
	// Returns only for the `custom_hours` sub-setting.
	Type OptInt `json:"type"`
	// The wrap up time in seconds.
	// Specify the duration before the next queue call is routed to a member in call queue:
	// * `0`
	// * `10`
	// * `15`
	// * `20`
	// * `25`
	// * `30`
	// * `35`
	// * `40`
	// * `45`
	// * `50`
	// * `55`
	// * `60`
	// * `120`
	// * `180`
	// * `240`
	// * `300`
	// Returns only for the `call_handling` sub-setting option.
	WrapUpTime OptInt `json:"wrap_up_time"`
}

// GetAllowCallersCheckVoicemail returns the value of AllowCallersCheckVoicemail.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetAllowCallersCheckVoicemail() OptBool {
	return s.AllowCallersCheckVoicemail
}

// GetAllowMembersToReset returns the value of AllowMembersToReset.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetAllowMembersToReset() OptBool {
	return s.AllowMembersToReset
}

// GetAudioWhileConnecting returns the value of AudioWhileConnecting.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetAudioWhileConnecting() OptGetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting {
	return s.AudioWhileConnecting
}

// GetCallDistribution returns the value of CallDistribution.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetCallDistribution() OptGetCallHandlingOKBusinessHoursItemSettingsCallDistribution {
	return s.CallDistribution
}

// GetCallForwardingSettings returns the value of CallForwardingSettings.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetCallForwardingSettings() []GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItem {
	return s.CallForwardingSettings
}

// GetCallNotAnswerAction returns the value of CallNotAnswerAction.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetCallNotAnswerAction() OptInt {
	return s.CallNotAnswerAction
}

// GetConnectToOperator returns the value of ConnectToOperator.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetConnectToOperator() OptBool {
	return s.ConnectToOperator
}

// GetCustomHoursSettings returns the value of CustomHoursSettings.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetCustomHoursSettings() []GetCallHandlingOKBusinessHoursItemSettingsCustomHoursSettingsItem {
	return s.CustomHoursSettings
}

// GetGreetingPrompt returns the value of GreetingPrompt.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetGreetingPrompt() OptGetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt {
	return s.GreetingPrompt
}

// GetMaxCallInQueue returns the value of MaxCallInQueue.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetMaxCallInQueue() OptInt {
	return s.MaxCallInQueue
}

// GetMaxWaitTime returns the value of MaxWaitTime.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetMaxWaitTime() OptInt {
	return s.MaxWaitTime
}

// GetMusicOnHold returns the value of MusicOnHold.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetMusicOnHold() OptGetCallHandlingOKBusinessHoursItemSettingsMusicOnHold {
	return s.MusicOnHold
}

// GetReceiveCall returns the value of ReceiveCall.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetReceiveCall() OptBool {
	return s.ReceiveCall
}

// GetRequirePress1BeforeConnecting returns the value of RequirePress1BeforeConnecting.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetRequirePress1BeforeConnecting() OptBool {
	return s.RequirePress1BeforeConnecting
}

// GetRingMode returns the value of RingMode.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetRingMode() OptString {
	return s.RingMode
}

// GetRouting returns the value of Routing.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetRouting() OptGetCallHandlingOKBusinessHoursItemSettingsRouting {
	return s.Routing
}

// GetBusyRouting returns the value of BusyRouting.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetBusyRouting() OptGetCallHandlingOKBusinessHoursItemSettingsBusyRouting {
	return s.BusyRouting
}

// GetType returns the value of Type.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetType() OptInt {
	return s.Type
}

// GetWrapUpTime returns the value of WrapUpTime.
func (s *GetCallHandlingOKBusinessHoursItemSettings) GetWrapUpTime() OptInt {
	return s.WrapUpTime
}

// SetAllowCallersCheckVoicemail sets the value of AllowCallersCheckVoicemail.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetAllowCallersCheckVoicemail(val OptBool) {
	s.AllowCallersCheckVoicemail = val
}

// SetAllowMembersToReset sets the value of AllowMembersToReset.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetAllowMembersToReset(val OptBool) {
	s.AllowMembersToReset = val
}

// SetAudioWhileConnecting sets the value of AudioWhileConnecting.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetAudioWhileConnecting(val OptGetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting) {
	s.AudioWhileConnecting = val
}

// SetCallDistribution sets the value of CallDistribution.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetCallDistribution(val OptGetCallHandlingOKBusinessHoursItemSettingsCallDistribution) {
	s.CallDistribution = val
}

// SetCallForwardingSettings sets the value of CallForwardingSettings.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetCallForwardingSettings(val []GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItem) {
	s.CallForwardingSettings = val
}

// SetCallNotAnswerAction sets the value of CallNotAnswerAction.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetCallNotAnswerAction(val OptInt) {
	s.CallNotAnswerAction = val
}

// SetConnectToOperator sets the value of ConnectToOperator.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetConnectToOperator(val OptBool) {
	s.ConnectToOperator = val
}

// SetCustomHoursSettings sets the value of CustomHoursSettings.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetCustomHoursSettings(val []GetCallHandlingOKBusinessHoursItemSettingsCustomHoursSettingsItem) {
	s.CustomHoursSettings = val
}

// SetGreetingPrompt sets the value of GreetingPrompt.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetGreetingPrompt(val OptGetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt) {
	s.GreetingPrompt = val
}

// SetMaxCallInQueue sets the value of MaxCallInQueue.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetMaxCallInQueue(val OptInt) {
	s.MaxCallInQueue = val
}

// SetMaxWaitTime sets the value of MaxWaitTime.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetMaxWaitTime(val OptInt) {
	s.MaxWaitTime = val
}

// SetMusicOnHold sets the value of MusicOnHold.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetMusicOnHold(val OptGetCallHandlingOKBusinessHoursItemSettingsMusicOnHold) {
	s.MusicOnHold = val
}

// SetReceiveCall sets the value of ReceiveCall.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetReceiveCall(val OptBool) {
	s.ReceiveCall = val
}

// SetRequirePress1BeforeConnecting sets the value of RequirePress1BeforeConnecting.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetRequirePress1BeforeConnecting(val OptBool) {
	s.RequirePress1BeforeConnecting = val
}

// SetRingMode sets the value of RingMode.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetRingMode(val OptString) {
	s.RingMode = val
}

// SetRouting sets the value of Routing.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetRouting(val OptGetCallHandlingOKBusinessHoursItemSettingsRouting) {
	s.Routing = val
}

// SetBusyRouting sets the value of BusyRouting.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetBusyRouting(val OptGetCallHandlingOKBusinessHoursItemSettingsBusyRouting) {
	s.BusyRouting = val
}

// SetType sets the value of Type.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetType(val OptInt) {
	s.Type = val
}

// SetWrapUpTime sets the value of WrapUpTime.
func (s *GetCallHandlingOKBusinessHoursItemSettings) SetWrapUpTime(val OptInt) {
	s.WrapUpTime = val
}

// The audio while connecting the prompt. This option can select the audio played for the inbound
// callers when they are waiting to be routed to the next available call queue member.
// empty char - default and `0` - disable
// Returned only for the `Call Queue` `call_handling` sub-setting.
type GetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting struct {
	// The audio-while-connecting prompt ID. If the audio was removed from the user's audio library, it's
	// marked with a prefix (for example, `removed_vWby3OZaQlS1nAdmEAqgwA`). You can use this audio ID to
	// get the audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	ID OptString `json:"id"`
	// The audio while connecting the prompt name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting) SetName(val OptString) {
	s.Name = val
}

// The extension's forwarding or overflow information. It returns the response when
// `call_not_answer_action` or `busy_on_another_call_action` is set to `1` (Forward to a voicemail),
// `2` (Forward to the user), `4` (Forward to the common area), `6` (Forward to the auto
// receptionist), `7` (Forward to a call queue), `8` (Forward to a shared line group), `9` (Forward
// to an external contact), or `10` (Forward to an external number).
type GetCallHandlingOKBusinessHoursItemSettingsBusyRouting struct {
	// The extension's forwarding/overflow information. For `call_not_answered`:
	// * `1` &mdash; Forward to a voicemail/videomail.
	// * `2` - Forward to the user.
	// * `4` - Forward to the common area.
	// * `6` - Forward to the auto receptionist.
	// * `7` - Forward to a call queue.
	// * `8` - Forward to a shared line group.
	// * `9` - Forward to an external contact.
	// * `10` - Forward to an external number.
	// * `11` &mdash; Disconnect.
	// * `12` &mdash; Play a message, then disconnect.
	// For `busy_on_another_call_action`:
	// * `21` - Call waiting.
	// * `22` - Play a busy signal.
	// * `1` &mdash; Forward to a voicemail/videomail.
	// * `2` - Forward to the user.
	// * `4` - Forward to the common area.
	// * `6` - Forward to the auto receptionist.
	// * `7` - Forward to a call queue.
	// * `8` - Forward to a shared line group.
	// * `9` - Forward to an external contact.
	// * `10` - Forward to an external number.
	// * `12` &mdash; Play a message, then disconnect.
	Action OptInt `json:"action"`
	// The extension's forwarding information. It returns the response when `call_not_answer_action` or
	// `busy_on_another_call_action` is set to `2` (Forward to the user), `4` (Forward to the common
	// area), `6` (Forward to the auto receptionist), `7` (Forward to a call queue), `8` (Forward to a
	// shared line group), `9` (Forward to an external contact), or `10` (Forward to an external number).
	ForwardTo OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo `json:"forward_to"`
	// This field allows callers to reach an operator. It's the response returned when the
	// `call_not_answer_action` or `busy_on_another_call_action` setting is set to `1` (Forward to a
	// voicemail) and `connect_to_operator` setting is set to `true`.
	Operator OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator `json:"operator"`
	// Whether to allow callers to reach an operator. It returns only for the `user` and `call_handling`
	// subsetting. It displays when the `call_not_answer_action` setting or `busy_on_another_call_action`
	// setting is set to `1` (Forward to a voicemail).
	ConnectToOperator OptBool `json:"connect_to_operator"`
	// Whether to allow the callers to check voicemails over a phone. It returns only for the `user` and
	// `call_handling` subsetting options. It displays when the `call_not_answer_action` setting or
	// `busy_on_another_call_action` setting is set to `1` (Forward to a voicemail).
	AllowCallersCheckVoicemail OptBool `json:"allow_callers_check_voicemail"`
	// The voicemail greeting audio prompt
	// Returns only for the `user` and `call_handling` subsetting options. It displays when
	// `busy_on_another_call_action` action or `call_not_answer_action` is set to `1` - Forward to a
	// voicemail.
	VoicemailGreeting OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting `json:"voicemail_greeting"`
	// When a call is forwarded to a personal phone number, whether the user must press &quot;1&quot;
	// before the call connects. This field helps to ensure that missed calls do not reach to your
	// personal voicemail. It returns for the `Forward to an external number` and `Forward to External
	// Contacts` options.
	RequirePress1BeforeConnecting OptBool `json:"require_press_1_before_connecting"`
	// Whether to play the callee's voicemail greeting when the caller reaches the end of forwarding
	// sequence. It displays when `call_not_answer_action` is set to `2` - Forward to the user, `4` -
	// Forward to the common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue,
	// `8` - Forward to a shared line group, `9` - Forward to an external contact, `10` - Forward to an
	// external number.
	OverflowPlayCalleeVoicemailGreeting OptBool `json:"overflow_play_callee_voicemail_greeting"`
	// Whether to play the callee's voicemail greeting when the caller reaches end of forwarding sequence.
	//  It displays when `busy_routing` action or `call_not_answer_action` is set to `1` - Forward to a
	// voicemail.
	PlayCalleeVoicemailGreeting OptBool `json:"play_callee_voicemail_greeting"`
	// Whether to play callee's voicemail greeting when caller reaches end of forwarding sequence. It
	// displays when `busy_routing` action is set to `2` - Forward to the user, `4` - Forward to the
	// common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue, `8` - Forward
	// to a shared line group, `9` - Forward to an external contact, `10` - Forward to an external number.
	BusyPlayCalleeVoicemailGreeting OptBool `json:"busy_play_callee_voicemail_greeting"`
}

// GetAction returns the value of Action.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) GetAction() OptInt {
	return s.Action
}

// GetForwardTo returns the value of ForwardTo.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) GetForwardTo() OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo {
	return s.ForwardTo
}

// GetOperator returns the value of Operator.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) GetOperator() OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator {
	return s.Operator
}

// GetConnectToOperator returns the value of ConnectToOperator.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) GetConnectToOperator() OptBool {
	return s.ConnectToOperator
}

// GetAllowCallersCheckVoicemail returns the value of AllowCallersCheckVoicemail.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) GetAllowCallersCheckVoicemail() OptBool {
	return s.AllowCallersCheckVoicemail
}

// GetVoicemailGreeting returns the value of VoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) GetVoicemailGreeting() OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting {
	return s.VoicemailGreeting
}

// GetRequirePress1BeforeConnecting returns the value of RequirePress1BeforeConnecting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) GetRequirePress1BeforeConnecting() OptBool {
	return s.RequirePress1BeforeConnecting
}

// GetOverflowPlayCalleeVoicemailGreeting returns the value of OverflowPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) GetOverflowPlayCalleeVoicemailGreeting() OptBool {
	return s.OverflowPlayCalleeVoicemailGreeting
}

// GetPlayCalleeVoicemailGreeting returns the value of PlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) GetPlayCalleeVoicemailGreeting() OptBool {
	return s.PlayCalleeVoicemailGreeting
}

// GetBusyPlayCalleeVoicemailGreeting returns the value of BusyPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) GetBusyPlayCalleeVoicemailGreeting() OptBool {
	return s.BusyPlayCalleeVoicemailGreeting
}

// SetAction sets the value of Action.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) SetAction(val OptInt) {
	s.Action = val
}

// SetForwardTo sets the value of ForwardTo.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) SetForwardTo(val OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) {
	s.ForwardTo = val
}

// SetOperator sets the value of Operator.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) SetOperator(val OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) {
	s.Operator = val
}

// SetConnectToOperator sets the value of ConnectToOperator.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) SetConnectToOperator(val OptBool) {
	s.ConnectToOperator = val
}

// SetAllowCallersCheckVoicemail sets the value of AllowCallersCheckVoicemail.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) SetAllowCallersCheckVoicemail(val OptBool) {
	s.AllowCallersCheckVoicemail = val
}

// SetVoicemailGreeting sets the value of VoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) SetVoicemailGreeting(val OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting) {
	s.VoicemailGreeting = val
}

// SetRequirePress1BeforeConnecting sets the value of RequirePress1BeforeConnecting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) SetRequirePress1BeforeConnecting(val OptBool) {
	s.RequirePress1BeforeConnecting = val
}

// SetOverflowPlayCalleeVoicemailGreeting sets the value of OverflowPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) SetOverflowPlayCalleeVoicemailGreeting(val OptBool) {
	s.OverflowPlayCalleeVoicemailGreeting = val
}

// SetPlayCalleeVoicemailGreeting sets the value of PlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) SetPlayCalleeVoicemailGreeting(val OptBool) {
	s.PlayCalleeVoicemailGreeting = val
}

// SetBusyPlayCalleeVoicemailGreeting sets the value of BusyPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) SetBusyPlayCalleeVoicemailGreeting(val OptBool) {
	s.BusyPlayCalleeVoicemailGreeting = val
}

// The extension's forwarding information. It returns the response when `call_not_answer_action` or
// `busy_on_another_call_action` is set to `2` (Forward to the user), `4` (Forward to the common
// area), `6` (Forward to the auto receptionist), `7` (Forward to a call queue), `8` (Forward to a
// shared line group), `9` (Forward to an external contact), or `10` (Forward to an external number).
type GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo struct {
	// The extension's name.
	DisplayName OptString `json:"display_name"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The type of extension:
	// * `user`
	// * `autoReceptionist`
	// * `callQueue`.
	ExtensionType OptString `json:"extension_type"`
	// The ID of the extension for `user`, `autoReceptionist`, `device`, or `callQueue`.
	ID OptString `json:"id"`
	// The extension's phone number or forward to an external number, in [E.164 format](https://en.
	// wikipedia.org/wiki/E.164) format.
	PhoneNumber OptString `json:"phone_number"`
	// This field forwards to an external number description.
	Description OptString `json:"description"`
	// The voicemail greeting prompt. It returns only when `call_not_answer_action` is set to `1`
	// (Forward to a voicemail) for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting.
	VoicemailGreeting *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardToVoicemailGreeting `json:"voicemail_greeting"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) GetID() OptString {
	return s.ID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetDescription returns the value of Description.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) GetDescription() OptString {
	return s.Description
}

// GetVoicemailGreeting returns the value of VoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) GetVoicemailGreeting() *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardToVoicemailGreeting {
	return s.VoicemailGreeting
}

// SetDisplayName sets the value of DisplayName.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) SetID(val OptString) {
	s.ID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetDescription sets the value of Description.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) SetDescription(val OptString) {
	s.Description = val
}

// SetVoicemailGreeting sets the value of VoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) SetVoicemailGreeting(val *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardToVoicemailGreeting) {
	s.VoicemailGreeting = val
}

// The voicemail greeting prompt. It returns only when `call_not_answer_action` is set to `1`
// (Forward to a voicemail) for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting.
type GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardToVoicemailGreeting struct{}

// This field allows callers to reach an operator. It's the response returned when the
// `call_not_answer_action` or `busy_on_another_call_action` setting is set to `1` (Forward to a
// voicemail) and `connect_to_operator` setting is set to `true`.
type GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator struct {
	// The extension's name.
	DisplayName OptString `json:"display_name"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The type of extension:
	// * `user`
	// * `commonArea`
	// * `sharedLineGroup`
	// * `callQueue`.
	ExtensionType OptString `json:"extension_type"`
	// The ID of the extension for `user`, `commonArea`, `sharedLineGroup`, `device`, or `callQueue`.
	ID OptString `json:"id"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) GetID() OptString {
	return s.ID
}

// SetDisplayName sets the value of DisplayName.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) SetID(val OptString) {
	s.ID = val
}

// The voicemail greeting audio prompt
// Returns only for the `user` and `call_handling` subsetting options. It displays when
// `busy_on_another_call_action` action or `call_not_answer_action` is set to `1` - Forward to a
// voicemail.
type GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting struct {
	// The voicemail greeting audio prompt ID.
	// Options: empty char - default.
	ID OptString `json:"id"`
	// The voicemail greeting audio prompt name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting) SetName(val OptString) {
	s.Name = val
}

// This option distributes incoming calls.
// If `Sequential` or `Rotating` is selected, calls ring for a specific time before trying the next
// available queue member.
// Returned only for the `call_handling` sub-setting.
type GetCallHandlingOKBusinessHoursItemSettingsCallDistribution struct {
	// The maximum number of calls that can be handled simultaneously is less than half of the total
	// amount of available call queue members. Note that the first incoming call might not be answered
	// first.
	// Returned only except `simultaneous` ring mode.
	HandleMultipleCalls OptBool `json:"handle_multiple_calls"`
	// The ringing duration for each member:
	// * `10`
	// * `15`
	// * `20`
	// * `25`
	// * `30`
	// * `35`
	// * `40`
	// * `45`
	// * `50`
	// * `55`
	// * `60`
	// Returned only except `simultaneous` ring mode.
	RingDuration OptInt `json:"ring_duration"`
	// The call distribution ring mode:
	// * `simultaneous`
	// * `sequential`
	// * `rotating`
	// * `longest_idle`.
	RingMode OptString `json:"ring_mode"`
	// 1. Devices with Zoom app or client not launched and mobile phone with screen locked will be
	// skipped.
	// 2. Phone numbers added to user's call handling settings are skipped.
	// Returned only except `simultaneous` ring mode.
	SkipOfflineDevicePhoneNumber OptBool `json:"skip_offline_device_phone_number"`
}

// GetHandleMultipleCalls returns the value of HandleMultipleCalls.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallDistribution) GetHandleMultipleCalls() OptBool {
	return s.HandleMultipleCalls
}

// GetRingDuration returns the value of RingDuration.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallDistribution) GetRingDuration() OptInt {
	return s.RingDuration
}

// GetRingMode returns the value of RingMode.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallDistribution) GetRingMode() OptString {
	return s.RingMode
}

// GetSkipOfflineDevicePhoneNumber returns the value of SkipOfflineDevicePhoneNumber.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallDistribution) GetSkipOfflineDevicePhoneNumber() OptBool {
	return s.SkipOfflineDevicePhoneNumber
}

// SetHandleMultipleCalls sets the value of HandleMultipleCalls.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallDistribution) SetHandleMultipleCalls(val OptBool) {
	s.HandleMultipleCalls = val
}

// SetRingDuration sets the value of RingDuration.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallDistribution) SetRingDuration(val OptInt) {
	s.RingDuration = val
}

// SetRingMode sets the value of RingMode.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallDistribution) SetRingMode(val OptString) {
	s.RingMode = val
}

// SetSkipOfflineDevicePhoneNumber sets the value of SkipOfflineDevicePhoneNumber.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallDistribution) SetSkipOfflineDevicePhoneNumber(val OptBool) {
	s.SkipOfflineDevicePhoneNumber = val
}

type GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItem struct {
	// The external phone number's description.
	Description OptString `json:"description"`
	// Whether to receive a call.
	Enable OptBool `json:"enable"`
	// The call forwarding's ID.
	ID OptString `json:"id"`
	// The external phone number in E164 format.
	PhoneNumber     OptString                                                                              `json:"phone_number"`
	ExternalContact OptGetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact `json:"external_contact"`
}

// GetDescription returns the value of Description.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItem) GetDescription() OptString {
	return s.Description
}

// GetEnable returns the value of Enable.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItem) GetEnable() OptBool {
	return s.Enable
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItem) GetID() OptString {
	return s.ID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetExternalContact returns the value of ExternalContact.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItem) GetExternalContact() OptGetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact {
	return s.ExternalContact
}

// SetDescription sets the value of Description.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItem) SetDescription(val OptString) {
	s.Description = val
}

// SetEnable sets the value of Enable.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItem) SetEnable(val OptBool) {
	s.Enable = val
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItem) SetID(val OptString) {
	s.ID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetExternalContact sets the value of ExternalContact.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItem) SetExternalContact(val OptGetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact) {
	s.ExternalContact = val
}

type GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact struct {
	// The external contact's username or extension display name.
	Name OptString `json:"name"`
	// The external contact's email address.
	Email OptString `json:"email"`
	// The external contact's ID.
	ExternalContactID OptString `json:"external_contact_id"`
	// The external contact's phone numbers.
	PhoneNumbers []string `json:"phone_numbers"`
}

// GetName returns the value of Name.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact) GetName() OptString {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact) GetEmail() OptString {
	return s.Email
}

// GetExternalContactID returns the value of ExternalContactID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact) GetExternalContactID() OptString {
	return s.ExternalContactID
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact) GetPhoneNumbers() []string {
	return s.PhoneNumbers
}

// SetName sets the value of Name.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact) SetName(val OptString) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact) SetEmail(val OptString) {
	s.Email = val
}

// SetExternalContactID sets the value of ExternalContactID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact) SetExternalContactID(val OptString) {
	s.ExternalContactID = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact) SetPhoneNumbers(val []string) {
	s.PhoneNumbers = val
}

type GetCallHandlingOKBusinessHoursItemSettingsCustomHoursSettingsItem struct {
	// The custom hours start time and `HH:mm` format.
	From OptString `json:"from"`
	// The custom hours end time in `HH:mm` format.
	To OptString `json:"to"`
	// The type of custom hours:
	// * `0` &mdash; Disabled.
	// * `1` &mdash; 24 hours.
	// * `2` &mdash; Customized hours.
	Type OptInt `json:"type"`
	// The day of the week:
	// * `1` &mdash; Sunday
	// * `2` &mdash; Monday
	// * `3` &mdash; Tuesday
	// * `4` &mdash; Wednesday
	// * `5` &mdash; Thursday
	// * `6` &mdash; Friday
	// * `7` &mdash; Saturday.
	Weekday OptInt `json:"weekday"`
}

// GetFrom returns the value of From.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCustomHoursSettingsItem) GetFrom() OptString {
	return s.From
}

// GetTo returns the value of To.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCustomHoursSettingsItem) GetTo() OptString {
	return s.To
}

// GetType returns the value of Type.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCustomHoursSettingsItem) GetType() OptInt {
	return s.Type
}

// GetWeekday returns the value of Weekday.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCustomHoursSettingsItem) GetWeekday() OptInt {
	return s.Weekday
}

// SetFrom sets the value of From.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCustomHoursSettingsItem) SetFrom(val OptString) {
	s.From = val
}

// SetTo sets the value of To.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCustomHoursSettingsItem) SetTo(val OptString) {
	s.To = val
}

// SetType sets the value of Type.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCustomHoursSettingsItem) SetType(val OptInt) {
	s.Type = val
}

// SetWeekday sets the value of Weekday.
func (s *GetCallHandlingOKBusinessHoursItemSettingsCustomHoursSettingsItem) SetWeekday(val OptInt) {
	s.Weekday = val
}

// The greeting audio prompt
// Returns only for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting.
type GetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt struct {
	// The greeting audio prompt ID.
	// Options: empty char - default and `0` - disable
	// If the audio was removed from the user's audio library, it's marked with a prefix,
	// `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can use this audio ID to get the audio
	// information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	ID OptString `json:"id"`
	// The greeting audio prompt name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt) SetName(val OptString) {
	s.Name = val
}

// The music on hold prompt. This field is an option to choose music for inbound callers when they're
// placed on hold by a call queue member.
// empty char - default and `0` - disable.
// Returned only for the `Call Queue` `call_handling` sub-setting.
type GetCallHandlingOKBusinessHoursItemSettingsMusicOnHold struct {
	// The music on hold prompt ID. If the audio was removed from the user's audio library, it's marked
	// with a prefix, (for example, `removed_vWby3OZaQlS1nAdmEAqgwA`). You can use this audio ID to get
	// the audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	ID OptString `json:"id"`
	// The music on hold prompt name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsMusicOnHold) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetCallHandlingOKBusinessHoursItemSettingsMusicOnHold) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsMusicOnHold) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetCallHandlingOKBusinessHoursItemSettingsMusicOnHold) SetName(val OptString) {
	s.Name = val
}

// The extension's forwarding or overflow information. It returns the response when
// `call_not_answer_action` or `busy_on_another_call_action` is set to `1` (Forward to a voicemail),
// `2` (Forward to the user), `4` (Forward to the common area), `6` (Forward to the auto
// receptionist), `7` (Forward to a call queue), `8` (Forward to a shared line group), `9` (Forward
// to an external contact), or `10` (Forward to an external number).
type GetCallHandlingOKBusinessHoursItemSettingsRouting struct {
	// The extension's forwarding/overflow information. For `call_not_answered`:
	// * `1` &mdash; Forward to a voicemail/videomail.
	// * `2` - Forward to the user.
	// * `4` - Forward to the common area.
	// * `6` - Forward to the auto receptionist.
	// * `7` - Forward to a call queue.
	// * `8` - Forward to a shared line group.
	// * `9` - Forward to an external contact.
	// * `10` - Forward to an external number.
	// * `11` &mdash; Disconnect.
	// * `12` &mdash; Play a message, then disconnect.
	// For `busy_on_another_call_action`:
	// * `21` - Call waiting.
	// * `22` - Play a busy signal.
	// * `1` &mdash; Forward to a voicemail/videomail.
	// * `2` - Forward to the user.
	// * `4` - Forward to the common area.
	// * `6` - Forward to the auto receptionist.
	// * `7` - Forward to a call queue.
	// * `8` - Forward to a shared line group.
	// * `9` - Forward to an external contact.
	// * `10` - Forward to an external number.
	// * `12` &mdash; Play a message, then disconnect.
	Action OptInt `json:"action"`
	// The extension's forwarding information. It returns the response when `call_not_answer_action` or
	// `busy_on_another_call_action` is set to `2` (Forward to the user), `4` (Forward to the common
	// area), `6` (Forward to the auto receptionist), `7` (Forward to a call queue), `8` (Forward to a
	// shared line group), `9` (Forward to an external contact), or `10` (Forward to an external number).
	ForwardTo OptGetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo `json:"forward_to"`
	// This field allows callers to reach an operator. The response returned when the
	// `call_not_answer_action` or `busy_on_another_call_action` setting is set to `1` (Forward to a
	// voicemail) and `connect_to_operator` setting is set to `true`.
	Operator OptGetCallHandlingOKBusinessHoursItemSettingsRoutingOperator `json:"operator"`
	// Whether to allow callers to reach an operator. It returns only for the `user` and `call_handling`
	// subsetting. It displays when the `call_not_answer_action` setting or `busy_on_another_call_action`
	// setting is set to `1` (Forward to a voicemail).
	ConnectToOperator OptBool `json:"connect_to_operator"`
	// Whether to allow the callers to check voicemails over a phone. It returns only for the `user` and
	// `call_handling` subsetting. It displays when the `call_not_answer_action` setting or
	// `busy_on_another_call_action` setting is set to `1` (Forward to a voicemail).
	AllowCallersCheckVoicemail OptBool `json:"allow_callers_check_voicemail"`
	// The voicemail greeting audio prompt
	// Returns only for the `user` and `call_handling` subsetting. It displays when
	// `busy_on_another_call_action` action or `call_not_answer_action` is set to `1` - Forward to a
	// voicemail.
	VoicemailGreeting OptGetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting `json:"voicemail_greeting"`
	// When a call is forwarded to a personal phone number, whether the user must press &quot;1&quot;
	// before the call connects. It helps to ensure that missed calls do not reach to your personal
	// voicemail. It returns for the `Forward to an external number` and `Forward to External Contacts`
	// options.
	RequirePress1BeforeConnecting OptBool `json:"require_press_1_before_connecting"`
	// Whether to play the callee's voicemail greeting when the caller reaches the end of the forwarding
	// sequence. It displays when `call_not_answer_action` is set to `2` - Forward to the user, `4` -
	// Forward to the common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue,
	// `8` - Forward to a shared line group, `9` - Forward to an external contact, `10` - Forward to an
	// external number.
	OverflowPlayCalleeVoicemailGreeting OptBool `json:"overflow_play_callee_voicemail_greeting"`
	// Whether to play the callee's voicemail greeting when caller reaches end of forwarding sequence. It
	// displays when `busy_routing` action or `call_not_answer_action` is set to `1` - Forward to a
	// voicemail.
	PlayCalleeVoicemailGreeting OptBool `json:"play_callee_voicemail_greeting"`
	// Whether to play the callee's voicemail greeting when the caller reaches the end of the forwarding
	// sequence. It displays when `busy_routing` action is set to `2` - Forward to the user, `4` -
	// Forward to the common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue,
	// `8` - Forward to a shared line group, `9` - Forward to an external contact, `10` - Forward to an
	// external number.
	BusyPlayCalleeVoicemailGreeting OptBool `json:"busy_play_callee_voicemail_greeting"`
}

// GetAction returns the value of Action.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) GetAction() OptInt {
	return s.Action
}

// GetForwardTo returns the value of ForwardTo.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) GetForwardTo() OptGetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo {
	return s.ForwardTo
}

// GetOperator returns the value of Operator.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) GetOperator() OptGetCallHandlingOKBusinessHoursItemSettingsRoutingOperator {
	return s.Operator
}

// GetConnectToOperator returns the value of ConnectToOperator.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) GetConnectToOperator() OptBool {
	return s.ConnectToOperator
}

// GetAllowCallersCheckVoicemail returns the value of AllowCallersCheckVoicemail.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) GetAllowCallersCheckVoicemail() OptBool {
	return s.AllowCallersCheckVoicemail
}

// GetVoicemailGreeting returns the value of VoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) GetVoicemailGreeting() OptGetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting {
	return s.VoicemailGreeting
}

// GetRequirePress1BeforeConnecting returns the value of RequirePress1BeforeConnecting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) GetRequirePress1BeforeConnecting() OptBool {
	return s.RequirePress1BeforeConnecting
}

// GetOverflowPlayCalleeVoicemailGreeting returns the value of OverflowPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) GetOverflowPlayCalleeVoicemailGreeting() OptBool {
	return s.OverflowPlayCalleeVoicemailGreeting
}

// GetPlayCalleeVoicemailGreeting returns the value of PlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) GetPlayCalleeVoicemailGreeting() OptBool {
	return s.PlayCalleeVoicemailGreeting
}

// GetBusyPlayCalleeVoicemailGreeting returns the value of BusyPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) GetBusyPlayCalleeVoicemailGreeting() OptBool {
	return s.BusyPlayCalleeVoicemailGreeting
}

// SetAction sets the value of Action.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) SetAction(val OptInt) {
	s.Action = val
}

// SetForwardTo sets the value of ForwardTo.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) SetForwardTo(val OptGetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) {
	s.ForwardTo = val
}

// SetOperator sets the value of Operator.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) SetOperator(val OptGetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) {
	s.Operator = val
}

// SetConnectToOperator sets the value of ConnectToOperator.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) SetConnectToOperator(val OptBool) {
	s.ConnectToOperator = val
}

// SetAllowCallersCheckVoicemail sets the value of AllowCallersCheckVoicemail.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) SetAllowCallersCheckVoicemail(val OptBool) {
	s.AllowCallersCheckVoicemail = val
}

// SetVoicemailGreeting sets the value of VoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) SetVoicemailGreeting(val OptGetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting) {
	s.VoicemailGreeting = val
}

// SetRequirePress1BeforeConnecting sets the value of RequirePress1BeforeConnecting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) SetRequirePress1BeforeConnecting(val OptBool) {
	s.RequirePress1BeforeConnecting = val
}

// SetOverflowPlayCalleeVoicemailGreeting sets the value of OverflowPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) SetOverflowPlayCalleeVoicemailGreeting(val OptBool) {
	s.OverflowPlayCalleeVoicemailGreeting = val
}

// SetPlayCalleeVoicemailGreeting sets the value of PlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) SetPlayCalleeVoicemailGreeting(val OptBool) {
	s.PlayCalleeVoicemailGreeting = val
}

// SetBusyPlayCalleeVoicemailGreeting sets the value of BusyPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRouting) SetBusyPlayCalleeVoicemailGreeting(val OptBool) {
	s.BusyPlayCalleeVoicemailGreeting = val
}

// The extension's forwarding information. It returns the response when `call_not_answer_action` or
// `busy_on_another_call_action` is set to `2` (Forward to the user), `4` (Forward to the common
// area), `6` (Forward to the auto receptionist), `7` (Forward to a call queue), `8` (Forward to a
// shared line group), `9` (Forward to an external contact), or `10` (Forward to an external number).
type GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo struct {
	// The extension's name.
	DisplayName OptString `json:"display_name"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The type of extension:
	// * `user`
	// * `autoReceptionist`
	// * `callQueue`.
	ExtensionType OptString `json:"extension_type"`
	// The ID of the extension for `user`, `autoReceptionist`, `device`, or `callQueue`.
	ID OptString `json:"id"`
	// The extension's phone number or forward to an external number, in [E.164 format](https://en.
	// wikipedia.org/wiki/E.164) format.
	PhoneNumber OptString `json:"phone_number"`
	// This field forwards to an external number description.
	Description OptString `json:"description"`
	// The voicemail greeting prompt. It returns only when `call_not_answer_action` is set to `1`
	// (Forward to a voicemail) for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting.
	VoicemailGreeting *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardToVoicemailGreeting `json:"voicemail_greeting"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) GetID() OptString {
	return s.ID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetDescription returns the value of Description.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) GetDescription() OptString {
	return s.Description
}

// GetVoicemailGreeting returns the value of VoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) GetVoicemailGreeting() *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardToVoicemailGreeting {
	return s.VoicemailGreeting
}

// SetDisplayName sets the value of DisplayName.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) SetID(val OptString) {
	s.ID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetDescription sets the value of Description.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) SetDescription(val OptString) {
	s.Description = val
}

// SetVoicemailGreeting sets the value of VoicemailGreeting.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) SetVoicemailGreeting(val *GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardToVoicemailGreeting) {
	s.VoicemailGreeting = val
}

// The voicemail greeting prompt. It returns only when `call_not_answer_action` is set to `1`
// (Forward to a voicemail) for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting.
type GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardToVoicemailGreeting struct{}

// This field allows callers to reach an operator. The response returned when the
// `call_not_answer_action` or `busy_on_another_call_action` setting is set to `1` (Forward to a
// voicemail) and `connect_to_operator` setting is set to `true`.
type GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator struct {
	// The extension's name.
	DisplayName OptString `json:"display_name"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The type of extension:
	// * `user`
	// * `commonArea`
	// * `sharedLineGroup`
	// * `callQueue`.
	ExtensionType OptString `json:"extension_type"`
	// The ID of the extension for `user`, `commonArea`, `sharedLineGroup`, `device`, or `callQueue`.
	ID OptString `json:"id"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) GetID() OptString {
	return s.ID
}

// SetDisplayName sets the value of DisplayName.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) SetID(val OptString) {
	s.ID = val
}

// The voicemail greeting audio prompt
// Returns only for the `user` and `call_handling` subsetting. It displays when
// `busy_on_another_call_action` action or `call_not_answer_action` is set to `1` - Forward to a
// voicemail.
type GetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting struct {
	// The voicemail greeting audio prompt ID.
	// Options: empty char - default.
	ID OptString `json:"id"`
	// The voicemail greeting audio prompt name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting) SetName(val OptString) {
	s.Name = val
}

type GetCallHandlingOKClosedHoursItem struct {
	// The closed hours settings.
	Settings OptGetCallHandlingOKClosedHoursItemSettings `json:"settings"`
	// The type of sub-setting:
	// * `call_forwarding`
	// * `call_handling`.
	SubSettingType OptString `json:"sub_setting_type"`
}

// GetSettings returns the value of Settings.
func (s *GetCallHandlingOKClosedHoursItem) GetSettings() OptGetCallHandlingOKClosedHoursItemSettings {
	return s.Settings
}

// GetSubSettingType returns the value of SubSettingType.
func (s *GetCallHandlingOKClosedHoursItem) GetSubSettingType() OptString {
	return s.SubSettingType
}

// SetSettings sets the value of Settings.
func (s *GetCallHandlingOKClosedHoursItem) SetSettings(val OptGetCallHandlingOKClosedHoursItemSettings) {
	s.Settings = val
}

// SetSubSettingType sets the value of SubSettingType.
func (s *GetCallHandlingOKClosedHoursItem) SetSubSettingType(val OptString) {
	s.SubSettingType = val
}

// The closed hours settings.
type GetCallHandlingOKClosedHoursItemSettings struct {
	// Whether to allow the callers to check voicemails over a phone. It's required only when the
	// `call_not_answer_action` setting is set to `1` (Forward to a voicemail).
	AllowCallersCheckVoicemail OptBool `json:"allow_callers_check_voicemail"`
	// The call forwarding settings. It returns only for the `call_forwarding` sub-setting options.
	CallForwardingSettings []GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItem `json:"call_forwarding_settings"`
	// The action to take when a call is not answered:
	// * `1` &mdash; Forward to a voicemail.
	// * `2` &mdash; Forward to the user.
	// * `4` &mdash; Forward to the common area.
	// * `6` &mdash; Forward to the auto receptionist.
	// * `7` &mdash; Forward to a call queue.
	// * `8` &mdash; Forward to a shared line group.
	// * `9` &mdash; Forward to an external contact.
	// * `10` - Forward to a phone number.
	// * `11` &mdash; Disconnect.
	// * `12` &mdash; Play a message, then disconnect.
	// * `13` - Forward to message.
	// * `14` - Forward to interactive voice response (IVR).
	// Returns only for the `call_handling` sub-setting option.
	CallNotAnswerAction OptInt `json:"call_not_answer_action"`
	// Whether to allow callers to reach an operator. It returns only when the `call_not_answer_action`
	// setting is set to `1` (Forward to a voicemail).
	ConnectToOperator OptBool `json:"connect_to_operator"`
	// The maximum wait time, in seconds, for `simultaneous` ring mode or the ring duration for each
	// device for `sequential` ring mode:
	// * `10`
	// * `15`
	// * `20`
	// * `25`
	// * `30`
	// * `35`
	// * `40`
	// * `45`
	// * `50`
	// * `55`
	// * `60`
	// Returns only for the `call_handling` sub-setting option.
	MaxWaitTime OptInt `json:"max_wait_time"`
	// When a call is forwarded to a personal phone number, whether the user must press &quot;1&quot;
	// before the call connects. It helps to ensure that missed calls do not reach to your personal
	// voicemail. It returns only for the `call_forwarding` sub-setting option.
	RequirePress1BeforeConnecting OptBool `json:"require_press_1_before_connecting"`
	// The call handling's ring mode setting:
	// * `simultaneous`
	// * `sequential`
	// Returns only for the `call_handling` sub-setting option.
	RingMode OptString `json:"ring_mode"`
	// The extension's forwarding or overflow information. It returns the response when
	// `call_not_answer_action` or `busy_on_another_call_action` is set to `1` (Forward to a voicemail),
	// `2` (Forward to the user), `4` (Forward to the common area), `6` (Forward to the auto
	// receptionist), `7` (Forward to a call queue), `8` (Forward to a shared line group), `9` (Forward
	// to an external contact), or `10` (Forward to an external number).
	Routing OptGetCallHandlingOKClosedHoursItemSettingsRouting `json:"routing"`
	// The extension's forwarding or overflow information. It returns the response when
	// `call_not_answer_action` or `busy_on_another_call_action` is set to `1` (Forward to a voicemail),
	// `2` (Forward to the user), `4` (Forward to the common area), `6` (Forward to the auto
	// receptionist), `7` (Forward to a call queue), `8` (Forward to a shared line group), `9` (Forward
	// to an external contact), or `10` (Forward to an external number).
	BusyRouting OptGetCallHandlingOKClosedHoursItemSettingsBusyRouting `json:"busy_routing"`
}

// GetAllowCallersCheckVoicemail returns the value of AllowCallersCheckVoicemail.
func (s *GetCallHandlingOKClosedHoursItemSettings) GetAllowCallersCheckVoicemail() OptBool {
	return s.AllowCallersCheckVoicemail
}

// GetCallForwardingSettings returns the value of CallForwardingSettings.
func (s *GetCallHandlingOKClosedHoursItemSettings) GetCallForwardingSettings() []GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItem {
	return s.CallForwardingSettings
}

// GetCallNotAnswerAction returns the value of CallNotAnswerAction.
func (s *GetCallHandlingOKClosedHoursItemSettings) GetCallNotAnswerAction() OptInt {
	return s.CallNotAnswerAction
}

// GetConnectToOperator returns the value of ConnectToOperator.
func (s *GetCallHandlingOKClosedHoursItemSettings) GetConnectToOperator() OptBool {
	return s.ConnectToOperator
}

// GetMaxWaitTime returns the value of MaxWaitTime.
func (s *GetCallHandlingOKClosedHoursItemSettings) GetMaxWaitTime() OptInt {
	return s.MaxWaitTime
}

// GetRequirePress1BeforeConnecting returns the value of RequirePress1BeforeConnecting.
func (s *GetCallHandlingOKClosedHoursItemSettings) GetRequirePress1BeforeConnecting() OptBool {
	return s.RequirePress1BeforeConnecting
}

// GetRingMode returns the value of RingMode.
func (s *GetCallHandlingOKClosedHoursItemSettings) GetRingMode() OptString {
	return s.RingMode
}

// GetRouting returns the value of Routing.
func (s *GetCallHandlingOKClosedHoursItemSettings) GetRouting() OptGetCallHandlingOKClosedHoursItemSettingsRouting {
	return s.Routing
}

// GetBusyRouting returns the value of BusyRouting.
func (s *GetCallHandlingOKClosedHoursItemSettings) GetBusyRouting() OptGetCallHandlingOKClosedHoursItemSettingsBusyRouting {
	return s.BusyRouting
}

// SetAllowCallersCheckVoicemail sets the value of AllowCallersCheckVoicemail.
func (s *GetCallHandlingOKClosedHoursItemSettings) SetAllowCallersCheckVoicemail(val OptBool) {
	s.AllowCallersCheckVoicemail = val
}

// SetCallForwardingSettings sets the value of CallForwardingSettings.
func (s *GetCallHandlingOKClosedHoursItemSettings) SetCallForwardingSettings(val []GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItem) {
	s.CallForwardingSettings = val
}

// SetCallNotAnswerAction sets the value of CallNotAnswerAction.
func (s *GetCallHandlingOKClosedHoursItemSettings) SetCallNotAnswerAction(val OptInt) {
	s.CallNotAnswerAction = val
}

// SetConnectToOperator sets the value of ConnectToOperator.
func (s *GetCallHandlingOKClosedHoursItemSettings) SetConnectToOperator(val OptBool) {
	s.ConnectToOperator = val
}

// SetMaxWaitTime sets the value of MaxWaitTime.
func (s *GetCallHandlingOKClosedHoursItemSettings) SetMaxWaitTime(val OptInt) {
	s.MaxWaitTime = val
}

// SetRequirePress1BeforeConnecting sets the value of RequirePress1BeforeConnecting.
func (s *GetCallHandlingOKClosedHoursItemSettings) SetRequirePress1BeforeConnecting(val OptBool) {
	s.RequirePress1BeforeConnecting = val
}

// SetRingMode sets the value of RingMode.
func (s *GetCallHandlingOKClosedHoursItemSettings) SetRingMode(val OptString) {
	s.RingMode = val
}

// SetRouting sets the value of Routing.
func (s *GetCallHandlingOKClosedHoursItemSettings) SetRouting(val OptGetCallHandlingOKClosedHoursItemSettingsRouting) {
	s.Routing = val
}

// SetBusyRouting sets the value of BusyRouting.
func (s *GetCallHandlingOKClosedHoursItemSettings) SetBusyRouting(val OptGetCallHandlingOKClosedHoursItemSettingsBusyRouting) {
	s.BusyRouting = val
}

// The extension's forwarding or overflow information. It returns the response when
// `call_not_answer_action` or `busy_on_another_call_action` is set to `1` (Forward to a voicemail),
// `2` (Forward to the user), `4` (Forward to the common area), `6` (Forward to the auto
// receptionist), `7` (Forward to a call queue), `8` (Forward to a shared line group), `9` (Forward
// to an external contact), or `10` (Forward to an external number).
type GetCallHandlingOKClosedHoursItemSettingsBusyRouting struct {
	// The extension's forwarding/overflow information. For `call_not_answered`:
	// * `1` &mdash; Forward to a voicemail/videomail.
	// * `2` - Forward to the user.
	// * `4` - Forward to the common area.
	// * `6` - Forward to the auto receptionist.
	// * `7` - Forward to a call queue.
	// * `8` - Forward to a shared line group.
	// * `9` - Forward to an external contact.
	// * `10` - Forward to an external number.
	// * `11` &mdash; Disconnect.
	// * `12` &mdash; Play a message, then disconnect.
	// For `busy_on_another_call_action`:
	// * `21` - Call waiting.
	// * `22` - Play a busy signal.
	// * `1` &mdash; Forward to a voicemail/videomail.
	// * `2` - Forward to the user.
	// * `4` - Forward to the common area.
	// * `6` - Forward to the auto receptionist.
	// * `7` - Forward to a call queue.
	// * `8` - Forward to a shared line group.
	// * `9` - Forward to an external contact.
	// * `10` - Forward to an external number.
	// * `12` &mdash; Play a message, then disconnect.
	Action OptInt `json:"action"`
	// The extension's forwarding information. It returns the response when `call_not_answer_action` or
	// `busy_on_another_call_action` is set to `2` (Forward to the user), `4` (Forward to the common
	// area), `6` (Forward to the auto receptionist), `7` (Forward to a call queue), `8` (Forward to a
	// shared line group), `9` (Forward to an external contact), or `10` (Forward to an external number).
	ForwardTo OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo `json:"forward_to"`
	// This field allows callers to reach an operator. It's the response returned when the
	// `call_not_answer_action` or `busy_on_another_call_action` setting is set to `1` (Forward to a
	// voicemail) and `connect_to_operator` setting is set to `true`.
	Operator OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator `json:"operator"`
	// Whether to allow callers to reach an operator. It returns only for the `user` and `call_handling`
	// subsetting options. It displays when the `call_not_answer_action` setting or
	// `busy_on_another_call_action` setting is set to `1` (Forward to a voicemail).
	ConnectToOperator OptBool `json:"connect_to_operator"`
	// Whether to allow the callers to check voicemails over a phone. It returns only for the `user` and
	// `call_handling` subsetting options. It displays when the `call_not_answer_action` setting or
	// `busy_on_another_call_action` setting is set to `1` (Forward to a voicemail).
	AllowCallersCheckVoicemail OptBool `json:"allow_callers_check_voicemail"`
	// The voicemail greeting audio prompt
	// Returns only for the `user` and `call_handling` subsetting options. It displays when
	// `busy_on_another_call_action` action or `call_not_answer_action` is set to `1` - Forward to a
	// voicemail.
	VoicemailGreeting OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting `json:"voicemail_greeting"`
	// When a call is forwarded to a personal phone number, whether the user must press &quot;1&quot;
	// before the call connects. This field helps to ensure that missed calls do not reach to your
	// personal voicemail. Returned for the `Forward to an external number` and `Forward to External
	// Contacts` options.
	RequirePress1BeforeConnecting OptBool `json:"require_press_1_before_connecting"`
	// Whether to play the callee's voicemail greeting when the caller reaches the end of the forwarding
	// sequence. It displays when `call_not_answer_action` is set to `2` - Forward to the user, `4` -
	// Forward to the common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue,
	// `8` - Forward to a shared line group, `9` - Forward to an external contact, `10` - Forward to an
	// external number.
	OverflowPlayCalleeVoicemailGreeting OptBool `json:"overflow_play_callee_voicemail_greeting"`
	// Whether to play the callee's voicemail greeting when caller reaches the end of the forwarding
	// sequence. It displays when `busy_routing` action or `call_not_answer_action` is set to `1` -
	// Forward to a voicemail.
	PlayCalleeVoicemailGreeting OptBool `json:"play_callee_voicemail_greeting"`
	// Whether to play the callee's voicemail greeting when the caller reaches the end of the forwarding
	// sequence. It displays when `busy_routing` action is set to `2` - Forward to the user, `4` -
	// Forward to the common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue,
	// `8` - Forward to a shared line group, `9` - Forward to an external contact, `10` - Forward to an
	// external number.
	BusyPlayCalleeVoicemailGreeting OptBool `json:"busy_play_callee_voicemail_greeting"`
}

// GetAction returns the value of Action.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) GetAction() OptInt {
	return s.Action
}

// GetForwardTo returns the value of ForwardTo.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) GetForwardTo() OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo {
	return s.ForwardTo
}

// GetOperator returns the value of Operator.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) GetOperator() OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator {
	return s.Operator
}

// GetConnectToOperator returns the value of ConnectToOperator.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) GetConnectToOperator() OptBool {
	return s.ConnectToOperator
}

// GetAllowCallersCheckVoicemail returns the value of AllowCallersCheckVoicemail.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) GetAllowCallersCheckVoicemail() OptBool {
	return s.AllowCallersCheckVoicemail
}

// GetVoicemailGreeting returns the value of VoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) GetVoicemailGreeting() OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting {
	return s.VoicemailGreeting
}

// GetRequirePress1BeforeConnecting returns the value of RequirePress1BeforeConnecting.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) GetRequirePress1BeforeConnecting() OptBool {
	return s.RequirePress1BeforeConnecting
}

// GetOverflowPlayCalleeVoicemailGreeting returns the value of OverflowPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) GetOverflowPlayCalleeVoicemailGreeting() OptBool {
	return s.OverflowPlayCalleeVoicemailGreeting
}

// GetPlayCalleeVoicemailGreeting returns the value of PlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) GetPlayCalleeVoicemailGreeting() OptBool {
	return s.PlayCalleeVoicemailGreeting
}

// GetBusyPlayCalleeVoicemailGreeting returns the value of BusyPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) GetBusyPlayCalleeVoicemailGreeting() OptBool {
	return s.BusyPlayCalleeVoicemailGreeting
}

// SetAction sets the value of Action.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) SetAction(val OptInt) {
	s.Action = val
}

// SetForwardTo sets the value of ForwardTo.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) SetForwardTo(val OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) {
	s.ForwardTo = val
}

// SetOperator sets the value of Operator.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) SetOperator(val OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) {
	s.Operator = val
}

// SetConnectToOperator sets the value of ConnectToOperator.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) SetConnectToOperator(val OptBool) {
	s.ConnectToOperator = val
}

// SetAllowCallersCheckVoicemail sets the value of AllowCallersCheckVoicemail.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) SetAllowCallersCheckVoicemail(val OptBool) {
	s.AllowCallersCheckVoicemail = val
}

// SetVoicemailGreeting sets the value of VoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) SetVoicemailGreeting(val OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting) {
	s.VoicemailGreeting = val
}

// SetRequirePress1BeforeConnecting sets the value of RequirePress1BeforeConnecting.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) SetRequirePress1BeforeConnecting(val OptBool) {
	s.RequirePress1BeforeConnecting = val
}

// SetOverflowPlayCalleeVoicemailGreeting sets the value of OverflowPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) SetOverflowPlayCalleeVoicemailGreeting(val OptBool) {
	s.OverflowPlayCalleeVoicemailGreeting = val
}

// SetPlayCalleeVoicemailGreeting sets the value of PlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) SetPlayCalleeVoicemailGreeting(val OptBool) {
	s.PlayCalleeVoicemailGreeting = val
}

// SetBusyPlayCalleeVoicemailGreeting sets the value of BusyPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRouting) SetBusyPlayCalleeVoicemailGreeting(val OptBool) {
	s.BusyPlayCalleeVoicemailGreeting = val
}

// The extension's forwarding information. It returns the response when `call_not_answer_action` or
// `busy_on_another_call_action` is set to `2` (Forward to the user), `4` (Forward to the common
// area), `6` (Forward to the auto receptionist), `7` (Forward to a call queue), `8` (Forward to a
// shared line group), `9` (Forward to an external contact), or `10` (Forward to an external number).
type GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo struct {
	// The extension's name.
	DisplayName OptString `json:"display_name"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The type of extension:
	// * `user`
	// * `autoReceptionist`
	// * `callQueue`.
	ExtensionType OptString `json:"extension_type"`
	// The ID of the extension for `user`, `autoReceptionist`, `device`, or `callQueue`.
	ID OptString `json:"id"`
	// The extension's phone number or forward to an external number, in [E.164 format](https://en.
	// wikipedia.org/wiki/E.164) format.
	PhoneNumber OptString `json:"phone_number"`
	// This field forwards to an external number description.
	Description OptString `json:"description"`
	// The voicemail greeting prompt. It returns only when `call_not_answer_action` is set to `1`
	// (Forward to a voicemail) for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting.
	VoicemailGreeting *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardToVoicemailGreeting `json:"voicemail_greeting"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) GetID() OptString {
	return s.ID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetDescription returns the value of Description.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) GetDescription() OptString {
	return s.Description
}

// GetVoicemailGreeting returns the value of VoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) GetVoicemailGreeting() *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardToVoicemailGreeting {
	return s.VoicemailGreeting
}

// SetDisplayName sets the value of DisplayName.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) SetID(val OptString) {
	s.ID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetDescription sets the value of Description.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) SetDescription(val OptString) {
	s.Description = val
}

// SetVoicemailGreeting sets the value of VoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) SetVoicemailGreeting(val *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardToVoicemailGreeting) {
	s.VoicemailGreeting = val
}

// The voicemail greeting prompt. It returns only when `call_not_answer_action` is set to `1`
// (Forward to a voicemail) for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting.
type GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardToVoicemailGreeting struct{}

// This field allows callers to reach an operator. It's the response returned when the
// `call_not_answer_action` or `busy_on_another_call_action` setting is set to `1` (Forward to a
// voicemail) and `connect_to_operator` setting is set to `true`.
type GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator struct {
	// The extension's name.
	DisplayName OptString `json:"display_name"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The type of extension:
	// * `user`
	// * `commonArea`
	// * `sharedLineGroup`
	// * `callQueue`.
	ExtensionType OptString `json:"extension_type"`
	// The ID of the extension for `user`, `commonArea`, `sharedLineGroup`, `device`, or `callQueue`.
	ID OptString `json:"id"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) GetID() OptString {
	return s.ID
}

// SetDisplayName sets the value of DisplayName.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) SetID(val OptString) {
	s.ID = val
}

// The voicemail greeting audio prompt
// Returns only for the `user` and `call_handling` subsetting options. It displays when
// `busy_on_another_call_action` action or `call_not_answer_action` is set to `1` - Forward to a
// voicemail.
type GetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting struct {
	// The voicemail greeting audio prompt ID.
	// Options: empty char - default.
	ID OptString `json:"id"`
	// The voicemail greeting audio prompt name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting) SetName(val OptString) {
	s.Name = val
}

type GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItem struct {
	// The external phone number description.
	Description OptString `json:"description"`
	// Whether to receive a call.
	Enable OptBool `json:"enable"`
	// The call forwarding ID.
	ID OptString `json:"id"`
	// The external phone number, in [E.164 format](https://en.wikipedia.org/wiki/E.164) format.
	PhoneNumber     OptString                                                                            `json:"phone_number"`
	ExternalContact OptGetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact `json:"external_contact"`
}

// GetDescription returns the value of Description.
func (s *GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItem) GetDescription() OptString {
	return s.Description
}

// GetEnable returns the value of Enable.
func (s *GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItem) GetEnable() OptBool {
	return s.Enable
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItem) GetID() OptString {
	return s.ID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetExternalContact returns the value of ExternalContact.
func (s *GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItem) GetExternalContact() OptGetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact {
	return s.ExternalContact
}

// SetDescription sets the value of Description.
func (s *GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItem) SetDescription(val OptString) {
	s.Description = val
}

// SetEnable sets the value of Enable.
func (s *GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItem) SetEnable(val OptBool) {
	s.Enable = val
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItem) SetID(val OptString) {
	s.ID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetExternalContact sets the value of ExternalContact.
func (s *GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItem) SetExternalContact(val OptGetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact) {
	s.ExternalContact = val
}

type GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact struct {
	// The external contact's username or extension display name.
	Name OptString `json:"name"`
	// The external contact's email address.
	Email OptString `json:"email"`
	// The external contact's ID.
	ExternalContactID OptString `json:"external_contact_id"`
	// The external contact's phone numbers.
	PhoneNumbers []string `json:"phone_numbers"`
}

// GetName returns the value of Name.
func (s *GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact) GetName() OptString {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact) GetEmail() OptString {
	return s.Email
}

// GetExternalContactID returns the value of ExternalContactID.
func (s *GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact) GetExternalContactID() OptString {
	return s.ExternalContactID
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact) GetPhoneNumbers() []string {
	return s.PhoneNumbers
}

// SetName sets the value of Name.
func (s *GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact) SetName(val OptString) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact) SetEmail(val OptString) {
	s.Email = val
}

// SetExternalContactID sets the value of ExternalContactID.
func (s *GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact) SetExternalContactID(val OptString) {
	s.ExternalContactID = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact) SetPhoneNumbers(val []string) {
	s.PhoneNumbers = val
}

// The extension's forwarding or overflow information. It returns the response when
// `call_not_answer_action` or `busy_on_another_call_action` is set to `1` (Forward to a voicemail),
// `2` (Forward to the user), `4` (Forward to the common area), `6` (Forward to the auto
// receptionist), `7` (Forward to a call queue), `8` (Forward to a shared line group), `9` (Forward
// to an external contact), or `10` (Forward to an external number).
type GetCallHandlingOKClosedHoursItemSettingsRouting struct {
	// The extension's forwarding/overflow information. For `call_not_answered`:
	// * `1` &mdash; Forward to a voicemail/videomail.
	// * `2` - Forward to the user.
	// * `4` - Forward to the common area.
	// * `6` - Forward to the auto receptionist.
	// * `7` - Forward to a call queue.
	// * `8` - Forward to a shared line group.
	// * `9` - Forward to an external contact.
	// * `10` - Forward to an external number.
	// * `11` &mdash; Disconnect.
	// * `12` &mdash; Play a message, then disconnect.
	// For `busy_on_another_call_action`:
	// * `21` - Call waiting.
	// * `22` - Play a busy signal.
	// * `1` &mdash; Forward to a voicemail/videomail.
	// * `2` - Forward to the user.
	// * `4` - Forward to the common area.
	// * `6` - Forward to the auto receptionist.
	// * `7` - Forward to a call queue.
	// * `8` - Forward to a shared line group.
	// * `9` - Forward to an external contact.
	// * `10` - Forward to an external number.
	// * `12` &mdash; Play a message, then disconnect.
	Action OptInt `json:"action"`
	// The extension's forwarding information. It returns the response when `call_not_answer_action` or
	// `busy_on_another_call_action` is set to `2` (Forward to the user), `4` (Forward to the common
	// area), `6` (Forward to the auto receptionist), `7` (Forward to a call queue), `8` (Forward to a
	// shared line group), `9` (Forward to an external contact), or `10` (Forward to an external number).
	ForwardTo OptGetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo `json:"forward_to"`
	// This field allows callers to reach an operator. It's the response returned when the
	// `call_not_answer_action` or `busy_on_another_call_action` setting is set to `1` (Forward to a
	// voicemail) and `connect_to_operator` setting is set to `true`.
	Operator OptGetCallHandlingOKClosedHoursItemSettingsRoutingOperator `json:"operator"`
	// Whether to allow callers to reach an operator. It returns only for the `user` and `call_handling`
	// subsetting options. It displays when the `call_not_answer_action` setting or
	// `busy_on_another_call_action` setting is set to `1` (Forward to a voicemail).
	ConnectToOperator OptBool `json:"connect_to_operator"`
	// Whether to allow the callers to check voicemails over a phone. It returns only for the `user` and
	// `call_handling` subsetting options. It displays when the `call_not_answer_action` setting or
	// `busy_on_another_call_action` setting is set to `1` (Forward to a voicemail).
	AllowCallersCheckVoicemail OptBool `json:"allow_callers_check_voicemail"`
	// The voicemail greeting audio prompt
	// Returns only for the `user` and `call_handling` subsetting options. It displays when
	// `busy_on_another_call_action` action or `call_not_answer_action` set to `1` - Forward to a
	// voicemail.
	VoicemailGreeting OptGetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting `json:"voicemail_greeting"`
	// When a call is forwarded to a personal phone number, whether the user must press &quot;1&quot;
	// before the call connects. This field helps to ensure that missed calls do not reach to your
	// personal voicemail. It returns for the `Forward to an external number` and `Forward to External
	// Contacts` options.
	RequirePress1BeforeConnecting OptBool `json:"require_press_1_before_connecting"`
	// Whether to play callee's voicemail greeting when caller reaches end of forwarding sequence. It
	// displays when `call_not_answer_action` is set to `2` - Forward to the user, `4` - Forward to the
	// common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue, `8` - Forward
	// to a shared line group, `9` - Forward to an external contact, `10` - Forward to an external number.
	OverflowPlayCalleeVoicemailGreeting OptBool `json:"overflow_play_callee_voicemail_greeting"`
	// Whether to play callee's voicemail greeting when caller reaches end of forwarding sequence. It
	// displays when `busy_routing` action or `call_not_answer_action` is set to `1` - Forward to a
	// voicemail.
	PlayCalleeVoicemailGreeting OptBool `json:"play_callee_voicemail_greeting"`
	// Whether to play callee's voicemail greeting when caller reaches end of forwarding sequence. It
	// displays when `busy_routing` action is set to `2` - Forward to the user, `4` - Forward to the
	// common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue, `8` - Forward
	// to a shared line group, `9` - Forward to an external contact, `10` - Forward to an external number.
	BusyPlayCalleeVoicemailGreeting OptBool `json:"busy_play_callee_voicemail_greeting"`
}

// GetAction returns the value of Action.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) GetAction() OptInt {
	return s.Action
}

// GetForwardTo returns the value of ForwardTo.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) GetForwardTo() OptGetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo {
	return s.ForwardTo
}

// GetOperator returns the value of Operator.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) GetOperator() OptGetCallHandlingOKClosedHoursItemSettingsRoutingOperator {
	return s.Operator
}

// GetConnectToOperator returns the value of ConnectToOperator.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) GetConnectToOperator() OptBool {
	return s.ConnectToOperator
}

// GetAllowCallersCheckVoicemail returns the value of AllowCallersCheckVoicemail.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) GetAllowCallersCheckVoicemail() OptBool {
	return s.AllowCallersCheckVoicemail
}

// GetVoicemailGreeting returns the value of VoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) GetVoicemailGreeting() OptGetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting {
	return s.VoicemailGreeting
}

// GetRequirePress1BeforeConnecting returns the value of RequirePress1BeforeConnecting.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) GetRequirePress1BeforeConnecting() OptBool {
	return s.RequirePress1BeforeConnecting
}

// GetOverflowPlayCalleeVoicemailGreeting returns the value of OverflowPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) GetOverflowPlayCalleeVoicemailGreeting() OptBool {
	return s.OverflowPlayCalleeVoicemailGreeting
}

// GetPlayCalleeVoicemailGreeting returns the value of PlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) GetPlayCalleeVoicemailGreeting() OptBool {
	return s.PlayCalleeVoicemailGreeting
}

// GetBusyPlayCalleeVoicemailGreeting returns the value of BusyPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) GetBusyPlayCalleeVoicemailGreeting() OptBool {
	return s.BusyPlayCalleeVoicemailGreeting
}

// SetAction sets the value of Action.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) SetAction(val OptInt) {
	s.Action = val
}

// SetForwardTo sets the value of ForwardTo.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) SetForwardTo(val OptGetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) {
	s.ForwardTo = val
}

// SetOperator sets the value of Operator.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) SetOperator(val OptGetCallHandlingOKClosedHoursItemSettingsRoutingOperator) {
	s.Operator = val
}

// SetConnectToOperator sets the value of ConnectToOperator.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) SetConnectToOperator(val OptBool) {
	s.ConnectToOperator = val
}

// SetAllowCallersCheckVoicemail sets the value of AllowCallersCheckVoicemail.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) SetAllowCallersCheckVoicemail(val OptBool) {
	s.AllowCallersCheckVoicemail = val
}

// SetVoicemailGreeting sets the value of VoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) SetVoicemailGreeting(val OptGetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting) {
	s.VoicemailGreeting = val
}

// SetRequirePress1BeforeConnecting sets the value of RequirePress1BeforeConnecting.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) SetRequirePress1BeforeConnecting(val OptBool) {
	s.RequirePress1BeforeConnecting = val
}

// SetOverflowPlayCalleeVoicemailGreeting sets the value of OverflowPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) SetOverflowPlayCalleeVoicemailGreeting(val OptBool) {
	s.OverflowPlayCalleeVoicemailGreeting = val
}

// SetPlayCalleeVoicemailGreeting sets the value of PlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) SetPlayCalleeVoicemailGreeting(val OptBool) {
	s.PlayCalleeVoicemailGreeting = val
}

// SetBusyPlayCalleeVoicemailGreeting sets the value of BusyPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsRouting) SetBusyPlayCalleeVoicemailGreeting(val OptBool) {
	s.BusyPlayCalleeVoicemailGreeting = val
}

// The extension's forwarding information. It returns the response when `call_not_answer_action` or
// `busy_on_another_call_action` is set to `2` (Forward to the user), `4` (Forward to the common
// area), `6` (Forward to the auto receptionist), `7` (Forward to a call queue), `8` (Forward to a
// shared line group), `9` (Forward to an external contact), or `10` (Forward to an external number).
type GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo struct {
	// The extension's name.
	DisplayName OptString `json:"display_name"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The type of extension:
	// * `user`
	// * `autoReceptionist`
	// * `callQueue`.
	ExtensionType OptString `json:"extension_type"`
	// The ID of the extension for `user`, `autoReceptionist`, `device`, or `callQueue`.
	ID OptString `json:"id"`
	// The extension's phone number or forward to an external number, in [E.164 format](https://en.
	// wikipedia.org/wiki/E.164) format.
	PhoneNumber OptString `json:"phone_number"`
	// This field forwards to an external number description.
	Description OptString `json:"description"`
	// The voicemail greeting prompt. It returns only when `call_not_answer_action` is set to `1`
	// (Forward to a voicemail) for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting.
	VoicemailGreeting *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardToVoicemailGreeting `json:"voicemail_greeting"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) GetID() OptString {
	return s.ID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetDescription returns the value of Description.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) GetDescription() OptString {
	return s.Description
}

// GetVoicemailGreeting returns the value of VoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) GetVoicemailGreeting() *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardToVoicemailGreeting {
	return s.VoicemailGreeting
}

// SetDisplayName sets the value of DisplayName.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) SetID(val OptString) {
	s.ID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetDescription sets the value of Description.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) SetDescription(val OptString) {
	s.Description = val
}

// SetVoicemailGreeting sets the value of VoicemailGreeting.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) SetVoicemailGreeting(val *GetCallHandlingOKClosedHoursItemSettingsRoutingForwardToVoicemailGreeting) {
	s.VoicemailGreeting = val
}

// The voicemail greeting prompt. It returns only when `call_not_answer_action` is set to `1`
// (Forward to a voicemail) for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting.
type GetCallHandlingOKClosedHoursItemSettingsRoutingForwardToVoicemailGreeting struct{}

// This field allows callers to reach an operator. It's the response returned when the
// `call_not_answer_action` or `busy_on_another_call_action` setting is set to `1` (Forward to a
// voicemail) and `connect_to_operator` setting is set to `true`.
type GetCallHandlingOKClosedHoursItemSettingsRoutingOperator struct {
	// The extension's name.
	DisplayName OptString `json:"display_name"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The type of extension:
	// * `user`
	// * `commonArea`
	// * `sharedLineGroup`
	// * `callQueue`.
	ExtensionType OptString `json:"extension_type"`
	// The ID of the extension for `user`, `commonArea`, `sharedLineGroup`, `device`, or `callQueue`.
	ID OptString `json:"id"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingOperator) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingOperator) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingOperator) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingOperator) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingOperator) GetID() OptString {
	return s.ID
}

// SetDisplayName sets the value of DisplayName.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingOperator) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingOperator) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingOperator) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingOperator) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingOperator) SetID(val OptString) {
	s.ID = val
}

// The voicemail greeting audio prompt
// Returns only for the `user` and `call_handling` subsetting options. It displays when
// `busy_on_another_call_action` action or `call_not_answer_action` set to `1` - Forward to a
// voicemail.
type GetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting struct {
	// The voicemail greeting audio prompt ID.
	// Options: empty char - default.
	ID OptString `json:"id"`
	// The voicemail greeting audio prompt name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting) SetName(val OptString) {
	s.Name = val
}

type GetCallHandlingOKHolidayHoursItem struct {
	// The information about the holiday call handling.
	Details []GetCallHandlingOKHolidayHoursItemDetailsItem `json:"details"`
	// The holiday's ID.
	HolidayID OptString `json:"holiday_id"`
}

// GetDetails returns the value of Details.
func (s *GetCallHandlingOKHolidayHoursItem) GetDetails() []GetCallHandlingOKHolidayHoursItemDetailsItem {
	return s.Details
}

// GetHolidayID returns the value of HolidayID.
func (s *GetCallHandlingOKHolidayHoursItem) GetHolidayID() OptString {
	return s.HolidayID
}

// SetDetails sets the value of Details.
func (s *GetCallHandlingOKHolidayHoursItem) SetDetails(val []GetCallHandlingOKHolidayHoursItemDetailsItem) {
	s.Details = val
}

// SetHolidayID sets the value of HolidayID.
func (s *GetCallHandlingOKHolidayHoursItem) SetHolidayID(val OptString) {
	s.HolidayID = val
}

type GetCallHandlingOKHolidayHoursItemDetailsItem struct {
	// The sub-setting information.
	Settings OptGetCallHandlingOKHolidayHoursItemDetailsItemSettings `json:"settings"`
	// The type of sub-setting:
	// * `call_forwarding`
	// * `call_handling`
	// * `holiday`.
	SubSettingType OptString `json:"sub_setting_type"`
}

// GetSettings returns the value of Settings.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItem) GetSettings() OptGetCallHandlingOKHolidayHoursItemDetailsItemSettings {
	return s.Settings
}

// GetSubSettingType returns the value of SubSettingType.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItem) GetSubSettingType() OptString {
	return s.SubSettingType
}

// SetSettings sets the value of Settings.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItem) SetSettings(val OptGetCallHandlingOKHolidayHoursItemDetailsItemSettings) {
	s.Settings = val
}

// SetSubSettingType sets the value of SubSettingType.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItem) SetSubSettingType(val OptString) {
	s.SubSettingType = val
}

// The sub-setting information.
type GetCallHandlingOKHolidayHoursItemDetailsItemSettings struct {
	// Whether to allow the callers to check voicemails over a phone. It's required only when the
	// `call_not_answer_action` setting is set to `1` (Forward to a voicemail).
	AllowCallersCheckVoicemail OptBool `json:"allow_callers_check_voicemail"`
	// The call forwarding settings. It returns only for the `call_forwarding` sub-setting option.
	CallForwardingSettings []GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItem `json:"call_forwarding_settings"`
	// The action to take when a call is not answered:
	// * `1` &mdash; Forward to a voicemail.
	// * `2` &mdash; Forward to the user.
	// * `4` &mdash; Forward to the common area.
	// * `6` &mdash; Forward to the auto receptionist.
	// * `7` &mdash; Forward to a call queue.
	// * `8` &mdash; Forward to a shared line group.
	// * `9` &mdash; Forward to an external contact.
	// * `10` - Forward to a phone number.
	// * `11` &mdash; Disconnect.
	// * `12` &mdash; Play a message, then disconnect.
	// * `13` - Forward to message.
	// * `14` - Forward to interactive voice response (IVR).
	// Returned only for the `call_handling` sub-setting.
	CallNotAnswerAction OptInt `json:"call_not_answer_action"`
	// Whether to allow callers to reach an operator. It returns only when the `call_not_answer_action`
	// setting is set to `1` (Forward to a voicemail).
	ConnectToOperator OptBool `json:"connect_to_operator"`
	// The holiday start date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. It returns only for the
	// `holiday` sub-setting.
	From OptDateTime `json:"from"`
	// The maximum wait time, in seconds, for `simultaneous` ring mode or the ring duration for each
	// device for `sequential` ring mode:
	// * `10`
	// * `15`
	// * `15`
	// * `20`
	// * `25`
	// * `30`
	// * `35`
	// * `40`
	// * `45`
	// * `50`
	// * `55`
	// * `60`
	// Returned only for the `call_handling` sub-setting.
	MaxWaitTime OptInt `json:"max_wait_time"`
	// The holiday name. It returns only for the `holiday` sub-setting.
	Name OptString `json:"name"`
	// When a call is forwarded to a personal phone number, whether the user must press &quot;1&quot;
	// before the call connects. It returns only for the `call_forwarding` sub-setting.
	RequirePress1BeforeConnecting OptBool `json:"require_press_1_before_connecting"`
	// The call handling's ring mode setting:
	// * `simultaneous`
	// * `sequential`
	// Returned only for the `call_handling` sub-setting.
	RingMode OptString `json:"ring_mode"`
	// The extension's forwarding or overflow information. It returns the response when
	// `call_not_answer_action` or `busy_on_another_call_action` is set to `1` (Forward to a voicemail),
	// `2` (Forward to the user), `4` (Forward to the common area), `6` (Forward to the auto
	// receptionist), `7` (Forward to a call queue), `8` (Forward to a shared line group), `9` (Forward
	// to an external contact), or `10` (Forward to an external number).
	Routing OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting `json:"routing"`
	// The holiday end date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. It returns only for the
	// `holiday` sub-setting.
	To OptDateTime `json:"to"`
}

// GetAllowCallersCheckVoicemail returns the value of AllowCallersCheckVoicemail.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) GetAllowCallersCheckVoicemail() OptBool {
	return s.AllowCallersCheckVoicemail
}

// GetCallForwardingSettings returns the value of CallForwardingSettings.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) GetCallForwardingSettings() []GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItem {
	return s.CallForwardingSettings
}

// GetCallNotAnswerAction returns the value of CallNotAnswerAction.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) GetCallNotAnswerAction() OptInt {
	return s.CallNotAnswerAction
}

// GetConnectToOperator returns the value of ConnectToOperator.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) GetConnectToOperator() OptBool {
	return s.ConnectToOperator
}

// GetFrom returns the value of From.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) GetFrom() OptDateTime {
	return s.From
}

// GetMaxWaitTime returns the value of MaxWaitTime.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) GetMaxWaitTime() OptInt {
	return s.MaxWaitTime
}

// GetName returns the value of Name.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) GetName() OptString {
	return s.Name
}

// GetRequirePress1BeforeConnecting returns the value of RequirePress1BeforeConnecting.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) GetRequirePress1BeforeConnecting() OptBool {
	return s.RequirePress1BeforeConnecting
}

// GetRingMode returns the value of RingMode.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) GetRingMode() OptString {
	return s.RingMode
}

// GetRouting returns the value of Routing.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) GetRouting() OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting {
	return s.Routing
}

// GetTo returns the value of To.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) GetTo() OptDateTime {
	return s.To
}

// SetAllowCallersCheckVoicemail sets the value of AllowCallersCheckVoicemail.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) SetAllowCallersCheckVoicemail(val OptBool) {
	s.AllowCallersCheckVoicemail = val
}

// SetCallForwardingSettings sets the value of CallForwardingSettings.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) SetCallForwardingSettings(val []GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItem) {
	s.CallForwardingSettings = val
}

// SetCallNotAnswerAction sets the value of CallNotAnswerAction.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) SetCallNotAnswerAction(val OptInt) {
	s.CallNotAnswerAction = val
}

// SetConnectToOperator sets the value of ConnectToOperator.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) SetConnectToOperator(val OptBool) {
	s.ConnectToOperator = val
}

// SetFrom sets the value of From.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) SetFrom(val OptDateTime) {
	s.From = val
}

// SetMaxWaitTime sets the value of MaxWaitTime.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) SetMaxWaitTime(val OptInt) {
	s.MaxWaitTime = val
}

// SetName sets the value of Name.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) SetName(val OptString) {
	s.Name = val
}

// SetRequirePress1BeforeConnecting sets the value of RequirePress1BeforeConnecting.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) SetRequirePress1BeforeConnecting(val OptBool) {
	s.RequirePress1BeforeConnecting = val
}

// SetRingMode sets the value of RingMode.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) SetRingMode(val OptString) {
	s.RingMode = val
}

// SetRouting sets the value of Routing.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) SetRouting(val OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) {
	s.Routing = val
}

// SetTo sets the value of To.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettings) SetTo(val OptDateTime) {
	s.To = val
}

type GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItem struct {
	// The external phone number's description.
	Description OptString `json:"description"`
	// Whether to receive a call.
	Enable OptBool `json:"enable"`
	// The call forwarding's ID.
	ID OptString `json:"id"`
	// The external phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164) format.
	PhoneNumber     OptString                                                                                        `json:"phone_number"`
	ExternalContact OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact `json:"external_contact"`
}

// GetDescription returns the value of Description.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItem) GetDescription() OptString {
	return s.Description
}

// GetEnable returns the value of Enable.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItem) GetEnable() OptBool {
	return s.Enable
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItem) GetID() OptString {
	return s.ID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetExternalContact returns the value of ExternalContact.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItem) GetExternalContact() OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact {
	return s.ExternalContact
}

// SetDescription sets the value of Description.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItem) SetDescription(val OptString) {
	s.Description = val
}

// SetEnable sets the value of Enable.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItem) SetEnable(val OptBool) {
	s.Enable = val
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItem) SetID(val OptString) {
	s.ID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetExternalContact sets the value of ExternalContact.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItem) SetExternalContact(val OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact) {
	s.ExternalContact = val
}

type GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact struct {
	// The external contact's username or extension display name.
	Name OptString `json:"name"`
	// The external contact's email address.
	Email OptString `json:"email"`
	// The external contact's ID.
	ExternalContactID OptString `json:"external_contact_id"`
	// The external contact's phone numbers.
	PhoneNumbers []string `json:"phone_numbers"`
}

// GetName returns the value of Name.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact) GetName() OptString {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact) GetEmail() OptString {
	return s.Email
}

// GetExternalContactID returns the value of ExternalContactID.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact) GetExternalContactID() OptString {
	return s.ExternalContactID
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact) GetPhoneNumbers() []string {
	return s.PhoneNumbers
}

// SetName sets the value of Name.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact) SetName(val OptString) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact) SetEmail(val OptString) {
	s.Email = val
}

// SetExternalContactID sets the value of ExternalContactID.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact) SetExternalContactID(val OptString) {
	s.ExternalContactID = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact) SetPhoneNumbers(val []string) {
	s.PhoneNumbers = val
}

// The extension's forwarding or overflow information. It returns the response when
// `call_not_answer_action` or `busy_on_another_call_action` is set to `1` (Forward to a voicemail),
// `2` (Forward to the user), `4` (Forward to the common area), `6` (Forward to the auto
// receptionist), `7` (Forward to a call queue), `8` (Forward to a shared line group), `9` (Forward
// to an external contact), or `10` (Forward to an external number).
type GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting struct {
	// The extension's forwarding or overflow information. For `call_not_answered`:
	// * `1` &mdash; Forward to a voicemail/videomail.
	// * `2` - Forward to the user.
	// * `4` - Forward to the common area.
	// * `6` - Forward to the auto receptionist.
	// * `7` - Forward to a call queue.
	// * `8` - Forward to a shared line group.
	// * `9` - Forward to an external contact.
	// * `10` - Forward to an external number.
	// * `11` &mdash; Disconnect.
	// * `12` &mdash; Play a message, then disconnect.
	// For `busy_on_another_call_action`:
	// * `21` - Call waiting.
	// * `22` - Play a busy signal.
	// * `1` &mdash; Forward to a voicemail/videomail.
	// * `2` - Forward to the user.
	// * `4` - Forward to the common area.
	// * `6` - Forward to the auto receptionist.
	// * `7` - Forward to a call queue.
	// * `8` - Forward to a shared line group.
	// * `9` - Forward to an external contact.
	// * `10` - Forward to an external number.
	// * `12` &mdash; Play a message, then disconnect.
	Action OptInt `json:"action"`
	// The extension's forwarding information. It returns the response when `call_not_answer_action` or
	// `busy_on_another_call_action` is set to `2` (Forward to the user), `4` (Forward to the common
	// area), `6` (Forward to the auto receptionist), `7` (Forward to a call queue), `8` (Forward to a
	// shared line group), `9` (Forward to an external contact), or `10` (Forward to an external number).
	ForwardTo OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo `json:"forward_to"`
	// This field allows callers to reach an operator. Its a response returned when the
	// `call_not_answer_action` or `busy_on_another_call_action` setting is set to `1` (Forward to a
	// voicemail) and `connect_to_operator` setting is set to `true`.
	Operator OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator `json:"operator"`
	// Whether to allow callers to reach an operator. It returns only for the `user` and `call_handling`
	// subsetting. It displays when the `call_not_answer_action` setting or `busy_on_another_call_action`
	// setting is set to `1` (Forward to a voicemail).
	ConnectToOperator OptBool `json:"connect_to_operator"`
	// Whether to allow the callers to check voicemails over a phone. It returns only for the `user` and
	// `call_handling` subsetting. It displays when the `call_not_answer_action` setting or
	// `busy_on_another_call_action` setting is set to `1` (Forward to a voicemail).
	AllowCallersCheckVoicemail OptBool `json:"allow_callers_check_voicemail"`
	// The voicemail greeting audio prompt
	// Returned only for the `user` and `call_handling` subsetting. It displays when
	// `busy_on_another_call_action` action or `call_not_answer_action` set to `1` - Forward to a
	// voicemail.
	VoicemailGreeting OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting `json:"voicemail_greeting"`
	// When a call is forwarded to a personal phone number, whether the user must press &quot;1&quot;
	// before the call connects. This field helps to ensure that missed calls do not reach to your
	// personal voicemail. Returned for the `Forward to an external number` and `Forward to External
	// Contacts` options.
	RequirePress1BeforeConnecting OptBool `json:"require_press_1_before_connecting"`
	// Whether to play callee's voicemail greeting when caller reaches end of forwarding sequence. It
	// displays when `call_not_answer_action` is set to `2` - Forward to the user, `4` - Forward to the
	// common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue, `8` - Forward
	// to a shared line group, `9` - Forward to an external contact, `10` - Forward to an external number.
	OverflowPlayCalleeVoicemailGreeting OptBool `json:"overflow_play_callee_voicemail_greeting"`
	// Whether to play callee's voicemail greeting when caller reaches end of forwarding sequence. It
	// displays when `busy_routing` action or `call_not_answer_action` is set to `1` - Forward to a
	// voicemail.
	PlayCalleeVoicemailGreeting OptBool `json:"play_callee_voicemail_greeting"`
	// Whether to play callee's voicemail greeting when caller reaches end of forwarding sequence. It
	// displays when `busy_routing` action is set to `2` - Forward to the user, `4` - Forward to the
	// common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue, `8` - Forward
	// to a shared line group, `9` - Forward to an external contact, `10` - Forward to an external number.
	BusyPlayCalleeVoicemailGreeting OptBool `json:"busy_play_callee_voicemail_greeting"`
}

// GetAction returns the value of Action.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) GetAction() OptInt {
	return s.Action
}

// GetForwardTo returns the value of ForwardTo.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) GetForwardTo() OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo {
	return s.ForwardTo
}

// GetOperator returns the value of Operator.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) GetOperator() OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator {
	return s.Operator
}

// GetConnectToOperator returns the value of ConnectToOperator.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) GetConnectToOperator() OptBool {
	return s.ConnectToOperator
}

// GetAllowCallersCheckVoicemail returns the value of AllowCallersCheckVoicemail.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) GetAllowCallersCheckVoicemail() OptBool {
	return s.AllowCallersCheckVoicemail
}

// GetVoicemailGreeting returns the value of VoicemailGreeting.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) GetVoicemailGreeting() OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting {
	return s.VoicemailGreeting
}

// GetRequirePress1BeforeConnecting returns the value of RequirePress1BeforeConnecting.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) GetRequirePress1BeforeConnecting() OptBool {
	return s.RequirePress1BeforeConnecting
}

// GetOverflowPlayCalleeVoicemailGreeting returns the value of OverflowPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) GetOverflowPlayCalleeVoicemailGreeting() OptBool {
	return s.OverflowPlayCalleeVoicemailGreeting
}

// GetPlayCalleeVoicemailGreeting returns the value of PlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) GetPlayCalleeVoicemailGreeting() OptBool {
	return s.PlayCalleeVoicemailGreeting
}

// GetBusyPlayCalleeVoicemailGreeting returns the value of BusyPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) GetBusyPlayCalleeVoicemailGreeting() OptBool {
	return s.BusyPlayCalleeVoicemailGreeting
}

// SetAction sets the value of Action.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) SetAction(val OptInt) {
	s.Action = val
}

// SetForwardTo sets the value of ForwardTo.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) SetForwardTo(val OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) {
	s.ForwardTo = val
}

// SetOperator sets the value of Operator.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) SetOperator(val OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) {
	s.Operator = val
}

// SetConnectToOperator sets the value of ConnectToOperator.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) SetConnectToOperator(val OptBool) {
	s.ConnectToOperator = val
}

// SetAllowCallersCheckVoicemail sets the value of AllowCallersCheckVoicemail.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) SetAllowCallersCheckVoicemail(val OptBool) {
	s.AllowCallersCheckVoicemail = val
}

// SetVoicemailGreeting sets the value of VoicemailGreeting.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) SetVoicemailGreeting(val OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting) {
	s.VoicemailGreeting = val
}

// SetRequirePress1BeforeConnecting sets the value of RequirePress1BeforeConnecting.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) SetRequirePress1BeforeConnecting(val OptBool) {
	s.RequirePress1BeforeConnecting = val
}

// SetOverflowPlayCalleeVoicemailGreeting sets the value of OverflowPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) SetOverflowPlayCalleeVoicemailGreeting(val OptBool) {
	s.OverflowPlayCalleeVoicemailGreeting = val
}

// SetPlayCalleeVoicemailGreeting sets the value of PlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) SetPlayCalleeVoicemailGreeting(val OptBool) {
	s.PlayCalleeVoicemailGreeting = val
}

// SetBusyPlayCalleeVoicemailGreeting sets the value of BusyPlayCalleeVoicemailGreeting.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) SetBusyPlayCalleeVoicemailGreeting(val OptBool) {
	s.BusyPlayCalleeVoicemailGreeting = val
}

// The extension's forwarding information. It returns the response when `call_not_answer_action` or
// `busy_on_another_call_action` is set to `2` (Forward to the user), `4` (Forward to the common
// area), `6` (Forward to the auto receptionist), `7` (Forward to a call queue), `8` (Forward to a
// shared line group), `9` (Forward to an external contact), or `10` (Forward to an external number).
type GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo struct {
	// The extension's name.
	DisplayName OptString `json:"display_name"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The type of extension:
	// * `user`
	// * `autoReceptionist`
	// * `callQueue`.
	ExtensionType OptString `json:"extension_type"`
	// The ID of the extension for `user`, `autoReceptionist`, `device`, or `callQueue`.
	ID OptString `json:"id"`
	// The extension's phone number or forward to an external number, in [E.164 format](https://en.
	// wikipedia.org/wiki/E.164) format.
	PhoneNumber OptString `json:"phone_number"`
	// This field forwards to an external number description.
	Description OptString `json:"description"`
	// The voicemail greeting prompt. It returns only when `call_not_answer_action` is set to `1`
	// (Forward to a voicemail) for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting.
	VoicemailGreeting *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardToVoicemailGreeting `json:"voicemail_greeting"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) GetID() OptString {
	return s.ID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetDescription returns the value of Description.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) GetDescription() OptString {
	return s.Description
}

// GetVoicemailGreeting returns the value of VoicemailGreeting.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) GetVoicemailGreeting() *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardToVoicemailGreeting {
	return s.VoicemailGreeting
}

// SetDisplayName sets the value of DisplayName.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) SetID(val OptString) {
	s.ID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetDescription sets the value of Description.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) SetDescription(val OptString) {
	s.Description = val
}

// SetVoicemailGreeting sets the value of VoicemailGreeting.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) SetVoicemailGreeting(val *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardToVoicemailGreeting) {
	s.VoicemailGreeting = val
}

// The voicemail greeting prompt. It returns only when `call_not_answer_action` is set to `1`
// (Forward to a voicemail) for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting.
type GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardToVoicemailGreeting struct{}

// This field allows callers to reach an operator. Its a response returned when the
// `call_not_answer_action` or `busy_on_another_call_action` setting is set to `1` (Forward to a
// voicemail) and `connect_to_operator` setting is set to `true`.
type GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator struct {
	// The extension's name.
	DisplayName OptString `json:"display_name"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The type of extension:
	// * `user`
	// * `commonArea`
	// * `sharedLineGroup`
	// * `callQueue`.
	ExtensionType OptString `json:"extension_type"`
	// The ID of the extension for `user`, `commonArea`, `sharedLineGroup`, `device`, or `callQueue`.
	ID OptString `json:"id"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) GetID() OptString {
	return s.ID
}

// SetDisplayName sets the value of DisplayName.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) SetID(val OptString) {
	s.ID = val
}

// The voicemail greeting audio prompt
// Returned only for the `user` and `call_handling` subsetting. It displays when
// `busy_on_another_call_action` action or `call_not_answer_action` set to `1` - Forward to a
// voicemail.
type GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting struct {
	// The voicemail greeting audio prompt ID.
	// Options: empty char - default.
	ID OptString `json:"id"`
	// The voicemail greeting audio prompt name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting) SetName(val OptString) {
	s.Name = val
}

type GetCallLogDetailsOK struct {
	// The unique identifier of the phone call.
	CallID OptString `json:"call_id"`
	// The type of call:
	// * `voip` (Voice over IP)
	// * `pstn` (Public Switched Telephone Network)
	// * `tollfree`
	// * `international`
	// * `contactCenter`.
	CallType OptString `json:"call_type"`
	// The country calling code.
	CalleeCountryCode OptString `json:"callee_country_code"`
	// The ISO alpha2 country code.
	CalleeCountryIsoCode OptString `json:"callee_country_iso_code"`
	// The callee's DID (direct inward dial) number in e164 format.
	CalleeDidNumber OptString `json:"callee_did_number"`
	// The contact name of callee.
	CalleeName OptString `json:"callee_name"`
	// The number of callee.
	CalleeNumber OptString `json:"callee_number"`
	// The callee's number type:
	// * `1` &mdash; Extension number.
	// * `2` &mdash; Phone number.
	// * `3` &mdash; Customized emergency number.
	CalleeNumberType OptInt `json:"callee_number_type"`
	// This field indicates where the phone number comes from:
	// * `internal` &mdash; ZP native.
	// * `external` &mdash; BYOC or Provider Exchange.
	// * `byop` &mdash; Premise peering.
	// Not available when `callee_number_type = 1`.
	CalleeNumberSource OptString `json:"callee_number_source"`
	// This field indicates the status of extension.
	// * `inactive`
	// * `deleted`.
	CalleeStatus OptString `json:"callee_status"`
	// The datetime the extension was deleted. Exists only when extension_status is `deleted`.
	CalleeDeletedTime OptString `json:"callee_deleted_time"`
	// The country calling code.
	CallerCountryCode OptString `json:"caller_country_code"`
	// The ISO alpha2 country code.
	CallerCountryIsoCode OptString `json:"caller_country_iso_code"`
	// The caller's DID (direct inward dial) number in e164 format.
	CallerDidNumber OptString `json:"caller_did_number"`
	// The contact name of caller.
	CallerName OptString `json:"caller_name"`
	// The number of the caller.
	CallerNumber OptString `json:"caller_number"`
	// The caller's number type:
	// * `1` &mdash; Extension number.
	// * `2` &mdash; Phone number.
	CallerNumberType OptInt `json:"caller_number_type"`
	// This field Iindicates where the phone number comes from:
	// * `internal` &mdash; ZP native.
	// * `external` &mdash; BYOC or Provider Exchange.
	// * `byop` &mdash; Premise peering.
	// Not available when `caller_number_type = 1`.
	CallerNumberSource OptString `json:"caller_number_source"`
	// The billing reference ID (for peering phone numbers).
	CallerBillingReferenceID OptString `json:"caller_billing_reference_id"`
	// This field indicates the status of extension.
	// * `inactive`
	// * `deleted`.
	CallerStatus OptString `json:"caller_status"`
	// The datetime the extension was deleted. Exists only when extension_status is `deleted`.
	CallerDeletedTime OptString `json:"caller_deleted_time"`
	// The start time of the call.
	DateTime OptString `json:"date_time"`
	// This field displays the device's private IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePrivateIP OptString `json:"device_private_ip"`
	// This field displays the device's public IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePublicIP OptString `json:"device_public_ip"`
	// The direction of the call: `inbound` | `outbound`.
	Direction OptString `json:"direction"`
	// The duration of the call in seconds.
	Duration OptInt `json:"duration"`
	// Whether the call has a recording. See [announcement](https://marketplace.zoom.
	// us/docs/guides/stay-up-to-date/announcements#deprecation-of-the-has_voicemail-and-has_recording-responses-in-phone-api) from July, 2021.
	//
	// Deprecated: schema marks this property as deprecated.
	HasRecording OptBool `json:"has_recording"`
	// Whether the call has a voicemail. See [announcement](https://marketplace.zoom.
	// us/docs/guides/stay-up-to-date/announcements#deprecation-of-the-has_voicemail-and-has_recording-responses-in-phone-api) from July, 2021.
	//
	// Deprecated: schema marks this property as deprecated.
	HasVoicemail OptBool `json:"has_voicemail"`
	// The call log ID.
	ID OptString `json:"id"`
	// The call segment details.
	LogDetails []GetCallLogDetailsOKLogDetailsItem `json:"log_details"`
	// The path of the call.
	Path OptString `json:"path"`
	// The result of the call: `Missed` | `Voicemail` | `Call connected` | `Rejected` | `Blocked`|
	// `Busy`| `Wrong Number`| `No Answer`| `International Disabled`| `Internal Error`| `Call failed` |
	// `Restricted Number`| `Call Cancel` | `Message`| `Answered by Other Member` | `Call Cancelled` |
	// `Park` | `Parked` | `Blocked by non-GAL` |  `Blocked by info-Barriers` | `Recording Failure`|
	// `Recorded`| `Auto Recorded`.
	Result OptString `json:"result"`
	// The name of the user's department.
	Department OptString `json:"department"`
	// The cost center name to which a user belongs.
	CostCenter OptString `json:"cost_center"`
}

// GetCallID returns the value of CallID.
func (s *GetCallLogDetailsOK) GetCallID() OptString {
	return s.CallID
}

// GetCallType returns the value of CallType.
func (s *GetCallLogDetailsOK) GetCallType() OptString {
	return s.CallType
}

// GetCalleeCountryCode returns the value of CalleeCountryCode.
func (s *GetCallLogDetailsOK) GetCalleeCountryCode() OptString {
	return s.CalleeCountryCode
}

// GetCalleeCountryIsoCode returns the value of CalleeCountryIsoCode.
func (s *GetCallLogDetailsOK) GetCalleeCountryIsoCode() OptString {
	return s.CalleeCountryIsoCode
}

// GetCalleeDidNumber returns the value of CalleeDidNumber.
func (s *GetCallLogDetailsOK) GetCalleeDidNumber() OptString {
	return s.CalleeDidNumber
}

// GetCalleeName returns the value of CalleeName.
func (s *GetCallLogDetailsOK) GetCalleeName() OptString {
	return s.CalleeName
}

// GetCalleeNumber returns the value of CalleeNumber.
func (s *GetCallLogDetailsOK) GetCalleeNumber() OptString {
	return s.CalleeNumber
}

// GetCalleeNumberType returns the value of CalleeNumberType.
func (s *GetCallLogDetailsOK) GetCalleeNumberType() OptInt {
	return s.CalleeNumberType
}

// GetCalleeNumberSource returns the value of CalleeNumberSource.
func (s *GetCallLogDetailsOK) GetCalleeNumberSource() OptString {
	return s.CalleeNumberSource
}

// GetCalleeStatus returns the value of CalleeStatus.
func (s *GetCallLogDetailsOK) GetCalleeStatus() OptString {
	return s.CalleeStatus
}

// GetCalleeDeletedTime returns the value of CalleeDeletedTime.
func (s *GetCallLogDetailsOK) GetCalleeDeletedTime() OptString {
	return s.CalleeDeletedTime
}

// GetCallerCountryCode returns the value of CallerCountryCode.
func (s *GetCallLogDetailsOK) GetCallerCountryCode() OptString {
	return s.CallerCountryCode
}

// GetCallerCountryIsoCode returns the value of CallerCountryIsoCode.
func (s *GetCallLogDetailsOK) GetCallerCountryIsoCode() OptString {
	return s.CallerCountryIsoCode
}

// GetCallerDidNumber returns the value of CallerDidNumber.
func (s *GetCallLogDetailsOK) GetCallerDidNumber() OptString {
	return s.CallerDidNumber
}

// GetCallerName returns the value of CallerName.
func (s *GetCallLogDetailsOK) GetCallerName() OptString {
	return s.CallerName
}

// GetCallerNumber returns the value of CallerNumber.
func (s *GetCallLogDetailsOK) GetCallerNumber() OptString {
	return s.CallerNumber
}

// GetCallerNumberType returns the value of CallerNumberType.
func (s *GetCallLogDetailsOK) GetCallerNumberType() OptInt {
	return s.CallerNumberType
}

// GetCallerNumberSource returns the value of CallerNumberSource.
func (s *GetCallLogDetailsOK) GetCallerNumberSource() OptString {
	return s.CallerNumberSource
}

// GetCallerBillingReferenceID returns the value of CallerBillingReferenceID.
func (s *GetCallLogDetailsOK) GetCallerBillingReferenceID() OptString {
	return s.CallerBillingReferenceID
}

// GetCallerStatus returns the value of CallerStatus.
func (s *GetCallLogDetailsOK) GetCallerStatus() OptString {
	return s.CallerStatus
}

// GetCallerDeletedTime returns the value of CallerDeletedTime.
func (s *GetCallLogDetailsOK) GetCallerDeletedTime() OptString {
	return s.CallerDeletedTime
}

// GetDateTime returns the value of DateTime.
func (s *GetCallLogDetailsOK) GetDateTime() OptString {
	return s.DateTime
}

// GetDevicePrivateIP returns the value of DevicePrivateIP.
func (s *GetCallLogDetailsOK) GetDevicePrivateIP() OptString {
	return s.DevicePrivateIP
}

// GetDevicePublicIP returns the value of DevicePublicIP.
func (s *GetCallLogDetailsOK) GetDevicePublicIP() OptString {
	return s.DevicePublicIP
}

// GetDirection returns the value of Direction.
func (s *GetCallLogDetailsOK) GetDirection() OptString {
	return s.Direction
}

// GetDuration returns the value of Duration.
func (s *GetCallLogDetailsOK) GetDuration() OptInt {
	return s.Duration
}

// GetHasRecording returns the value of HasRecording.
func (s *GetCallLogDetailsOK) GetHasRecording() OptBool {
	return s.HasRecording
}

// GetHasVoicemail returns the value of HasVoicemail.
func (s *GetCallLogDetailsOK) GetHasVoicemail() OptBool {
	return s.HasVoicemail
}

// GetID returns the value of ID.
func (s *GetCallLogDetailsOK) GetID() OptString {
	return s.ID
}

// GetLogDetails returns the value of LogDetails.
func (s *GetCallLogDetailsOK) GetLogDetails() []GetCallLogDetailsOKLogDetailsItem {
	return s.LogDetails
}

// GetPath returns the value of Path.
func (s *GetCallLogDetailsOK) GetPath() OptString {
	return s.Path
}

// GetResult returns the value of Result.
func (s *GetCallLogDetailsOK) GetResult() OptString {
	return s.Result
}

// GetDepartment returns the value of Department.
func (s *GetCallLogDetailsOK) GetDepartment() OptString {
	return s.Department
}

// GetCostCenter returns the value of CostCenter.
func (s *GetCallLogDetailsOK) GetCostCenter() OptString {
	return s.CostCenter
}

// SetCallID sets the value of CallID.
func (s *GetCallLogDetailsOK) SetCallID(val OptString) {
	s.CallID = val
}

// SetCallType sets the value of CallType.
func (s *GetCallLogDetailsOK) SetCallType(val OptString) {
	s.CallType = val
}

// SetCalleeCountryCode sets the value of CalleeCountryCode.
func (s *GetCallLogDetailsOK) SetCalleeCountryCode(val OptString) {
	s.CalleeCountryCode = val
}

// SetCalleeCountryIsoCode sets the value of CalleeCountryIsoCode.
func (s *GetCallLogDetailsOK) SetCalleeCountryIsoCode(val OptString) {
	s.CalleeCountryIsoCode = val
}

// SetCalleeDidNumber sets the value of CalleeDidNumber.
func (s *GetCallLogDetailsOK) SetCalleeDidNumber(val OptString) {
	s.CalleeDidNumber = val
}

// SetCalleeName sets the value of CalleeName.
func (s *GetCallLogDetailsOK) SetCalleeName(val OptString) {
	s.CalleeName = val
}

// SetCalleeNumber sets the value of CalleeNumber.
func (s *GetCallLogDetailsOK) SetCalleeNumber(val OptString) {
	s.CalleeNumber = val
}

// SetCalleeNumberType sets the value of CalleeNumberType.
func (s *GetCallLogDetailsOK) SetCalleeNumberType(val OptInt) {
	s.CalleeNumberType = val
}

// SetCalleeNumberSource sets the value of CalleeNumberSource.
func (s *GetCallLogDetailsOK) SetCalleeNumberSource(val OptString) {
	s.CalleeNumberSource = val
}

// SetCalleeStatus sets the value of CalleeStatus.
func (s *GetCallLogDetailsOK) SetCalleeStatus(val OptString) {
	s.CalleeStatus = val
}

// SetCalleeDeletedTime sets the value of CalleeDeletedTime.
func (s *GetCallLogDetailsOK) SetCalleeDeletedTime(val OptString) {
	s.CalleeDeletedTime = val
}

// SetCallerCountryCode sets the value of CallerCountryCode.
func (s *GetCallLogDetailsOK) SetCallerCountryCode(val OptString) {
	s.CallerCountryCode = val
}

// SetCallerCountryIsoCode sets the value of CallerCountryIsoCode.
func (s *GetCallLogDetailsOK) SetCallerCountryIsoCode(val OptString) {
	s.CallerCountryIsoCode = val
}

// SetCallerDidNumber sets the value of CallerDidNumber.
func (s *GetCallLogDetailsOK) SetCallerDidNumber(val OptString) {
	s.CallerDidNumber = val
}

// SetCallerName sets the value of CallerName.
func (s *GetCallLogDetailsOK) SetCallerName(val OptString) {
	s.CallerName = val
}

// SetCallerNumber sets the value of CallerNumber.
func (s *GetCallLogDetailsOK) SetCallerNumber(val OptString) {
	s.CallerNumber = val
}

// SetCallerNumberType sets the value of CallerNumberType.
func (s *GetCallLogDetailsOK) SetCallerNumberType(val OptInt) {
	s.CallerNumberType = val
}

// SetCallerNumberSource sets the value of CallerNumberSource.
func (s *GetCallLogDetailsOK) SetCallerNumberSource(val OptString) {
	s.CallerNumberSource = val
}

// SetCallerBillingReferenceID sets the value of CallerBillingReferenceID.
func (s *GetCallLogDetailsOK) SetCallerBillingReferenceID(val OptString) {
	s.CallerBillingReferenceID = val
}

// SetCallerStatus sets the value of CallerStatus.
func (s *GetCallLogDetailsOK) SetCallerStatus(val OptString) {
	s.CallerStatus = val
}

// SetCallerDeletedTime sets the value of CallerDeletedTime.
func (s *GetCallLogDetailsOK) SetCallerDeletedTime(val OptString) {
	s.CallerDeletedTime = val
}

// SetDateTime sets the value of DateTime.
func (s *GetCallLogDetailsOK) SetDateTime(val OptString) {
	s.DateTime = val
}

// SetDevicePrivateIP sets the value of DevicePrivateIP.
func (s *GetCallLogDetailsOK) SetDevicePrivateIP(val OptString) {
	s.DevicePrivateIP = val
}

// SetDevicePublicIP sets the value of DevicePublicIP.
func (s *GetCallLogDetailsOK) SetDevicePublicIP(val OptString) {
	s.DevicePublicIP = val
}

// SetDirection sets the value of Direction.
func (s *GetCallLogDetailsOK) SetDirection(val OptString) {
	s.Direction = val
}

// SetDuration sets the value of Duration.
func (s *GetCallLogDetailsOK) SetDuration(val OptInt) {
	s.Duration = val
}

// SetHasRecording sets the value of HasRecording.
func (s *GetCallLogDetailsOK) SetHasRecording(val OptBool) {
	s.HasRecording = val
}

// SetHasVoicemail sets the value of HasVoicemail.
func (s *GetCallLogDetailsOK) SetHasVoicemail(val OptBool) {
	s.HasVoicemail = val
}

// SetID sets the value of ID.
func (s *GetCallLogDetailsOK) SetID(val OptString) {
	s.ID = val
}

// SetLogDetails sets the value of LogDetails.
func (s *GetCallLogDetailsOK) SetLogDetails(val []GetCallLogDetailsOKLogDetailsItem) {
	s.LogDetails = val
}

// SetPath sets the value of Path.
func (s *GetCallLogDetailsOK) SetPath(val OptString) {
	s.Path = val
}

// SetResult sets the value of Result.
func (s *GetCallLogDetailsOK) SetResult(val OptString) {
	s.Result = val
}

// SetDepartment sets the value of Department.
func (s *GetCallLogDetailsOK) SetDepartment(val OptString) {
	s.Department = val
}

// SetCostCenter sets the value of CostCenter.
func (s *GetCallLogDetailsOK) SetCostCenter(val OptString) {
	s.CostCenter = val
}

type GetCallLogDetailsOKLogDetailsItem struct {
	// The start time of the call.
	DateTime OptString `json:"date_time"`
	// The hold time during a call in seconds.
	HoldTime OptInt `json:"hold_time"`
	// This field displays the device's private IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePrivateIP OptString `json:"device_private_ip"`
	// This field displays the device's public IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePublicIP OptString `json:"device_public_ip"`
	// The duration of the call in seconds.
	Duration OptInt `json:"duration"`
	// The information about the call's forwarding.
	ForwardTo OptGetCallLogDetailsOKLogDetailsItemForwardTo `json:"forward_to"`
	// The call log ID.
	ID OptString `json:"id"`
	// The path of the call.
	Path OptString `json:"path"`
	// The result of the call: `Missed` | `Voicemail`| `Call connected`|`Rejected`| `Blocked`|
	// `Busy`|`Wrong Number`| `No Answer`| `International Disabled`|`Internal Error`| `Call failed`|
	// `Restricted Number`|`Call Cancel`| `Message`| `Answered by Other Member`|`Call Cancelled`| `Park`|
	// `Parked`| `Blocked by non-GAL`| `Blocked by info-Barriers`|`Recording Failure`| `Recorded`| `Auto
	// Recorded`.
	Result OptString                                `json:"result"`
	Site   OptGetCallLogDetailsOKLogDetailsItemSite `json:"site"`
}

// GetDateTime returns the value of DateTime.
func (s *GetCallLogDetailsOKLogDetailsItem) GetDateTime() OptString {
	return s.DateTime
}

// GetHoldTime returns the value of HoldTime.
func (s *GetCallLogDetailsOKLogDetailsItem) GetHoldTime() OptInt {
	return s.HoldTime
}

// GetDevicePrivateIP returns the value of DevicePrivateIP.
func (s *GetCallLogDetailsOKLogDetailsItem) GetDevicePrivateIP() OptString {
	return s.DevicePrivateIP
}

// GetDevicePublicIP returns the value of DevicePublicIP.
func (s *GetCallLogDetailsOKLogDetailsItem) GetDevicePublicIP() OptString {
	return s.DevicePublicIP
}

// GetDuration returns the value of Duration.
func (s *GetCallLogDetailsOKLogDetailsItem) GetDuration() OptInt {
	return s.Duration
}

// GetForwardTo returns the value of ForwardTo.
func (s *GetCallLogDetailsOKLogDetailsItem) GetForwardTo() OptGetCallLogDetailsOKLogDetailsItemForwardTo {
	return s.ForwardTo
}

// GetID returns the value of ID.
func (s *GetCallLogDetailsOKLogDetailsItem) GetID() OptString {
	return s.ID
}

// GetPath returns the value of Path.
func (s *GetCallLogDetailsOKLogDetailsItem) GetPath() OptString {
	return s.Path
}

// GetResult returns the value of Result.
func (s *GetCallLogDetailsOKLogDetailsItem) GetResult() OptString {
	return s.Result
}

// GetSite returns the value of Site.
func (s *GetCallLogDetailsOKLogDetailsItem) GetSite() OptGetCallLogDetailsOKLogDetailsItemSite {
	return s.Site
}

// SetDateTime sets the value of DateTime.
func (s *GetCallLogDetailsOKLogDetailsItem) SetDateTime(val OptString) {
	s.DateTime = val
}

// SetHoldTime sets the value of HoldTime.
func (s *GetCallLogDetailsOKLogDetailsItem) SetHoldTime(val OptInt) {
	s.HoldTime = val
}

// SetDevicePrivateIP sets the value of DevicePrivateIP.
func (s *GetCallLogDetailsOKLogDetailsItem) SetDevicePrivateIP(val OptString) {
	s.DevicePrivateIP = val
}

// SetDevicePublicIP sets the value of DevicePublicIP.
func (s *GetCallLogDetailsOKLogDetailsItem) SetDevicePublicIP(val OptString) {
	s.DevicePublicIP = val
}

// SetDuration sets the value of Duration.
func (s *GetCallLogDetailsOKLogDetailsItem) SetDuration(val OptInt) {
	s.Duration = val
}

// SetForwardTo sets the value of ForwardTo.
func (s *GetCallLogDetailsOKLogDetailsItem) SetForwardTo(val OptGetCallLogDetailsOKLogDetailsItemForwardTo) {
	s.ForwardTo = val
}

// SetID sets the value of ID.
func (s *GetCallLogDetailsOKLogDetailsItem) SetID(val OptString) {
	s.ID = val
}

// SetPath sets the value of Path.
func (s *GetCallLogDetailsOKLogDetailsItem) SetPath(val OptString) {
	s.Path = val
}

// SetResult sets the value of Result.
func (s *GetCallLogDetailsOKLogDetailsItem) SetResult(val OptString) {
	s.Result = val
}

// SetSite sets the value of Site.
func (s *GetCallLogDetailsOKLogDetailsItem) SetSite(val OptGetCallLogDetailsOKLogDetailsItemSite) {
	s.Site = val
}

// The information about the call's forwarding.
type GetCallLogDetailsOKLogDetailsItemForwardTo struct {
	// The call forward's extension number.
	ExtensionNumber OptString `json:"extension_number"`
	// The call forward's unique ID.
	ID OptString `json:"id"`
	// The call forward's name.
	Name OptString `json:"name"`
	// The call forwarding recipient type:
	// * `user`
	// * `callQueue`
	// * `autoReceptionist`
	// * `sharedLineGroup`.
	Type OptString `json:"type"`
	// This field indicates the status of extension.
	// * `inactive`
	// * `deleted`.
	ExtensionStatus OptString `json:"extension_status"`
	// The datetime the extension was deleted. Exists only when extension_status is `deleted`.
	ExtensionDeletedTime OptString `json:"extension_deleted_time"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetCallLogDetailsOKLogDetailsItemForwardTo) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *GetCallLogDetailsOKLogDetailsItemForwardTo) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetCallLogDetailsOKLogDetailsItemForwardTo) GetName() OptString {
	return s.Name
}

// GetType returns the value of Type.
func (s *GetCallLogDetailsOKLogDetailsItemForwardTo) GetType() OptString {
	return s.Type
}

// GetExtensionStatus returns the value of ExtensionStatus.
func (s *GetCallLogDetailsOKLogDetailsItemForwardTo) GetExtensionStatus() OptString {
	return s.ExtensionStatus
}

// GetExtensionDeletedTime returns the value of ExtensionDeletedTime.
func (s *GetCallLogDetailsOKLogDetailsItemForwardTo) GetExtensionDeletedTime() OptString {
	return s.ExtensionDeletedTime
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetCallLogDetailsOKLogDetailsItemForwardTo) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *GetCallLogDetailsOKLogDetailsItemForwardTo) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetCallLogDetailsOKLogDetailsItemForwardTo) SetName(val OptString) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *GetCallLogDetailsOKLogDetailsItemForwardTo) SetType(val OptString) {
	s.Type = val
}

// SetExtensionStatus sets the value of ExtensionStatus.
func (s *GetCallLogDetailsOKLogDetailsItemForwardTo) SetExtensionStatus(val OptString) {
	s.ExtensionStatus = val
}

// SetExtensionDeletedTime sets the value of ExtensionDeletedTime.
func (s *GetCallLogDetailsOKLogDetailsItemForwardTo) SetExtensionDeletedTime(val OptString) {
	s.ExtensionDeletedTime = val
}

type GetCallLogDetailsOKLogDetailsItemSite struct {
	// The target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites)
	// where the phone number was assigned. Sites allow you to organize the phone users in your
	// organization. For example, you can create sites based on different office locations.
	ID OptString `json:"id"`
	// The name of the site where the phone number is assigned.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetCallLogDetailsOKLogDetailsItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetCallLogDetailsOKLogDetailsItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetCallLogDetailsOKLogDetailsItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetCallLogDetailsOKLogDetailsItemSite) SetName(val OptString) {
	s.Name = val
}

type GetCallLogMetricsDetailsOK struct {
	// The unique identifier of the phone call.
	CallID OptString `json:"call_id"`
	// The callee object that contains information of the callee.
	Callee OptGetCallLogMetricsDetailsOKCallee `json:"callee"`
	// The caller object that contains information of the caller.
	Caller OptGetCallLogMetricsDetailsOKCaller `json:"caller"`
	// The date and time when the call started.
	DateTime OptString `json:"date_time"`
	// The direction of the call.
	// The value of this field can be either `internal` or `outbound`.
	Direction OptString `json:"direction"`
	// The duration of the call in seconds.
	Duration OptInt `json:"duration"`
	// The Mean Opinion Score (MOS).
	// Zoom uses MOS as the main measurement to report on voice quality. MOS measures voice quality on a
	// scale of one to five. A score of one indicates unacceptable voice quality for all users. A score
	// of five is the best voice quality.
	Mos OptString `json:"mos"`
}

// GetCallID returns the value of CallID.
func (s *GetCallLogMetricsDetailsOK) GetCallID() OptString {
	return s.CallID
}

// GetCallee returns the value of Callee.
func (s *GetCallLogMetricsDetailsOK) GetCallee() OptGetCallLogMetricsDetailsOKCallee {
	return s.Callee
}

// GetCaller returns the value of Caller.
func (s *GetCallLogMetricsDetailsOK) GetCaller() OptGetCallLogMetricsDetailsOKCaller {
	return s.Caller
}

// GetDateTime returns the value of DateTime.
func (s *GetCallLogMetricsDetailsOK) GetDateTime() OptString {
	return s.DateTime
}

// GetDirection returns the value of Direction.
func (s *GetCallLogMetricsDetailsOK) GetDirection() OptString {
	return s.Direction
}

// GetDuration returns the value of Duration.
func (s *GetCallLogMetricsDetailsOK) GetDuration() OptInt {
	return s.Duration
}

// GetMos returns the value of Mos.
func (s *GetCallLogMetricsDetailsOK) GetMos() OptString {
	return s.Mos
}

// SetCallID sets the value of CallID.
func (s *GetCallLogMetricsDetailsOK) SetCallID(val OptString) {
	s.CallID = val
}

// SetCallee sets the value of Callee.
func (s *GetCallLogMetricsDetailsOK) SetCallee(val OptGetCallLogMetricsDetailsOKCallee) {
	s.Callee = val
}

// SetCaller sets the value of Caller.
func (s *GetCallLogMetricsDetailsOK) SetCaller(val OptGetCallLogMetricsDetailsOKCaller) {
	s.Caller = val
}

// SetDateTime sets the value of DateTime.
func (s *GetCallLogMetricsDetailsOK) SetDateTime(val OptString) {
	s.DateTime = val
}

// SetDirection sets the value of Direction.
func (s *GetCallLogMetricsDetailsOK) SetDirection(val OptString) {
	s.Direction = val
}

// SetDuration sets the value of Duration.
func (s *GetCallLogMetricsDetailsOK) SetDuration(val OptInt) {
	s.Duration = val
}

// SetMos sets the value of Mos.
func (s *GetCallLogMetricsDetailsOK) SetMos(val OptString) {
	s.Mos = val
}

// The callee object that contains information of the callee.
type GetCallLogMetricsDetailsOKCallee struct {
	// The audio codec.
	Codec OptString `json:"codec"`
	// This setting displays the device's private IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePrivateIP OptString `json:"device_private_ip"`
	// This setting displays the device's public IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePublicIP OptString `json:"device_public_ip"`
	// The device type, and if applicable, its version number. Acceptable device types:
	// * `Windows_Client`
	// * `MAC_Client`
	// * `Linux_Client`
	// * `Android_Phone`
	// * `IOS_Phone`
	// * `Android_Pad`
	// * `IOS_Pad`
	// * [Zoom Phone Appliance](https://support.zoom.
	// us/hc/en-us/articles/360001299063#h_cc0dac0d-44aa-4fb6-8e39-359166c38715)
	// * `Windows_VDI_Client`
	// * `MAC_VDI_Client`
	// * `Linux_VDI_Client`.
	DeviceType OptString `json:"device_type"`
	// The full extension number of the callee.
	ExtensionNumber OptString `json:"extension_number"`
	// The headset the callee uses for the call.
	Headset OptString `json:"headset"`
	// ISP.
	Isp OptString `json:"isp"`
	// The microphone the callee uses for the call.
	Microphone OptString `json:"microphone"`
	// The phone number of the callee in E164 format.
	PhoneNumber OptString `json:"phone_number"`
	// The unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites).
	SiteID OptString `json:"site_id"`
	// The ID of the extension for `user`, `callQueue`, `autoReceptionist`, or `sharedLineGroup`.
	ID OptString `json:"id"`
	// The type of extension:
	// * `user`
	// * `callQueue`
	// * `autoReceptionist`
	// * `sharedLineGroup`.
	ExtensionType OptString `json:"extension_type"`
	// The extension's name.
	DisplayName OptString `json:"display_name"`
}

// GetCodec returns the value of Codec.
func (s *GetCallLogMetricsDetailsOKCallee) GetCodec() OptString {
	return s.Codec
}

// GetDevicePrivateIP returns the value of DevicePrivateIP.
func (s *GetCallLogMetricsDetailsOKCallee) GetDevicePrivateIP() OptString {
	return s.DevicePrivateIP
}

// GetDevicePublicIP returns the value of DevicePublicIP.
func (s *GetCallLogMetricsDetailsOKCallee) GetDevicePublicIP() OptString {
	return s.DevicePublicIP
}

// GetDeviceType returns the value of DeviceType.
func (s *GetCallLogMetricsDetailsOKCallee) GetDeviceType() OptString {
	return s.DeviceType
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetCallLogMetricsDetailsOKCallee) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetHeadset returns the value of Headset.
func (s *GetCallLogMetricsDetailsOKCallee) GetHeadset() OptString {
	return s.Headset
}

// GetIsp returns the value of Isp.
func (s *GetCallLogMetricsDetailsOKCallee) GetIsp() OptString {
	return s.Isp
}

// GetMicrophone returns the value of Microphone.
func (s *GetCallLogMetricsDetailsOKCallee) GetMicrophone() OptString {
	return s.Microphone
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *GetCallLogMetricsDetailsOKCallee) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetSiteID returns the value of SiteID.
func (s *GetCallLogMetricsDetailsOKCallee) GetSiteID() OptString {
	return s.SiteID
}

// GetID returns the value of ID.
func (s *GetCallLogMetricsDetailsOKCallee) GetID() OptString {
	return s.ID
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetCallLogMetricsDetailsOKCallee) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetDisplayName returns the value of DisplayName.
func (s *GetCallLogMetricsDetailsOKCallee) GetDisplayName() OptString {
	return s.DisplayName
}

// SetCodec sets the value of Codec.
func (s *GetCallLogMetricsDetailsOKCallee) SetCodec(val OptString) {
	s.Codec = val
}

// SetDevicePrivateIP sets the value of DevicePrivateIP.
func (s *GetCallLogMetricsDetailsOKCallee) SetDevicePrivateIP(val OptString) {
	s.DevicePrivateIP = val
}

// SetDevicePublicIP sets the value of DevicePublicIP.
func (s *GetCallLogMetricsDetailsOKCallee) SetDevicePublicIP(val OptString) {
	s.DevicePublicIP = val
}

// SetDeviceType sets the value of DeviceType.
func (s *GetCallLogMetricsDetailsOKCallee) SetDeviceType(val OptString) {
	s.DeviceType = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetCallLogMetricsDetailsOKCallee) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetHeadset sets the value of Headset.
func (s *GetCallLogMetricsDetailsOKCallee) SetHeadset(val OptString) {
	s.Headset = val
}

// SetIsp sets the value of Isp.
func (s *GetCallLogMetricsDetailsOKCallee) SetIsp(val OptString) {
	s.Isp = val
}

// SetMicrophone sets the value of Microphone.
func (s *GetCallLogMetricsDetailsOKCallee) SetMicrophone(val OptString) {
	s.Microphone = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *GetCallLogMetricsDetailsOKCallee) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetSiteID sets the value of SiteID.
func (s *GetCallLogMetricsDetailsOKCallee) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetID sets the value of ID.
func (s *GetCallLogMetricsDetailsOKCallee) SetID(val OptString) {
	s.ID = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetCallLogMetricsDetailsOKCallee) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetCallLogMetricsDetailsOKCallee) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// The caller object that contains information of the caller.
type GetCallLogMetricsDetailsOKCaller struct {
	// The audio codec.
	Codec OptString `json:"codec"`
	// This setting displays the device's private IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePrivateIP OptString `json:"device_private_ip"`
	// This setting displays the device's public IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePublicIP OptString `json:"device_public_ip"`
	// The device type, and if applicable, its version number. Acceptable device types:
	// * `Windows_Client`
	// * `MAC_Client`
	// * `Linux_Client`
	// * `Android_Phone`
	// * `IOS_Phone`
	// * `Android_Pad`
	// * `IOS_Pad`
	// * [Zoom Phone Appliance](https://support.zoom.
	// us/hc/en-us/articles/360001299063#h_cc0dac0d-44aa-4fb6-8e39-359166c38715)
	// * `Windows_VDI_Client`
	// * `MAC_VDI_Client`
	// * `Linux_VDI_Client`.
	DeviceType OptString `json:"device_type"`
	// The full extension number of the caller.
	ExtensionNumber OptString `json:"extension_number"`
	// The headset the caller uses for the call.
	Headset OptString `json:"headset"`
	// ISP.
	Isp OptString `json:"isp"`
	// The microphone the caller uses for the call.
	Microphone OptString `json:"microphone"`
	// The phone number of the caller in E164 format.
	PhoneNumber OptString `json:"phone_number"`
	// The unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites).
	SiteID OptString `json:"site_id"`
	// The ID of the extension for `user`, `callQueue`, `autoReceptionist`, or `sharedLineGroup`.
	ID OptString `json:"id"`
	// The type of extension:
	// * `user`
	// * `callQueue`
	// * `autoReceptionist`
	// * `sharedLineGroup`.
	ExtensionType OptString `json:"extension_type"`
	// The extension's name.
	DisplayName OptString `json:"display_name"`
}

// GetCodec returns the value of Codec.
func (s *GetCallLogMetricsDetailsOKCaller) GetCodec() OptString {
	return s.Codec
}

// GetDevicePrivateIP returns the value of DevicePrivateIP.
func (s *GetCallLogMetricsDetailsOKCaller) GetDevicePrivateIP() OptString {
	return s.DevicePrivateIP
}

// GetDevicePublicIP returns the value of DevicePublicIP.
func (s *GetCallLogMetricsDetailsOKCaller) GetDevicePublicIP() OptString {
	return s.DevicePublicIP
}

// GetDeviceType returns the value of DeviceType.
func (s *GetCallLogMetricsDetailsOKCaller) GetDeviceType() OptString {
	return s.DeviceType
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetCallLogMetricsDetailsOKCaller) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetHeadset returns the value of Headset.
func (s *GetCallLogMetricsDetailsOKCaller) GetHeadset() OptString {
	return s.Headset
}

// GetIsp returns the value of Isp.
func (s *GetCallLogMetricsDetailsOKCaller) GetIsp() OptString {
	return s.Isp
}

// GetMicrophone returns the value of Microphone.
func (s *GetCallLogMetricsDetailsOKCaller) GetMicrophone() OptString {
	return s.Microphone
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *GetCallLogMetricsDetailsOKCaller) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetSiteID returns the value of SiteID.
func (s *GetCallLogMetricsDetailsOKCaller) GetSiteID() OptString {
	return s.SiteID
}

// GetID returns the value of ID.
func (s *GetCallLogMetricsDetailsOKCaller) GetID() OptString {
	return s.ID
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetCallLogMetricsDetailsOKCaller) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetDisplayName returns the value of DisplayName.
func (s *GetCallLogMetricsDetailsOKCaller) GetDisplayName() OptString {
	return s.DisplayName
}

// SetCodec sets the value of Codec.
func (s *GetCallLogMetricsDetailsOKCaller) SetCodec(val OptString) {
	s.Codec = val
}

// SetDevicePrivateIP sets the value of DevicePrivateIP.
func (s *GetCallLogMetricsDetailsOKCaller) SetDevicePrivateIP(val OptString) {
	s.DevicePrivateIP = val
}

// SetDevicePublicIP sets the value of DevicePublicIP.
func (s *GetCallLogMetricsDetailsOKCaller) SetDevicePublicIP(val OptString) {
	s.DevicePublicIP = val
}

// SetDeviceType sets the value of DeviceType.
func (s *GetCallLogMetricsDetailsOKCaller) SetDeviceType(val OptString) {
	s.DeviceType = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetCallLogMetricsDetailsOKCaller) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetHeadset sets the value of Headset.
func (s *GetCallLogMetricsDetailsOKCaller) SetHeadset(val OptString) {
	s.Headset = val
}

// SetIsp sets the value of Isp.
func (s *GetCallLogMetricsDetailsOKCaller) SetIsp(val OptString) {
	s.Isp = val
}

// SetMicrophone sets the value of Microphone.
func (s *GetCallLogMetricsDetailsOKCaller) SetMicrophone(val OptString) {
	s.Microphone = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *GetCallLogMetricsDetailsOKCaller) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetSiteID sets the value of SiteID.
func (s *GetCallLogMetricsDetailsOKCaller) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetID sets the value of ID.
func (s *GetCallLogMetricsDetailsOKCaller) SetID(val OptString) {
	s.ID = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetCallLogMetricsDetailsOKCaller) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetCallLogMetricsDetailsOKCaller) SetDisplayName(val OptString) {
	s.DisplayName = val
}

type GetCallPathOK struct {
	// The ID of the call log.
	ID OptString `json:"id"`
	// The ID of the phone call.
	CallID OptString `json:"call_id"`
	// The connect type of call:
	// * `internal`
	// * `external`.
	ConnectType OptString `json:"connect_type"`
	// The type of call.
	// * `general`
	// * `emergency`.
	CallType OptString `json:"call_type"`
	// The direction of the call.
	// * `inbound`
	// * `outbound`.
	Direction OptString `json:"direction"`
	// A flag to indicate the call is international or not.
	International OptBool `json:"international"`
	// The caller's extension ID.
	CallerExtID OptString `json:"caller_ext_id"`
	// The name of the caller.
	CallerName OptString `json:"caller_name"`
	// The caller's DID number in e164 format.
	CallerDidNumber OptString `json:"caller_did_number"`
	// The extension number of the caller.
	CallerExtNumber OptString `json:"caller_ext_number"`
	// The caller's email.
	CallerEmail OptString `json:"caller_email"`
	// The caller's extension type:
	// * `user`
	// * `callQueue`
	// * `autoReceptionist`
	// * `commonArea`
	// * `zoomRoom`
	// * `ciscoRoom`
	// * `sharedLineGroup`
	// * `groupCallPickup`
	// * `externalContact`.
	CallerExtType OptString `json:"caller_ext_type"`
	// The callee's extension ID.
	CalleeExtID OptString `json:"callee_ext_id"`
	// The name of the callee.
	CalleeName OptString `json:"callee_name"`
	// The callee's email.
	CalleeEmail OptString `json:"callee_email"`
	// The callee's DID number in e164 format.
	CalleeDidNumber OptString `json:"callee_did_number"`
	// The extension number of the callee.
	CalleeExtNumber OptString `json:"callee_ext_number"`
	// The callee's extension type:
	// * `user`
	// * `callQueue`
	// * `autoReceptionist`
	// * `commonArea`
	// * `zoomRoom`
	// * `ciscoRoom`
	// * `sharedLineGroup`
	// * `groupCallPickup`
	// * `externalContact`.
	CalleeExtType OptString `json:"callee_ext_type"`
	// The name of the department of which the user belongs.
	Department OptString `json:"department"`
	// The name of the cost center of which the user belongs.
	CostCenter OptString `json:"cost_center"`
	// The name of the site ID of which the user belongs.
	SiteID OptString `json:"site_id"`
	// The primary group of which the user belongs.
	GroupID OptString `json:"group_id"`
	// The name of the site name of which the user belongs.
	SiteName OptString `json:"site_name"`
	// The call start time in GMT `date-time` format.
	StartTime OptString `json:"start_time"`
	// The call answer time in GMT `date-time` format.
	AnswerTime OptString `json:"answer_time"`
	// The call end time in GMT `date-time` format.
	EndTime OptString `json:"end_time"`
	// The call segment path.
	CallPath []GetCallPathOKCallPathItem `json:"call_path"`
}

// GetID returns the value of ID.
func (s *GetCallPathOK) GetID() OptString {
	return s.ID
}

// GetCallID returns the value of CallID.
func (s *GetCallPathOK) GetCallID() OptString {
	return s.CallID
}

// GetConnectType returns the value of ConnectType.
func (s *GetCallPathOK) GetConnectType() OptString {
	return s.ConnectType
}

// GetCallType returns the value of CallType.
func (s *GetCallPathOK) GetCallType() OptString {
	return s.CallType
}

// GetDirection returns the value of Direction.
func (s *GetCallPathOK) GetDirection() OptString {
	return s.Direction
}

// GetInternational returns the value of International.
func (s *GetCallPathOK) GetInternational() OptBool {
	return s.International
}

// GetCallerExtID returns the value of CallerExtID.
func (s *GetCallPathOK) GetCallerExtID() OptString {
	return s.CallerExtID
}

// GetCallerName returns the value of CallerName.
func (s *GetCallPathOK) GetCallerName() OptString {
	return s.CallerName
}

// GetCallerDidNumber returns the value of CallerDidNumber.
func (s *GetCallPathOK) GetCallerDidNumber() OptString {
	return s.CallerDidNumber
}

// GetCallerExtNumber returns the value of CallerExtNumber.
func (s *GetCallPathOK) GetCallerExtNumber() OptString {
	return s.CallerExtNumber
}

// GetCallerEmail returns the value of CallerEmail.
func (s *GetCallPathOK) GetCallerEmail() OptString {
	return s.CallerEmail
}

// GetCallerExtType returns the value of CallerExtType.
func (s *GetCallPathOK) GetCallerExtType() OptString {
	return s.CallerExtType
}

// GetCalleeExtID returns the value of CalleeExtID.
func (s *GetCallPathOK) GetCalleeExtID() OptString {
	return s.CalleeExtID
}

// GetCalleeName returns the value of CalleeName.
func (s *GetCallPathOK) GetCalleeName() OptString {
	return s.CalleeName
}

// GetCalleeEmail returns the value of CalleeEmail.
func (s *GetCallPathOK) GetCalleeEmail() OptString {
	return s.CalleeEmail
}

// GetCalleeDidNumber returns the value of CalleeDidNumber.
func (s *GetCallPathOK) GetCalleeDidNumber() OptString {
	return s.CalleeDidNumber
}

// GetCalleeExtNumber returns the value of CalleeExtNumber.
func (s *GetCallPathOK) GetCalleeExtNumber() OptString {
	return s.CalleeExtNumber
}

// GetCalleeExtType returns the value of CalleeExtType.
func (s *GetCallPathOK) GetCalleeExtType() OptString {
	return s.CalleeExtType
}

// GetDepartment returns the value of Department.
func (s *GetCallPathOK) GetDepartment() OptString {
	return s.Department
}

// GetCostCenter returns the value of CostCenter.
func (s *GetCallPathOK) GetCostCenter() OptString {
	return s.CostCenter
}

// GetSiteID returns the value of SiteID.
func (s *GetCallPathOK) GetSiteID() OptString {
	return s.SiteID
}

// GetGroupID returns the value of GroupID.
func (s *GetCallPathOK) GetGroupID() OptString {
	return s.GroupID
}

// GetSiteName returns the value of SiteName.
func (s *GetCallPathOK) GetSiteName() OptString {
	return s.SiteName
}

// GetStartTime returns the value of StartTime.
func (s *GetCallPathOK) GetStartTime() OptString {
	return s.StartTime
}

// GetAnswerTime returns the value of AnswerTime.
func (s *GetCallPathOK) GetAnswerTime() OptString {
	return s.AnswerTime
}

// GetEndTime returns the value of EndTime.
func (s *GetCallPathOK) GetEndTime() OptString {
	return s.EndTime
}

// GetCallPath returns the value of CallPath.
func (s *GetCallPathOK) GetCallPath() []GetCallPathOKCallPathItem {
	return s.CallPath
}

// SetID sets the value of ID.
func (s *GetCallPathOK) SetID(val OptString) {
	s.ID = val
}

// SetCallID sets the value of CallID.
func (s *GetCallPathOK) SetCallID(val OptString) {
	s.CallID = val
}

// SetConnectType sets the value of ConnectType.
func (s *GetCallPathOK) SetConnectType(val OptString) {
	s.ConnectType = val
}

// SetCallType sets the value of CallType.
func (s *GetCallPathOK) SetCallType(val OptString) {
	s.CallType = val
}

// SetDirection sets the value of Direction.
func (s *GetCallPathOK) SetDirection(val OptString) {
	s.Direction = val
}

// SetInternational sets the value of International.
func (s *GetCallPathOK) SetInternational(val OptBool) {
	s.International = val
}

// SetCallerExtID sets the value of CallerExtID.
func (s *GetCallPathOK) SetCallerExtID(val OptString) {
	s.CallerExtID = val
}

// SetCallerName sets the value of CallerName.
func (s *GetCallPathOK) SetCallerName(val OptString) {
	s.CallerName = val
}

// SetCallerDidNumber sets the value of CallerDidNumber.
func (s *GetCallPathOK) SetCallerDidNumber(val OptString) {
	s.CallerDidNumber = val
}

// SetCallerExtNumber sets the value of CallerExtNumber.
func (s *GetCallPathOK) SetCallerExtNumber(val OptString) {
	s.CallerExtNumber = val
}

// SetCallerEmail sets the value of CallerEmail.
func (s *GetCallPathOK) SetCallerEmail(val OptString) {
	s.CallerEmail = val
}

// SetCallerExtType sets the value of CallerExtType.
func (s *GetCallPathOK) SetCallerExtType(val OptString) {
	s.CallerExtType = val
}

// SetCalleeExtID sets the value of CalleeExtID.
func (s *GetCallPathOK) SetCalleeExtID(val OptString) {
	s.CalleeExtID = val
}

// SetCalleeName sets the value of CalleeName.
func (s *GetCallPathOK) SetCalleeName(val OptString) {
	s.CalleeName = val
}

// SetCalleeEmail sets the value of CalleeEmail.
func (s *GetCallPathOK) SetCalleeEmail(val OptString) {
	s.CalleeEmail = val
}

// SetCalleeDidNumber sets the value of CalleeDidNumber.
func (s *GetCallPathOK) SetCalleeDidNumber(val OptString) {
	s.CalleeDidNumber = val
}

// SetCalleeExtNumber sets the value of CalleeExtNumber.
func (s *GetCallPathOK) SetCalleeExtNumber(val OptString) {
	s.CalleeExtNumber = val
}

// SetCalleeExtType sets the value of CalleeExtType.
func (s *GetCallPathOK) SetCalleeExtType(val OptString) {
	s.CalleeExtType = val
}

// SetDepartment sets the value of Department.
func (s *GetCallPathOK) SetDepartment(val OptString) {
	s.Department = val
}

// SetCostCenter sets the value of CostCenter.
func (s *GetCallPathOK) SetCostCenter(val OptString) {
	s.CostCenter = val
}

// SetSiteID sets the value of SiteID.
func (s *GetCallPathOK) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetGroupID sets the value of GroupID.
func (s *GetCallPathOK) SetGroupID(val OptString) {
	s.GroupID = val
}

// SetSiteName sets the value of SiteName.
func (s *GetCallPathOK) SetSiteName(val OptString) {
	s.SiteName = val
}

// SetStartTime sets the value of StartTime.
func (s *GetCallPathOK) SetStartTime(val OptString) {
	s.StartTime = val
}

// SetAnswerTime sets the value of AnswerTime.
func (s *GetCallPathOK) SetAnswerTime(val OptString) {
	s.AnswerTime = val
}

// SetEndTime sets the value of EndTime.
func (s *GetCallPathOK) SetEndTime(val OptString) {
	s.EndTime = val
}

// SetCallPath sets the value of CallPath.
func (s *GetCallPathOK) SetCallPath(val []GetCallPathOKCallPathItem) {
	s.CallPath = val
}

type GetCallPathOKCallPathItem struct {
	// The ID of the call log.
	ID OptString `json:"id"`
	// The ID of the phone call.
	CallID OptString `json:"call_id"`
	// The connect type of call:
	// * `internal`
	// * `external`.
	ConnectType OptString `json:"connect_type"`
	// The type of call.
	// * `general`
	// * `emergency`.
	CallType OptString `json:"call_type"`
	// The direction of the call.
	// * `inbound`
	// * `outbound`.
	Direction OptString `json:"direction"`
	// The caller's extension ID.
	CallerExtID OptString `json:"caller_ext_id"`
	// The name of the caller.
	CallerName OptString `json:"caller_name"`
	// The caller's email.
	CallerEmail OptString `json:"caller_email"`
	// The caller's DID number in e164 format.
	CallerDidNumber OptString `json:"caller_did_number"`
	// The extension number of the caller.
	CallerExtNumber OptString `json:"caller_ext_number"`
	// The caller's extension type:
	// * `user`
	// * `call_queue`
	// * `auto_receptionist`
	// * `common_area`
	// * `zoom_room`
	// * `cisco_room`
	// * `shared_line_group`
	// * `group_call_pickup`
	// * `external_contact`.
	CallerExtType OptString `json:"caller_ext_type"`
	// The caller's number type.
	CallerNumberType OptString `json:"caller_number_type"`
	// The caller's device type.
	CallerDeviceType OptString `json:"caller_device_type"`
	// The caller's country ISO code.
	CallerCountryIsoCode OptString `json:"caller_country_iso_code"`
	// The caller's country code.
	CallerCountryCode OptString `json:"caller_country_code"`
	// The callee's extension ID.
	CalleeExtID OptString `json:"callee_ext_id"`
	// The name of the callee.
	CalleeName OptString `json:"callee_name"`
	// The callee's DID number in e164 format.
	CalleeDidNumber OptString `json:"callee_did_number"`
	// The extension number of the callee.
	CalleeExtNumber OptString `json:"callee_ext_number"`
	// The callee's email.
	CalleeEmail OptString `json:"callee_email"`
	// The callee's extension type:
	// * `user`
	// * `call_queue`
	// * `auto_receptionist`
	// * `common_area`
	// * `zoom_room`
	// * `cisco_room`
	// * `shared_line_group`
	// * `group_call_pickup`
	// * `external_contact`.
	CalleeExtType OptString `json:"callee_ext_type"`
	// The callee's number type.
	CalleeNumberType OptString `json:"callee_number_type"`
	// The callee's device type.
	CalleeDeviceType OptString `json:"callee_device_type"`
	// The callee's country ISO code.
	CalleeCountryIsoCode OptString `json:"callee_country_iso_code"`
	// The callee's country code.
	CalleeCountryCode OptString `json:"callee_country_code"`
	// The client code for the call.
	ClientCode OptString `json:"client_code"`
	// The name of the department of which the user belongs.
	Department OptString `json:"department"`
	// The name of the cost center of which the user belongs.
	CostCenter OptString `json:"cost_center"`
	// The name of the site ID of which the user belongs.
	SiteID OptString `json:"site_id"`
	// The primary group of which the user belongs.
	GroupID OptString `json:"group_id"`
	// The name of the site name of which the user belongs.
	SiteName OptString `json:"site_name"`
	// The call start time in GMT `date-time` format.
	StartTime OptString `json:"start_time"`
	// The call answer time in GMT `date-time` format.
	AnswerTime OptString `json:"answer_time"`
	// The call end time in GMT `date-time` format.
	EndTime OptString `json:"end_time"`
	// An event within a call log.
	Event OptString `json:"event"`
	// The detail result of an event for a call log.
	Result OptString `json:"result"`
	// The reason of result of an event for a call log.
	ResultReason OptString `json:"result_reason"`
	// The private IP of which the user belongs.
	DevicePrivateIP OptString `json:"device_private_ip"`
	// The public IP of which the user belongs.
	DevicePublicIP OptString `json:"device_public_ip"`
	// The operator extension number.
	OperatorExtNumber OptString `json:"operator_ext_number"`
	// The operator extension ID.
	OperatorExtID OptString `json:"operator_ext_id"`
	// The operator extension type.
	OperatorExtType OptString `json:"operator_ext_type"`
	// The operator's name.
	OperatorName OptString `json:"operator_name"`
	// The press key value for event press or input.
	PressKey OptString `json:"press_key"`
	// A sequential number to indicate the orders of events that starts from 0.
	Segment OptInt `json:"segment"`
	// Within one segment, a sequential number to indicate the orders of the events that starts from 0.
	Node   OptInt `json:"node"`
	IsNode OptInt `json:"is_node"`
	// The unique identifier of the call recording.
	RecordingID OptString `json:"recording_id"`
	// The type of call recording:
	// * `ad-hoc`,
	// * `automatic`.
	RecordingType OptString `json:"recording_type"`
	// The call hold time in seconds.
	HoldTime OptInt `json:"hold_time"`
	// The call wait time in seconds.
	WaitingTime OptInt `json:"waiting_time"`
	// The ID of the call voicemail.
	VoicemailID OptString `json:"voicemail_id"`
}

// GetID returns the value of ID.
func (s *GetCallPathOKCallPathItem) GetID() OptString {
	return s.ID
}

// GetCallID returns the value of CallID.
func (s *GetCallPathOKCallPathItem) GetCallID() OptString {
	return s.CallID
}

// GetConnectType returns the value of ConnectType.
func (s *GetCallPathOKCallPathItem) GetConnectType() OptString {
	return s.ConnectType
}

// GetCallType returns the value of CallType.
func (s *GetCallPathOKCallPathItem) GetCallType() OptString {
	return s.CallType
}

// GetDirection returns the value of Direction.
func (s *GetCallPathOKCallPathItem) GetDirection() OptString {
	return s.Direction
}

// GetCallerExtID returns the value of CallerExtID.
func (s *GetCallPathOKCallPathItem) GetCallerExtID() OptString {
	return s.CallerExtID
}

// GetCallerName returns the value of CallerName.
func (s *GetCallPathOKCallPathItem) GetCallerName() OptString {
	return s.CallerName
}

// GetCallerEmail returns the value of CallerEmail.
func (s *GetCallPathOKCallPathItem) GetCallerEmail() OptString {
	return s.CallerEmail
}

// GetCallerDidNumber returns the value of CallerDidNumber.
func (s *GetCallPathOKCallPathItem) GetCallerDidNumber() OptString {
	return s.CallerDidNumber
}

// GetCallerExtNumber returns the value of CallerExtNumber.
func (s *GetCallPathOKCallPathItem) GetCallerExtNumber() OptString {
	return s.CallerExtNumber
}

// GetCallerExtType returns the value of CallerExtType.
func (s *GetCallPathOKCallPathItem) GetCallerExtType() OptString {
	return s.CallerExtType
}

// GetCallerNumberType returns the value of CallerNumberType.
func (s *GetCallPathOKCallPathItem) GetCallerNumberType() OptString {
	return s.CallerNumberType
}

// GetCallerDeviceType returns the value of CallerDeviceType.
func (s *GetCallPathOKCallPathItem) GetCallerDeviceType() OptString {
	return s.CallerDeviceType
}

// GetCallerCountryIsoCode returns the value of CallerCountryIsoCode.
func (s *GetCallPathOKCallPathItem) GetCallerCountryIsoCode() OptString {
	return s.CallerCountryIsoCode
}

// GetCallerCountryCode returns the value of CallerCountryCode.
func (s *GetCallPathOKCallPathItem) GetCallerCountryCode() OptString {
	return s.CallerCountryCode
}

// GetCalleeExtID returns the value of CalleeExtID.
func (s *GetCallPathOKCallPathItem) GetCalleeExtID() OptString {
	return s.CalleeExtID
}

// GetCalleeName returns the value of CalleeName.
func (s *GetCallPathOKCallPathItem) GetCalleeName() OptString {
	return s.CalleeName
}

// GetCalleeDidNumber returns the value of CalleeDidNumber.
func (s *GetCallPathOKCallPathItem) GetCalleeDidNumber() OptString {
	return s.CalleeDidNumber
}

// GetCalleeExtNumber returns the value of CalleeExtNumber.
func (s *GetCallPathOKCallPathItem) GetCalleeExtNumber() OptString {
	return s.CalleeExtNumber
}

// GetCalleeEmail returns the value of CalleeEmail.
func (s *GetCallPathOKCallPathItem) GetCalleeEmail() OptString {
	return s.CalleeEmail
}

// GetCalleeExtType returns the value of CalleeExtType.
func (s *GetCallPathOKCallPathItem) GetCalleeExtType() OptString {
	return s.CalleeExtType
}

// GetCalleeNumberType returns the value of CalleeNumberType.
func (s *GetCallPathOKCallPathItem) GetCalleeNumberType() OptString {
	return s.CalleeNumberType
}

// GetCalleeDeviceType returns the value of CalleeDeviceType.
func (s *GetCallPathOKCallPathItem) GetCalleeDeviceType() OptString {
	return s.CalleeDeviceType
}

// GetCalleeCountryIsoCode returns the value of CalleeCountryIsoCode.
func (s *GetCallPathOKCallPathItem) GetCalleeCountryIsoCode() OptString {
	return s.CalleeCountryIsoCode
}

// GetCalleeCountryCode returns the value of CalleeCountryCode.
func (s *GetCallPathOKCallPathItem) GetCalleeCountryCode() OptString {
	return s.CalleeCountryCode
}

// GetClientCode returns the value of ClientCode.
func (s *GetCallPathOKCallPathItem) GetClientCode() OptString {
	return s.ClientCode
}

// GetDepartment returns the value of Department.
func (s *GetCallPathOKCallPathItem) GetDepartment() OptString {
	return s.Department
}

// GetCostCenter returns the value of CostCenter.
func (s *GetCallPathOKCallPathItem) GetCostCenter() OptString {
	return s.CostCenter
}

// GetSiteID returns the value of SiteID.
func (s *GetCallPathOKCallPathItem) GetSiteID() OptString {
	return s.SiteID
}

// GetGroupID returns the value of GroupID.
func (s *GetCallPathOKCallPathItem) GetGroupID() OptString {
	return s.GroupID
}

// GetSiteName returns the value of SiteName.
func (s *GetCallPathOKCallPathItem) GetSiteName() OptString {
	return s.SiteName
}

// GetStartTime returns the value of StartTime.
func (s *GetCallPathOKCallPathItem) GetStartTime() OptString {
	return s.StartTime
}

// GetAnswerTime returns the value of AnswerTime.
func (s *GetCallPathOKCallPathItem) GetAnswerTime() OptString {
	return s.AnswerTime
}

// GetEndTime returns the value of EndTime.
func (s *GetCallPathOKCallPathItem) GetEndTime() OptString {
	return s.EndTime
}

// GetEvent returns the value of Event.
func (s *GetCallPathOKCallPathItem) GetEvent() OptString {
	return s.Event
}

// GetResult returns the value of Result.
func (s *GetCallPathOKCallPathItem) GetResult() OptString {
	return s.Result
}

// GetResultReason returns the value of ResultReason.
func (s *GetCallPathOKCallPathItem) GetResultReason() OptString {
	return s.ResultReason
}

// GetDevicePrivateIP returns the value of DevicePrivateIP.
func (s *GetCallPathOKCallPathItem) GetDevicePrivateIP() OptString {
	return s.DevicePrivateIP
}

// GetDevicePublicIP returns the value of DevicePublicIP.
func (s *GetCallPathOKCallPathItem) GetDevicePublicIP() OptString {
	return s.DevicePublicIP
}

// GetOperatorExtNumber returns the value of OperatorExtNumber.
func (s *GetCallPathOKCallPathItem) GetOperatorExtNumber() OptString {
	return s.OperatorExtNumber
}

// GetOperatorExtID returns the value of OperatorExtID.
func (s *GetCallPathOKCallPathItem) GetOperatorExtID() OptString {
	return s.OperatorExtID
}

// GetOperatorExtType returns the value of OperatorExtType.
func (s *GetCallPathOKCallPathItem) GetOperatorExtType() OptString {
	return s.OperatorExtType
}

// GetOperatorName returns the value of OperatorName.
func (s *GetCallPathOKCallPathItem) GetOperatorName() OptString {
	return s.OperatorName
}

// GetPressKey returns the value of PressKey.
func (s *GetCallPathOKCallPathItem) GetPressKey() OptString {
	return s.PressKey
}

// GetSegment returns the value of Segment.
func (s *GetCallPathOKCallPathItem) GetSegment() OptInt {
	return s.Segment
}

// GetNode returns the value of Node.
func (s *GetCallPathOKCallPathItem) GetNode() OptInt {
	return s.Node
}

// GetIsNode returns the value of IsNode.
func (s *GetCallPathOKCallPathItem) GetIsNode() OptInt {
	return s.IsNode
}

// GetRecordingID returns the value of RecordingID.
func (s *GetCallPathOKCallPathItem) GetRecordingID() OptString {
	return s.RecordingID
}

// GetRecordingType returns the value of RecordingType.
func (s *GetCallPathOKCallPathItem) GetRecordingType() OptString {
	return s.RecordingType
}

// GetHoldTime returns the value of HoldTime.
func (s *GetCallPathOKCallPathItem) GetHoldTime() OptInt {
	return s.HoldTime
}

// GetWaitingTime returns the value of WaitingTime.
func (s *GetCallPathOKCallPathItem) GetWaitingTime() OptInt {
	return s.WaitingTime
}

// GetVoicemailID returns the value of VoicemailID.
func (s *GetCallPathOKCallPathItem) GetVoicemailID() OptString {
	return s.VoicemailID
}

// SetID sets the value of ID.
func (s *GetCallPathOKCallPathItem) SetID(val OptString) {
	s.ID = val
}

// SetCallID sets the value of CallID.
func (s *GetCallPathOKCallPathItem) SetCallID(val OptString) {
	s.CallID = val
}

// SetConnectType sets the value of ConnectType.
func (s *GetCallPathOKCallPathItem) SetConnectType(val OptString) {
	s.ConnectType = val
}

// SetCallType sets the value of CallType.
func (s *GetCallPathOKCallPathItem) SetCallType(val OptString) {
	s.CallType = val
}

// SetDirection sets the value of Direction.
func (s *GetCallPathOKCallPathItem) SetDirection(val OptString) {
	s.Direction = val
}

// SetCallerExtID sets the value of CallerExtID.
func (s *GetCallPathOKCallPathItem) SetCallerExtID(val OptString) {
	s.CallerExtID = val
}

// SetCallerName sets the value of CallerName.
func (s *GetCallPathOKCallPathItem) SetCallerName(val OptString) {
	s.CallerName = val
}

// SetCallerEmail sets the value of CallerEmail.
func (s *GetCallPathOKCallPathItem) SetCallerEmail(val OptString) {
	s.CallerEmail = val
}

// SetCallerDidNumber sets the value of CallerDidNumber.
func (s *GetCallPathOKCallPathItem) SetCallerDidNumber(val OptString) {
	s.CallerDidNumber = val
}

// SetCallerExtNumber sets the value of CallerExtNumber.
func (s *GetCallPathOKCallPathItem) SetCallerExtNumber(val OptString) {
	s.CallerExtNumber = val
}

// SetCallerExtType sets the value of CallerExtType.
func (s *GetCallPathOKCallPathItem) SetCallerExtType(val OptString) {
	s.CallerExtType = val
}

// SetCallerNumberType sets the value of CallerNumberType.
func (s *GetCallPathOKCallPathItem) SetCallerNumberType(val OptString) {
	s.CallerNumberType = val
}

// SetCallerDeviceType sets the value of CallerDeviceType.
func (s *GetCallPathOKCallPathItem) SetCallerDeviceType(val OptString) {
	s.CallerDeviceType = val
}

// SetCallerCountryIsoCode sets the value of CallerCountryIsoCode.
func (s *GetCallPathOKCallPathItem) SetCallerCountryIsoCode(val OptString) {
	s.CallerCountryIsoCode = val
}

// SetCallerCountryCode sets the value of CallerCountryCode.
func (s *GetCallPathOKCallPathItem) SetCallerCountryCode(val OptString) {
	s.CallerCountryCode = val
}

// SetCalleeExtID sets the value of CalleeExtID.
func (s *GetCallPathOKCallPathItem) SetCalleeExtID(val OptString) {
	s.CalleeExtID = val
}

// SetCalleeName sets the value of CalleeName.
func (s *GetCallPathOKCallPathItem) SetCalleeName(val OptString) {
	s.CalleeName = val
}

// SetCalleeDidNumber sets the value of CalleeDidNumber.
func (s *GetCallPathOKCallPathItem) SetCalleeDidNumber(val OptString) {
	s.CalleeDidNumber = val
}

// SetCalleeExtNumber sets the value of CalleeExtNumber.
func (s *GetCallPathOKCallPathItem) SetCalleeExtNumber(val OptString) {
	s.CalleeExtNumber = val
}

// SetCalleeEmail sets the value of CalleeEmail.
func (s *GetCallPathOKCallPathItem) SetCalleeEmail(val OptString) {
	s.CalleeEmail = val
}

// SetCalleeExtType sets the value of CalleeExtType.
func (s *GetCallPathOKCallPathItem) SetCalleeExtType(val OptString) {
	s.CalleeExtType = val
}

// SetCalleeNumberType sets the value of CalleeNumberType.
func (s *GetCallPathOKCallPathItem) SetCalleeNumberType(val OptString) {
	s.CalleeNumberType = val
}

// SetCalleeDeviceType sets the value of CalleeDeviceType.
func (s *GetCallPathOKCallPathItem) SetCalleeDeviceType(val OptString) {
	s.CalleeDeviceType = val
}

// SetCalleeCountryIsoCode sets the value of CalleeCountryIsoCode.
func (s *GetCallPathOKCallPathItem) SetCalleeCountryIsoCode(val OptString) {
	s.CalleeCountryIsoCode = val
}

// SetCalleeCountryCode sets the value of CalleeCountryCode.
func (s *GetCallPathOKCallPathItem) SetCalleeCountryCode(val OptString) {
	s.CalleeCountryCode = val
}

// SetClientCode sets the value of ClientCode.
func (s *GetCallPathOKCallPathItem) SetClientCode(val OptString) {
	s.ClientCode = val
}

// SetDepartment sets the value of Department.
func (s *GetCallPathOKCallPathItem) SetDepartment(val OptString) {
	s.Department = val
}

// SetCostCenter sets the value of CostCenter.
func (s *GetCallPathOKCallPathItem) SetCostCenter(val OptString) {
	s.CostCenter = val
}

// SetSiteID sets the value of SiteID.
func (s *GetCallPathOKCallPathItem) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetGroupID sets the value of GroupID.
func (s *GetCallPathOKCallPathItem) SetGroupID(val OptString) {
	s.GroupID = val
}

// SetSiteName sets the value of SiteName.
func (s *GetCallPathOKCallPathItem) SetSiteName(val OptString) {
	s.SiteName = val
}

// SetStartTime sets the value of StartTime.
func (s *GetCallPathOKCallPathItem) SetStartTime(val OptString) {
	s.StartTime = val
}

// SetAnswerTime sets the value of AnswerTime.
func (s *GetCallPathOKCallPathItem) SetAnswerTime(val OptString) {
	s.AnswerTime = val
}

// SetEndTime sets the value of EndTime.
func (s *GetCallPathOKCallPathItem) SetEndTime(val OptString) {
	s.EndTime = val
}

// SetEvent sets the value of Event.
func (s *GetCallPathOKCallPathItem) SetEvent(val OptString) {
	s.Event = val
}

// SetResult sets the value of Result.
func (s *GetCallPathOKCallPathItem) SetResult(val OptString) {
	s.Result = val
}

// SetResultReason sets the value of ResultReason.
func (s *GetCallPathOKCallPathItem) SetResultReason(val OptString) {
	s.ResultReason = val
}

// SetDevicePrivateIP sets the value of DevicePrivateIP.
func (s *GetCallPathOKCallPathItem) SetDevicePrivateIP(val OptString) {
	s.DevicePrivateIP = val
}

// SetDevicePublicIP sets the value of DevicePublicIP.
func (s *GetCallPathOKCallPathItem) SetDevicePublicIP(val OptString) {
	s.DevicePublicIP = val
}

// SetOperatorExtNumber sets the value of OperatorExtNumber.
func (s *GetCallPathOKCallPathItem) SetOperatorExtNumber(val OptString) {
	s.OperatorExtNumber = val
}

// SetOperatorExtID sets the value of OperatorExtID.
func (s *GetCallPathOKCallPathItem) SetOperatorExtID(val OptString) {
	s.OperatorExtID = val
}

// SetOperatorExtType sets the value of OperatorExtType.
func (s *GetCallPathOKCallPathItem) SetOperatorExtType(val OptString) {
	s.OperatorExtType = val
}

// SetOperatorName sets the value of OperatorName.
func (s *GetCallPathOKCallPathItem) SetOperatorName(val OptString) {
	s.OperatorName = val
}

// SetPressKey sets the value of PressKey.
func (s *GetCallPathOKCallPathItem) SetPressKey(val OptString) {
	s.PressKey = val
}

// SetSegment sets the value of Segment.
func (s *GetCallPathOKCallPathItem) SetSegment(val OptInt) {
	s.Segment = val
}

// SetNode sets the value of Node.
func (s *GetCallPathOKCallPathItem) SetNode(val OptInt) {
	s.Node = val
}

// SetIsNode sets the value of IsNode.
func (s *GetCallPathOKCallPathItem) SetIsNode(val OptInt) {
	s.IsNode = val
}

// SetRecordingID sets the value of RecordingID.
func (s *GetCallPathOKCallPathItem) SetRecordingID(val OptString) {
	s.RecordingID = val
}

// SetRecordingType sets the value of RecordingType.
func (s *GetCallPathOKCallPathItem) SetRecordingType(val OptString) {
	s.RecordingType = val
}

// SetHoldTime sets the value of HoldTime.
func (s *GetCallPathOKCallPathItem) SetHoldTime(val OptInt) {
	s.HoldTime = val
}

// SetWaitingTime sets the value of WaitingTime.
func (s *GetCallPathOKCallPathItem) SetWaitingTime(val OptInt) {
	s.WaitingTime = val
}

// SetVoicemailID sets the value of VoicemailID.
func (s *GetCallPathOKCallPathItem) SetVoicemailID(val OptString) {
	s.VoicemailID = val
}

type GetCallQoSOK struct {
	// The unique identifier of the phone call.
	CallID    OptString                `json:"call_id"`
	CalleeQos OptGetCallQoSOKCalleeQos `json:"callee_qos"`
	// The quality of service object that represents the call quality data of the caller.
	CallerQos OptGetCallQoSOKCallerQos `json:"caller_qos"`
}

// GetCallID returns the value of CallID.
func (s *GetCallQoSOK) GetCallID() OptString {
	return s.CallID
}

// GetCalleeQos returns the value of CalleeQos.
func (s *GetCallQoSOK) GetCalleeQos() OptGetCallQoSOKCalleeQos {
	return s.CalleeQos
}

// GetCallerQos returns the value of CallerQos.
func (s *GetCallQoSOK) GetCallerQos() OptGetCallQoSOKCallerQos {
	return s.CallerQos
}

// SetCallID sets the value of CallID.
func (s *GetCallQoSOK) SetCallID(val OptString) {
	s.CallID = val
}

// SetCalleeQos sets the value of CalleeQos.
func (s *GetCallQoSOK) SetCalleeQos(val OptGetCallQoSOKCalleeQos) {
	s.CalleeQos = val
}

// SetCallerQos sets the value of CallerQos.
func (s *GetCallQoSOK) SetCallerQos(val OptGetCallQoSOKCallerQos) {
	s.CallerQos = val
}

type GetCallQoSOKCalleeQos struct {
	// This setting displays the device's private IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePrivateIP OptString `json:"device_private_ip"`
	// This setting displays the device's public IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePublicIP OptString `json:"device_public_ip"`
	// The QoS that the callee receives.
	Receiving []GetCallQoSOKCalleeQosReceivingItem `json:"receiving"`
	// The QoS that the callee sends.
	Sending []GetCallQoSOKCalleeQosSendingItem `json:"sending"`
}

// GetDevicePrivateIP returns the value of DevicePrivateIP.
func (s *GetCallQoSOKCalleeQos) GetDevicePrivateIP() OptString {
	return s.DevicePrivateIP
}

// GetDevicePublicIP returns the value of DevicePublicIP.
func (s *GetCallQoSOKCalleeQos) GetDevicePublicIP() OptString {
	return s.DevicePublicIP
}

// GetReceiving returns the value of Receiving.
func (s *GetCallQoSOKCalleeQos) GetReceiving() []GetCallQoSOKCalleeQosReceivingItem {
	return s.Receiving
}

// GetSending returns the value of Sending.
func (s *GetCallQoSOKCalleeQos) GetSending() []GetCallQoSOKCalleeQosSendingItem {
	return s.Sending
}

// SetDevicePrivateIP sets the value of DevicePrivateIP.
func (s *GetCallQoSOKCalleeQos) SetDevicePrivateIP(val OptString) {
	s.DevicePrivateIP = val
}

// SetDevicePublicIP sets the value of DevicePublicIP.
func (s *GetCallQoSOKCalleeQos) SetDevicePublicIP(val OptString) {
	s.DevicePublicIP = val
}

// SetReceiving sets the value of Receiving.
func (s *GetCallQoSOKCalleeQos) SetReceiving(val []GetCallQoSOKCalleeQosReceivingItem) {
	s.Receiving = val
}

// SetSending sets the value of Sending.
func (s *GetCallQoSOKCalleeQos) SetSending(val []GetCallQoSOKCalleeQosSendingItem) {
	s.Sending = val
}

type GetCallQoSOKCalleeQosReceivingItem struct {
	// The date and time when the QoS was received.
	DateTime OptDateTime                              `json:"date_time"`
	Qos      OptGetCallQoSOKCalleeQosReceivingItemQos `json:"qos"`
}

// GetDateTime returns the value of DateTime.
func (s *GetCallQoSOKCalleeQosReceivingItem) GetDateTime() OptDateTime {
	return s.DateTime
}

// GetQos returns the value of Qos.
func (s *GetCallQoSOKCalleeQosReceivingItem) GetQos() OptGetCallQoSOKCalleeQosReceivingItemQos {
	return s.Qos
}

// SetDateTime sets the value of DateTime.
func (s *GetCallQoSOKCalleeQosReceivingItem) SetDateTime(val OptDateTime) {
	s.DateTime = val
}

// SetQos sets the value of Qos.
func (s *GetCallQoSOKCalleeQosReceivingItem) SetQos(val OptGetCallQoSOKCalleeQosReceivingItemQos) {
	s.Qos = val
}

type GetCallQoSOKCalleeQosReceivingItemQos struct {
	// The average amount of packet loss. For example, the percentage of packets that fail to arrive at
	// their destination.
	AvgLoss OptString `json:"avg_loss"`
	// The number of bits per second, in kbps, that can be transmitted along a digital network.
	Bitrate OptString `json:"bitrate"`
	// The variation in the delay of received packets, in milliseconds.
	Jitter OptString `json:"jitter"`
	// The maximum amount of packet loss. For example, the maximum percentage of packets that fail to
	// arrive at their destination.
	MaxLoss OptString `json:"max_loss"`
	// The MOS (Mean Opinion Score).
	// MOS measures voice quality on a scale of 1 to 5. A score than or equal to 3.5 means good quality,
	// while below 3.5 means poor quality.
	Mos OptString `json:"mos"`
	// The amount of time, in milliseconds, it takes for a VoIP (Voice Over IP) packet to travel from one
	// point to another.
	NetworkDelay OptString `json:"network_delay"`
}

// GetAvgLoss returns the value of AvgLoss.
func (s *GetCallQoSOKCalleeQosReceivingItemQos) GetAvgLoss() OptString {
	return s.AvgLoss
}

// GetBitrate returns the value of Bitrate.
func (s *GetCallQoSOKCalleeQosReceivingItemQos) GetBitrate() OptString {
	return s.Bitrate
}

// GetJitter returns the value of Jitter.
func (s *GetCallQoSOKCalleeQosReceivingItemQos) GetJitter() OptString {
	return s.Jitter
}

// GetMaxLoss returns the value of MaxLoss.
func (s *GetCallQoSOKCalleeQosReceivingItemQos) GetMaxLoss() OptString {
	return s.MaxLoss
}

// GetMos returns the value of Mos.
func (s *GetCallQoSOKCalleeQosReceivingItemQos) GetMos() OptString {
	return s.Mos
}

// GetNetworkDelay returns the value of NetworkDelay.
func (s *GetCallQoSOKCalleeQosReceivingItemQos) GetNetworkDelay() OptString {
	return s.NetworkDelay
}

// SetAvgLoss sets the value of AvgLoss.
func (s *GetCallQoSOKCalleeQosReceivingItemQos) SetAvgLoss(val OptString) {
	s.AvgLoss = val
}

// SetBitrate sets the value of Bitrate.
func (s *GetCallQoSOKCalleeQosReceivingItemQos) SetBitrate(val OptString) {
	s.Bitrate = val
}

// SetJitter sets the value of Jitter.
func (s *GetCallQoSOKCalleeQosReceivingItemQos) SetJitter(val OptString) {
	s.Jitter = val
}

// SetMaxLoss sets the value of MaxLoss.
func (s *GetCallQoSOKCalleeQosReceivingItemQos) SetMaxLoss(val OptString) {
	s.MaxLoss = val
}

// SetMos sets the value of Mos.
func (s *GetCallQoSOKCalleeQosReceivingItemQos) SetMos(val OptString) {
	s.Mos = val
}

// SetNetworkDelay sets the value of NetworkDelay.
func (s *GetCallQoSOKCalleeQosReceivingItemQos) SetNetworkDelay(val OptString) {
	s.NetworkDelay = val
}

type GetCallQoSOKCalleeQosSendingItem struct {
	// The date and time when the QoS was delivered.
	DateTime OptDateTime                            `json:"date_time"`
	Qos      OptGetCallQoSOKCalleeQosSendingItemQos `json:"qos"`
}

// GetDateTime returns the value of DateTime.
func (s *GetCallQoSOKCalleeQosSendingItem) GetDateTime() OptDateTime {
	return s.DateTime
}

// GetQos returns the value of Qos.
func (s *GetCallQoSOKCalleeQosSendingItem) GetQos() OptGetCallQoSOKCalleeQosSendingItemQos {
	return s.Qos
}

// SetDateTime sets the value of DateTime.
func (s *GetCallQoSOKCalleeQosSendingItem) SetDateTime(val OptDateTime) {
	s.DateTime = val
}

// SetQos sets the value of Qos.
func (s *GetCallQoSOKCalleeQosSendingItem) SetQos(val OptGetCallQoSOKCalleeQosSendingItemQos) {
	s.Qos = val
}

type GetCallQoSOKCalleeQosSendingItemQos struct {
	// The average amount of packet loss. For example, the percentage of packets that fail to arrive at
	// their destination.
	AvgLoss OptString `json:"avg_loss"`
	// The number of bits per second, in kbps, that can be transmitted along a digital network.
	Bitrate OptString `json:"bitrate"`
	// The variation in the delay of received packets, in milliseconds.
	Jitter OptString `json:"jitter"`
	// The maximum amount of packet loss. For example, the maximum percentage of packets that fail to
	// arrive at their destination.
	MaxLoss OptString `json:"max_loss"`
	// The MOS (Mean Opinion Score).
	// MOS measures voice quality on a scale of 1 to 5. A score than or equal to 3.5 means good quality,
	// while below 3.5 means poor quality.
	Mos OptString `json:"mos"`
	// The amount of time, in milliseconds, it takes for a VoIP (Voice Over IP) packet to travel from one
	// point to another.
	NetworkDelay OptString `json:"network_delay"`
}

// GetAvgLoss returns the value of AvgLoss.
func (s *GetCallQoSOKCalleeQosSendingItemQos) GetAvgLoss() OptString {
	return s.AvgLoss
}

// GetBitrate returns the value of Bitrate.
func (s *GetCallQoSOKCalleeQosSendingItemQos) GetBitrate() OptString {
	return s.Bitrate
}

// GetJitter returns the value of Jitter.
func (s *GetCallQoSOKCalleeQosSendingItemQos) GetJitter() OptString {
	return s.Jitter
}

// GetMaxLoss returns the value of MaxLoss.
func (s *GetCallQoSOKCalleeQosSendingItemQos) GetMaxLoss() OptString {
	return s.MaxLoss
}

// GetMos returns the value of Mos.
func (s *GetCallQoSOKCalleeQosSendingItemQos) GetMos() OptString {
	return s.Mos
}

// GetNetworkDelay returns the value of NetworkDelay.
func (s *GetCallQoSOKCalleeQosSendingItemQos) GetNetworkDelay() OptString {
	return s.NetworkDelay
}

// SetAvgLoss sets the value of AvgLoss.
func (s *GetCallQoSOKCalleeQosSendingItemQos) SetAvgLoss(val OptString) {
	s.AvgLoss = val
}

// SetBitrate sets the value of Bitrate.
func (s *GetCallQoSOKCalleeQosSendingItemQos) SetBitrate(val OptString) {
	s.Bitrate = val
}

// SetJitter sets the value of Jitter.
func (s *GetCallQoSOKCalleeQosSendingItemQos) SetJitter(val OptString) {
	s.Jitter = val
}

// SetMaxLoss sets the value of MaxLoss.
func (s *GetCallQoSOKCalleeQosSendingItemQos) SetMaxLoss(val OptString) {
	s.MaxLoss = val
}

// SetMos sets the value of Mos.
func (s *GetCallQoSOKCalleeQosSendingItemQos) SetMos(val OptString) {
	s.Mos = val
}

// SetNetworkDelay sets the value of NetworkDelay.
func (s *GetCallQoSOKCalleeQosSendingItemQos) SetNetworkDelay(val OptString) {
	s.NetworkDelay = val
}

// The quality of service object that represents the call quality data of the caller.
type GetCallQoSOKCallerQos struct {
	// This setting displays the device's private IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePrivateIP OptString `json:"device_private_ip"`
	// This setting displays the device's public IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePublicIP OptString `json:"device_public_ip"`
	// The QoS (quality of service) that the caller receives .
	Receiving []GetCallQoSOKCallerQosReceivingItem `json:"receiving"`
	// The QoS that the caller sent.
	Sending []GetCallQoSOKCallerQosSendingItem `json:"sending"`
}

// GetDevicePrivateIP returns the value of DevicePrivateIP.
func (s *GetCallQoSOKCallerQos) GetDevicePrivateIP() OptString {
	return s.DevicePrivateIP
}

// GetDevicePublicIP returns the value of DevicePublicIP.
func (s *GetCallQoSOKCallerQos) GetDevicePublicIP() OptString {
	return s.DevicePublicIP
}

// GetReceiving returns the value of Receiving.
func (s *GetCallQoSOKCallerQos) GetReceiving() []GetCallQoSOKCallerQosReceivingItem {
	return s.Receiving
}

// GetSending returns the value of Sending.
func (s *GetCallQoSOKCallerQos) GetSending() []GetCallQoSOKCallerQosSendingItem {
	return s.Sending
}

// SetDevicePrivateIP sets the value of DevicePrivateIP.
func (s *GetCallQoSOKCallerQos) SetDevicePrivateIP(val OptString) {
	s.DevicePrivateIP = val
}

// SetDevicePublicIP sets the value of DevicePublicIP.
func (s *GetCallQoSOKCallerQos) SetDevicePublicIP(val OptString) {
	s.DevicePublicIP = val
}

// SetReceiving sets the value of Receiving.
func (s *GetCallQoSOKCallerQos) SetReceiving(val []GetCallQoSOKCallerQosReceivingItem) {
	s.Receiving = val
}

// SetSending sets the value of Sending.
func (s *GetCallQoSOKCallerQos) SetSending(val []GetCallQoSOKCallerQosSendingItem) {
	s.Sending = val
}

type GetCallQoSOKCallerQosReceivingItem struct {
	// The date and time when the QoS was received.
	DateTime OptDateTime                              `json:"date_time"`
	Qos      OptGetCallQoSOKCallerQosReceivingItemQos `json:"qos"`
}

// GetDateTime returns the value of DateTime.
func (s *GetCallQoSOKCallerQosReceivingItem) GetDateTime() OptDateTime {
	return s.DateTime
}

// GetQos returns the value of Qos.
func (s *GetCallQoSOKCallerQosReceivingItem) GetQos() OptGetCallQoSOKCallerQosReceivingItemQos {
	return s.Qos
}

// SetDateTime sets the value of DateTime.
func (s *GetCallQoSOKCallerQosReceivingItem) SetDateTime(val OptDateTime) {
	s.DateTime = val
}

// SetQos sets the value of Qos.
func (s *GetCallQoSOKCallerQosReceivingItem) SetQos(val OptGetCallQoSOKCallerQosReceivingItemQos) {
	s.Qos = val
}

type GetCallQoSOKCallerQosReceivingItemQos struct {
	// The average amount of packet loss. For example, the percentage of packets that fail to arrive at
	// their destination.
	AvgLoss OptString `json:"avg_loss"`
	// The number of bits per second, in kbps, that can be transmitted along a digital network.
	Bitrate OptString `json:"bitrate"`
	// The variation in the delay of received packets in milliseconds.
	Jitter OptString `json:"jitter"`
	// The maximum amount of packet loss. For example, the maximum percentage of packets that fail to
	// arrive at their destination.
	MaxLoss OptString `json:"max_loss"`
	// The MOS (Mean Opinion Score).
	// MOS measures voice quality on a scale of 1 to 5. A score than or equal to 3.5 means good quality,
	// while below 3.5 means poor quality.
	Mos OptString `json:"mos"`
	// The amount of time, in milliseconds, it takes for a VoIP (Voice Over IP) packet to travel from one
	// point to another.
	NetworkDelay OptString `json:"network_delay"`
}

// GetAvgLoss returns the value of AvgLoss.
func (s *GetCallQoSOKCallerQosReceivingItemQos) GetAvgLoss() OptString {
	return s.AvgLoss
}

// GetBitrate returns the value of Bitrate.
func (s *GetCallQoSOKCallerQosReceivingItemQos) GetBitrate() OptString {
	return s.Bitrate
}

// GetJitter returns the value of Jitter.
func (s *GetCallQoSOKCallerQosReceivingItemQos) GetJitter() OptString {
	return s.Jitter
}

// GetMaxLoss returns the value of MaxLoss.
func (s *GetCallQoSOKCallerQosReceivingItemQos) GetMaxLoss() OptString {
	return s.MaxLoss
}

// GetMos returns the value of Mos.
func (s *GetCallQoSOKCallerQosReceivingItemQos) GetMos() OptString {
	return s.Mos
}

// GetNetworkDelay returns the value of NetworkDelay.
func (s *GetCallQoSOKCallerQosReceivingItemQos) GetNetworkDelay() OptString {
	return s.NetworkDelay
}

// SetAvgLoss sets the value of AvgLoss.
func (s *GetCallQoSOKCallerQosReceivingItemQos) SetAvgLoss(val OptString) {
	s.AvgLoss = val
}

// SetBitrate sets the value of Bitrate.
func (s *GetCallQoSOKCallerQosReceivingItemQos) SetBitrate(val OptString) {
	s.Bitrate = val
}

// SetJitter sets the value of Jitter.
func (s *GetCallQoSOKCallerQosReceivingItemQos) SetJitter(val OptString) {
	s.Jitter = val
}

// SetMaxLoss sets the value of MaxLoss.
func (s *GetCallQoSOKCallerQosReceivingItemQos) SetMaxLoss(val OptString) {
	s.MaxLoss = val
}

// SetMos sets the value of Mos.
func (s *GetCallQoSOKCallerQosReceivingItemQos) SetMos(val OptString) {
	s.Mos = val
}

// SetNetworkDelay sets the value of NetworkDelay.
func (s *GetCallQoSOKCallerQosReceivingItemQos) SetNetworkDelay(val OptString) {
	s.NetworkDelay = val
}

type GetCallQoSOKCallerQosSendingItem struct {
	// The date and time when the QoS was delivered.
	DateTime OptDateTime                            `json:"date_time"`
	Qos      OptGetCallQoSOKCallerQosSendingItemQos `json:"qos"`
}

// GetDateTime returns the value of DateTime.
func (s *GetCallQoSOKCallerQosSendingItem) GetDateTime() OptDateTime {
	return s.DateTime
}

// GetQos returns the value of Qos.
func (s *GetCallQoSOKCallerQosSendingItem) GetQos() OptGetCallQoSOKCallerQosSendingItemQos {
	return s.Qos
}

// SetDateTime sets the value of DateTime.
func (s *GetCallQoSOKCallerQosSendingItem) SetDateTime(val OptDateTime) {
	s.DateTime = val
}

// SetQos sets the value of Qos.
func (s *GetCallQoSOKCallerQosSendingItem) SetQos(val OptGetCallQoSOKCallerQosSendingItemQos) {
	s.Qos = val
}

type GetCallQoSOKCallerQosSendingItemQos struct {
	// The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their
	// destination.
	AvgLoss OptString `json:"avg_loss"`
	// The number of bits per second in kbps that can be transmitted along a digital network.
	Bitrate OptString `json:"bitrate"`
	// The variation in the delay of received packets. The value of this field is expressed in
	// milliseconds.
	Jitter OptString `json:"jitter"`
	// The maximum amount of packet loss, i.e., the maximum percentage of packets that fail to arrive at
	// their destination.
	MaxLoss OptString `json:"max_loss"`
	// The Mean Opinion Score (MOS) measures voice quality on a scale of one to five. A MOS greater than
	// or equal to 3.5 means good quality, while below 3.5 means poor quality.
	Mos OptString `json:"mos"`
	// The amount of time (in milliseconds) it takes for a VoIP packet to travel from one point to
	// another.
	NetworkDelay OptString `json:"network_delay"`
}

// GetAvgLoss returns the value of AvgLoss.
func (s *GetCallQoSOKCallerQosSendingItemQos) GetAvgLoss() OptString {
	return s.AvgLoss
}

// GetBitrate returns the value of Bitrate.
func (s *GetCallQoSOKCallerQosSendingItemQos) GetBitrate() OptString {
	return s.Bitrate
}

// GetJitter returns the value of Jitter.
func (s *GetCallQoSOKCallerQosSendingItemQos) GetJitter() OptString {
	return s.Jitter
}

// GetMaxLoss returns the value of MaxLoss.
func (s *GetCallQoSOKCallerQosSendingItemQos) GetMaxLoss() OptString {
	return s.MaxLoss
}

// GetMos returns the value of Mos.
func (s *GetCallQoSOKCallerQosSendingItemQos) GetMos() OptString {
	return s.Mos
}

// GetNetworkDelay returns the value of NetworkDelay.
func (s *GetCallQoSOKCallerQosSendingItemQos) GetNetworkDelay() OptString {
	return s.NetworkDelay
}

// SetAvgLoss sets the value of AvgLoss.
func (s *GetCallQoSOKCallerQosSendingItemQos) SetAvgLoss(val OptString) {
	s.AvgLoss = val
}

// SetBitrate sets the value of Bitrate.
func (s *GetCallQoSOKCallerQosSendingItemQos) SetBitrate(val OptString) {
	s.Bitrate = val
}

// SetJitter sets the value of Jitter.
func (s *GetCallQoSOKCallerQosSendingItemQos) SetJitter(val OptString) {
	s.Jitter = val
}

// SetMaxLoss sets the value of MaxLoss.
func (s *GetCallQoSOKCallerQosSendingItemQos) SetMaxLoss(val OptString) {
	s.MaxLoss = val
}

// SetMos sets the value of Mos.
func (s *GetCallQoSOKCallerQosSendingItemQos) SetMos(val OptString) {
	s.Mos = val
}

// SetNetworkDelay sets the value of NetworkDelay.
func (s *GetCallQoSOKCallerQosSendingItemQos) SetNetworkDelay(val OptString) {
	s.NetworkDelay = val
}

type GetCallQueueRecordingsOK struct {
	// Start date.
	From OptString `json:"from"`
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single API call.
	PageSize   OptInt                                   `json:"page_size"`
	Recordings []GetCallQueueRecordingsOKRecordingsItem `json:"recordings"`
	// End date.
	To OptString `json:"to"`
	// The total number of records returned for this API call.
	TotalRecords OptInt `json:"total_records"`
}

// GetFrom returns the value of From.
func (s *GetCallQueueRecordingsOK) GetFrom() OptString {
	return s.From
}

// GetNextPageToken returns the value of NextPageToken.
func (s *GetCallQueueRecordingsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *GetCallQueueRecordingsOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetRecordings returns the value of Recordings.
func (s *GetCallQueueRecordingsOK) GetRecordings() []GetCallQueueRecordingsOKRecordingsItem {
	return s.Recordings
}

// GetTo returns the value of To.
func (s *GetCallQueueRecordingsOK) GetTo() OptString {
	return s.To
}

// GetTotalRecords returns the value of TotalRecords.
func (s *GetCallQueueRecordingsOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetFrom sets the value of From.
func (s *GetCallQueueRecordingsOK) SetFrom(val OptString) {
	s.From = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *GetCallQueueRecordingsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *GetCallQueueRecordingsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetRecordings sets the value of Recordings.
func (s *GetCallQueueRecordingsOK) SetRecordings(val []GetCallQueueRecordingsOKRecordingsItem) {
	s.Recordings = val
}

// SetTo sets the value of To.
func (s *GetCallQueueRecordingsOK) SetTo(val OptString) {
	s.To = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *GetCallQueueRecordingsOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type GetCallQueueRecordingsOKRecordingsItem struct {
	// Contact name of the callee.
	CalleeName OptString `json:"callee_name"`
	// Number of the callee.
	CalleeNumber OptString `json:"callee_number"`
	// The callee's number type:
	// * `1` &mdash; Internal number.
	// * `2` &mdash; External number.
	// * `3` &mdash; Customized emergency number.
	CalleeNumberType OptString `json:"callee_number_type"`
	// Name of the caller.
	CallerName OptString `json:"caller_name"`
	// Phone number of the caller.
	CallerNumber OptString `json:"caller_number"`
	// The caller's number type:
	// * `1` &mdash; Internal number.
	// * `2` &mdash; External number.
	CallerNumberType OptInt `json:"caller_number_type"`
	// Date of the recording.
	DateTime OptDate `json:"date_time"`
	// Direction of call. The value of this field can be either `outbound` or `inbound`.
	Direction OptString `json:"direction"`
	// URL using which the recording can be downloaded.
	DownloadURL OptString `json:"download_url"`
	// Duration of the call.
	Duration OptInt `json:"duration"`
	// Unique identifier of the recording.
	ID OptString `json:"id"`
}

// GetCalleeName returns the value of CalleeName.
func (s *GetCallQueueRecordingsOKRecordingsItem) GetCalleeName() OptString {
	return s.CalleeName
}

// GetCalleeNumber returns the value of CalleeNumber.
func (s *GetCallQueueRecordingsOKRecordingsItem) GetCalleeNumber() OptString {
	return s.CalleeNumber
}

// GetCalleeNumberType returns the value of CalleeNumberType.
func (s *GetCallQueueRecordingsOKRecordingsItem) GetCalleeNumberType() OptString {
	return s.CalleeNumberType
}

// GetCallerName returns the value of CallerName.
func (s *GetCallQueueRecordingsOKRecordingsItem) GetCallerName() OptString {
	return s.CallerName
}

// GetCallerNumber returns the value of CallerNumber.
func (s *GetCallQueueRecordingsOKRecordingsItem) GetCallerNumber() OptString {
	return s.CallerNumber
}

// GetCallerNumberType returns the value of CallerNumberType.
func (s *GetCallQueueRecordingsOKRecordingsItem) GetCallerNumberType() OptInt {
	return s.CallerNumberType
}

// GetDateTime returns the value of DateTime.
func (s *GetCallQueueRecordingsOKRecordingsItem) GetDateTime() OptDate {
	return s.DateTime
}

// GetDirection returns the value of Direction.
func (s *GetCallQueueRecordingsOKRecordingsItem) GetDirection() OptString {
	return s.Direction
}

// GetDownloadURL returns the value of DownloadURL.
func (s *GetCallQueueRecordingsOKRecordingsItem) GetDownloadURL() OptString {
	return s.DownloadURL
}

// GetDuration returns the value of Duration.
func (s *GetCallQueueRecordingsOKRecordingsItem) GetDuration() OptInt {
	return s.Duration
}

// GetID returns the value of ID.
func (s *GetCallQueueRecordingsOKRecordingsItem) GetID() OptString {
	return s.ID
}

// SetCalleeName sets the value of CalleeName.
func (s *GetCallQueueRecordingsOKRecordingsItem) SetCalleeName(val OptString) {
	s.CalleeName = val
}

// SetCalleeNumber sets the value of CalleeNumber.
func (s *GetCallQueueRecordingsOKRecordingsItem) SetCalleeNumber(val OptString) {
	s.CalleeNumber = val
}

// SetCalleeNumberType sets the value of CalleeNumberType.
func (s *GetCallQueueRecordingsOKRecordingsItem) SetCalleeNumberType(val OptString) {
	s.CalleeNumberType = val
}

// SetCallerName sets the value of CallerName.
func (s *GetCallQueueRecordingsOKRecordingsItem) SetCallerName(val OptString) {
	s.CallerName = val
}

// SetCallerNumber sets the value of CallerNumber.
func (s *GetCallQueueRecordingsOKRecordingsItem) SetCallerNumber(val OptString) {
	s.CallerNumber = val
}

// SetCallerNumberType sets the value of CallerNumberType.
func (s *GetCallQueueRecordingsOKRecordingsItem) SetCallerNumberType(val OptInt) {
	s.CallerNumberType = val
}

// SetDateTime sets the value of DateTime.
func (s *GetCallQueueRecordingsOKRecordingsItem) SetDateTime(val OptDate) {
	s.DateTime = val
}

// SetDirection sets the value of Direction.
func (s *GetCallQueueRecordingsOKRecordingsItem) SetDirection(val OptString) {
	s.Direction = val
}

// SetDownloadURL sets the value of DownloadURL.
func (s *GetCallQueueRecordingsOKRecordingsItem) SetDownloadURL(val OptString) {
	s.DownloadURL = val
}

// SetDuration sets the value of Duration.
func (s *GetCallQueueRecordingsOKRecordingsItem) SetDuration(val OptInt) {
	s.Duration = val
}

// SetID sets the value of ID.
func (s *GetCallQueueRecordingsOKRecordingsItem) SetID(val OptString) {
	s.ID = val
}

type GetCommonAreaOutboundCallingCountriesAndRegionsOK struct {
	CountriesRegions []GetCommonAreaOutboundCallingCountriesAndRegionsOKCountriesRegionsItem `json:"countries_regions"`
	// The next page token paginates through large set of results. It returns whenever the set of
	// available results exceeds the current page size. The expiration period for this token is 15
	// minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The total number of records from a single API call.
	PageSize OptInt `json:"page_size"`
}

// GetCountriesRegions returns the value of CountriesRegions.
func (s *GetCommonAreaOutboundCallingCountriesAndRegionsOK) GetCountriesRegions() []GetCommonAreaOutboundCallingCountriesAndRegionsOKCountriesRegionsItem {
	return s.CountriesRegions
}

// GetNextPageToken returns the value of NextPageToken.
func (s *GetCommonAreaOutboundCallingCountriesAndRegionsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *GetCommonAreaOutboundCallingCountriesAndRegionsOK) GetPageSize() OptInt {
	return s.PageSize
}

// SetCountriesRegions sets the value of CountriesRegions.
func (s *GetCommonAreaOutboundCallingCountriesAndRegionsOK) SetCountriesRegions(val []GetCommonAreaOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) {
	s.CountriesRegions = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *GetCommonAreaOutboundCallingCountriesAndRegionsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *GetCommonAreaOutboundCallingCountriesAndRegionsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

type GetCommonAreaOutboundCallingCountriesAndRegionsOKCountriesRegionsItem struct {
	// The country name.
	Name OptString `json:"name"`
	// The country code.
	Code OptInt `json:"code"`
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	IsoCode OptString `json:"iso_code"`
	// The default outbound calling rule.
	// `1` Allowed
	// `2` Blocked
	// `3` Requires local number, caller ID, or plan
	// `4` Requires the extension number and PIN code.
	Rule OptInt `json:"rule"`
	// The enabled carrier, which could be "ZOOM" or "BYOC".
	EnabledCarrier []string `json:"enabled_carrier"`
}

// GetName returns the value of Name.
func (s *GetCommonAreaOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetName() OptString {
	return s.Name
}

// GetCode returns the value of Code.
func (s *GetCommonAreaOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetCode() OptInt {
	return s.Code
}

// GetIsoCode returns the value of IsoCode.
func (s *GetCommonAreaOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetIsoCode() OptString {
	return s.IsoCode
}

// GetRule returns the value of Rule.
func (s *GetCommonAreaOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetRule() OptInt {
	return s.Rule
}

// GetEnabledCarrier returns the value of EnabledCarrier.
func (s *GetCommonAreaOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetEnabledCarrier() []string {
	return s.EnabledCarrier
}

// SetName sets the value of Name.
func (s *GetCommonAreaOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetName(val OptString) {
	s.Name = val
}

// SetCode sets the value of Code.
func (s *GetCommonAreaOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetCode(val OptInt) {
	s.Code = val
}

// SetIsoCode sets the value of IsoCode.
func (s *GetCommonAreaOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetIsoCode(val OptString) {
	s.IsoCode = val
}

// SetRule sets the value of Rule.
func (s *GetCommonAreaOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetRule(val OptInt) {
	s.Rule = val
}

// SetEnabledCarrier sets the value of EnabledCarrier.
func (s *GetCommonAreaOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetEnabledCarrier(val []string) {
	s.EnabledCarrier = val
}

// Common area setting.
type GetCommonAreaSettingsOK struct {
	DeskPhones []GetCommonAreaSettingsOKDeskPhonesItem `json:"desk_phones"`
}

// GetDeskPhones returns the value of DeskPhones.
func (s *GetCommonAreaSettingsOK) GetDeskPhones() []GetCommonAreaSettingsOKDeskPhonesItem {
	return s.DeskPhones
}

// SetDeskPhones sets the value of DeskPhones.
func (s *GetCommonAreaSettingsOK) SetDeskPhones(val []GetCommonAreaSettingsOKDeskPhonesItem) {
	s.DeskPhones = val
}

type GetCommonAreaSettingsOKDeskPhonesItem struct {
	// Desk phone ID.
	ID OptString `json:"id"`
	// Desk phone display name.
	DisplayName OptString `json:"display_name"`
	// Desk phone device type.
	DeviceType OptString `json:"device_type"`
	// Desk phone status.
	Status     OptString                                          `json:"status"`
	HotDesking OptGetCommonAreaSettingsOKDeskPhonesItemHotDesking `json:"hot_desking"`
}

// GetID returns the value of ID.
func (s *GetCommonAreaSettingsOKDeskPhonesItem) GetID() OptString {
	return s.ID
}

// GetDisplayName returns the value of DisplayName.
func (s *GetCommonAreaSettingsOKDeskPhonesItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetDeviceType returns the value of DeviceType.
func (s *GetCommonAreaSettingsOKDeskPhonesItem) GetDeviceType() OptString {
	return s.DeviceType
}

// GetStatus returns the value of Status.
func (s *GetCommonAreaSettingsOKDeskPhonesItem) GetStatus() OptString {
	return s.Status
}

// GetHotDesking returns the value of HotDesking.
func (s *GetCommonAreaSettingsOKDeskPhonesItem) GetHotDesking() OptGetCommonAreaSettingsOKDeskPhonesItemHotDesking {
	return s.HotDesking
}

// SetID sets the value of ID.
func (s *GetCommonAreaSettingsOKDeskPhonesItem) SetID(val OptString) {
	s.ID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetCommonAreaSettingsOKDeskPhonesItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetDeviceType sets the value of DeviceType.
func (s *GetCommonAreaSettingsOKDeskPhonesItem) SetDeviceType(val OptString) {
	s.DeviceType = val
}

// SetStatus sets the value of Status.
func (s *GetCommonAreaSettingsOKDeskPhonesItem) SetStatus(val OptString) {
	s.Status = val
}

// SetHotDesking sets the value of HotDesking.
func (s *GetCommonAreaSettingsOKDeskPhonesItem) SetHotDesking(val OptGetCommonAreaSettingsOKDeskPhonesItemHotDesking) {
	s.HotDesking = val
}

type GetCommonAreaSettingsOKDeskPhonesItemHotDesking struct {
	// Allow hot desking feature to the current device: letting the guest user sign in to the desk phone.
	// You can't use the desk phone until the guest user signs out.
	// Options include:
	// * `unsupported`
	// * `on`
	// * `off`.
	Status OptString `json:"status"`
}

// GetStatus returns the value of Status.
func (s *GetCommonAreaSettingsOKDeskPhonesItemHotDesking) GetStatus() OptString {
	return s.Status
}

// SetStatus sets the value of Status.
func (s *GetCommonAreaSettingsOKDeskPhonesItemHotDesking) SetStatus(val OptString) {
	s.Status = val
}

type GetEmergencyAddressOK struct {
	// The emergency address line 1.
	AddressLine1 OptString `json:"address_line1"`
	// The emergency address line 2.
	AddressLine2 OptString `json:"address_line2"`
	// The emergency address city.
	City OptString `json:"city"`
	// The emergency address country.
	Country OptString `json:"country"`
	// The emergency address ID.
	ID OptString `json:"id"`
	// Indicates whether the emergency address is default or not.
	IsDefault OptBool `json:"is_default"`
	// The emergency address owner level:
	// * `0` - Account/Company-level emergency address.
	// * `1` - User/Personal-level emergency address.
	// * `2` - Unknown company/pending emergency address.
	Level OptInt `json:"level"`
	// The emergency address owner information for a user-level emergency address.
	Owner OptGetEmergencyAddressOKOwner `json:"owner"`
	// The emergency address site information.
	Site OptGetEmergencyAddressOKSite `json:"site"`
	// The emergency address state code.
	StateCode OptString `json:"state_code"`
	// The emergency address verification status:
	// * `1` &mdash; Verification not required.
	// * `2` &mdash; Unverified.
	// * `3` &mdash; Verification requested.
	// * `4` &mdash; Verified.
	// * `5` &mdash; Rejected.
	// * `6` &mdash; Verification failed.
	Status OptInt `json:"status"`
	// The emergency address zip code.
	Zip OptString `json:"zip"`
}

// GetAddressLine1 returns the value of AddressLine1.
func (s *GetEmergencyAddressOK) GetAddressLine1() OptString {
	return s.AddressLine1
}

// GetAddressLine2 returns the value of AddressLine2.
func (s *GetEmergencyAddressOK) GetAddressLine2() OptString {
	return s.AddressLine2
}

// GetCity returns the value of City.
func (s *GetEmergencyAddressOK) GetCity() OptString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *GetEmergencyAddressOK) GetCountry() OptString {
	return s.Country
}

// GetID returns the value of ID.
func (s *GetEmergencyAddressOK) GetID() OptString {
	return s.ID
}

// GetIsDefault returns the value of IsDefault.
func (s *GetEmergencyAddressOK) GetIsDefault() OptBool {
	return s.IsDefault
}

// GetLevel returns the value of Level.
func (s *GetEmergencyAddressOK) GetLevel() OptInt {
	return s.Level
}

// GetOwner returns the value of Owner.
func (s *GetEmergencyAddressOK) GetOwner() OptGetEmergencyAddressOKOwner {
	return s.Owner
}

// GetSite returns the value of Site.
func (s *GetEmergencyAddressOK) GetSite() OptGetEmergencyAddressOKSite {
	return s.Site
}

// GetStateCode returns the value of StateCode.
func (s *GetEmergencyAddressOK) GetStateCode() OptString {
	return s.StateCode
}

// GetStatus returns the value of Status.
func (s *GetEmergencyAddressOK) GetStatus() OptInt {
	return s.Status
}

// GetZip returns the value of Zip.
func (s *GetEmergencyAddressOK) GetZip() OptString {
	return s.Zip
}

// SetAddressLine1 sets the value of AddressLine1.
func (s *GetEmergencyAddressOK) SetAddressLine1(val OptString) {
	s.AddressLine1 = val
}

// SetAddressLine2 sets the value of AddressLine2.
func (s *GetEmergencyAddressOK) SetAddressLine2(val OptString) {
	s.AddressLine2 = val
}

// SetCity sets the value of City.
func (s *GetEmergencyAddressOK) SetCity(val OptString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *GetEmergencyAddressOK) SetCountry(val OptString) {
	s.Country = val
}

// SetID sets the value of ID.
func (s *GetEmergencyAddressOK) SetID(val OptString) {
	s.ID = val
}

// SetIsDefault sets the value of IsDefault.
func (s *GetEmergencyAddressOK) SetIsDefault(val OptBool) {
	s.IsDefault = val
}

// SetLevel sets the value of Level.
func (s *GetEmergencyAddressOK) SetLevel(val OptInt) {
	s.Level = val
}

// SetOwner sets the value of Owner.
func (s *GetEmergencyAddressOK) SetOwner(val OptGetEmergencyAddressOKOwner) {
	s.Owner = val
}

// SetSite sets the value of Site.
func (s *GetEmergencyAddressOK) SetSite(val OptGetEmergencyAddressOKSite) {
	s.Site = val
}

// SetStateCode sets the value of StateCode.
func (s *GetEmergencyAddressOK) SetStateCode(val OptString) {
	s.StateCode = val
}

// SetStatus sets the value of Status.
func (s *GetEmergencyAddressOK) SetStatus(val OptInt) {
	s.Status = val
}

// SetZip sets the value of Zip.
func (s *GetEmergencyAddressOK) SetZip(val OptString) {
	s.Zip = val
}

// The emergency address owner information for a user-level emergency address.
type GetEmergencyAddressOKOwner struct {
	// The extension number of the emergency address owner .
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The emergency address owner ID.
	ID OptString `json:"id"`
	// The emergency address owner name.
	Name OptString `json:"name"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetEmergencyAddressOKOwner) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *GetEmergencyAddressOKOwner) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetEmergencyAddressOKOwner) GetName() OptString {
	return s.Name
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetEmergencyAddressOKOwner) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *GetEmergencyAddressOKOwner) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetEmergencyAddressOKOwner) SetName(val OptString) {
	s.Name = val
}

// The emergency address site information.
type GetEmergencyAddressOKSite struct {
	// The site's ID.
	ID OptString `json:"id"`
	// The site's name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetEmergencyAddressOKSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetEmergencyAddressOKSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetEmergencyAddressOKSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetEmergencyAddressOKSite) SetName(val OptString) {
	s.Name = val
}

type GetFirmwareRuleDetailOK struct {
	// Device type.
	DeviceType OptString `json:"device_type"`
	// Device model name.
	DeviceModel OptString `json:"device_model"`
	// Firmware version.
	Version OptString `json:"version"`
	// The update log.
	UpdateLog OptString `json:"update_log"`
}

// GetDeviceType returns the value of DeviceType.
func (s *GetFirmwareRuleDetailOK) GetDeviceType() OptString {
	return s.DeviceType
}

// GetDeviceModel returns the value of DeviceModel.
func (s *GetFirmwareRuleDetailOK) GetDeviceModel() OptString {
	return s.DeviceModel
}

// GetVersion returns the value of Version.
func (s *GetFirmwareRuleDetailOK) GetVersion() OptString {
	return s.Version
}

// GetUpdateLog returns the value of UpdateLog.
func (s *GetFirmwareRuleDetailOK) GetUpdateLog() OptString {
	return s.UpdateLog
}

// SetDeviceType sets the value of DeviceType.
func (s *GetFirmwareRuleDetailOK) SetDeviceType(val OptString) {
	s.DeviceType = val
}

// SetDeviceModel sets the value of DeviceModel.
func (s *GetFirmwareRuleDetailOK) SetDeviceModel(val OptString) {
	s.DeviceModel = val
}

// SetVersion sets the value of Version.
func (s *GetFirmwareRuleDetailOK) SetVersion(val OptString) {
	s.Version = val
}

// SetUpdateLog sets the value of UpdateLog.
func (s *GetFirmwareRuleDetailOK) SetUpdateLog(val OptString) {
	s.UpdateLog = val
}

type GetGCPOK struct {
	// ID of the group.
	ID OptString `json:"id"`
	// Name of the group.
	DisplayName OptString `json:"display_name"`
	// Extension ID.
	ExtensionID OptString `json:"extension_id"`
	// Extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// Description of the group.
	Description OptString `json:"description"`
	// Determines after how much time (in seconds) the group should be notified.
	Delay OptInt `json:"delay"`
	// Member count of the group.
	MemberCount OptInt `json:"member_count"`
	// Cost center name.
	CostCenter OptString `json:"cost_center"`
	// Department name.
	Department             OptString                         `json:"department"`
	Site                   OptGetGCPOKSite                   `json:"site"`
	PlayIncomingCallsSound OptGetGCPOKPlayIncomingCallsSound `json:"play_incoming_calls_sound"`
	// Whether the ringtone is on.
	DirectedCallPickup OptBool `json:"directed_call_pickup"`
}

// GetID returns the value of ID.
func (s *GetGCPOK) GetID() OptString {
	return s.ID
}

// GetDisplayName returns the value of DisplayName.
func (s *GetGCPOK) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetGCPOK) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetGCPOK) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetDescription returns the value of Description.
func (s *GetGCPOK) GetDescription() OptString {
	return s.Description
}

// GetDelay returns the value of Delay.
func (s *GetGCPOK) GetDelay() OptInt {
	return s.Delay
}

// GetMemberCount returns the value of MemberCount.
func (s *GetGCPOK) GetMemberCount() OptInt {
	return s.MemberCount
}

// GetCostCenter returns the value of CostCenter.
func (s *GetGCPOK) GetCostCenter() OptString {
	return s.CostCenter
}

// GetDepartment returns the value of Department.
func (s *GetGCPOK) GetDepartment() OptString {
	return s.Department
}

// GetSite returns the value of Site.
func (s *GetGCPOK) GetSite() OptGetGCPOKSite {
	return s.Site
}

// GetPlayIncomingCallsSound returns the value of PlayIncomingCallsSound.
func (s *GetGCPOK) GetPlayIncomingCallsSound() OptGetGCPOKPlayIncomingCallsSound {
	return s.PlayIncomingCallsSound
}

// GetDirectedCallPickup returns the value of DirectedCallPickup.
func (s *GetGCPOK) GetDirectedCallPickup() OptBool {
	return s.DirectedCallPickup
}

// SetID sets the value of ID.
func (s *GetGCPOK) SetID(val OptString) {
	s.ID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetGCPOK) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetGCPOK) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetGCPOK) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetDescription sets the value of Description.
func (s *GetGCPOK) SetDescription(val OptString) {
	s.Description = val
}

// SetDelay sets the value of Delay.
func (s *GetGCPOK) SetDelay(val OptInt) {
	s.Delay = val
}

// SetMemberCount sets the value of MemberCount.
func (s *GetGCPOK) SetMemberCount(val OptInt) {
	s.MemberCount = val
}

// SetCostCenter sets the value of CostCenter.
func (s *GetGCPOK) SetCostCenter(val OptString) {
	s.CostCenter = val
}

// SetDepartment sets the value of Department.
func (s *GetGCPOK) SetDepartment(val OptString) {
	s.Department = val
}

// SetSite sets the value of Site.
func (s *GetGCPOK) SetSite(val OptGetGCPOKSite) {
	s.Site = val
}

// SetPlayIncomingCallsSound sets the value of PlayIncomingCallsSound.
func (s *GetGCPOK) SetPlayIncomingCallsSound(val OptGetGCPOKPlayIncomingCallsSound) {
	s.PlayIncomingCallsSound = val
}

// SetDirectedCallPickup sets the value of DirectedCallPickup.
func (s *GetGCPOK) SetDirectedCallPickup(val OptBool) {
	s.DirectedCallPickup = val
}

type GetGCPOKPlayIncomingCallsSound struct {
	// Whether to play incoming call sound in Zoom clients.
	Enable OptBool `json:"enable"`
	// Incoming call sound in Zoom clients.
	RingTone OptString `json:"ring_tone"`
	// Duration (in seconds) between ring tones.
	Duration OptInt `json:"duration"`
}

// GetEnable returns the value of Enable.
func (s *GetGCPOKPlayIncomingCallsSound) GetEnable() OptBool {
	return s.Enable
}

// GetRingTone returns the value of RingTone.
func (s *GetGCPOKPlayIncomingCallsSound) GetRingTone() OptString {
	return s.RingTone
}

// GetDuration returns the value of Duration.
func (s *GetGCPOKPlayIncomingCallsSound) GetDuration() OptInt {
	return s.Duration
}

// SetEnable sets the value of Enable.
func (s *GetGCPOKPlayIncomingCallsSound) SetEnable(val OptBool) {
	s.Enable = val
}

// SetRingTone sets the value of RingTone.
func (s *GetGCPOKPlayIncomingCallsSound) SetRingTone(val OptString) {
	s.RingTone = val
}

// SetDuration sets the value of Duration.
func (s *GetGCPOKPlayIncomingCallsSound) SetDuration(val OptInt) {
	s.Duration = val
}

type GetGCPOKSite struct {
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
	ID OptString `json:"id"`
	// Name of the site.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetGCPOKSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetGCPOKSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetGCPOKSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetGCPOKSite) SetName(val OptString) {
	s.Name = val
}

type GetGroupPhoneSettingsOK struct {
	// Whether to let users turn on live transcriptions for a call.
	CallLiveTranscription OptGetGroupPhoneSettingsOKCallLiveTranscription `json:"call_live_transcription"`
	// Whether to allow user or extension to have core phone services in the event of an outage.
	LocalSurvivabilityMode OptGetGroupPhoneSettingsOKLocalSurvivabilityMode `json:"local_survivability_mode"`
	SelectOutboundCallerID OptGetGroupPhoneSettingsOKSelectOutboundCallerID `json:"select_outbound_caller_id"`
	PersonalAudioLibrary   OptGetGroupPhoneSettingsOKPersonalAudioLibrary   `json:"personal_audio_library"`
	Voicemail              OptGetGroupPhoneSettingsOKVoicemail              `json:"voicemail"`
	VoicemailTranscription OptGetGroupPhoneSettingsOKVoicemailTranscription `json:"voicemail_transcription"`
	// Once enabled, users receive email notifications when there is a new voicemail from users, call
	// queues, auto receptionists, or shared line groups. Users who disabled the shared voicemail
	// notification by email policy do not receive notifications.
	VoicemailNotificationByEmail OptGetGroupPhoneSettingsOKVoicemailNotificationByEmail `json:"voicemail_notification_by_email"`
	// Once enabled, users receive email notification when there is a new shared voicemail or videomail.
	// If the extension that shares the voicemail or videomail has disabled the voicemail or videomail
	// notification by email policy, then users do not receive notifications.
	SharedVoicemailNotificationByEmail OptGetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail `json:"shared_voicemail_notification_by_email"`
	RestrictedCallHours                OptGetGroupPhoneSettingsOKRestrictedCallHours                `json:"restricted_call_hours"`
	AllowedCallLocations               OptGetGroupPhoneSettingsOKAllowedCallLocations               `json:"allowed_call_locations"`
	// Once enabled, users can check voicemails over phone using a PIN code.
	CheckVoicemailsOverPhone OptGetGroupPhoneSettingsOKCheckVoicemailsOverPhone `json:"check_voicemails_over_phone"`
	// Whether to automatically record all inbound and outbound calls.
	AutoCallRecording OptGetGroupPhoneSettingsOKAutoCallRecording `json:"auto_call_recording"`
	// Whether to allow extensions to record and save calls in the cloud.
	AdHocCallRecording OptGetGroupPhoneSettingsOKAdHocCallRecording `json:"ad_hoc_call_recording"`
	ZoomPhoneOnMobile  OptGetGroupPhoneSettingsOKZoomPhoneOnMobile  `json:"zoom_phone_on_mobile"`
	// Whether to allow user to use Zoom Phone on Zoom Progressive Web App.
	ZoomPhoneOnPwa OptGetGroupPhoneSettingsOKZoomPhoneOnPwa `json:"zoom_phone_on_pwa"`
	// This field identifies defined keywords and text patterns over SMS and prevents users from sharing
	// unwanted messages.
	SMSEtiquetteTool OptGetGroupPhoneSettingsOKSMSEtiquetteTool `json:"sms_etiquette_tool"`
	OutboundCalling  OptGetGroupPhoneSettingsOKOutboundCalling  `json:"outbound_calling"`
	OutboundSMS      OptGetGroupPhoneSettingsOKOutboundSMS      `json:"outbound_sms"`
	// Whether the current extension can make international calls outside of their calling plan.
	InternationalCalling OptGetGroupPhoneSettingsOKInternationalCalling `json:"international_calling"`
	SMS                  OptGetGroupPhoneSettingsOKSMS                  `json:"sms"`
	E2eEncryption        OptGetGroupPhoneSettingsOKE2eEncryption        `json:"e2e_encryption"`
	// Whether to allow users to forward their calls to other numbers.
	CallHandlingForwarding OptGetGroupPhoneSettingsOKCallHandlingForwarding `json:"call_handling_forwarding"`
	CallOverflow           OptGetGroupPhoneSettingsOKCallOverflow           `json:"call_overflow"`
	CallTransferring       OptGetGroupPhoneSettingsOKCallTransferring       `json:"call_transferring"`
	ElevateToMeeting       OptGetGroupPhoneSettingsOKElevateToMeeting       `json:"elevate_to_meeting"`
	CallPark               OptGetGroupPhoneSettingsOKCallPark               `json:"call_park"`
	HandOffToRoom          OptGetGroupPhoneSettingsOKHandOffToRoom          `json:"hand_off_to_room"`
	MobileSwitchToCarrier  OptGetGroupPhoneSettingsOKMobileSwitchToCarrier  `json:"mobile_switch_to_carrier"`
	// Whether to allow users to use delegation.
	Delegation OptGetGroupPhoneSettingsOKDelegation `json:"delegation"`
	// Whether to allow hands-free peer-to-peer conversations. When an intercom call is received, the
	// phone will beep to notify the user of the incoming intercom call, and the user's phone will
	// automatically answer the intercom call.
	AudioIntercom                        OptGetGroupPhoneSettingsOKAudioIntercom                        `json:"audio_intercom"`
	BlockListForInboundCallsAndMessaging OptGetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging `json:"block_list_for_inbound_calls_and_messaging"`
	// Whether calls without caller ID will be blocked.
	BlockCallsWithoutCallerID OptGetGroupPhoneSettingsOKBlockCallsWithoutCallerID `json:"block_calls_without_caller_id"`
	// This field allows you to set rules for blocking external calls during business, closed, and
	// holiday hours. This feature is only available for User, Zoom Room and Common Area.
	BlockExternalCalls OptGetGroupPhoneSettingsOKBlockExternalCalls `json:"block_external_calls"`
	// Whether to allow Zoom clients to send media directly to each other.
	// Users or devices that have certain features like recording or monitoring enabled might not be able
	// to use Peer to Peer Media.
	PeerToPeerMedia OptGetGroupPhoneSettingsOKPeerToPeerMedia `json:"peer_to_peer_media"`
	// Whether to allow voicemail to be encrypted with keys which are not accessible to Zoom servers.
	// These voicemails can be decrypted only by the intended user recipient.
	// Shared line appearance, shared line group, call queue, or auto receptionist voicemail will not be
	// encrypted, but can still be played.
	// Email to voicemail, transcriptions, ability to check voicemails by dialing into the voicemail
	// system, or web are not available when this feature is enabled. This policy requires a Power Pack
	// license to be enabled. If the user does who inherits this policy does not have a Power Pack
	// license, the policy will not be applied. Settings is only available with client version 5.12 or
	// later.
	AdvancedEncryption OptGetGroupPhoneSettingsOKAdvancedEncryption `json:"advanced_encryption"`
	// Whether to display a thumbs up or down survey at the end of each call.
	// If participants respond with thumbs down, they can provide additional information about what went
	// wrong.
	DisplayCallFeedbackSurvey OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurvey `json:"display_call_feedback_survey"`
}

// GetCallLiveTranscription returns the value of CallLiveTranscription.
func (s *GetGroupPhoneSettingsOK) GetCallLiveTranscription() OptGetGroupPhoneSettingsOKCallLiveTranscription {
	return s.CallLiveTranscription
}

// GetLocalSurvivabilityMode returns the value of LocalSurvivabilityMode.
func (s *GetGroupPhoneSettingsOK) GetLocalSurvivabilityMode() OptGetGroupPhoneSettingsOKLocalSurvivabilityMode {
	return s.LocalSurvivabilityMode
}

// GetSelectOutboundCallerID returns the value of SelectOutboundCallerID.
func (s *GetGroupPhoneSettingsOK) GetSelectOutboundCallerID() OptGetGroupPhoneSettingsOKSelectOutboundCallerID {
	return s.SelectOutboundCallerID
}

// GetPersonalAudioLibrary returns the value of PersonalAudioLibrary.
func (s *GetGroupPhoneSettingsOK) GetPersonalAudioLibrary() OptGetGroupPhoneSettingsOKPersonalAudioLibrary {
	return s.PersonalAudioLibrary
}

// GetVoicemail returns the value of Voicemail.
func (s *GetGroupPhoneSettingsOK) GetVoicemail() OptGetGroupPhoneSettingsOKVoicemail {
	return s.Voicemail
}

// GetVoicemailTranscription returns the value of VoicemailTranscription.
func (s *GetGroupPhoneSettingsOK) GetVoicemailTranscription() OptGetGroupPhoneSettingsOKVoicemailTranscription {
	return s.VoicemailTranscription
}

// GetVoicemailNotificationByEmail returns the value of VoicemailNotificationByEmail.
func (s *GetGroupPhoneSettingsOK) GetVoicemailNotificationByEmail() OptGetGroupPhoneSettingsOKVoicemailNotificationByEmail {
	return s.VoicemailNotificationByEmail
}

// GetSharedVoicemailNotificationByEmail returns the value of SharedVoicemailNotificationByEmail.
func (s *GetGroupPhoneSettingsOK) GetSharedVoicemailNotificationByEmail() OptGetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail {
	return s.SharedVoicemailNotificationByEmail
}

// GetRestrictedCallHours returns the value of RestrictedCallHours.
func (s *GetGroupPhoneSettingsOK) GetRestrictedCallHours() OptGetGroupPhoneSettingsOKRestrictedCallHours {
	return s.RestrictedCallHours
}

// GetAllowedCallLocations returns the value of AllowedCallLocations.
func (s *GetGroupPhoneSettingsOK) GetAllowedCallLocations() OptGetGroupPhoneSettingsOKAllowedCallLocations {
	return s.AllowedCallLocations
}

// GetCheckVoicemailsOverPhone returns the value of CheckVoicemailsOverPhone.
func (s *GetGroupPhoneSettingsOK) GetCheckVoicemailsOverPhone() OptGetGroupPhoneSettingsOKCheckVoicemailsOverPhone {
	return s.CheckVoicemailsOverPhone
}

// GetAutoCallRecording returns the value of AutoCallRecording.
func (s *GetGroupPhoneSettingsOK) GetAutoCallRecording() OptGetGroupPhoneSettingsOKAutoCallRecording {
	return s.AutoCallRecording
}

// GetAdHocCallRecording returns the value of AdHocCallRecording.
func (s *GetGroupPhoneSettingsOK) GetAdHocCallRecording() OptGetGroupPhoneSettingsOKAdHocCallRecording {
	return s.AdHocCallRecording
}

// GetZoomPhoneOnMobile returns the value of ZoomPhoneOnMobile.
func (s *GetGroupPhoneSettingsOK) GetZoomPhoneOnMobile() OptGetGroupPhoneSettingsOKZoomPhoneOnMobile {
	return s.ZoomPhoneOnMobile
}

// GetZoomPhoneOnPwa returns the value of ZoomPhoneOnPwa.
func (s *GetGroupPhoneSettingsOK) GetZoomPhoneOnPwa() OptGetGroupPhoneSettingsOKZoomPhoneOnPwa {
	return s.ZoomPhoneOnPwa
}

// GetSMSEtiquetteTool returns the value of SMSEtiquetteTool.
func (s *GetGroupPhoneSettingsOK) GetSMSEtiquetteTool() OptGetGroupPhoneSettingsOKSMSEtiquetteTool {
	return s.SMSEtiquetteTool
}

// GetOutboundCalling returns the value of OutboundCalling.
func (s *GetGroupPhoneSettingsOK) GetOutboundCalling() OptGetGroupPhoneSettingsOKOutboundCalling {
	return s.OutboundCalling
}

// GetOutboundSMS returns the value of OutboundSMS.
func (s *GetGroupPhoneSettingsOK) GetOutboundSMS() OptGetGroupPhoneSettingsOKOutboundSMS {
	return s.OutboundSMS
}

// GetInternationalCalling returns the value of InternationalCalling.
func (s *GetGroupPhoneSettingsOK) GetInternationalCalling() OptGetGroupPhoneSettingsOKInternationalCalling {
	return s.InternationalCalling
}

// GetSMS returns the value of SMS.
func (s *GetGroupPhoneSettingsOK) GetSMS() OptGetGroupPhoneSettingsOKSMS {
	return s.SMS
}

// GetE2eEncryption returns the value of E2eEncryption.
func (s *GetGroupPhoneSettingsOK) GetE2eEncryption() OptGetGroupPhoneSettingsOKE2eEncryption {
	return s.E2eEncryption
}

// GetCallHandlingForwarding returns the value of CallHandlingForwarding.
func (s *GetGroupPhoneSettingsOK) GetCallHandlingForwarding() OptGetGroupPhoneSettingsOKCallHandlingForwarding {
	return s.CallHandlingForwarding
}

// GetCallOverflow returns the value of CallOverflow.
func (s *GetGroupPhoneSettingsOK) GetCallOverflow() OptGetGroupPhoneSettingsOKCallOverflow {
	return s.CallOverflow
}

// GetCallTransferring returns the value of CallTransferring.
func (s *GetGroupPhoneSettingsOK) GetCallTransferring() OptGetGroupPhoneSettingsOKCallTransferring {
	return s.CallTransferring
}

// GetElevateToMeeting returns the value of ElevateToMeeting.
func (s *GetGroupPhoneSettingsOK) GetElevateToMeeting() OptGetGroupPhoneSettingsOKElevateToMeeting {
	return s.ElevateToMeeting
}

// GetCallPark returns the value of CallPark.
func (s *GetGroupPhoneSettingsOK) GetCallPark() OptGetGroupPhoneSettingsOKCallPark {
	return s.CallPark
}

// GetHandOffToRoom returns the value of HandOffToRoom.
func (s *GetGroupPhoneSettingsOK) GetHandOffToRoom() OptGetGroupPhoneSettingsOKHandOffToRoom {
	return s.HandOffToRoom
}

// GetMobileSwitchToCarrier returns the value of MobileSwitchToCarrier.
func (s *GetGroupPhoneSettingsOK) GetMobileSwitchToCarrier() OptGetGroupPhoneSettingsOKMobileSwitchToCarrier {
	return s.MobileSwitchToCarrier
}

// GetDelegation returns the value of Delegation.
func (s *GetGroupPhoneSettingsOK) GetDelegation() OptGetGroupPhoneSettingsOKDelegation {
	return s.Delegation
}

// GetAudioIntercom returns the value of AudioIntercom.
func (s *GetGroupPhoneSettingsOK) GetAudioIntercom() OptGetGroupPhoneSettingsOKAudioIntercom {
	return s.AudioIntercom
}

// GetBlockListForInboundCallsAndMessaging returns the value of BlockListForInboundCallsAndMessaging.
func (s *GetGroupPhoneSettingsOK) GetBlockListForInboundCallsAndMessaging() OptGetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging {
	return s.BlockListForInboundCallsAndMessaging
}

// GetBlockCallsWithoutCallerID returns the value of BlockCallsWithoutCallerID.
func (s *GetGroupPhoneSettingsOK) GetBlockCallsWithoutCallerID() OptGetGroupPhoneSettingsOKBlockCallsWithoutCallerID {
	return s.BlockCallsWithoutCallerID
}

// GetBlockExternalCalls returns the value of BlockExternalCalls.
func (s *GetGroupPhoneSettingsOK) GetBlockExternalCalls() OptGetGroupPhoneSettingsOKBlockExternalCalls {
	return s.BlockExternalCalls
}

// GetPeerToPeerMedia returns the value of PeerToPeerMedia.
func (s *GetGroupPhoneSettingsOK) GetPeerToPeerMedia() OptGetGroupPhoneSettingsOKPeerToPeerMedia {
	return s.PeerToPeerMedia
}

// GetAdvancedEncryption returns the value of AdvancedEncryption.
func (s *GetGroupPhoneSettingsOK) GetAdvancedEncryption() OptGetGroupPhoneSettingsOKAdvancedEncryption {
	return s.AdvancedEncryption
}

// GetDisplayCallFeedbackSurvey returns the value of DisplayCallFeedbackSurvey.
func (s *GetGroupPhoneSettingsOK) GetDisplayCallFeedbackSurvey() OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurvey {
	return s.DisplayCallFeedbackSurvey
}

// SetCallLiveTranscription sets the value of CallLiveTranscription.
func (s *GetGroupPhoneSettingsOK) SetCallLiveTranscription(val OptGetGroupPhoneSettingsOKCallLiveTranscription) {
	s.CallLiveTranscription = val
}

// SetLocalSurvivabilityMode sets the value of LocalSurvivabilityMode.
func (s *GetGroupPhoneSettingsOK) SetLocalSurvivabilityMode(val OptGetGroupPhoneSettingsOKLocalSurvivabilityMode) {
	s.LocalSurvivabilityMode = val
}

// SetSelectOutboundCallerID sets the value of SelectOutboundCallerID.
func (s *GetGroupPhoneSettingsOK) SetSelectOutboundCallerID(val OptGetGroupPhoneSettingsOKSelectOutboundCallerID) {
	s.SelectOutboundCallerID = val
}

// SetPersonalAudioLibrary sets the value of PersonalAudioLibrary.
func (s *GetGroupPhoneSettingsOK) SetPersonalAudioLibrary(val OptGetGroupPhoneSettingsOKPersonalAudioLibrary) {
	s.PersonalAudioLibrary = val
}

// SetVoicemail sets the value of Voicemail.
func (s *GetGroupPhoneSettingsOK) SetVoicemail(val OptGetGroupPhoneSettingsOKVoicemail) {
	s.Voicemail = val
}

// SetVoicemailTranscription sets the value of VoicemailTranscription.
func (s *GetGroupPhoneSettingsOK) SetVoicemailTranscription(val OptGetGroupPhoneSettingsOKVoicemailTranscription) {
	s.VoicemailTranscription = val
}

// SetVoicemailNotificationByEmail sets the value of VoicemailNotificationByEmail.
func (s *GetGroupPhoneSettingsOK) SetVoicemailNotificationByEmail(val OptGetGroupPhoneSettingsOKVoicemailNotificationByEmail) {
	s.VoicemailNotificationByEmail = val
}

// SetSharedVoicemailNotificationByEmail sets the value of SharedVoicemailNotificationByEmail.
func (s *GetGroupPhoneSettingsOK) SetSharedVoicemailNotificationByEmail(val OptGetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail) {
	s.SharedVoicemailNotificationByEmail = val
}

// SetRestrictedCallHours sets the value of RestrictedCallHours.
func (s *GetGroupPhoneSettingsOK) SetRestrictedCallHours(val OptGetGroupPhoneSettingsOKRestrictedCallHours) {
	s.RestrictedCallHours = val
}

// SetAllowedCallLocations sets the value of AllowedCallLocations.
func (s *GetGroupPhoneSettingsOK) SetAllowedCallLocations(val OptGetGroupPhoneSettingsOKAllowedCallLocations) {
	s.AllowedCallLocations = val
}

// SetCheckVoicemailsOverPhone sets the value of CheckVoicemailsOverPhone.
func (s *GetGroupPhoneSettingsOK) SetCheckVoicemailsOverPhone(val OptGetGroupPhoneSettingsOKCheckVoicemailsOverPhone) {
	s.CheckVoicemailsOverPhone = val
}

// SetAutoCallRecording sets the value of AutoCallRecording.
func (s *GetGroupPhoneSettingsOK) SetAutoCallRecording(val OptGetGroupPhoneSettingsOKAutoCallRecording) {
	s.AutoCallRecording = val
}

// SetAdHocCallRecording sets the value of AdHocCallRecording.
func (s *GetGroupPhoneSettingsOK) SetAdHocCallRecording(val OptGetGroupPhoneSettingsOKAdHocCallRecording) {
	s.AdHocCallRecording = val
}

// SetZoomPhoneOnMobile sets the value of ZoomPhoneOnMobile.
func (s *GetGroupPhoneSettingsOK) SetZoomPhoneOnMobile(val OptGetGroupPhoneSettingsOKZoomPhoneOnMobile) {
	s.ZoomPhoneOnMobile = val
}

// SetZoomPhoneOnPwa sets the value of ZoomPhoneOnPwa.
func (s *GetGroupPhoneSettingsOK) SetZoomPhoneOnPwa(val OptGetGroupPhoneSettingsOKZoomPhoneOnPwa) {
	s.ZoomPhoneOnPwa = val
}

// SetSMSEtiquetteTool sets the value of SMSEtiquetteTool.
func (s *GetGroupPhoneSettingsOK) SetSMSEtiquetteTool(val OptGetGroupPhoneSettingsOKSMSEtiquetteTool) {
	s.SMSEtiquetteTool = val
}

// SetOutboundCalling sets the value of OutboundCalling.
func (s *GetGroupPhoneSettingsOK) SetOutboundCalling(val OptGetGroupPhoneSettingsOKOutboundCalling) {
	s.OutboundCalling = val
}

// SetOutboundSMS sets the value of OutboundSMS.
func (s *GetGroupPhoneSettingsOK) SetOutboundSMS(val OptGetGroupPhoneSettingsOKOutboundSMS) {
	s.OutboundSMS = val
}

// SetInternationalCalling sets the value of InternationalCalling.
func (s *GetGroupPhoneSettingsOK) SetInternationalCalling(val OptGetGroupPhoneSettingsOKInternationalCalling) {
	s.InternationalCalling = val
}

// SetSMS sets the value of SMS.
func (s *GetGroupPhoneSettingsOK) SetSMS(val OptGetGroupPhoneSettingsOKSMS) {
	s.SMS = val
}

// SetE2eEncryption sets the value of E2eEncryption.
func (s *GetGroupPhoneSettingsOK) SetE2eEncryption(val OptGetGroupPhoneSettingsOKE2eEncryption) {
	s.E2eEncryption = val
}

// SetCallHandlingForwarding sets the value of CallHandlingForwarding.
func (s *GetGroupPhoneSettingsOK) SetCallHandlingForwarding(val OptGetGroupPhoneSettingsOKCallHandlingForwarding) {
	s.CallHandlingForwarding = val
}

// SetCallOverflow sets the value of CallOverflow.
func (s *GetGroupPhoneSettingsOK) SetCallOverflow(val OptGetGroupPhoneSettingsOKCallOverflow) {
	s.CallOverflow = val
}

// SetCallTransferring sets the value of CallTransferring.
func (s *GetGroupPhoneSettingsOK) SetCallTransferring(val OptGetGroupPhoneSettingsOKCallTransferring) {
	s.CallTransferring = val
}

// SetElevateToMeeting sets the value of ElevateToMeeting.
func (s *GetGroupPhoneSettingsOK) SetElevateToMeeting(val OptGetGroupPhoneSettingsOKElevateToMeeting) {
	s.ElevateToMeeting = val
}

// SetCallPark sets the value of CallPark.
func (s *GetGroupPhoneSettingsOK) SetCallPark(val OptGetGroupPhoneSettingsOKCallPark) {
	s.CallPark = val
}

// SetHandOffToRoom sets the value of HandOffToRoom.
func (s *GetGroupPhoneSettingsOK) SetHandOffToRoom(val OptGetGroupPhoneSettingsOKHandOffToRoom) {
	s.HandOffToRoom = val
}

// SetMobileSwitchToCarrier sets the value of MobileSwitchToCarrier.
func (s *GetGroupPhoneSettingsOK) SetMobileSwitchToCarrier(val OptGetGroupPhoneSettingsOKMobileSwitchToCarrier) {
	s.MobileSwitchToCarrier = val
}

// SetDelegation sets the value of Delegation.
func (s *GetGroupPhoneSettingsOK) SetDelegation(val OptGetGroupPhoneSettingsOKDelegation) {
	s.Delegation = val
}

// SetAudioIntercom sets the value of AudioIntercom.
func (s *GetGroupPhoneSettingsOK) SetAudioIntercom(val OptGetGroupPhoneSettingsOKAudioIntercom) {
	s.AudioIntercom = val
}

// SetBlockListForInboundCallsAndMessaging sets the value of BlockListForInboundCallsAndMessaging.
func (s *GetGroupPhoneSettingsOK) SetBlockListForInboundCallsAndMessaging(val OptGetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging) {
	s.BlockListForInboundCallsAndMessaging = val
}

// SetBlockCallsWithoutCallerID sets the value of BlockCallsWithoutCallerID.
func (s *GetGroupPhoneSettingsOK) SetBlockCallsWithoutCallerID(val OptGetGroupPhoneSettingsOKBlockCallsWithoutCallerID) {
	s.BlockCallsWithoutCallerID = val
}

// SetBlockExternalCalls sets the value of BlockExternalCalls.
func (s *GetGroupPhoneSettingsOK) SetBlockExternalCalls(val OptGetGroupPhoneSettingsOKBlockExternalCalls) {
	s.BlockExternalCalls = val
}

// SetPeerToPeerMedia sets the value of PeerToPeerMedia.
func (s *GetGroupPhoneSettingsOK) SetPeerToPeerMedia(val OptGetGroupPhoneSettingsOKPeerToPeerMedia) {
	s.PeerToPeerMedia = val
}

// SetAdvancedEncryption sets the value of AdvancedEncryption.
func (s *GetGroupPhoneSettingsOK) SetAdvancedEncryption(val OptGetGroupPhoneSettingsOKAdvancedEncryption) {
	s.AdvancedEncryption = val
}

// SetDisplayCallFeedbackSurvey sets the value of DisplayCallFeedbackSurvey.
func (s *GetGroupPhoneSettingsOK) SetDisplayCallFeedbackSurvey(val OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) {
	s.DisplayCallFeedbackSurvey = val
}

// Whether to allow extensions to record and save calls in the cloud.
type GetGroupPhoneSettingsOKAdHocCallRecording struct {
	// Whether the current extension can record and save calls to the cloud.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
	// Whether the call recording transcription is enabled.
	RecordingTranscription OptBool `json:"recording_transcription"`
	// Whether to allow user to download their own ad-hoc recording.
	AllowDownload OptBool `json:"allow_download"`
	// Whether to allow user to delete their own ad-hoc recording.
	AllowDelete OptBool `json:"allow_delete"`
	// Whether a prompt plays to call participants when the recording has started.
	RecordingStartPrompt OptBool `json:"recording_start_prompt"`
	// Whether the Press 1 option that provides recording consent is enabled.
	RecordingExplicitConsent OptBool                                                           `json:"recording_explicit_consent"`
	PlayRecordingBeepTone    OptGetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone `json:"play_recording_beep_tone"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) GetModified() OptBool {
	return s.Modified
}

// GetRecordingTranscription returns the value of RecordingTranscription.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) GetRecordingTranscription() OptBool {
	return s.RecordingTranscription
}

// GetAllowDownload returns the value of AllowDownload.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowDelete returns the value of AllowDelete.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetRecordingStartPrompt returns the value of RecordingStartPrompt.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) GetRecordingStartPrompt() OptBool {
	return s.RecordingStartPrompt
}

// GetRecordingExplicitConsent returns the value of RecordingExplicitConsent.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) GetRecordingExplicitConsent() OptBool {
	return s.RecordingExplicitConsent
}

// GetPlayRecordingBeepTone returns the value of PlayRecordingBeepTone.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) GetPlayRecordingBeepTone() OptGetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone {
	return s.PlayRecordingBeepTone
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) SetModified(val OptBool) {
	s.Modified = val
}

// SetRecordingTranscription sets the value of RecordingTranscription.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) SetRecordingTranscription(val OptBool) {
	s.RecordingTranscription = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetRecordingStartPrompt sets the value of RecordingStartPrompt.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) SetRecordingStartPrompt(val OptBool) {
	s.RecordingStartPrompt = val
}

// SetRecordingExplicitConsent sets the value of RecordingExplicitConsent.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) SetRecordingExplicitConsent(val OptBool) {
	s.RecordingExplicitConsent = val
}

// SetPlayRecordingBeepTone sets the value of PlayRecordingBeepTone.
func (s *GetGroupPhoneSettingsOKAdHocCallRecording) SetPlayRecordingBeepTone(val OptGetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone) {
	s.PlayRecordingBeepTone = val
}

type GetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone struct {
	// Whether to play the side tone beep for recorded users while recording. It displays only when ad
	// hoc call recording policy uses the new framework.
	Enable OptBool `json:"enable"`
	// The side tone beep volume. It displays only when `enable` is set to `true`.
	PlayBeepVolume OptInt `json:"play_beep_volume"`
	// The beep time interval in seconds. It displays only when the `enable` is set to true.
	PlayBeepTimeInterval OptInt `json:"play_beep_time_interval"`
	// The beep sides. It displays only when the `enable` is set to true.
	PlayBeepMember OptString `json:"play_beep_member"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone) GetEnable() OptBool {
	return s.Enable
}

// GetPlayBeepVolume returns the value of PlayBeepVolume.
func (s *GetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone) GetPlayBeepVolume() OptInt {
	return s.PlayBeepVolume
}

// GetPlayBeepTimeInterval returns the value of PlayBeepTimeInterval.
func (s *GetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone) GetPlayBeepTimeInterval() OptInt {
	return s.PlayBeepTimeInterval
}

// GetPlayBeepMember returns the value of PlayBeepMember.
func (s *GetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone) GetPlayBeepMember() OptString {
	return s.PlayBeepMember
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone) SetEnable(val OptBool) {
	s.Enable = val
}

// SetPlayBeepVolume sets the value of PlayBeepVolume.
func (s *GetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone) SetPlayBeepVolume(val OptInt) {
	s.PlayBeepVolume = val
}

// SetPlayBeepTimeInterval sets the value of PlayBeepTimeInterval.
func (s *GetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone) SetPlayBeepTimeInterval(val OptInt) {
	s.PlayBeepTimeInterval = val
}

// SetPlayBeepMember sets the value of PlayBeepMember.
func (s *GetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone) SetPlayBeepMember(val OptString) {
	s.PlayBeepMember = val
}

// Whether to allow voicemail to be encrypted with keys which are not accessible to Zoom servers.
// These voicemails can be decrypted only by the intended user recipient.
// Shared line appearance, shared line group, call queue, or auto receptionist voicemail will not be
// encrypted, but can still be played.
// Email to voicemail, transcriptions, ability to check voicemails by dialing into the voicemail
// system, or web are not available when this feature is enabled. This policy requires a Power Pack
// license to be enabled. If the user does who inherits this policy does not have a Power Pack
// license, the policy will not be applied. Settings is only available with client version 5.12 or
// later.
type GetGroupPhoneSettingsOKAdvancedEncryption struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset(displayed when
	// using old or new policy framework).
	Modified OptBool `json:"modified"`
	// Whether to disable incoming unencrypted voicemail.
	DisableIncomingUnencryptedVoicemail OptBool `json:"disable_incoming_unencrypted_voicemail"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKAdvancedEncryption) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKAdvancedEncryption) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKAdvancedEncryption) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKAdvancedEncryption) GetModified() OptBool {
	return s.Modified
}

// GetDisableIncomingUnencryptedVoicemail returns the value of DisableIncomingUnencryptedVoicemail.
func (s *GetGroupPhoneSettingsOKAdvancedEncryption) GetDisableIncomingUnencryptedVoicemail() OptBool {
	return s.DisableIncomingUnencryptedVoicemail
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKAdvancedEncryption) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKAdvancedEncryption) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKAdvancedEncryption) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKAdvancedEncryption) SetModified(val OptBool) {
	s.Modified = val
}

// SetDisableIncomingUnencryptedVoicemail sets the value of DisableIncomingUnencryptedVoicemail.
func (s *GetGroupPhoneSettingsOKAdvancedEncryption) SetDisableIncomingUnencryptedVoicemail(val OptBool) {
	s.DisableIncomingUnencryptedVoicemail = val
}

type GetGroupPhoneSettingsOKAllowedCallLocations struct {
	// Whether to define where the extension or user can make and accept calls and send SMS. When the
	// extension or user is outside of the allowed locations, calls will follow &quot;When a call is not
	// answered&quot; settings, meanwhile outbound and inbound emergency calls and SMS will still be
	// allowed. Note: SMS settings will only be available to users.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
	// Whether locations has been applied.
	LocationsApplied OptBool `json:"locations_applied"`
	// Whether to allow internal calls when outside of allowed locations.
	AllowInternalCalls OptBool `json:"allow_internal_calls"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKAllowedCallLocations) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKAllowedCallLocations) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKAllowedCallLocations) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKAllowedCallLocations) GetModified() OptBool {
	return s.Modified
}

// GetLocationsApplied returns the value of LocationsApplied.
func (s *GetGroupPhoneSettingsOKAllowedCallLocations) GetLocationsApplied() OptBool {
	return s.LocationsApplied
}

// GetAllowInternalCalls returns the value of AllowInternalCalls.
func (s *GetGroupPhoneSettingsOKAllowedCallLocations) GetAllowInternalCalls() OptBool {
	return s.AllowInternalCalls
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKAllowedCallLocations) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKAllowedCallLocations) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKAllowedCallLocations) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKAllowedCallLocations) SetModified(val OptBool) {
	s.Modified = val
}

// SetLocationsApplied sets the value of LocationsApplied.
func (s *GetGroupPhoneSettingsOKAllowedCallLocations) SetLocationsApplied(val OptBool) {
	s.LocationsApplied = val
}

// SetAllowInternalCalls sets the value of AllowInternalCalls.
func (s *GetGroupPhoneSettingsOKAllowedCallLocations) SetAllowInternalCalls(val OptBool) {
	s.AllowInternalCalls = val
}

// Whether to allow hands-free peer-to-peer conversations. When an intercom call is received, the
// phone will beep to notify the user of the incoming intercom call, and the user's phone will
// automatically answer the intercom call.
type GetGroupPhoneSettingsOKAudioIntercom struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified.
	// If modified, they can be reset (displayed when using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKAudioIntercom) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKAudioIntercom) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKAudioIntercom) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKAudioIntercom) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKAudioIntercom) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKAudioIntercom) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKAudioIntercom) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKAudioIntercom) SetModified(val OptBool) {
	s.Modified = val
}

// Whether to automatically record all inbound and outbound calls.
type GetGroupPhoneSettingsOKAutoCallRecording struct {
	// Whether automatic call recording is enabled.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// The type of calls automatically recorded:
	// * `inbound`
	// * `outbound`
	// * `both`.
	RecordingCalls OptString `json:"recording_calls"`
	// Whether the call recording transcription is enabled.
	RecordingTranscription OptBool `json:"recording_transcription"`
	// Whether a prompt plays to call participants when the recording has started.
	RecordingStartPrompt OptBool `json:"recording_start_prompt"`
	// The audio that plays when the recording has started. You can use this audio ID to get the audio
	// information using [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	RecordingStartPromptAudioID OptString `json:"recording_start_prompt_audio_id"`
	// Whether the `Press 1 option that provides recording consent` is enabled.
	RecordingExplicitConsent OptBool `json:"recording_explicit_consent"`
	// Whether the stop and resume of automatic call recording is enabled.
	AllowStopResumeRecording OptBool `json:"allow_stop_resume_recording"`
	// Whether a call disconnects when there is an issue with the automatic call recording and the call
	// cannot reconnect after five seconds. This does **not** include emergency calls.
	DisconnectOnRecordingFailure OptBool                                                          `json:"disconnect_on_recording_failure"`
	PlayRecordingBeepTone        OptGetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone `json:"play_recording_beep_tone"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) GetLockedBy() OptString {
	return s.LockedBy
}

// GetRecordingCalls returns the value of RecordingCalls.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) GetRecordingCalls() OptString {
	return s.RecordingCalls
}

// GetRecordingTranscription returns the value of RecordingTranscription.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) GetRecordingTranscription() OptBool {
	return s.RecordingTranscription
}

// GetRecordingStartPrompt returns the value of RecordingStartPrompt.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) GetRecordingStartPrompt() OptBool {
	return s.RecordingStartPrompt
}

// GetRecordingStartPromptAudioID returns the value of RecordingStartPromptAudioID.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) GetRecordingStartPromptAudioID() OptString {
	return s.RecordingStartPromptAudioID
}

// GetRecordingExplicitConsent returns the value of RecordingExplicitConsent.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) GetRecordingExplicitConsent() OptBool {
	return s.RecordingExplicitConsent
}

// GetAllowStopResumeRecording returns the value of AllowStopResumeRecording.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) GetAllowStopResumeRecording() OptBool {
	return s.AllowStopResumeRecording
}

// GetDisconnectOnRecordingFailure returns the value of DisconnectOnRecordingFailure.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) GetDisconnectOnRecordingFailure() OptBool {
	return s.DisconnectOnRecordingFailure
}

// GetPlayRecordingBeepTone returns the value of PlayRecordingBeepTone.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) GetPlayRecordingBeepTone() OptGetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone {
	return s.PlayRecordingBeepTone
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetRecordingCalls sets the value of RecordingCalls.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) SetRecordingCalls(val OptString) {
	s.RecordingCalls = val
}

// SetRecordingTranscription sets the value of RecordingTranscription.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) SetRecordingTranscription(val OptBool) {
	s.RecordingTranscription = val
}

// SetRecordingStartPrompt sets the value of RecordingStartPrompt.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) SetRecordingStartPrompt(val OptBool) {
	s.RecordingStartPrompt = val
}

// SetRecordingStartPromptAudioID sets the value of RecordingStartPromptAudioID.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) SetRecordingStartPromptAudioID(val OptString) {
	s.RecordingStartPromptAudioID = val
}

// SetRecordingExplicitConsent sets the value of RecordingExplicitConsent.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) SetRecordingExplicitConsent(val OptBool) {
	s.RecordingExplicitConsent = val
}

// SetAllowStopResumeRecording sets the value of AllowStopResumeRecording.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) SetAllowStopResumeRecording(val OptBool) {
	s.AllowStopResumeRecording = val
}

// SetDisconnectOnRecordingFailure sets the value of DisconnectOnRecordingFailure.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) SetDisconnectOnRecordingFailure(val OptBool) {
	s.DisconnectOnRecordingFailure = val
}

// SetPlayRecordingBeepTone sets the value of PlayRecordingBeepTone.
func (s *GetGroupPhoneSettingsOKAutoCallRecording) SetPlayRecordingBeepTone(val OptGetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone) {
	s.PlayRecordingBeepTone = val
}

type GetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone struct {
	// Whether to play a side tone beep for recorded users while recording. Only displayed when auto call
	// recording policy uses the new framework.
	Enable OptBool `json:"enable"`
	// The volume of the side tone beep. It displays only when `enable` is set to `true`.
	PlayBeepVolume OptInt `json:"play_beep_volume"`
	// The beep time interval in seconds. It displays only when `enable` is true.
	PlayBeepTimeInterval OptInt `json:"play_beep_time_interval"`
	// The beep sides. It displays only when `enable` is true.
	PlayBeepMember OptString `json:"play_beep_member"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone) GetEnable() OptBool {
	return s.Enable
}

// GetPlayBeepVolume returns the value of PlayBeepVolume.
func (s *GetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone) GetPlayBeepVolume() OptInt {
	return s.PlayBeepVolume
}

// GetPlayBeepTimeInterval returns the value of PlayBeepTimeInterval.
func (s *GetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone) GetPlayBeepTimeInterval() OptInt {
	return s.PlayBeepTimeInterval
}

// GetPlayBeepMember returns the value of PlayBeepMember.
func (s *GetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone) GetPlayBeepMember() OptString {
	return s.PlayBeepMember
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone) SetEnable(val OptBool) {
	s.Enable = val
}

// SetPlayBeepVolume sets the value of PlayBeepVolume.
func (s *GetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone) SetPlayBeepVolume(val OptInt) {
	s.PlayBeepVolume = val
}

// SetPlayBeepTimeInterval sets the value of PlayBeepTimeInterval.
func (s *GetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone) SetPlayBeepTimeInterval(val OptInt) {
	s.PlayBeepTimeInterval = val
}

// SetPlayBeepMember sets the value of PlayBeepMember.
func (s *GetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone) SetPlayBeepMember(val OptString) {
	s.PlayBeepMember = val
}

// Whether calls without caller ID will be blocked.
type GetGroupPhoneSettingsOKBlockCallsWithoutCallerID struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKBlockCallsWithoutCallerID) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKBlockCallsWithoutCallerID) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKBlockCallsWithoutCallerID) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKBlockCallsWithoutCallerID) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKBlockCallsWithoutCallerID) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKBlockCallsWithoutCallerID) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKBlockCallsWithoutCallerID) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKBlockCallsWithoutCallerID) SetModified(val OptBool) {
	s.Modified = val
}

// This field allows you to set rules for blocking external calls during business, closed, and
// holiday hours. This feature is only available for User, Zoom Room and Common Area.
type GetGroupPhoneSettingsOKBlockExternalCalls struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset(displayed when
	// using old or new policy framework).
	Modified           OptBool `json:"modified"`
	BlockBusinessHours OptBool `json:"block_business_hours"`
	BlockClosedHours   OptBool `json:"block_closed_hours"`
	BlockHolidayHours  OptBool `json:"block_holiday_hours"`
	// The action when a call is blocked. `9` - Disconnect, `0`- Forward to voicemail/videomail.
	BlockCallAction OptInt `json:"block_call_action"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKBlockExternalCalls) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKBlockExternalCalls) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKBlockExternalCalls) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKBlockExternalCalls) GetModified() OptBool {
	return s.Modified
}

// GetBlockBusinessHours returns the value of BlockBusinessHours.
func (s *GetGroupPhoneSettingsOKBlockExternalCalls) GetBlockBusinessHours() OptBool {
	return s.BlockBusinessHours
}

// GetBlockClosedHours returns the value of BlockClosedHours.
func (s *GetGroupPhoneSettingsOKBlockExternalCalls) GetBlockClosedHours() OptBool {
	return s.BlockClosedHours
}

// GetBlockHolidayHours returns the value of BlockHolidayHours.
func (s *GetGroupPhoneSettingsOKBlockExternalCalls) GetBlockHolidayHours() OptBool {
	return s.BlockHolidayHours
}

// GetBlockCallAction returns the value of BlockCallAction.
func (s *GetGroupPhoneSettingsOKBlockExternalCalls) GetBlockCallAction() OptInt {
	return s.BlockCallAction
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKBlockExternalCalls) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKBlockExternalCalls) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKBlockExternalCalls) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKBlockExternalCalls) SetModified(val OptBool) {
	s.Modified = val
}

// SetBlockBusinessHours sets the value of BlockBusinessHours.
func (s *GetGroupPhoneSettingsOKBlockExternalCalls) SetBlockBusinessHours(val OptBool) {
	s.BlockBusinessHours = val
}

// SetBlockClosedHours sets the value of BlockClosedHours.
func (s *GetGroupPhoneSettingsOKBlockExternalCalls) SetBlockClosedHours(val OptBool) {
	s.BlockClosedHours = val
}

// SetBlockHolidayHours sets the value of BlockHolidayHours.
func (s *GetGroupPhoneSettingsOKBlockExternalCalls) SetBlockHolidayHours(val OptBool) {
	s.BlockHolidayHours = val
}

// SetBlockCallAction sets the value of BlockCallAction.
func (s *GetGroupPhoneSettingsOKBlockExternalCalls) SetBlockCallAction(val OptInt) {
	s.BlockCallAction = val
}

type GetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging struct {
	// Whether to allows users and administrators to block inbound calls and SMS/MMS from phone numbers
	// or prefixes.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging) SetModified(val OptBool) {
	s.Modified = val
}

// Whether to allow users to forward their calls to other numbers.
type GetGroupPhoneSettingsOKCallHandlingForwarding struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
	// `1` - Low restriction (external numbers not allowed)
	// `2` - Medium restriction (external numbers and external contacts not allowed)
	// `3` - High restriction (external numbers, external contacts and internal extensions without
	// inbound automatic call recording not allowed)
	// `4` - No restriction.
	CallForwardingType OptInt `json:"call_forwarding_type"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKCallHandlingForwarding) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKCallHandlingForwarding) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKCallHandlingForwarding) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKCallHandlingForwarding) GetModified() OptBool {
	return s.Modified
}

// GetCallForwardingType returns the value of CallForwardingType.
func (s *GetGroupPhoneSettingsOKCallHandlingForwarding) GetCallForwardingType() OptInt {
	return s.CallForwardingType
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKCallHandlingForwarding) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKCallHandlingForwarding) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKCallHandlingForwarding) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKCallHandlingForwarding) SetModified(val OptBool) {
	s.Modified = val
}

// SetCallForwardingType sets the value of CallForwardingType.
func (s *GetGroupPhoneSettingsOKCallHandlingForwarding) SetCallForwardingType(val OptInt) {
	s.CallForwardingType = val
}

// Whether to let users turn on live transcriptions for a call.
type GetGroupPhoneSettingsOKCallLiveTranscription struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified.
	Modified OptBool `json:"modified"`
	// Whether to play a prompt to call participants when the transcription has started.
	TranscriptionStartPrompt OptGetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt `json:"transcription_start_prompt"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKCallLiveTranscription) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKCallLiveTranscription) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKCallLiveTranscription) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKCallLiveTranscription) GetModified() OptBool {
	return s.Modified
}

// GetTranscriptionStartPrompt returns the value of TranscriptionStartPrompt.
func (s *GetGroupPhoneSettingsOKCallLiveTranscription) GetTranscriptionStartPrompt() OptGetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt {
	return s.TranscriptionStartPrompt
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKCallLiveTranscription) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKCallLiveTranscription) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKCallLiveTranscription) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKCallLiveTranscription) SetModified(val OptBool) {
	s.Modified = val
}

// SetTranscriptionStartPrompt sets the value of TranscriptionStartPrompt.
func (s *GetGroupPhoneSettingsOKCallLiveTranscription) SetTranscriptionStartPrompt(val OptGetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) {
	s.TranscriptionStartPrompt = val
}

// Whether to play a prompt to call participants when the transcription has started.
type GetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt struct {
	Enable OptBool `json:"enable"`
	// The audio prompt file ID. If the audio was removed from the user's audio library, it will be
	// marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio
	// ID to get the audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The audio prompt file name.
	AudioName OptString `json:"audio_name"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) GetEnable() OptBool {
	return s.Enable
}

// GetAudioID returns the value of AudioID.
func (s *GetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) GetAudioID() OptString {
	return s.AudioID
}

// GetAudioName returns the value of AudioName.
func (s *GetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) GetAudioName() OptString {
	return s.AudioName
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) SetEnable(val OptBool) {
	s.Enable = val
}

// SetAudioID sets the value of AudioID.
func (s *GetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetAudioName sets the value of AudioName.
func (s *GetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) SetAudioName(val OptString) {
	s.AudioName = val
}

type GetGroupPhoneSettingsOKCallOverflow struct {
	// Whether to allow users to forward their calls to other numbers.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
	// `1` - Can forward to internal extensions and to external contacts.
	// `2` - Can forward only to internal extensions.
	// `3` - Can forward only to internal extensions that require inbound Automatic Call Recording.
	// `4` - Can forward to internal extensions, external contacts, and external numbers.
	CallOverflowType OptInt `json:"call_overflow_type"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKCallOverflow) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKCallOverflow) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKCallOverflow) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKCallOverflow) GetModified() OptBool {
	return s.Modified
}

// GetCallOverflowType returns the value of CallOverflowType.
func (s *GetGroupPhoneSettingsOKCallOverflow) GetCallOverflowType() OptInt {
	return s.CallOverflowType
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKCallOverflow) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKCallOverflow) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKCallOverflow) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKCallOverflow) SetModified(val OptBool) {
	s.Modified = val
}

// SetCallOverflowType sets the value of CallOverflowType.
func (s *GetGroupPhoneSettingsOKCallOverflow) SetCallOverflowType(val OptInt) {
	s.CallOverflowType = val
}

type GetGroupPhoneSettingsOKCallPark struct {
	// Whether to allow calls placed on hold to be resumed from another location using a retrieval code.
	Enable OptBool `json:"enable"`
	// A time limit for parked calls in minutes. After the expiration period ends, the retrieval code is
	// no longer valid and a new code will be generated.
	ExpirationPeriod OptInt `json:"expiration_period"`
	// The action when a parked call is not picked up.
	// `100` - Ring back to parker
	// `0` - Forward to voicemail of the parker
	// `9` - Disconnect
	// `50` - Forward to another extension.
	CallNotPickedUpAction OptInt `json:"call_not_picked_up_action"`
	// The extension's forwarding information.
	ForwardTo OptGetGroupPhoneSettingsOKCallParkForwardTo `json:"forward_to"`
	// This field is only used in the new policy framework. Choose how parked calls are assigned to a BLF
	// (Busy Lamp Field) key. Sequential assignment will park the call at the next available BLF key.
	// Random assignment will park the call at a randomly selected BLF key.
	// `0` - Random
	// `1` - Sequential.
	Sequence OptInt `json:"sequence"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKCallPark) GetEnable() OptBool {
	return s.Enable
}

// GetExpirationPeriod returns the value of ExpirationPeriod.
func (s *GetGroupPhoneSettingsOKCallPark) GetExpirationPeriod() OptInt {
	return s.ExpirationPeriod
}

// GetCallNotPickedUpAction returns the value of CallNotPickedUpAction.
func (s *GetGroupPhoneSettingsOKCallPark) GetCallNotPickedUpAction() OptInt {
	return s.CallNotPickedUpAction
}

// GetForwardTo returns the value of ForwardTo.
func (s *GetGroupPhoneSettingsOKCallPark) GetForwardTo() OptGetGroupPhoneSettingsOKCallParkForwardTo {
	return s.ForwardTo
}

// GetSequence returns the value of Sequence.
func (s *GetGroupPhoneSettingsOKCallPark) GetSequence() OptInt {
	return s.Sequence
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKCallPark) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKCallPark) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKCallPark) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKCallPark) SetEnable(val OptBool) {
	s.Enable = val
}

// SetExpirationPeriod sets the value of ExpirationPeriod.
func (s *GetGroupPhoneSettingsOKCallPark) SetExpirationPeriod(val OptInt) {
	s.ExpirationPeriod = val
}

// SetCallNotPickedUpAction sets the value of CallNotPickedUpAction.
func (s *GetGroupPhoneSettingsOKCallPark) SetCallNotPickedUpAction(val OptInt) {
	s.CallNotPickedUpAction = val
}

// SetForwardTo sets the value of ForwardTo.
func (s *GetGroupPhoneSettingsOKCallPark) SetForwardTo(val OptGetGroupPhoneSettingsOKCallParkForwardTo) {
	s.ForwardTo = val
}

// SetSequence sets the value of Sequence.
func (s *GetGroupPhoneSettingsOKCallPark) SetSequence(val OptInt) {
	s.Sequence = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKCallPark) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKCallPark) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKCallPark) SetModified(val OptBool) {
	s.Modified = val
}

// The extension's forwarding information.
type GetGroupPhoneSettingsOKCallParkForwardTo struct {
	// The extension's name.
	DisplayName OptString `json:"display_name"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The type of extension:
	// * `user`
	// * `zoomRoom`
	// * `commonArea`
	// * `ciscoRoom/polycomRoom`
	// * `autoReceptionist`
	// * `sharedLineGroup`
	// * `callQueue`.
	ExtensionType OptString `json:"extension_type"`
	// The ID of the extension `user`, `zoomRoom`, `commonArea`, `ciscoRoom/polycomRoom`,
	// `autoReceptionist`, `callQueue` or `sharedLineGroup`.
	ID OptString `json:"id"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetGroupPhoneSettingsOKCallParkForwardTo) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetGroupPhoneSettingsOKCallParkForwardTo) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetGroupPhoneSettingsOKCallParkForwardTo) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetGroupPhoneSettingsOKCallParkForwardTo) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetID returns the value of ID.
func (s *GetGroupPhoneSettingsOKCallParkForwardTo) GetID() OptString {
	return s.ID
}

// SetDisplayName sets the value of DisplayName.
func (s *GetGroupPhoneSettingsOKCallParkForwardTo) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetGroupPhoneSettingsOKCallParkForwardTo) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetGroupPhoneSettingsOKCallParkForwardTo) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetGroupPhoneSettingsOKCallParkForwardTo) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetID sets the value of ID.
func (s *GetGroupPhoneSettingsOKCallParkForwardTo) SetID(val OptString) {
	s.ID = val
}

type GetGroupPhoneSettingsOKCallTransferring struct {
	// Whether to allow user to warm or blind transfer their calls. This does not apply to warm transfer
	// on IP Phones except for Yealink. Voicemail is transferable only to internal extensions.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
	// 1-No restriction.
	// 2-Medium restriction (external numbers and external contacts not allowed).
	// 3-High restriction (external numbers, unrecorded external contacts, and internal extensions
	// without inbound automatic recording not allowed).
	// 4-Low restriction (external numbers not allowed).
	CallTransferringType OptInt `json:"call_transferring_type"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKCallTransferring) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKCallTransferring) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKCallTransferring) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKCallTransferring) GetModified() OptBool {
	return s.Modified
}

// GetCallTransferringType returns the value of CallTransferringType.
func (s *GetGroupPhoneSettingsOKCallTransferring) GetCallTransferringType() OptInt {
	return s.CallTransferringType
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKCallTransferring) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKCallTransferring) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKCallTransferring) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKCallTransferring) SetModified(val OptBool) {
	s.Modified = val
}

// SetCallTransferringType sets the value of CallTransferringType.
func (s *GetGroupPhoneSettingsOKCallTransferring) SetCallTransferringType(val OptInt) {
	s.CallTransferringType = val
}

// Once enabled, users can check voicemails over phone using a PIN code.
type GetGroupPhoneSettingsOKCheckVoicemailsOverPhone struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKCheckVoicemailsOverPhone) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKCheckVoicemailsOverPhone) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKCheckVoicemailsOverPhone) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKCheckVoicemailsOverPhone) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKCheckVoicemailsOverPhone) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKCheckVoicemailsOverPhone) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKCheckVoicemailsOverPhone) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKCheckVoicemailsOverPhone) SetModified(val OptBool) {
	s.Modified = val
}

// Whether to allow users to use delegation.
type GetGroupPhoneSettingsOKDelegation struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKDelegation) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKDelegation) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKDelegation) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKDelegation) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKDelegation) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKDelegation) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKDelegation) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKDelegation) SetModified(val OptBool) {
	s.Modified = val
}

// Whether to display a thumbs up or down survey at the end of each call.
// If participants respond with thumbs down, they can provide additional information about what went
// wrong.
type GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
	// This field allows you to display feedback survey, `1` - display for every call, `2` - display when
	// call quality issues are detected. Default `1`, if set with value `2`, need to set `feed_back_mos`
	// or `feedback_duration`.
	FeedbackType OptInt `json:"feedback_type"`
	// The MOS score. Min: 1.0, Max: 3.0, format one decimal point.
	FeedbackMos OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos `json:"feedback_mos"`
	// The call duration, in seconds, 0-60.
	FeedbackDuration OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration `json:"feedback_duration"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) GetModified() OptBool {
	return s.Modified
}

// GetFeedbackType returns the value of FeedbackType.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) GetFeedbackType() OptInt {
	return s.FeedbackType
}

// GetFeedbackMos returns the value of FeedbackMos.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) GetFeedbackMos() OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos {
	return s.FeedbackMos
}

// GetFeedbackDuration returns the value of FeedbackDuration.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) GetFeedbackDuration() OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration {
	return s.FeedbackDuration
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) SetModified(val OptBool) {
	s.Modified = val
}

// SetFeedbackType sets the value of FeedbackType.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) SetFeedbackType(val OptInt) {
	s.FeedbackType = val
}

// SetFeedbackMos sets the value of FeedbackMos.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) SetFeedbackMos(val OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos) {
	s.FeedbackMos = val
}

// SetFeedbackDuration sets the value of FeedbackDuration.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) SetFeedbackDuration(val OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration) {
	s.FeedbackDuration = val
}

// The call duration, in seconds, 0-60.
type GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration struct {
	Enable OptBool `json:"enable"`
	Min    OptInt  `json:"min"`
	Max    OptInt  `json:"max"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration) GetEnable() OptBool {
	return s.Enable
}

// GetMin returns the value of Min.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration) GetMin() OptInt {
	return s.Min
}

// GetMax returns the value of Max.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration) GetMax() OptInt {
	return s.Max
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration) SetEnable(val OptBool) {
	s.Enable = val
}

// SetMin sets the value of Min.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration) SetMin(val OptInt) {
	s.Min = val
}

// SetMax sets the value of Max.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration) SetMax(val OptInt) {
	s.Max = val
}

// The MOS score. Min: 1.0, Max: 3.0, format one decimal point.
type GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos struct {
	Enable OptBool   `json:"enable"`
	Min    OptString `json:"min"`
	Max    OptString `json:"max"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos) GetEnable() OptBool {
	return s.Enable
}

// GetMin returns the value of Min.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos) GetMin() OptString {
	return s.Min
}

// GetMax returns the value of Max.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos) GetMax() OptString {
	return s.Max
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos) SetEnable(val OptBool) {
	s.Enable = val
}

// SetMin sets the value of Min.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos) SetMin(val OptString) {
	s.Min = val
}

// SetMax sets the value of Max.
func (s *GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos) SetMax(val OptString) {
	s.Max = val
}

type GetGroupPhoneSettingsOKE2eEncryption struct {
	// Whether to allow users to switch their calls to end-to-end encryption.
	// For users who have Automatic Call Recording turned on, they will need the option **Allow user to
	// stop and resume automatic call recording** to use end-to-end encryption.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKE2eEncryption) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKE2eEncryption) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKE2eEncryption) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKE2eEncryption) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKE2eEncryption) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKE2eEncryption) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKE2eEncryption) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKE2eEncryption) SetModified(val OptBool) {
	s.Modified = val
}

type GetGroupPhoneSettingsOKElevateToMeeting struct {
	// Whether to allow users to elevate their phone calls to a meeting.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified.
	// If modified, they can be reset (displayed when using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKElevateToMeeting) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKElevateToMeeting) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKElevateToMeeting) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKElevateToMeeting) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKElevateToMeeting) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKElevateToMeeting) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKElevateToMeeting) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKElevateToMeeting) SetModified(val OptBool) {
	s.Modified = val
}

type GetGroupPhoneSettingsOKHandOffToRoom struct {
	// Whether to allow users to send a call to a Zoom Room.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified.
	// If modified, they can be reset (displayed when using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKHandOffToRoom) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKHandOffToRoom) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKHandOffToRoom) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKHandOffToRoom) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKHandOffToRoom) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKHandOffToRoom) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKHandOffToRoom) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKHandOffToRoom) SetModified(val OptBool) {
	s.Modified = val
}

// Whether the current extension can make international calls outside of their calling plan.
type GetGroupPhoneSettingsOKInternationalCalling struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKInternationalCalling) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKInternationalCalling) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKInternationalCalling) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKInternationalCalling) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKInternationalCalling) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKInternationalCalling) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKInternationalCalling) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKInternationalCalling) SetModified(val OptBool) {
	s.Modified = val
}

// Whether to allow user or extension to have core phone services in the event of an outage.
type GetGroupPhoneSettingsOKLocalSurvivabilityMode struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKLocalSurvivabilityMode) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKLocalSurvivabilityMode) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKLocalSurvivabilityMode) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKLocalSurvivabilityMode) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKLocalSurvivabilityMode) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKLocalSurvivabilityMode) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKLocalSurvivabilityMode) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKLocalSurvivabilityMode) SetModified(val OptBool) {
	s.Modified = val
}

type GetGroupPhoneSettingsOKMobileSwitchToCarrier struct {
	// Whether to allow the user to switch from a Zoom Phone to their native carrier.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKMobileSwitchToCarrier) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKMobileSwitchToCarrier) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKMobileSwitchToCarrier) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKMobileSwitchToCarrier) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKMobileSwitchToCarrier) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKMobileSwitchToCarrier) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKMobileSwitchToCarrier) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKMobileSwitchToCarrier) SetModified(val OptBool) {
	s.Modified = val
}

type GetGroupPhoneSettingsOKOutboundCalling struct {
	// Whether to define calling rules to restrict user or extension from calling specific countries,
	// cities, or numbers.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified.
	// If modified, they can be reset (displayed when using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKOutboundCalling) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKOutboundCalling) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKOutboundCalling) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKOutboundCalling) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKOutboundCalling) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKOutboundCalling) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKOutboundCalling) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKOutboundCalling) SetModified(val OptBool) {
	s.Modified = val
}

type GetGroupPhoneSettingsOKOutboundSMS struct {
	// Whether to allow users to send and receive messages.
	// You will still need to assign a valid calling plan and phone number to each user for them to send
	// and receive messages.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified.
	// If modified, they can be reset (displayed when using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKOutboundSMS) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKOutboundSMS) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKOutboundSMS) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKOutboundSMS) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKOutboundSMS) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKOutboundSMS) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKOutboundSMS) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKOutboundSMS) SetModified(val OptBool) {
	s.Modified = val
}

// Whether to allow Zoom clients to send media directly to each other.
// Users or devices that have certain features like recording or monitoring enabled might not be able
// to use Peer to Peer Media.
type GetGroupPhoneSettingsOKPeerToPeerMedia struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified.
	// If modified, they can be reset (displayed when using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKPeerToPeerMedia) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKPeerToPeerMedia) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKPeerToPeerMedia) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKPeerToPeerMedia) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKPeerToPeerMedia) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKPeerToPeerMedia) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKPeerToPeerMedia) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKPeerToPeerMedia) SetModified(val OptBool) {
	s.Modified = val
}

type GetGroupPhoneSettingsOKPersonalAudioLibrary struct {
	// Whether to allow users to change their own audio library.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified.
	Modified OptBool `json:"modified"`
	// Whether to allow music on hold customization.
	AllowMusicOnHoldCustomization OptBool `json:"allow_music_on_hold_customization"`
	// Whether to allow voicemail and message greeting customization.
	AllowVoicemailAndMessageGreetingCustomization OptBool `json:"allow_voicemail_and_message_greeting_customization"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKPersonalAudioLibrary) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKPersonalAudioLibrary) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKPersonalAudioLibrary) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKPersonalAudioLibrary) GetModified() OptBool {
	return s.Modified
}

// GetAllowMusicOnHoldCustomization returns the value of AllowMusicOnHoldCustomization.
func (s *GetGroupPhoneSettingsOKPersonalAudioLibrary) GetAllowMusicOnHoldCustomization() OptBool {
	return s.AllowMusicOnHoldCustomization
}

// GetAllowVoicemailAndMessageGreetingCustomization returns the value of AllowVoicemailAndMessageGreetingCustomization.
func (s *GetGroupPhoneSettingsOKPersonalAudioLibrary) GetAllowVoicemailAndMessageGreetingCustomization() OptBool {
	return s.AllowVoicemailAndMessageGreetingCustomization
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKPersonalAudioLibrary) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKPersonalAudioLibrary) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKPersonalAudioLibrary) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKPersonalAudioLibrary) SetModified(val OptBool) {
	s.Modified = val
}

// SetAllowMusicOnHoldCustomization sets the value of AllowMusicOnHoldCustomization.
func (s *GetGroupPhoneSettingsOKPersonalAudioLibrary) SetAllowMusicOnHoldCustomization(val OptBool) {
	s.AllowMusicOnHoldCustomization = val
}

// SetAllowVoicemailAndMessageGreetingCustomization sets the value of AllowVoicemailAndMessageGreetingCustomization.
func (s *GetGroupPhoneSettingsOKPersonalAudioLibrary) SetAllowVoicemailAndMessageGreetingCustomization(val OptBool) {
	s.AllowVoicemailAndMessageGreetingCustomization = val
}

type GetGroupPhoneSettingsOKRestrictedCallHours struct {
	// Whether to define when the user cannot make or accept calls and send SMS. In the restricted hours,
	// calls will follow &quot;When a call is not answered&quot; settings. Outbound and inbound emergency
	// calls will still be allowed.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
	// Set either time zone `id` or `set_by_extension`.
	TimeZone OptGetGroupPhoneSettingsOKRestrictedCallHoursTimeZone `json:"time_zone"`
	// Whether restricted hours has been applied.
	RestrictedHoursApplied OptBool `json:"restricted_hours_applied"`
	// Whether restricted holiday hours has been applied.
	RestrictedHolidayHoursApplied OptBool `json:"restricted_holiday_hours_applied"`
	// Whether to allow internal calls/SMS during restricted hours.
	AllowInternalCalls OptBool `json:"allow_internal_calls"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKRestrictedCallHours) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKRestrictedCallHours) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKRestrictedCallHours) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKRestrictedCallHours) GetModified() OptBool {
	return s.Modified
}

// GetTimeZone returns the value of TimeZone.
func (s *GetGroupPhoneSettingsOKRestrictedCallHours) GetTimeZone() OptGetGroupPhoneSettingsOKRestrictedCallHoursTimeZone {
	return s.TimeZone
}

// GetRestrictedHoursApplied returns the value of RestrictedHoursApplied.
func (s *GetGroupPhoneSettingsOKRestrictedCallHours) GetRestrictedHoursApplied() OptBool {
	return s.RestrictedHoursApplied
}

// GetRestrictedHolidayHoursApplied returns the value of RestrictedHolidayHoursApplied.
func (s *GetGroupPhoneSettingsOKRestrictedCallHours) GetRestrictedHolidayHoursApplied() OptBool {
	return s.RestrictedHolidayHoursApplied
}

// GetAllowInternalCalls returns the value of AllowInternalCalls.
func (s *GetGroupPhoneSettingsOKRestrictedCallHours) GetAllowInternalCalls() OptBool {
	return s.AllowInternalCalls
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKRestrictedCallHours) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKRestrictedCallHours) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKRestrictedCallHours) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKRestrictedCallHours) SetModified(val OptBool) {
	s.Modified = val
}

// SetTimeZone sets the value of TimeZone.
func (s *GetGroupPhoneSettingsOKRestrictedCallHours) SetTimeZone(val OptGetGroupPhoneSettingsOKRestrictedCallHoursTimeZone) {
	s.TimeZone = val
}

// SetRestrictedHoursApplied sets the value of RestrictedHoursApplied.
func (s *GetGroupPhoneSettingsOKRestrictedCallHours) SetRestrictedHoursApplied(val OptBool) {
	s.RestrictedHoursApplied = val
}

// SetRestrictedHolidayHoursApplied sets the value of RestrictedHolidayHoursApplied.
func (s *GetGroupPhoneSettingsOKRestrictedCallHours) SetRestrictedHolidayHoursApplied(val OptBool) {
	s.RestrictedHolidayHoursApplied = val
}

// SetAllowInternalCalls sets the value of AllowInternalCalls.
func (s *GetGroupPhoneSettingsOKRestrictedCallHours) SetAllowInternalCalls(val OptBool) {
	s.AllowInternalCalls = val
}

// Set either time zone `id` or `set_by_extension`.
type GetGroupPhoneSettingsOKRestrictedCallHoursTimeZone struct {
	// The [time zone list](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists/#timezones) for supported time zones and
	// their formats.
	ID OptString `json:"id"`
	// The time zone name. If time zone id is empty, it shows as `setByExtension`.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetGroupPhoneSettingsOKRestrictedCallHoursTimeZone) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetGroupPhoneSettingsOKRestrictedCallHoursTimeZone) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetGroupPhoneSettingsOKRestrictedCallHoursTimeZone) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetGroupPhoneSettingsOKRestrictedCallHoursTimeZone) SetName(val OptString) {
	s.Name = val
}

type GetGroupPhoneSettingsOKSMS struct {
	// Whether to allow user to send and receive messages.
	// You will still need to assign a valid calling plan and phone number to the user in order to send
	// and receive messages.
	Enable OptBool `json:"enable"`
	// Whether the user can send and receive international messages.
	InternationalSMS OptBool `json:"international_sms"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified.
	// If modified, they can be reset (displayed when using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKSMS) GetEnable() OptBool {
	return s.Enable
}

// GetInternationalSMS returns the value of InternationalSMS.
func (s *GetGroupPhoneSettingsOKSMS) GetInternationalSMS() OptBool {
	return s.InternationalSMS
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKSMS) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKSMS) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKSMS) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKSMS) SetEnable(val OptBool) {
	s.Enable = val
}

// SetInternationalSMS sets the value of InternationalSMS.
func (s *GetGroupPhoneSettingsOKSMS) SetInternationalSMS(val OptBool) {
	s.InternationalSMS = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKSMS) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKSMS) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKSMS) SetModified(val OptBool) {
	s.Modified = val
}

// This field identifies defined keywords and text patterns over SMS and prevents users from sharing
// unwanted messages.
type GetGroupPhoneSettingsOKSMSEtiquetteTool struct {
	Enable OptBool `json:"enable"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
	// The SMS etiquette policy. The maximum size is 50.
	SMSEtiquettePolicy []GetGroupPhoneSettingsOKSMSEtiquetteToolSMSEtiquettePolicyItem `json:"sms_etiquette_policy"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteTool) GetEnable() OptBool {
	return s.Enable
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteTool) GetModified() OptBool {
	return s.Modified
}

// GetSMSEtiquettePolicy returns the value of SMSEtiquettePolicy.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteTool) GetSMSEtiquettePolicy() []GetGroupPhoneSettingsOKSMSEtiquetteToolSMSEtiquettePolicyItem {
	return s.SMSEtiquettePolicy
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteTool) SetEnable(val OptBool) {
	s.Enable = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteTool) SetModified(val OptBool) {
	s.Modified = val
}

// SetSMSEtiquettePolicy sets the value of SMSEtiquettePolicy.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteTool) SetSMSEtiquettePolicy(val []GetGroupPhoneSettingsOKSMSEtiquetteToolSMSEtiquettePolicyItem) {
	s.SMSEtiquettePolicy = val
}

type GetGroupPhoneSettingsOKSMSEtiquetteToolSMSEtiquettePolicyItem struct {
	// The SMS etiquette policy ID.
	ID OptString `json:"id"`
	// The SMS etiquette policy name.
	Name OptString `json:"name"`
	// The SMS etiquette policy description.
	Description OptString `json:"description"`
	// The SMS etiquette policy rule, `1` - Keywords, `2` - Regular Expression.
	Rule OptInt `json:"rule"`
	// The SMS etiquette policy content. For rule `1`, add keywords separated by comma, the following
	// characters are supported A-Z, a-z, 0-9. For rule `2`, add regular expressions, back references and
	// zero-width assertions area not supported.
	Content OptString `json:"content"`
	// The actions taken when a policy is triggered, `1` - ask user to confirm sending of message, `2` -
	// block the message.
	Action OptInt `json:"action"`
	// Whether active or not.
	Active OptBool `json:"active"`
}

// GetID returns the value of ID.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteToolSMSEtiquettePolicyItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteToolSMSEtiquettePolicyItem) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteToolSMSEtiquettePolicyItem) GetDescription() OptString {
	return s.Description
}

// GetRule returns the value of Rule.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteToolSMSEtiquettePolicyItem) GetRule() OptInt {
	return s.Rule
}

// GetContent returns the value of Content.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteToolSMSEtiquettePolicyItem) GetContent() OptString {
	return s.Content
}

// GetAction returns the value of Action.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteToolSMSEtiquettePolicyItem) GetAction() OptInt {
	return s.Action
}

// GetActive returns the value of Active.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteToolSMSEtiquettePolicyItem) GetActive() OptBool {
	return s.Active
}

// SetID sets the value of ID.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteToolSMSEtiquettePolicyItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteToolSMSEtiquettePolicyItem) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteToolSMSEtiquettePolicyItem) SetDescription(val OptString) {
	s.Description = val
}

// SetRule sets the value of Rule.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteToolSMSEtiquettePolicyItem) SetRule(val OptInt) {
	s.Rule = val
}

// SetContent sets the value of Content.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteToolSMSEtiquettePolicyItem) SetContent(val OptString) {
	s.Content = val
}

// SetAction sets the value of Action.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteToolSMSEtiquettePolicyItem) SetAction(val OptInt) {
	s.Action = val
}

// SetActive sets the value of Active.
func (s *GetGroupPhoneSettingsOKSMSEtiquetteToolSMSEtiquettePolicyItem) SetActive(val OptBool) {
	s.Active = val
}

type GetGroupPhoneSettingsOKSelectOutboundCallerID struct {
	// Whether to allow extensions to change outbound caller ID when placing calls.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified.
	Modified OptBool `json:"modified"`
	// Whether to allow the current extension to hide outbound caller id. Settings is only available with
	// client version 5.13.5 or later.
	AllowHideOutboundCallerID OptBool `json:"allow_hide_outbound_caller_id"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKSelectOutboundCallerID) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKSelectOutboundCallerID) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKSelectOutboundCallerID) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKSelectOutboundCallerID) GetModified() OptBool {
	return s.Modified
}

// GetAllowHideOutboundCallerID returns the value of AllowHideOutboundCallerID.
func (s *GetGroupPhoneSettingsOKSelectOutboundCallerID) GetAllowHideOutboundCallerID() OptBool {
	return s.AllowHideOutboundCallerID
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKSelectOutboundCallerID) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKSelectOutboundCallerID) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKSelectOutboundCallerID) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKSelectOutboundCallerID) SetModified(val OptBool) {
	s.Modified = val
}

// SetAllowHideOutboundCallerID sets the value of AllowHideOutboundCallerID.
func (s *GetGroupPhoneSettingsOKSelectOutboundCallerID) SetAllowHideOutboundCallerID(val OptBool) {
	s.AllowHideOutboundCallerID = val
}

// Once enabled, users receive email notification when there is a new shared voicemail or videomail.
// If the extension that shares the voicemail or videomail has disabled the voicemail or videomail
// notification by email policy, then users do not receive notifications.
type GetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified.
	// If modified, they can be reset (displayed when using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail) SetModified(val OptBool) {
	s.Modified = val
}

type GetGroupPhoneSettingsOKVoicemail struct {
	// Whether to allow users to access, receive or share voicemail and video mail.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified.
	Modified OptBool `json:"modified"`
	// Whether to allow users to delete their own voicemail.
	AllowDelete OptBool `json:"allow_delete"`
	// Whether to allow users to download their own voicemail.
	AllowDownload OptBool `json:"allow_download"`
	// Whether to allow users to access, share, download or delete video mail.
	AllowVideomail OptBool `json:"allow_videomail"`
	// Whether to allow user to share their own voicemail.
	AllowShare OptBool `json:"allow_share"`
	// Whether to allow virtual background for videomail or video greeting.
	AllowVirtualBackground OptBool `json:"allow_virtual_background"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKVoicemail) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKVoicemail) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKVoicemail) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKVoicemail) GetModified() OptBool {
	return s.Modified
}

// GetAllowDelete returns the value of AllowDelete.
func (s *GetGroupPhoneSettingsOKVoicemail) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *GetGroupPhoneSettingsOKVoicemail) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowVideomail returns the value of AllowVideomail.
func (s *GetGroupPhoneSettingsOKVoicemail) GetAllowVideomail() OptBool {
	return s.AllowVideomail
}

// GetAllowShare returns the value of AllowShare.
func (s *GetGroupPhoneSettingsOKVoicemail) GetAllowShare() OptBool {
	return s.AllowShare
}

// GetAllowVirtualBackground returns the value of AllowVirtualBackground.
func (s *GetGroupPhoneSettingsOKVoicemail) GetAllowVirtualBackground() OptBool {
	return s.AllowVirtualBackground
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKVoicemail) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKVoicemail) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKVoicemail) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKVoicemail) SetModified(val OptBool) {
	s.Modified = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *GetGroupPhoneSettingsOKVoicemail) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *GetGroupPhoneSettingsOKVoicemail) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowVideomail sets the value of AllowVideomail.
func (s *GetGroupPhoneSettingsOKVoicemail) SetAllowVideomail(val OptBool) {
	s.AllowVideomail = val
}

// SetAllowShare sets the value of AllowShare.
func (s *GetGroupPhoneSettingsOKVoicemail) SetAllowShare(val OptBool) {
	s.AllowShare = val
}

// SetAllowVirtualBackground sets the value of AllowVirtualBackground.
func (s *GetGroupPhoneSettingsOKVoicemail) SetAllowVirtualBackground(val OptBool) {
	s.AllowVirtualBackground = val
}

// Once enabled, users receive email notifications when there is a new voicemail from users, call
// queues, auto receptionists, or shared line groups. Users who disabled the shared voicemail
// notification by email policy do not receive notifications.
type GetGroupPhoneSettingsOKVoicemailNotificationByEmail struct {
	// Whether to include the voicemail file.
	IncludeVoicemailFile OptBool `json:"include_voicemail_file"`
	// Whether to include the voicemail transcription.
	IncludeVoicemailTranscription OptBool `json:"include_voicemail_transcription"`
	// Whether to forward the voicemail to email.
	ForwardVoicemailToEmail OptBool `json:"forward_voicemail_to_email"`
	Enable                  OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetIncludeVoicemailFile returns the value of IncludeVoicemailFile.
func (s *GetGroupPhoneSettingsOKVoicemailNotificationByEmail) GetIncludeVoicemailFile() OptBool {
	return s.IncludeVoicemailFile
}

// GetIncludeVoicemailTranscription returns the value of IncludeVoicemailTranscription.
func (s *GetGroupPhoneSettingsOKVoicemailNotificationByEmail) GetIncludeVoicemailTranscription() OptBool {
	return s.IncludeVoicemailTranscription
}

// GetForwardVoicemailToEmail returns the value of ForwardVoicemailToEmail.
func (s *GetGroupPhoneSettingsOKVoicemailNotificationByEmail) GetForwardVoicemailToEmail() OptBool {
	return s.ForwardVoicemailToEmail
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKVoicemailNotificationByEmail) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKVoicemailNotificationByEmail) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKVoicemailNotificationByEmail) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKVoicemailNotificationByEmail) GetModified() OptBool {
	return s.Modified
}

// SetIncludeVoicemailFile sets the value of IncludeVoicemailFile.
func (s *GetGroupPhoneSettingsOKVoicemailNotificationByEmail) SetIncludeVoicemailFile(val OptBool) {
	s.IncludeVoicemailFile = val
}

// SetIncludeVoicemailTranscription sets the value of IncludeVoicemailTranscription.
func (s *GetGroupPhoneSettingsOKVoicemailNotificationByEmail) SetIncludeVoicemailTranscription(val OptBool) {
	s.IncludeVoicemailTranscription = val
}

// SetForwardVoicemailToEmail sets the value of ForwardVoicemailToEmail.
func (s *GetGroupPhoneSettingsOKVoicemailNotificationByEmail) SetForwardVoicemailToEmail(val OptBool) {
	s.ForwardVoicemailToEmail = val
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKVoicemailNotificationByEmail) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKVoicemailNotificationByEmail) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKVoicemailNotificationByEmail) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKVoicemailNotificationByEmail) SetModified(val OptBool) {
	s.Modified = val
}

type GetGroupPhoneSettingsOKVoicemailTranscription struct {
	// Whether to enable voicemail or videomail transcription feature for user, auto receptionist, call
	// queue, and shared line groups.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKVoicemailTranscription) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKVoicemailTranscription) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKVoicemailTranscription) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKVoicemailTranscription) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKVoicemailTranscription) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKVoicemailTranscription) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKVoicemailTranscription) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKVoicemailTranscription) SetModified(val OptBool) {
	s.Modified = val
}

type GetGroupPhoneSettingsOKZoomPhoneOnMobile struct {
	// This field allows users to use Zoom Phone on mobile clients (iOS, iPad OS, and Android).
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
	// This field allows calling and SMS/MMS functions on mobile.
	AllowCallingSMSMms OptBool `json:"allow_calling_sms_mms"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKZoomPhoneOnMobile) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKZoomPhoneOnMobile) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKZoomPhoneOnMobile) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKZoomPhoneOnMobile) GetModified() OptBool {
	return s.Modified
}

// GetAllowCallingSMSMms returns the value of AllowCallingSMSMms.
func (s *GetGroupPhoneSettingsOKZoomPhoneOnMobile) GetAllowCallingSMSMms() OptBool {
	return s.AllowCallingSMSMms
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKZoomPhoneOnMobile) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKZoomPhoneOnMobile) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKZoomPhoneOnMobile) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKZoomPhoneOnMobile) SetModified(val OptBool) {
	s.Modified = val
}

// SetAllowCallingSMSMms sets the value of AllowCallingSMSMms.
func (s *GetGroupPhoneSettingsOKZoomPhoneOnMobile) SetAllowCallingSMSMms(val OptBool) {
	s.AllowCallingSMSMms = val
}

// Whether to allow user to use Zoom Phone on Zoom Progressive Web App.
type GetGroupPhoneSettingsOKZoomPhoneOnPwa struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetGroupPhoneSettingsOKZoomPhoneOnPwa) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetGroupPhoneSettingsOKZoomPhoneOnPwa) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetGroupPhoneSettingsOKZoomPhoneOnPwa) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetGroupPhoneSettingsOKZoomPhoneOnPwa) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetGroupPhoneSettingsOKZoomPhoneOnPwa) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetGroupPhoneSettingsOKZoomPhoneOnPwa) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetGroupPhoneSettingsOKZoomPhoneOnPwa) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetGroupPhoneSettingsOKZoomPhoneOnPwa) SetModified(val OptBool) {
	s.Modified = val
}

type GetLocationOK struct {
	// The emergency service location's BSSIDs (Basic Service Set Identifiers).
	Bssid OptString `json:"bssid"`
	// The ELIN (Emergency Location Identification Number).
	Elin OptGetLocationOKElin `json:"elin"`
	// The emergency location's address information.
	EmergencyAddress OptGetLocationOKEmergencyAddress `json:"emergency_address"`
	// The emergency location's ID.
	ID OptString `json:"id"`
	// The emergency location's name.
	Name            OptString                          `json:"name"`
	NetworkSwitches []GetLocationOKNetworkSwitchesItem `json:"network_switches"`
	// The emergency location's parent location ID.
	ParentLocationID OptString `json:"parent_location_id"`
	// The emergency location's subnet or private IP address.
	PrivateIP OptString `json:"private_ip"`
	// The emergency location's public IP address.
	PublicIP OptString `json:"public_ip"`
	// The emergency location's SIP group information.
	SipGroup OptGetLocationOKSipGroup `json:"sip_group"`
	// The emergency location's site information.
	Site OptGetLocationOKSite `json:"site"`
	// If true, it requires a user's location match on both public and private IP address, or BSSID, or
	// network switch; detecting only a public IP address is not enough to detect the location.
	MinimumMatchCriteria OptBool `json:"minimum_match_criteria"`
}

// GetBssid returns the value of Bssid.
func (s *GetLocationOK) GetBssid() OptString {
	return s.Bssid
}

// GetElin returns the value of Elin.
func (s *GetLocationOK) GetElin() OptGetLocationOKElin {
	return s.Elin
}

// GetEmergencyAddress returns the value of EmergencyAddress.
func (s *GetLocationOK) GetEmergencyAddress() OptGetLocationOKEmergencyAddress {
	return s.EmergencyAddress
}

// GetID returns the value of ID.
func (s *GetLocationOK) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetLocationOK) GetName() OptString {
	return s.Name
}

// GetNetworkSwitches returns the value of NetworkSwitches.
func (s *GetLocationOK) GetNetworkSwitches() []GetLocationOKNetworkSwitchesItem {
	return s.NetworkSwitches
}

// GetParentLocationID returns the value of ParentLocationID.
func (s *GetLocationOK) GetParentLocationID() OptString {
	return s.ParentLocationID
}

// GetPrivateIP returns the value of PrivateIP.
func (s *GetLocationOK) GetPrivateIP() OptString {
	return s.PrivateIP
}

// GetPublicIP returns the value of PublicIP.
func (s *GetLocationOK) GetPublicIP() OptString {
	return s.PublicIP
}

// GetSipGroup returns the value of SipGroup.
func (s *GetLocationOK) GetSipGroup() OptGetLocationOKSipGroup {
	return s.SipGroup
}

// GetSite returns the value of Site.
func (s *GetLocationOK) GetSite() OptGetLocationOKSite {
	return s.Site
}

// GetMinimumMatchCriteria returns the value of MinimumMatchCriteria.
func (s *GetLocationOK) GetMinimumMatchCriteria() OptBool {
	return s.MinimumMatchCriteria
}

// SetBssid sets the value of Bssid.
func (s *GetLocationOK) SetBssid(val OptString) {
	s.Bssid = val
}

// SetElin sets the value of Elin.
func (s *GetLocationOK) SetElin(val OptGetLocationOKElin) {
	s.Elin = val
}

// SetEmergencyAddress sets the value of EmergencyAddress.
func (s *GetLocationOK) SetEmergencyAddress(val OptGetLocationOKEmergencyAddress) {
	s.EmergencyAddress = val
}

// SetID sets the value of ID.
func (s *GetLocationOK) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetLocationOK) SetName(val OptString) {
	s.Name = val
}

// SetNetworkSwitches sets the value of NetworkSwitches.
func (s *GetLocationOK) SetNetworkSwitches(val []GetLocationOKNetworkSwitchesItem) {
	s.NetworkSwitches = val
}

// SetParentLocationID sets the value of ParentLocationID.
func (s *GetLocationOK) SetParentLocationID(val OptString) {
	s.ParentLocationID = val
}

// SetPrivateIP sets the value of PrivateIP.
func (s *GetLocationOK) SetPrivateIP(val OptString) {
	s.PrivateIP = val
}

// SetPublicIP sets the value of PublicIP.
func (s *GetLocationOK) SetPublicIP(val OptString) {
	s.PublicIP = val
}

// SetSipGroup sets the value of SipGroup.
func (s *GetLocationOK) SetSipGroup(val OptGetLocationOKSipGroup) {
	s.SipGroup = val
}

// SetSite sets the value of Site.
func (s *GetLocationOK) SetSite(val OptGetLocationOKSite) {
	s.Site = val
}

// SetMinimumMatchCriteria sets the value of MinimumMatchCriteria.
func (s *GetLocationOK) SetMinimumMatchCriteria(val OptBool) {
	s.MinimumMatchCriteria = val
}

// The ELIN (Emergency Location Identification Number).
type GetLocationOKElin struct {
	// The emergency location's phone number.
	PhoneNumber OptString `json:"phone_number"`
	// The emergency location's phone number ID.
	PhoneNumberID OptString `json:"phone_number_id"`
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *GetLocationOKElin) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetPhoneNumberID returns the value of PhoneNumberID.
func (s *GetLocationOKElin) GetPhoneNumberID() OptString {
	return s.PhoneNumberID
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *GetLocationOKElin) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetPhoneNumberID sets the value of PhoneNumberID.
func (s *GetLocationOKElin) SetPhoneNumberID(val OptString) {
	s.PhoneNumberID = val
}

// The emergency location's address information.
type GetLocationOKEmergencyAddress struct {
	// The emergency location address line 1.
	AddressLine1 OptString `json:"address_line1"`
	// The emergency location address line 2.
	AddressLine2 OptString `json:"address_line2"`
	// The emergency location address's city.
	City OptString `json:"city"`
	// The emergency location address's country.
	Country OptString `json:"country"`
	// The emergency location address ID.
	ID OptString `json:"id"`
	// The emergency location address's state code.
	StateCode OptString `json:"state_code"`
	// The emergency address's zip code.
	Zip OptString `json:"zip"`
}

// GetAddressLine1 returns the value of AddressLine1.
func (s *GetLocationOKEmergencyAddress) GetAddressLine1() OptString {
	return s.AddressLine1
}

// GetAddressLine2 returns the value of AddressLine2.
func (s *GetLocationOKEmergencyAddress) GetAddressLine2() OptString {
	return s.AddressLine2
}

// GetCity returns the value of City.
func (s *GetLocationOKEmergencyAddress) GetCity() OptString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *GetLocationOKEmergencyAddress) GetCountry() OptString {
	return s.Country
}

// GetID returns the value of ID.
func (s *GetLocationOKEmergencyAddress) GetID() OptString {
	return s.ID
}

// GetStateCode returns the value of StateCode.
func (s *GetLocationOKEmergencyAddress) GetStateCode() OptString {
	return s.StateCode
}

// GetZip returns the value of Zip.
func (s *GetLocationOKEmergencyAddress) GetZip() OptString {
	return s.Zip
}

// SetAddressLine1 sets the value of AddressLine1.
func (s *GetLocationOKEmergencyAddress) SetAddressLine1(val OptString) {
	s.AddressLine1 = val
}

// SetAddressLine2 sets the value of AddressLine2.
func (s *GetLocationOKEmergencyAddress) SetAddressLine2(val OptString) {
	s.AddressLine2 = val
}

// SetCity sets the value of City.
func (s *GetLocationOKEmergencyAddress) SetCity(val OptString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *GetLocationOKEmergencyAddress) SetCountry(val OptString) {
	s.Country = val
}

// SetID sets the value of ID.
func (s *GetLocationOKEmergencyAddress) SetID(val OptString) {
	s.ID = val
}

// SetStateCode sets the value of StateCode.
func (s *GetLocationOKEmergencyAddress) SetStateCode(val OptString) {
	s.StateCode = val
}

// SetZip sets the value of Zip.
func (s *GetLocationOKEmergencyAddress) SetZip(val OptString) {
	s.Zip = val
}

type GetLocationOKNetworkSwitchesItem struct {
	// The emergency location's assigned MAC address.
	MACAddress OptString `json:"mac_address"`
	// The port label.
	Port OptString `json:"port"`
	// The port prefix.
	PortPrefix OptString `json:"port_prefix"`
	// The port starting range number.
	PortRangeFrom OptString `json:"port_range_from"`
	// The port ending range number.
	PortRangeTo OptString `json:"port_range_to"`
}

// GetMACAddress returns the value of MACAddress.
func (s *GetLocationOKNetworkSwitchesItem) GetMACAddress() OptString {
	return s.MACAddress
}

// GetPort returns the value of Port.
func (s *GetLocationOKNetworkSwitchesItem) GetPort() OptString {
	return s.Port
}

// GetPortPrefix returns the value of PortPrefix.
func (s *GetLocationOKNetworkSwitchesItem) GetPortPrefix() OptString {
	return s.PortPrefix
}

// GetPortRangeFrom returns the value of PortRangeFrom.
func (s *GetLocationOKNetworkSwitchesItem) GetPortRangeFrom() OptString {
	return s.PortRangeFrom
}

// GetPortRangeTo returns the value of PortRangeTo.
func (s *GetLocationOKNetworkSwitchesItem) GetPortRangeTo() OptString {
	return s.PortRangeTo
}

// SetMACAddress sets the value of MACAddress.
func (s *GetLocationOKNetworkSwitchesItem) SetMACAddress(val OptString) {
	s.MACAddress = val
}

// SetPort sets the value of Port.
func (s *GetLocationOKNetworkSwitchesItem) SetPort(val OptString) {
	s.Port = val
}

// SetPortPrefix sets the value of PortPrefix.
func (s *GetLocationOKNetworkSwitchesItem) SetPortPrefix(val OptString) {
	s.PortPrefix = val
}

// SetPortRangeFrom sets the value of PortRangeFrom.
func (s *GetLocationOKNetworkSwitchesItem) SetPortRangeFrom(val OptString) {
	s.PortRangeFrom = val
}

// SetPortRangeTo sets the value of PortRangeTo.
func (s *GetLocationOKNetworkSwitchesItem) SetPortRangeTo(val OptString) {
	s.PortRangeTo = val
}

// The emergency location's SIP group information.
type GetLocationOKSipGroup struct {
	// The SIP group's display name.
	DisplayName OptString `json:"display_name"`
	// The SIP group ID.
	ID OptString `json:"id"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetLocationOKSipGroup) GetDisplayName() OptString {
	return s.DisplayName
}

// GetID returns the value of ID.
func (s *GetLocationOKSipGroup) GetID() OptString {
	return s.ID
}

// SetDisplayName sets the value of DisplayName.
func (s *GetLocationOKSipGroup) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetID sets the value of ID.
func (s *GetLocationOKSipGroup) SetID(val OptString) {
	s.ID = val
}

// The emergency location's site information.
type GetLocationOKSite struct {
	// The site ID.
	ID OptString `json:"id"`
	// The site name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetLocationOKSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetLocationOKSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetLocationOKSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetLocationOKSite) SetName(val OptString) {
	s.Name = val
}

type GetMonitoringGroupByIdOK struct {
	// The monitoring group ID.
	ID OptString `json:"id"`
	// The number of monitors.
	MonitorMembersCount OptInt `json:"monitor_members_count"`
	// The number of monitored users.
	MonitoredMembersCount OptInt `json:"monitored_members_count"`
	// This field sets the group's monitoring privileges.
	MonitoringPrivileges []string `json:"monitoring_privileges"`
	// The monitoring group's name.
	Name OptString `json:"name"`
	// Whether to play a disclaimer prompt to the call participants.
	Prompt OptBool `json:"prompt"`
	// The site of monitoring group.
	Site OptGetMonitoringGroupByIdOKSite `json:"site"`
	// The monitoring type.
	// * `1` &mdash; Users &amp; Common Areas.
	// * `2` &mdash; Call Queues.
	// * `3` &mdash; Shared Line Group.
	// * `4` &mdash; Shared Line Appearance.
	Type OptInt `json:"type"`
}

// GetID returns the value of ID.
func (s *GetMonitoringGroupByIdOK) GetID() OptString {
	return s.ID
}

// GetMonitorMembersCount returns the value of MonitorMembersCount.
func (s *GetMonitoringGroupByIdOK) GetMonitorMembersCount() OptInt {
	return s.MonitorMembersCount
}

// GetMonitoredMembersCount returns the value of MonitoredMembersCount.
func (s *GetMonitoringGroupByIdOK) GetMonitoredMembersCount() OptInt {
	return s.MonitoredMembersCount
}

// GetMonitoringPrivileges returns the value of MonitoringPrivileges.
func (s *GetMonitoringGroupByIdOK) GetMonitoringPrivileges() []string {
	return s.MonitoringPrivileges
}

// GetName returns the value of Name.
func (s *GetMonitoringGroupByIdOK) GetName() OptString {
	return s.Name
}

// GetPrompt returns the value of Prompt.
func (s *GetMonitoringGroupByIdOK) GetPrompt() OptBool {
	return s.Prompt
}

// GetSite returns the value of Site.
func (s *GetMonitoringGroupByIdOK) GetSite() OptGetMonitoringGroupByIdOKSite {
	return s.Site
}

// GetType returns the value of Type.
func (s *GetMonitoringGroupByIdOK) GetType() OptInt {
	return s.Type
}

// SetID sets the value of ID.
func (s *GetMonitoringGroupByIdOK) SetID(val OptString) {
	s.ID = val
}

// SetMonitorMembersCount sets the value of MonitorMembersCount.
func (s *GetMonitoringGroupByIdOK) SetMonitorMembersCount(val OptInt) {
	s.MonitorMembersCount = val
}

// SetMonitoredMembersCount sets the value of MonitoredMembersCount.
func (s *GetMonitoringGroupByIdOK) SetMonitoredMembersCount(val OptInt) {
	s.MonitoredMembersCount = val
}

// SetMonitoringPrivileges sets the value of MonitoringPrivileges.
func (s *GetMonitoringGroupByIdOK) SetMonitoringPrivileges(val []string) {
	s.MonitoringPrivileges = val
}

// SetName sets the value of Name.
func (s *GetMonitoringGroupByIdOK) SetName(val OptString) {
	s.Name = val
}

// SetPrompt sets the value of Prompt.
func (s *GetMonitoringGroupByIdOK) SetPrompt(val OptBool) {
	s.Prompt = val
}

// SetSite sets the value of Site.
func (s *GetMonitoringGroupByIdOK) SetSite(val OptGetMonitoringGroupByIdOKSite) {
	s.Site = val
}

// SetType sets the value of Type.
func (s *GetMonitoringGroupByIdOK) SetType(val OptInt) {
	s.Type = val
}

// The site of monitoring group.
type GetMonitoringGroupByIdOKSite struct {
	// The site ID.
	ID OptString `json:"id"`
	// The site name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetMonitoringGroupByIdOKSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetMonitoringGroupByIdOKSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetMonitoringGroupByIdOKSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetMonitoringGroupByIdOKSite) SetName(val OptString) {
	s.Name = val
}

// Merged schema.
type GetPSOperationLogsOK struct {
	// The next page token paginates through a large set of result. A next page token returns whenever
	// the set of the available result list exceeds the page size. The expiration period is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The amount of records returns within a single API call.
	PageSize OptInt `json:"page_size"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
	// The start time and date of the log.
	From OptString `json:"from"`
	// The end time and date of the log.
	To OptString `json:"to"`
	// The array of operation log objects.
	OperationLogs []GetPSOperationLogsOKOperationLogsItem `json:"operation_logs"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *GetPSOperationLogsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *GetPSOperationLogsOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *GetPSOperationLogsOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// GetFrom returns the value of From.
func (s *GetPSOperationLogsOK) GetFrom() OptString {
	return s.From
}

// GetTo returns the value of To.
func (s *GetPSOperationLogsOK) GetTo() OptString {
	return s.To
}

// GetOperationLogs returns the value of OperationLogs.
func (s *GetPSOperationLogsOK) GetOperationLogs() []GetPSOperationLogsOKOperationLogsItem {
	return s.OperationLogs
}

// SetNextPageToken sets the value of NextPageToken.
func (s *GetPSOperationLogsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *GetPSOperationLogsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *GetPSOperationLogsOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

// SetFrom sets the value of From.
func (s *GetPSOperationLogsOK) SetFrom(val OptString) {
	s.From = val
}

// SetTo sets the value of To.
func (s *GetPSOperationLogsOK) SetTo(val OptString) {
	s.To = val
}

// SetOperationLogs sets the value of OperationLogs.
func (s *GetPSOperationLogsOK) SetOperationLogs(val []GetPSOperationLogsOKOperationLogsItem) {
	s.OperationLogs = val
}

type GetPSOperationLogsOKOperationLogsItem struct {
	// The action that was performed.
	Action OptString `json:"action"`
	// The category type of the operation.
	CategoryType OptString `json:"category_type"`
	// The Operation details.
	OperationDetail OptString `json:"operation_detail"`
	// The user who performed the operation.
	Operator OptString `json:"operator"`
	// The time at which the operation was performed.
	Time OptDateTime `json:"time"`
}

// GetAction returns the value of Action.
func (s *GetPSOperationLogsOKOperationLogsItem) GetAction() OptString {
	return s.Action
}

// GetCategoryType returns the value of CategoryType.
func (s *GetPSOperationLogsOKOperationLogsItem) GetCategoryType() OptString {
	return s.CategoryType
}

// GetOperationDetail returns the value of OperationDetail.
func (s *GetPSOperationLogsOKOperationLogsItem) GetOperationDetail() OptString {
	return s.OperationDetail
}

// GetOperator returns the value of Operator.
func (s *GetPSOperationLogsOKOperationLogsItem) GetOperator() OptString {
	return s.Operator
}

// GetTime returns the value of Time.
func (s *GetPSOperationLogsOKOperationLogsItem) GetTime() OptDateTime {
	return s.Time
}

// SetAction sets the value of Action.
func (s *GetPSOperationLogsOKOperationLogsItem) SetAction(val OptString) {
	s.Action = val
}

// SetCategoryType sets the value of CategoryType.
func (s *GetPSOperationLogsOKOperationLogsItem) SetCategoryType(val OptString) {
	s.CategoryType = val
}

// SetOperationDetail sets the value of OperationDetail.
func (s *GetPSOperationLogsOKOperationLogsItem) SetOperationDetail(val OptString) {
	s.OperationDetail = val
}

// SetOperator sets the value of Operator.
func (s *GetPSOperationLogsOKOperationLogsItem) SetOperator(val OptString) {
	s.Operator = val
}

// SetTime sets the value of Time.
func (s *GetPSOperationLogsOKOperationLogsItem) SetTime(val OptDateTime) {
	s.Time = val
}

type GetPhoneNumberDetailsOK struct {
	Assignee OptGetPhoneNumberDetailsOKAssignee `json:"assignee"`
	// The capability of the phone number to receive incoming calls, make outgoing calls, or both.
	// Values are `incoming`, `outgoing`, or both values.
	Capability []string                          `json:"capability"`
	Carrier    OptGetPhoneNumberDetailsOKCarrier `json:"carrier"`
	// The display name of the phone number.
	DisplayName OptString `json:"display_name"`
	// This field displays when the number is a `byoc` number.
	EmergencyAddress OptGetPhoneNumberDetailsOKEmergencyAddress `json:"emergency_address"`
	// This field displays when the number is a `byoc` number.
	// The emergency address status: 1-carrier update required, 2-confirmed.
	EmergencyAddressStatus OptInt `json:"emergency_address_status"`
	// Thia fieild displays when the number is a `byoc` number.
	// The emergency address information update time(format: 'yyyy-MM-ddThh:dd:ssZ').
	EmergencyAddressUpdateTime OptString `json:"emergency_address_update_time"`
	// The unique identifier of the phone number.
	ID OptString `json:"id"`
	// The assigned location (city, state and country) of the phone number.
	Location OptString `json:"location"`
	// The phone number in E164 format.
	Number OptString `json:"number"`
	// The type of number.
	// The values can be one of the following:
	// `toll`, `tollfree`.
	NumberType OptString                          `json:"number_type"`
	SipGroup   OptGetPhoneNumberDetailsOKSipGroup `json:"sip_group"`
	Site       OptGetPhoneNumberDetailsOKSite     `json:"site"`
	// The source of phone number.
	Source OptString `json:"source"`
	// The status of the number.
	Status OptString `json:"status"`
}

// GetAssignee returns the value of Assignee.
func (s *GetPhoneNumberDetailsOK) GetAssignee() OptGetPhoneNumberDetailsOKAssignee {
	return s.Assignee
}

// GetCapability returns the value of Capability.
func (s *GetPhoneNumberDetailsOK) GetCapability() []string {
	return s.Capability
}

// GetCarrier returns the value of Carrier.
func (s *GetPhoneNumberDetailsOK) GetCarrier() OptGetPhoneNumberDetailsOKCarrier {
	return s.Carrier
}

// GetDisplayName returns the value of DisplayName.
func (s *GetPhoneNumberDetailsOK) GetDisplayName() OptString {
	return s.DisplayName
}

// GetEmergencyAddress returns the value of EmergencyAddress.
func (s *GetPhoneNumberDetailsOK) GetEmergencyAddress() OptGetPhoneNumberDetailsOKEmergencyAddress {
	return s.EmergencyAddress
}

// GetEmergencyAddressStatus returns the value of EmergencyAddressStatus.
func (s *GetPhoneNumberDetailsOK) GetEmergencyAddressStatus() OptInt {
	return s.EmergencyAddressStatus
}

// GetEmergencyAddressUpdateTime returns the value of EmergencyAddressUpdateTime.
func (s *GetPhoneNumberDetailsOK) GetEmergencyAddressUpdateTime() OptString {
	return s.EmergencyAddressUpdateTime
}

// GetID returns the value of ID.
func (s *GetPhoneNumberDetailsOK) GetID() OptString {
	return s.ID
}

// GetLocation returns the value of Location.
func (s *GetPhoneNumberDetailsOK) GetLocation() OptString {
	return s.Location
}

// GetNumber returns the value of Number.
func (s *GetPhoneNumberDetailsOK) GetNumber() OptString {
	return s.Number
}

// GetNumberType returns the value of NumberType.
func (s *GetPhoneNumberDetailsOK) GetNumberType() OptString {
	return s.NumberType
}

// GetSipGroup returns the value of SipGroup.
func (s *GetPhoneNumberDetailsOK) GetSipGroup() OptGetPhoneNumberDetailsOKSipGroup {
	return s.SipGroup
}

// GetSite returns the value of Site.
func (s *GetPhoneNumberDetailsOK) GetSite() OptGetPhoneNumberDetailsOKSite {
	return s.Site
}

// GetSource returns the value of Source.
func (s *GetPhoneNumberDetailsOK) GetSource() OptString {
	return s.Source
}

// GetStatus returns the value of Status.
func (s *GetPhoneNumberDetailsOK) GetStatus() OptString {
	return s.Status
}

// SetAssignee sets the value of Assignee.
func (s *GetPhoneNumberDetailsOK) SetAssignee(val OptGetPhoneNumberDetailsOKAssignee) {
	s.Assignee = val
}

// SetCapability sets the value of Capability.
func (s *GetPhoneNumberDetailsOK) SetCapability(val []string) {
	s.Capability = val
}

// SetCarrier sets the value of Carrier.
func (s *GetPhoneNumberDetailsOK) SetCarrier(val OptGetPhoneNumberDetailsOKCarrier) {
	s.Carrier = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetPhoneNumberDetailsOK) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetEmergencyAddress sets the value of EmergencyAddress.
func (s *GetPhoneNumberDetailsOK) SetEmergencyAddress(val OptGetPhoneNumberDetailsOKEmergencyAddress) {
	s.EmergencyAddress = val
}

// SetEmergencyAddressStatus sets the value of EmergencyAddressStatus.
func (s *GetPhoneNumberDetailsOK) SetEmergencyAddressStatus(val OptInt) {
	s.EmergencyAddressStatus = val
}

// SetEmergencyAddressUpdateTime sets the value of EmergencyAddressUpdateTime.
func (s *GetPhoneNumberDetailsOK) SetEmergencyAddressUpdateTime(val OptString) {
	s.EmergencyAddressUpdateTime = val
}

// SetID sets the value of ID.
func (s *GetPhoneNumberDetailsOK) SetID(val OptString) {
	s.ID = val
}

// SetLocation sets the value of Location.
func (s *GetPhoneNumberDetailsOK) SetLocation(val OptString) {
	s.Location = val
}

// SetNumber sets the value of Number.
func (s *GetPhoneNumberDetailsOK) SetNumber(val OptString) {
	s.Number = val
}

// SetNumberType sets the value of NumberType.
func (s *GetPhoneNumberDetailsOK) SetNumberType(val OptString) {
	s.NumberType = val
}

// SetSipGroup sets the value of SipGroup.
func (s *GetPhoneNumberDetailsOK) SetSipGroup(val OptGetPhoneNumberDetailsOKSipGroup) {
	s.SipGroup = val
}

// SetSite sets the value of Site.
func (s *GetPhoneNumberDetailsOK) SetSite(val OptGetPhoneNumberDetailsOKSite) {
	s.Site = val
}

// SetSource sets the value of Source.
func (s *GetPhoneNumberDetailsOK) SetSource(val OptString) {
	s.Source = val
}

// SetStatus sets the value of Status.
func (s *GetPhoneNumberDetailsOK) SetStatus(val OptString) {
	s.Status = val
}

type GetPhoneNumberDetailsOKAssignee struct {
	AudioPromptLanguage OptString `json:"audio_prompt_language"`
	// This field indicates the meeting service, defines the format, and displays the number in meeting
	// invitations and emails.
	DisplayNumber OptString `json:"display_number"`
	// The extension number of the phone.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// This field indicates the meeting service. You can only upload one audio file. The accepted format
	// is .wav (also 8k, mono, ULAW or ALAW). If no audio file uploads, Zoom uses the &quot;Telephone
	// welcome message&quot; setting in account settings.
	Greeting OptGetPhoneNumberDetailsOKAssigneeGreeting `json:"greeting"`
	// The ID of the user. The following are assigned: emergency number pool (if the account has multiple
	// sites enabled, the ID is `siteId`, else `accountId`), and company location.
	ID OptString `json:"id"`
	// Optional. This field indicates the meeting service. This label will be appended to the number in
	// parentheses, and will appear in meeting invitations and the zoom client. Formatting rules:
	// Maximum 32 characters
	// Do not use digits
	// Do not use characters &quot;(&quot; &quot;)&quot; &quot;,&quot; &quot;;&quot; or &quot;:&quot;.
	Label OptString `json:"label"`
	// The meeting ID for the meeting service.
	MeetingID OptString `json:"meeting_id"`
	// The name of the user to whom the number, emergency number pool, and company location are assigned.
	Name OptString `json:"name"`
	// This field indicates the meeting service. You can only upload one audio file. The accepted format
	// is .wav (also 8k, mono, ULAW or ALAW). If no audio file uploads, Zoom uses the &quot;Telephone
	// on-hold music&quot; setting in account settings.
	OnHoldMusic OptGetPhoneNumberDetailsOKAssigneeOnHoldMusic `json:"on_hold_music"`
	// This field indicates to whom the phone number belongs.
	// `user`: Number has been assigned to an existing phone user and allows them to receive calls
	// through their extension number or direct phone number.
	// `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.
	// us/hc/en-us/articles/360021524831-Managing-Call-Queues).
	// `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.
	// us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).
	// `commonArea`: Phone number has been assigned to a common area(https://support.zoom.
	// us/hc/en-us/articles/4481136653709-May-2022-New-Common-Area-Experience).
	// `emergencyNumberPool` `companyLocation` `meetingService`.
	Type OptString `json:"type"`
}

// GetAudioPromptLanguage returns the value of AudioPromptLanguage.
func (s *GetPhoneNumberDetailsOKAssignee) GetAudioPromptLanguage() OptString {
	return s.AudioPromptLanguage
}

// GetDisplayNumber returns the value of DisplayNumber.
func (s *GetPhoneNumberDetailsOKAssignee) GetDisplayNumber() OptString {
	return s.DisplayNumber
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetPhoneNumberDetailsOKAssignee) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetGreeting returns the value of Greeting.
func (s *GetPhoneNumberDetailsOKAssignee) GetGreeting() OptGetPhoneNumberDetailsOKAssigneeGreeting {
	return s.Greeting
}

// GetID returns the value of ID.
func (s *GetPhoneNumberDetailsOKAssignee) GetID() OptString {
	return s.ID
}

// GetLabel returns the value of Label.
func (s *GetPhoneNumberDetailsOKAssignee) GetLabel() OptString {
	return s.Label
}

// GetMeetingID returns the value of MeetingID.
func (s *GetPhoneNumberDetailsOKAssignee) GetMeetingID() OptString {
	return s.MeetingID
}

// GetName returns the value of Name.
func (s *GetPhoneNumberDetailsOKAssignee) GetName() OptString {
	return s.Name
}

// GetOnHoldMusic returns the value of OnHoldMusic.
func (s *GetPhoneNumberDetailsOKAssignee) GetOnHoldMusic() OptGetPhoneNumberDetailsOKAssigneeOnHoldMusic {
	return s.OnHoldMusic
}

// GetType returns the value of Type.
func (s *GetPhoneNumberDetailsOKAssignee) GetType() OptString {
	return s.Type
}

// SetAudioPromptLanguage sets the value of AudioPromptLanguage.
func (s *GetPhoneNumberDetailsOKAssignee) SetAudioPromptLanguage(val OptString) {
	s.AudioPromptLanguage = val
}

// SetDisplayNumber sets the value of DisplayNumber.
func (s *GetPhoneNumberDetailsOKAssignee) SetDisplayNumber(val OptString) {
	s.DisplayNumber = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetPhoneNumberDetailsOKAssignee) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetGreeting sets the value of Greeting.
func (s *GetPhoneNumberDetailsOKAssignee) SetGreeting(val OptGetPhoneNumberDetailsOKAssigneeGreeting) {
	s.Greeting = val
}

// SetID sets the value of ID.
func (s *GetPhoneNumberDetailsOKAssignee) SetID(val OptString) {
	s.ID = val
}

// SetLabel sets the value of Label.
func (s *GetPhoneNumberDetailsOKAssignee) SetLabel(val OptString) {
	s.Label = val
}

// SetMeetingID sets the value of MeetingID.
func (s *GetPhoneNumberDetailsOKAssignee) SetMeetingID(val OptString) {
	s.MeetingID = val
}

// SetName sets the value of Name.
func (s *GetPhoneNumberDetailsOKAssignee) SetName(val OptString) {
	s.Name = val
}

// SetOnHoldMusic sets the value of OnHoldMusic.
func (s *GetPhoneNumberDetailsOKAssignee) SetOnHoldMusic(val OptGetPhoneNumberDetailsOKAssigneeOnHoldMusic) {
	s.OnHoldMusic = val
}

// SetType sets the value of Type.
func (s *GetPhoneNumberDetailsOKAssignee) SetType(val OptString) {
	s.Type = val
}

// This field indicates the meeting service. You can only upload one audio file. The accepted format
// is .wav (also 8k, mono, ULAW or ALAW). If no audio file uploads, Zoom uses the &quot;Telephone
// welcome message&quot; setting in account settings.
type GetPhoneNumberDetailsOKAssigneeGreeting struct {
	// The audio prompt file ID. If the audio was removed from the user's audio library, it will be
	// marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio
	// ID to get the audio information in the [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	ID OptString `json:"id"`
	// The audio prompt file name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetPhoneNumberDetailsOKAssigneeGreeting) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetPhoneNumberDetailsOKAssigneeGreeting) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetPhoneNumberDetailsOKAssigneeGreeting) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetPhoneNumberDetailsOKAssigneeGreeting) SetName(val OptString) {
	s.Name = val
}

// This field indicates the meeting service. You can only upload one audio file. The accepted format
// is .wav (also 8k, mono, ULAW or ALAW). If no audio file uploads, Zoom uses the &quot;Telephone
// on-hold music&quot; setting in account settings.
type GetPhoneNumberDetailsOKAssigneeOnHoldMusic struct {
	// The audio prompt file ID. If the audio was removed from the user's audio library, it will be
	// marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can use this audio ID to
	// get the audio information in the [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	ID OptString `json:"id"`
	// The audio prompt file name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetPhoneNumberDetailsOKAssigneeOnHoldMusic) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetPhoneNumberDetailsOKAssigneeOnHoldMusic) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetPhoneNumberDetailsOKAssigneeOnHoldMusic) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetPhoneNumberDetailsOKAssigneeOnHoldMusic) SetName(val OptString) {
	s.Name = val
}

type GetPhoneNumberDetailsOKCarrier struct {
	// The  carrier code.
	Code OptInt `json:"code"`
	// The carrier name.
	Name OptString `json:"name"`
}

// GetCode returns the value of Code.
func (s *GetPhoneNumberDetailsOKCarrier) GetCode() OptInt {
	return s.Code
}

// GetName returns the value of Name.
func (s *GetPhoneNumberDetailsOKCarrier) GetName() OptString {
	return s.Name
}

// SetCode sets the value of Code.
func (s *GetPhoneNumberDetailsOKCarrier) SetCode(val OptInt) {
	s.Code = val
}

// SetName sets the value of Name.
func (s *GetPhoneNumberDetailsOKCarrier) SetName(val OptString) {
	s.Name = val
}

// This field displays when the number is a `byoc` number.
type GetPhoneNumberDetailsOKEmergencyAddress struct {
	// The address Line 1 of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that consists of the house number
	// and street name.
	AddressLine1 OptString `json:"address_line1"`
	// The address Line 2 of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that consists of the building
	// number, floor number, unit, and so on.
	AddressLine2 OptString `json:"address_line2"`
	// The city of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	City OptString `json:"city"`
	// The two-lettered country code (Alpha-2 code in ISO-3166 format) standard of the site's [emergency
	// address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	Country OptString `json:"country"`
	// The state code of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	StateCode OptString `json:"state_code"`
	// The zip Code of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	Zip OptString `json:"zip"`
}

// GetAddressLine1 returns the value of AddressLine1.
func (s *GetPhoneNumberDetailsOKEmergencyAddress) GetAddressLine1() OptString {
	return s.AddressLine1
}

// GetAddressLine2 returns the value of AddressLine2.
func (s *GetPhoneNumberDetailsOKEmergencyAddress) GetAddressLine2() OptString {
	return s.AddressLine2
}

// GetCity returns the value of City.
func (s *GetPhoneNumberDetailsOKEmergencyAddress) GetCity() OptString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *GetPhoneNumberDetailsOKEmergencyAddress) GetCountry() OptString {
	return s.Country
}

// GetStateCode returns the value of StateCode.
func (s *GetPhoneNumberDetailsOKEmergencyAddress) GetStateCode() OptString {
	return s.StateCode
}

// GetZip returns the value of Zip.
func (s *GetPhoneNumberDetailsOKEmergencyAddress) GetZip() OptString {
	return s.Zip
}

// SetAddressLine1 sets the value of AddressLine1.
func (s *GetPhoneNumberDetailsOKEmergencyAddress) SetAddressLine1(val OptString) {
	s.AddressLine1 = val
}

// SetAddressLine2 sets the value of AddressLine2.
func (s *GetPhoneNumberDetailsOKEmergencyAddress) SetAddressLine2(val OptString) {
	s.AddressLine2 = val
}

// SetCity sets the value of City.
func (s *GetPhoneNumberDetailsOKEmergencyAddress) SetCity(val OptString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *GetPhoneNumberDetailsOKEmergencyAddress) SetCountry(val OptString) {
	s.Country = val
}

// SetStateCode sets the value of StateCode.
func (s *GetPhoneNumberDetailsOKEmergencyAddress) SetStateCode(val OptString) {
	s.StateCode = val
}

// SetZip sets the value of Zip.
func (s *GetPhoneNumberDetailsOKEmergencyAddress) SetZip(val OptString) {
	s.Zip = val
}

type GetPhoneNumberDetailsOKSipGroup struct {
	// The SIP group display name.
	DisplayName OptString `json:"display_name"`
	// The SIP group ID.
	ID OptString `json:"id"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetPhoneNumberDetailsOKSipGroup) GetDisplayName() OptString {
	return s.DisplayName
}

// GetID returns the value of ID.
func (s *GetPhoneNumberDetailsOKSipGroup) GetID() OptString {
	return s.ID
}

// SetDisplayName sets the value of DisplayName.
func (s *GetPhoneNumberDetailsOKSipGroup) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetID sets the value of ID.
func (s *GetPhoneNumberDetailsOKSipGroup) SetID(val OptString) {
	s.ID = val
}

type GetPhoneNumberDetailsOKSite struct {
	// The target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites)
	// assigned to the phone number.
	// Sites allow you to organize phone users in your organization. For example, your sites could be
	// created based on different office locations.
	ID OptString `json:"id"`
	// The name of the site where the phone number is assigned.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetPhoneNumberDetailsOKSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetPhoneNumberDetailsOKSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetPhoneNumberDetailsOKSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetPhoneNumberDetailsOKSite) SetName(val OptString) {
	s.Name = val
}

// The information about the user's phone recording.
type GetPhoneRecordingsByCallIdOrCallLogIdOK struct {
	// The phone call's unique ID.
	CallID OptString `json:"call_id"`
	// The phone call log's unique ID.
	CallLogID OptString `json:"call_log_id"`
	// The callee's contact name.
	CalleeName OptString `json:"callee_name"`
	// The callee's phone number.
	CalleeNumber OptString `json:"callee_number"`
	// The callee's number type:
	// * `1` — Internal number.
	// * `2` — External number.
	// * `3` — Customized emergency number.
	CalleeNumberType OptInt `json:"callee_number_type"`
	// The caller's contact name.
	CallerName OptString `json:"caller_name"`
	// The caller's phone number.
	CallerNumber OptString `json:"caller_number"`
	// The caller's number type:
	// * `1` — Internal number.
	// * `2` — External number.
	CallerNumberType OptInt `json:"caller_number_type"`
	// The user who initiates the call. The current recording must belong to the initiator and the call
	// queue for it to be available.
	OutgoingBy OptGetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy `json:"outgoing_by"`
	// The call-receiving user. The current recording must belong to the receiver and call queue for it
	// to be available.
	AcceptedBy OptGetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy `json:"accepted_by"`
	// The date and time when the recording was received.
	DateTime OptDateTime `json:"date_time"`
	// The call's direction:
	// * `inbound`
	// * `outbound`.
	Direction OptString `json:"direction"`
	// The URL from which to download the recording.
	// For security purposes, you **must** provide an OAuth access token in the Authorization header to
	// download the recording file using this URL.
	// For example:
	// ```curl --request GET \
	// --url {download_url} \
	// --header 'authorization: Bearer {access_token} \
	// --header 'content-type: application/json'
	// ```.
	DownloadURL OptString `json:"download_url"`
	// The call recording's duration, in seconds.
	Duration OptInt `json:"duration"`
	// The recording's end time.
	EndTime OptDateTime `json:"end_time"`
	// The recording's ID.
	ID OptString `json:"id"`
	// The meeting ID associated with the recording, if any.
	MeetingUUID OptString `json:"meeting_uuid"`
	// The owner of the recording.
	Owner OptGetPhoneRecordingsByCallIdOrCallLogIdOKOwner `json:"owner"`
	// The time and date the recording was deleted. It exists only when recording is from trash.
	DeletedTime OptDateTime `json:"deleted_time"`
	// The number of days left until recording is permanently deleted. If the recording never auto
	// deletes, the value is '-1'. It exists only when recording is from trash.
	DaysLeftAutoPermantelyDelete OptInt `json:"days_left_auto_permantely_delete"`
	// This field indicates how the recording was deleted. It exists only when the recording is from
	// trash.
	SoftDeletedType OptString `json:"soft_deleted_type"`
	// The recording type. The allowed value is `OnDemand` or `Automatic`.
	RecordingType OptString `json:"recording_type"`
	// The download URL for the recording.
	FileURL OptString `json:"file_url"`
	// The status of disclaimer for recording:
	// * `0` - passive/implicit
	// * `1` - agree (active/explicit and press 1)
	// * `2` - passive agree (active/explicit and no press).
	DisclaimerStatus OptInt `json:"disclaimer_status"`
}

// GetCallID returns the value of CallID.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetCallID() OptString {
	return s.CallID
}

// GetCallLogID returns the value of CallLogID.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetCallLogID() OptString {
	return s.CallLogID
}

// GetCalleeName returns the value of CalleeName.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetCalleeName() OptString {
	return s.CalleeName
}

// GetCalleeNumber returns the value of CalleeNumber.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetCalleeNumber() OptString {
	return s.CalleeNumber
}

// GetCalleeNumberType returns the value of CalleeNumberType.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetCalleeNumberType() OptInt {
	return s.CalleeNumberType
}

// GetCallerName returns the value of CallerName.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetCallerName() OptString {
	return s.CallerName
}

// GetCallerNumber returns the value of CallerNumber.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetCallerNumber() OptString {
	return s.CallerNumber
}

// GetCallerNumberType returns the value of CallerNumberType.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetCallerNumberType() OptInt {
	return s.CallerNumberType
}

// GetOutgoingBy returns the value of OutgoingBy.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetOutgoingBy() OptGetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy {
	return s.OutgoingBy
}

// GetAcceptedBy returns the value of AcceptedBy.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetAcceptedBy() OptGetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy {
	return s.AcceptedBy
}

// GetDateTime returns the value of DateTime.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetDateTime() OptDateTime {
	return s.DateTime
}

// GetDirection returns the value of Direction.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetDirection() OptString {
	return s.Direction
}

// GetDownloadURL returns the value of DownloadURL.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetDownloadURL() OptString {
	return s.DownloadURL
}

// GetDuration returns the value of Duration.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetDuration() OptInt {
	return s.Duration
}

// GetEndTime returns the value of EndTime.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetEndTime() OptDateTime {
	return s.EndTime
}

// GetID returns the value of ID.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetID() OptString {
	return s.ID
}

// GetMeetingUUID returns the value of MeetingUUID.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetMeetingUUID() OptString {
	return s.MeetingUUID
}

// GetOwner returns the value of Owner.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetOwner() OptGetPhoneRecordingsByCallIdOrCallLogIdOKOwner {
	return s.Owner
}

// GetDeletedTime returns the value of DeletedTime.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetDeletedTime() OptDateTime {
	return s.DeletedTime
}

// GetDaysLeftAutoPermantelyDelete returns the value of DaysLeftAutoPermantelyDelete.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetDaysLeftAutoPermantelyDelete() OptInt {
	return s.DaysLeftAutoPermantelyDelete
}

// GetSoftDeletedType returns the value of SoftDeletedType.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetSoftDeletedType() OptString {
	return s.SoftDeletedType
}

// GetRecordingType returns the value of RecordingType.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetRecordingType() OptString {
	return s.RecordingType
}

// GetFileURL returns the value of FileURL.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetFileURL() OptString {
	return s.FileURL
}

// GetDisclaimerStatus returns the value of DisclaimerStatus.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) GetDisclaimerStatus() OptInt {
	return s.DisclaimerStatus
}

// SetCallID sets the value of CallID.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetCallID(val OptString) {
	s.CallID = val
}

// SetCallLogID sets the value of CallLogID.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetCallLogID(val OptString) {
	s.CallLogID = val
}

// SetCalleeName sets the value of CalleeName.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetCalleeName(val OptString) {
	s.CalleeName = val
}

// SetCalleeNumber sets the value of CalleeNumber.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetCalleeNumber(val OptString) {
	s.CalleeNumber = val
}

// SetCalleeNumberType sets the value of CalleeNumberType.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetCalleeNumberType(val OptInt) {
	s.CalleeNumberType = val
}

// SetCallerName sets the value of CallerName.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetCallerName(val OptString) {
	s.CallerName = val
}

// SetCallerNumber sets the value of CallerNumber.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetCallerNumber(val OptString) {
	s.CallerNumber = val
}

// SetCallerNumberType sets the value of CallerNumberType.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetCallerNumberType(val OptInt) {
	s.CallerNumberType = val
}

// SetOutgoingBy sets the value of OutgoingBy.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetOutgoingBy(val OptGetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy) {
	s.OutgoingBy = val
}

// SetAcceptedBy sets the value of AcceptedBy.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetAcceptedBy(val OptGetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy) {
	s.AcceptedBy = val
}

// SetDateTime sets the value of DateTime.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetDateTime(val OptDateTime) {
	s.DateTime = val
}

// SetDirection sets the value of Direction.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetDirection(val OptString) {
	s.Direction = val
}

// SetDownloadURL sets the value of DownloadURL.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetDownloadURL(val OptString) {
	s.DownloadURL = val
}

// SetDuration sets the value of Duration.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetDuration(val OptInt) {
	s.Duration = val
}

// SetEndTime sets the value of EndTime.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetEndTime(val OptDateTime) {
	s.EndTime = val
}

// SetID sets the value of ID.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetID(val OptString) {
	s.ID = val
}

// SetMeetingUUID sets the value of MeetingUUID.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetMeetingUUID(val OptString) {
	s.MeetingUUID = val
}

// SetOwner sets the value of Owner.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetOwner(val OptGetPhoneRecordingsByCallIdOrCallLogIdOKOwner) {
	s.Owner = val
}

// SetDeletedTime sets the value of DeletedTime.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetDeletedTime(val OptDateTime) {
	s.DeletedTime = val
}

// SetDaysLeftAutoPermantelyDelete sets the value of DaysLeftAutoPermantelyDelete.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetDaysLeftAutoPermantelyDelete(val OptInt) {
	s.DaysLeftAutoPermantelyDelete = val
}

// SetSoftDeletedType sets the value of SoftDeletedType.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetSoftDeletedType(val OptString) {
	s.SoftDeletedType = val
}

// SetRecordingType sets the value of RecordingType.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetRecordingType(val OptString) {
	s.RecordingType = val
}

// SetFileURL sets the value of FileURL.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetFileURL(val OptString) {
	s.FileURL = val
}

// SetDisclaimerStatus sets the value of DisclaimerStatus.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOK) SetDisclaimerStatus(val OptInt) {
	s.DisclaimerStatus = val
}

// The call-receiving user. The current recording must belong to the receiver and call queue for it
// to be available.
type GetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy struct {
	// The user's name.
	Name OptString `json:"name"`
	// The user's extension number.
	ExtensionNumber OptString `json:"extension_number"`
}

// GetName returns the value of Name.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy) GetName() OptString {
	return s.Name
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// SetName sets the value of Name.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy) SetName(val OptString) {
	s.Name = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// The user who initiates the call. The current recording must belong to the initiator and the call
// queue for it to be available.
type GetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy struct {
	// The user's name.
	Name OptString `json:"name"`
	// The user's extension number.
	ExtensionNumber OptString `json:"extension_number"`
}

// GetName returns the value of Name.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy) GetName() OptString {
	return s.Name
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// SetName sets the value of Name.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy) SetName(val OptString) {
	s.Name = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// The owner of the recording.
type GetPhoneRecordingsByCallIdOrCallLogIdOKOwner struct {
	// The extension number associated with the call number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The owner's ID.
	ID OptString `json:"id"`
	// The name of the owner.
	Name OptString `json:"name"`
	// The owner type.
	Type OptString `json:"type"`
	// This field indicates the status of extension.
	// * `inactive`
	// * `deleted`.
	ExtensionStatus OptString `json:"extension_status"`
	// The date time the extension was deleted. It exists only when extension_status is `deleted`.
	ExtensionDeletedTime OptString `json:"extension_deleted_time"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKOwner) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKOwner) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKOwner) GetName() OptString {
	return s.Name
}

// GetType returns the value of Type.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKOwner) GetType() OptString {
	return s.Type
}

// GetExtensionStatus returns the value of ExtensionStatus.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKOwner) GetExtensionStatus() OptString {
	return s.ExtensionStatus
}

// GetExtensionDeletedTime returns the value of ExtensionDeletedTime.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKOwner) GetExtensionDeletedTime() OptString {
	return s.ExtensionDeletedTime
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKOwner) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKOwner) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKOwner) SetName(val OptString) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKOwner) SetType(val OptString) {
	s.Type = val
}

// SetExtensionStatus sets the value of ExtensionStatus.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKOwner) SetExtensionStatus(val OptString) {
	s.ExtensionStatus = val
}

// SetExtensionDeletedTime sets the value of ExtensionDeletedTime.
func (s *GetPhoneRecordingsByCallIdOrCallLogIdOKOwner) SetExtensionDeletedTime(val OptString) {
	s.ExtensionDeletedTime = val
}

type GetPhoneRecordingsOK struct {
	// The current page number of returned records.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single API call.
	// The default is **30**, and the maximum is **300**.
	PageSize   OptInt                               `json:"page_size"`
	Recordings []GetPhoneRecordingsOKRecordingsItem `json:"recordings"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *GetPhoneRecordingsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *GetPhoneRecordingsOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetRecordings returns the value of Recordings.
func (s *GetPhoneRecordingsOK) GetRecordings() []GetPhoneRecordingsOKRecordingsItem {
	return s.Recordings
}

// GetTotalRecords returns the value of TotalRecords.
func (s *GetPhoneRecordingsOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetNextPageToken sets the value of NextPageToken.
func (s *GetPhoneRecordingsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *GetPhoneRecordingsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetRecordings sets the value of Recordings.
func (s *GetPhoneRecordingsOK) SetRecordings(val []GetPhoneRecordingsOKRecordingsItem) {
	s.Recordings = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *GetPhoneRecordingsOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type GetPhoneRecordingsOKRecordingsItem struct {
	// The time to allow Zoom to automatically delete recordings after retention duration. To see this
	// field, the 'Auto Delete Data After Retention Duration' setting must be enabled in Account Settings
	// .
	AutoDeletePolicy OptString `json:"auto_delete_policy"`
	// The phone call's unique ID.
	CallID OptString `json:"call_id"`
	// The phone call log's unique ID.
	CallLogID OptString `json:"call_log_id"`
	// The contact name of the callee.
	CalleeName OptString `json:"callee_name"`
	// The phone number of the callee. It could be an e164 number or an extension. The extension number
	// is a combination of the site number and a short extension.
	CalleeNumber OptString `json:"callee_number"`
	// The callee's number type:
	// * `1` — Internal number.
	// * `2` — External number.
	// * `3` — Customized emergency number.
	CalleeNumberType OptInt `json:"callee_number_type"`
	// The contact name of the caller.
	CallerName OptString `json:"caller_name"`
	// The phone number associated with the caller. It could be an e164 number or an extension. The
	// extension number is a combination of the site number and the short extension.
	CallerNumber OptString `json:"caller_number"`
	// The caller's number type:
	// * `1` — Internal number.
	// * `2` — External number.
	CallerNumberType OptInt `json:"caller_number_type"`
	// The call-initiating user. The current recording must belong to the initiator and call queue for it
	// to be available.
	OutgoingBy OptGetPhoneRecordingsOKRecordingsItemOutgoingBy `json:"outgoing_by"`
	// The call-receiving user. The current recording must belong to the receiver and call queue for it
	// to be available.
	AcceptedBy OptGetPhoneRecordingsOKRecordingsItemAcceptedBy `json:"accepted_by"`
	// The date and time when the recording was received.
	DateTime OptDateTime `json:"date_time"`
	// The status of disclaimer for recording:
	// * `0` - passive/implicit
	// * `1` - agree (active/explicit and press 1)
	// * `2` - passive agree (active/explicit and no press).
	DisclaimerStatus OptInt `json:"disclaimer_status"`
	// The direction of the call. The values are `inbound` or `outbound`.
	Direction OptString `json:"direction"`
	// The download URL for the recording.
	DownloadURL OptString `json:"download_url"`
	// The call recording's duration, in seconds.
	Duration OptInt `json:"duration"`
	// The recording's end time.
	EndTime OptDateTime `json:"end_time"`
	// The unique identifier of the recording.
	ID OptString `json:"id"`
	// The meeting ID associated with the recording, if any.
	MeetingUUID OptString `json:"meeting_uuid"`
	// The owner of the recording.
	Owner OptGetPhoneRecordingsOKRecordingsItemOwner `json:"owner"`
	// The recording type. The allowed values are `OnDemand` or `Automatic`.
	RecordingType OptString                                 `json:"recording_type"`
	Site          OptGetPhoneRecordingsOKRecordingsItemSite `json:"site"`
	// The download URL for the recording transcript.
	TranscriptDownloadURL OptString `json:"transcript_download_url"`
	// This field indicates whether the recording has Auto Delete Data After Retention Duration setting
	// enabled or not.
	AutoDeleteEnable OptBool `json:"auto_delete_enable"`
}

// GetAutoDeletePolicy returns the value of AutoDeletePolicy.
func (s *GetPhoneRecordingsOKRecordingsItem) GetAutoDeletePolicy() OptString {
	return s.AutoDeletePolicy
}

// GetCallID returns the value of CallID.
func (s *GetPhoneRecordingsOKRecordingsItem) GetCallID() OptString {
	return s.CallID
}

// GetCallLogID returns the value of CallLogID.
func (s *GetPhoneRecordingsOKRecordingsItem) GetCallLogID() OptString {
	return s.CallLogID
}

// GetCalleeName returns the value of CalleeName.
func (s *GetPhoneRecordingsOKRecordingsItem) GetCalleeName() OptString {
	return s.CalleeName
}

// GetCalleeNumber returns the value of CalleeNumber.
func (s *GetPhoneRecordingsOKRecordingsItem) GetCalleeNumber() OptString {
	return s.CalleeNumber
}

// GetCalleeNumberType returns the value of CalleeNumberType.
func (s *GetPhoneRecordingsOKRecordingsItem) GetCalleeNumberType() OptInt {
	return s.CalleeNumberType
}

// GetCallerName returns the value of CallerName.
func (s *GetPhoneRecordingsOKRecordingsItem) GetCallerName() OptString {
	return s.CallerName
}

// GetCallerNumber returns the value of CallerNumber.
func (s *GetPhoneRecordingsOKRecordingsItem) GetCallerNumber() OptString {
	return s.CallerNumber
}

// GetCallerNumberType returns the value of CallerNumberType.
func (s *GetPhoneRecordingsOKRecordingsItem) GetCallerNumberType() OptInt {
	return s.CallerNumberType
}

// GetOutgoingBy returns the value of OutgoingBy.
func (s *GetPhoneRecordingsOKRecordingsItem) GetOutgoingBy() OptGetPhoneRecordingsOKRecordingsItemOutgoingBy {
	return s.OutgoingBy
}

// GetAcceptedBy returns the value of AcceptedBy.
func (s *GetPhoneRecordingsOKRecordingsItem) GetAcceptedBy() OptGetPhoneRecordingsOKRecordingsItemAcceptedBy {
	return s.AcceptedBy
}

// GetDateTime returns the value of DateTime.
func (s *GetPhoneRecordingsOKRecordingsItem) GetDateTime() OptDateTime {
	return s.DateTime
}

// GetDisclaimerStatus returns the value of DisclaimerStatus.
func (s *GetPhoneRecordingsOKRecordingsItem) GetDisclaimerStatus() OptInt {
	return s.DisclaimerStatus
}

// GetDirection returns the value of Direction.
func (s *GetPhoneRecordingsOKRecordingsItem) GetDirection() OptString {
	return s.Direction
}

// GetDownloadURL returns the value of DownloadURL.
func (s *GetPhoneRecordingsOKRecordingsItem) GetDownloadURL() OptString {
	return s.DownloadURL
}

// GetDuration returns the value of Duration.
func (s *GetPhoneRecordingsOKRecordingsItem) GetDuration() OptInt {
	return s.Duration
}

// GetEndTime returns the value of EndTime.
func (s *GetPhoneRecordingsOKRecordingsItem) GetEndTime() OptDateTime {
	return s.EndTime
}

// GetID returns the value of ID.
func (s *GetPhoneRecordingsOKRecordingsItem) GetID() OptString {
	return s.ID
}

// GetMeetingUUID returns the value of MeetingUUID.
func (s *GetPhoneRecordingsOKRecordingsItem) GetMeetingUUID() OptString {
	return s.MeetingUUID
}

// GetOwner returns the value of Owner.
func (s *GetPhoneRecordingsOKRecordingsItem) GetOwner() OptGetPhoneRecordingsOKRecordingsItemOwner {
	return s.Owner
}

// GetRecordingType returns the value of RecordingType.
func (s *GetPhoneRecordingsOKRecordingsItem) GetRecordingType() OptString {
	return s.RecordingType
}

// GetSite returns the value of Site.
func (s *GetPhoneRecordingsOKRecordingsItem) GetSite() OptGetPhoneRecordingsOKRecordingsItemSite {
	return s.Site
}

// GetTranscriptDownloadURL returns the value of TranscriptDownloadURL.
func (s *GetPhoneRecordingsOKRecordingsItem) GetTranscriptDownloadURL() OptString {
	return s.TranscriptDownloadURL
}

// GetAutoDeleteEnable returns the value of AutoDeleteEnable.
func (s *GetPhoneRecordingsOKRecordingsItem) GetAutoDeleteEnable() OptBool {
	return s.AutoDeleteEnable
}

// SetAutoDeletePolicy sets the value of AutoDeletePolicy.
func (s *GetPhoneRecordingsOKRecordingsItem) SetAutoDeletePolicy(val OptString) {
	s.AutoDeletePolicy = val
}

// SetCallID sets the value of CallID.
func (s *GetPhoneRecordingsOKRecordingsItem) SetCallID(val OptString) {
	s.CallID = val
}

// SetCallLogID sets the value of CallLogID.
func (s *GetPhoneRecordingsOKRecordingsItem) SetCallLogID(val OptString) {
	s.CallLogID = val
}

// SetCalleeName sets the value of CalleeName.
func (s *GetPhoneRecordingsOKRecordingsItem) SetCalleeName(val OptString) {
	s.CalleeName = val
}

// SetCalleeNumber sets the value of CalleeNumber.
func (s *GetPhoneRecordingsOKRecordingsItem) SetCalleeNumber(val OptString) {
	s.CalleeNumber = val
}

// SetCalleeNumberType sets the value of CalleeNumberType.
func (s *GetPhoneRecordingsOKRecordingsItem) SetCalleeNumberType(val OptInt) {
	s.CalleeNumberType = val
}

// SetCallerName sets the value of CallerName.
func (s *GetPhoneRecordingsOKRecordingsItem) SetCallerName(val OptString) {
	s.CallerName = val
}

// SetCallerNumber sets the value of CallerNumber.
func (s *GetPhoneRecordingsOKRecordingsItem) SetCallerNumber(val OptString) {
	s.CallerNumber = val
}

// SetCallerNumberType sets the value of CallerNumberType.
func (s *GetPhoneRecordingsOKRecordingsItem) SetCallerNumberType(val OptInt) {
	s.CallerNumberType = val
}

// SetOutgoingBy sets the value of OutgoingBy.
func (s *GetPhoneRecordingsOKRecordingsItem) SetOutgoingBy(val OptGetPhoneRecordingsOKRecordingsItemOutgoingBy) {
	s.OutgoingBy = val
}

// SetAcceptedBy sets the value of AcceptedBy.
func (s *GetPhoneRecordingsOKRecordingsItem) SetAcceptedBy(val OptGetPhoneRecordingsOKRecordingsItemAcceptedBy) {
	s.AcceptedBy = val
}

// SetDateTime sets the value of DateTime.
func (s *GetPhoneRecordingsOKRecordingsItem) SetDateTime(val OptDateTime) {
	s.DateTime = val
}

// SetDisclaimerStatus sets the value of DisclaimerStatus.
func (s *GetPhoneRecordingsOKRecordingsItem) SetDisclaimerStatus(val OptInt) {
	s.DisclaimerStatus = val
}

// SetDirection sets the value of Direction.
func (s *GetPhoneRecordingsOKRecordingsItem) SetDirection(val OptString) {
	s.Direction = val
}

// SetDownloadURL sets the value of DownloadURL.
func (s *GetPhoneRecordingsOKRecordingsItem) SetDownloadURL(val OptString) {
	s.DownloadURL = val
}

// SetDuration sets the value of Duration.
func (s *GetPhoneRecordingsOKRecordingsItem) SetDuration(val OptInt) {
	s.Duration = val
}

// SetEndTime sets the value of EndTime.
func (s *GetPhoneRecordingsOKRecordingsItem) SetEndTime(val OptDateTime) {
	s.EndTime = val
}

// SetID sets the value of ID.
func (s *GetPhoneRecordingsOKRecordingsItem) SetID(val OptString) {
	s.ID = val
}

// SetMeetingUUID sets the value of MeetingUUID.
func (s *GetPhoneRecordingsOKRecordingsItem) SetMeetingUUID(val OptString) {
	s.MeetingUUID = val
}

// SetOwner sets the value of Owner.
func (s *GetPhoneRecordingsOKRecordingsItem) SetOwner(val OptGetPhoneRecordingsOKRecordingsItemOwner) {
	s.Owner = val
}

// SetRecordingType sets the value of RecordingType.
func (s *GetPhoneRecordingsOKRecordingsItem) SetRecordingType(val OptString) {
	s.RecordingType = val
}

// SetSite sets the value of Site.
func (s *GetPhoneRecordingsOKRecordingsItem) SetSite(val OptGetPhoneRecordingsOKRecordingsItemSite) {
	s.Site = val
}

// SetTranscriptDownloadURL sets the value of TranscriptDownloadURL.
func (s *GetPhoneRecordingsOKRecordingsItem) SetTranscriptDownloadURL(val OptString) {
	s.TranscriptDownloadURL = val
}

// SetAutoDeleteEnable sets the value of AutoDeleteEnable.
func (s *GetPhoneRecordingsOKRecordingsItem) SetAutoDeleteEnable(val OptBool) {
	s.AutoDeleteEnable = val
}

// The call-receiving user. The current recording must belong to the receiver and call queue for it
// to be available.
type GetPhoneRecordingsOKRecordingsItemAcceptedBy struct {
	// The user name.
	Name OptString `json:"name"`
	// The user extension number.
	ExtensionNumber OptString `json:"extension_number"`
}

// GetName returns the value of Name.
func (s *GetPhoneRecordingsOKRecordingsItemAcceptedBy) GetName() OptString {
	return s.Name
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetPhoneRecordingsOKRecordingsItemAcceptedBy) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// SetName sets the value of Name.
func (s *GetPhoneRecordingsOKRecordingsItemAcceptedBy) SetName(val OptString) {
	s.Name = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetPhoneRecordingsOKRecordingsItemAcceptedBy) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// The call-initiating user. The current recording must belong to the initiator and call queue for it
// to be available.
type GetPhoneRecordingsOKRecordingsItemOutgoingBy struct {
	// The user name.
	Name OptString `json:"name"`
	// The user extension number.
	ExtensionNumber OptString `json:"extension_number"`
}

// GetName returns the value of Name.
func (s *GetPhoneRecordingsOKRecordingsItemOutgoingBy) GetName() OptString {
	return s.Name
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetPhoneRecordingsOKRecordingsItemOutgoingBy) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// SetName sets the value of Name.
func (s *GetPhoneRecordingsOKRecordingsItemOutgoingBy) SetName(val OptString) {
	s.Name = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetPhoneRecordingsOKRecordingsItemOutgoingBy) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// The owner of the recording.
type GetPhoneRecordingsOKRecordingsItemOwner struct {
	// The extension number associated to the call number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The owner's ID.
	ID OptString `json:"id"`
	// The name of the owner.
	Name OptString `json:"name"`
	// The owner type: `user` or `call queue`.
	Type OptString `json:"type"`
	// This field indicates the status of extension:
	// * `inactive`
	// * `deleted`.
	ExtensionStatus OptString `json:"extension_status"`
	// The date time the extension was deleted. It exists only when extension_status is `deleted`.
	ExtensionDeletedTime OptString `json:"extension_deleted_time"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetPhoneRecordingsOKRecordingsItemOwner) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *GetPhoneRecordingsOKRecordingsItemOwner) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetPhoneRecordingsOKRecordingsItemOwner) GetName() OptString {
	return s.Name
}

// GetType returns the value of Type.
func (s *GetPhoneRecordingsOKRecordingsItemOwner) GetType() OptString {
	return s.Type
}

// GetExtensionStatus returns the value of ExtensionStatus.
func (s *GetPhoneRecordingsOKRecordingsItemOwner) GetExtensionStatus() OptString {
	return s.ExtensionStatus
}

// GetExtensionDeletedTime returns the value of ExtensionDeletedTime.
func (s *GetPhoneRecordingsOKRecordingsItemOwner) GetExtensionDeletedTime() OptString {
	return s.ExtensionDeletedTime
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetPhoneRecordingsOKRecordingsItemOwner) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *GetPhoneRecordingsOKRecordingsItemOwner) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetPhoneRecordingsOKRecordingsItemOwner) SetName(val OptString) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *GetPhoneRecordingsOKRecordingsItemOwner) SetType(val OptString) {
	s.Type = val
}

// SetExtensionStatus sets the value of ExtensionStatus.
func (s *GetPhoneRecordingsOKRecordingsItemOwner) SetExtensionStatus(val OptString) {
	s.ExtensionStatus = val
}

// SetExtensionDeletedTime sets the value of ExtensionDeletedTime.
func (s *GetPhoneRecordingsOKRecordingsItemOwner) SetExtensionDeletedTime(val OptString) {
	s.ExtensionDeletedTime = val
}

type GetPhoneRecordingsOKRecordingsItemSite struct {
	// The site ID.
	ID OptString `json:"id"`
	// The site name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetPhoneRecordingsOKRecordingsItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetPhoneRecordingsOKRecordingsItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetPhoneRecordingsOKRecordingsItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetPhoneRecordingsOKRecordingsItemSite) SetName(val OptString) {
	s.Name = val
}

// The phone user voicemails.
type GetPhoneUserVoiceMailsOK struct {
	// The sync token for a backward (`BSync`) or forward (`ISync`) sync.
	SyncToken OptString `json:"sync_token"`
	// The voicemails.
	VoiceMails []GetPhoneUserVoiceMailsOKVoiceMailsItem `json:"voice_mails"`
}

// GetSyncToken returns the value of SyncToken.
func (s *GetPhoneUserVoiceMailsOK) GetSyncToken() OptString {
	return s.SyncToken
}

// GetVoiceMails returns the value of VoiceMails.
func (s *GetPhoneUserVoiceMailsOK) GetVoiceMails() []GetPhoneUserVoiceMailsOKVoiceMailsItem {
	return s.VoiceMails
}

// SetSyncToken sets the value of SyncToken.
func (s *GetPhoneUserVoiceMailsOK) SetSyncToken(val OptString) {
	s.SyncToken = val
}

// SetVoiceMails sets the value of VoiceMails.
func (s *GetPhoneUserVoiceMailsOK) SetVoiceMails(val []GetPhoneUserVoiceMailsOKVoiceMailsItem) {
	s.VoiceMails = val
}

type GetPhoneUserVoiceMailsOKVoiceMailsItem struct {
	// The call ID.
	CallID OptString `json:"call_id"`
	// The call log ID.
	CallLogID OptString `json:"call_log_id"`
	// The callee's user id.
	CalleeUserID OptString `json:"callee_user_id"`
	// The name of the callee.
	CalleeName OptString `json:"callee_name"`
	// The phone number of the callee.
	CalleeNumber OptString `json:"callee_number"`
	// The callee's number type:
	// * `1` &mdash; Internal number.
	// * `2` &mdash; External number.
	// * `3` &mdash; Customized emergency number.
	CalleeNumberType OptInt `json:"callee_number_type"`
	// The caller's user id.
	CallerUserID OptString `json:"caller_user_id"`
	// The contact name of the caller.
	CallerName OptString `json:"caller_name"`
	// The phone number of the caller.
	CallerNumber OptString `json:"caller_number"`
	// The caller's number type:
	// * `1` &mdash; Internal number.
	// * `2` &mdash; External number.
	CallerNumberType OptInt `json:"caller_number_type"`
	// The start time and date of the voiemail.
	DateTime OptString `json:"date_time"`
	// The download URL for voicemail.
	DownloadURL OptString `json:"download_url"`
	// The duration of voicemail in seconds.
	Duration OptInt `json:"duration"`
	// The voicemail ID.
	ID OptString `json:"id"`
	// The status of the voicemail: `read` or `unread`.
	Status OptString `json:"status"`
}

// GetCallID returns the value of CallID.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) GetCallID() OptString {
	return s.CallID
}

// GetCallLogID returns the value of CallLogID.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) GetCallLogID() OptString {
	return s.CallLogID
}

// GetCalleeUserID returns the value of CalleeUserID.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) GetCalleeUserID() OptString {
	return s.CalleeUserID
}

// GetCalleeName returns the value of CalleeName.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) GetCalleeName() OptString {
	return s.CalleeName
}

// GetCalleeNumber returns the value of CalleeNumber.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) GetCalleeNumber() OptString {
	return s.CalleeNumber
}

// GetCalleeNumberType returns the value of CalleeNumberType.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) GetCalleeNumberType() OptInt {
	return s.CalleeNumberType
}

// GetCallerUserID returns the value of CallerUserID.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) GetCallerUserID() OptString {
	return s.CallerUserID
}

// GetCallerName returns the value of CallerName.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) GetCallerName() OptString {
	return s.CallerName
}

// GetCallerNumber returns the value of CallerNumber.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) GetCallerNumber() OptString {
	return s.CallerNumber
}

// GetCallerNumberType returns the value of CallerNumberType.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) GetCallerNumberType() OptInt {
	return s.CallerNumberType
}

// GetDateTime returns the value of DateTime.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) GetDateTime() OptString {
	return s.DateTime
}

// GetDownloadURL returns the value of DownloadURL.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) GetDownloadURL() OptString {
	return s.DownloadURL
}

// GetDuration returns the value of Duration.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) GetDuration() OptInt {
	return s.Duration
}

// GetID returns the value of ID.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) GetID() OptString {
	return s.ID
}

// GetStatus returns the value of Status.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) GetStatus() OptString {
	return s.Status
}

// SetCallID sets the value of CallID.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) SetCallID(val OptString) {
	s.CallID = val
}

// SetCallLogID sets the value of CallLogID.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) SetCallLogID(val OptString) {
	s.CallLogID = val
}

// SetCalleeUserID sets the value of CalleeUserID.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) SetCalleeUserID(val OptString) {
	s.CalleeUserID = val
}

// SetCalleeName sets the value of CalleeName.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) SetCalleeName(val OptString) {
	s.CalleeName = val
}

// SetCalleeNumber sets the value of CalleeNumber.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) SetCalleeNumber(val OptString) {
	s.CalleeNumber = val
}

// SetCalleeNumberType sets the value of CalleeNumberType.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) SetCalleeNumberType(val OptInt) {
	s.CalleeNumberType = val
}

// SetCallerUserID sets the value of CallerUserID.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) SetCallerUserID(val OptString) {
	s.CallerUserID = val
}

// SetCallerName sets the value of CallerName.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) SetCallerName(val OptString) {
	s.CallerName = val
}

// SetCallerNumber sets the value of CallerNumber.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) SetCallerNumber(val OptString) {
	s.CallerNumber = val
}

// SetCallerNumberType sets the value of CallerNumberType.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) SetCallerNumberType(val OptInt) {
	s.CallerNumberType = val
}

// SetDateTime sets the value of DateTime.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) SetDateTime(val OptString) {
	s.DateTime = val
}

// SetDownloadURL sets the value of DownloadURL.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) SetDownloadURL(val OptString) {
	s.DownloadURL = val
}

// SetDuration sets the value of Duration.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) SetDuration(val OptInt) {
	s.Duration = val
}

// SetID sets the value of ID.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) SetID(val OptString) {
	s.ID = val
}

// SetStatus sets the value of Status.
func (s *GetPhoneUserVoiceMailsOKVoiceMailsItem) SetStatus(val OptString) {
	s.Status = val
}

type GetPortedNumbersDetailsOK struct {
	// Contact emails of transferring numbers.
	ContactEmails OptString `json:"contact_emails"`
	// Contact numbers for transferring numbers.
	ContactNumber OptString `json:"contact_number"`
	// Ported numbers' ISP.
	Isp OptString `json:"isp"`
	// Ported numbers.
	Numbers []string `json:"numbers"`
	// Ported numbers' order ID.
	OrderID OptString `json:"order_id"`
	// Ported numbers' original billing info.
	OriginalBillingInfo OptGetPortedNumbersDetailsOKOriginalBillingInfo `json:"original_billing_info"`
	// Printed names on transferring numbers.
	PrintedName OptString `json:"printed_name"`
	// The ported numbers' replacement numbers.
	ReplacingNumbers []GetPortedNumbersDetailsOKReplacingNumbersItem `json:"replacing_numbers"`
	// Ported numbers' status.
	Status OptString `json:"status"`
	// The time ported numbers were submitted (format: 'yyyy-MM-ddThh:dd:ssZ').
	SubmissionDateTime OptString `json:"submission_date_time"`
}

// GetContactEmails returns the value of ContactEmails.
func (s *GetPortedNumbersDetailsOK) GetContactEmails() OptString {
	return s.ContactEmails
}

// GetContactNumber returns the value of ContactNumber.
func (s *GetPortedNumbersDetailsOK) GetContactNumber() OptString {
	return s.ContactNumber
}

// GetIsp returns the value of Isp.
func (s *GetPortedNumbersDetailsOK) GetIsp() OptString {
	return s.Isp
}

// GetNumbers returns the value of Numbers.
func (s *GetPortedNumbersDetailsOK) GetNumbers() []string {
	return s.Numbers
}

// GetOrderID returns the value of OrderID.
func (s *GetPortedNumbersDetailsOK) GetOrderID() OptString {
	return s.OrderID
}

// GetOriginalBillingInfo returns the value of OriginalBillingInfo.
func (s *GetPortedNumbersDetailsOK) GetOriginalBillingInfo() OptGetPortedNumbersDetailsOKOriginalBillingInfo {
	return s.OriginalBillingInfo
}

// GetPrintedName returns the value of PrintedName.
func (s *GetPortedNumbersDetailsOK) GetPrintedName() OptString {
	return s.PrintedName
}

// GetReplacingNumbers returns the value of ReplacingNumbers.
func (s *GetPortedNumbersDetailsOK) GetReplacingNumbers() []GetPortedNumbersDetailsOKReplacingNumbersItem {
	return s.ReplacingNumbers
}

// GetStatus returns the value of Status.
func (s *GetPortedNumbersDetailsOK) GetStatus() OptString {
	return s.Status
}

// GetSubmissionDateTime returns the value of SubmissionDateTime.
func (s *GetPortedNumbersDetailsOK) GetSubmissionDateTime() OptString {
	return s.SubmissionDateTime
}

// SetContactEmails sets the value of ContactEmails.
func (s *GetPortedNumbersDetailsOK) SetContactEmails(val OptString) {
	s.ContactEmails = val
}

// SetContactNumber sets the value of ContactNumber.
func (s *GetPortedNumbersDetailsOK) SetContactNumber(val OptString) {
	s.ContactNumber = val
}

// SetIsp sets the value of Isp.
func (s *GetPortedNumbersDetailsOK) SetIsp(val OptString) {
	s.Isp = val
}

// SetNumbers sets the value of Numbers.
func (s *GetPortedNumbersDetailsOK) SetNumbers(val []string) {
	s.Numbers = val
}

// SetOrderID sets the value of OrderID.
func (s *GetPortedNumbersDetailsOK) SetOrderID(val OptString) {
	s.OrderID = val
}

// SetOriginalBillingInfo sets the value of OriginalBillingInfo.
func (s *GetPortedNumbersDetailsOK) SetOriginalBillingInfo(val OptGetPortedNumbersDetailsOKOriginalBillingInfo) {
	s.OriginalBillingInfo = val
}

// SetPrintedName sets the value of PrintedName.
func (s *GetPortedNumbersDetailsOK) SetPrintedName(val OptString) {
	s.PrintedName = val
}

// SetReplacingNumbers sets the value of ReplacingNumbers.
func (s *GetPortedNumbersDetailsOK) SetReplacingNumbers(val []GetPortedNumbersDetailsOKReplacingNumbersItem) {
	s.ReplacingNumbers = val
}

// SetStatus sets the value of Status.
func (s *GetPortedNumbersDetailsOK) SetStatus(val OptString) {
	s.Status = val
}

// SetSubmissionDateTime sets the value of SubmissionDateTime.
func (s *GetPortedNumbersDetailsOK) SetSubmissionDateTime(val OptString) {
	s.SubmissionDateTime = val
}

// Ported numbers' original billing info.
type GetPortedNumbersDetailsOKOriginalBillingInfo struct {
	AccountNumber          OptString                                              `json:"account_number"`
	Address                OptGetPortedNumbersDetailsOKOriginalBillingInfoAddress `json:"address"`
	AuthorizingPerson      OptString                                              `json:"authorizing_person"`
	BillingTelephoneNumber OptString                                              `json:"billing_telephone_number"`
	Company                OptString                                              `json:"company"`
	CustomerRequestedDate  OptString                                              `json:"customer_requested_date"`
	Pin                    OptString                                              `json:"pin"`
}

// GetAccountNumber returns the value of AccountNumber.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfo) GetAccountNumber() OptString {
	return s.AccountNumber
}

// GetAddress returns the value of Address.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfo) GetAddress() OptGetPortedNumbersDetailsOKOriginalBillingInfoAddress {
	return s.Address
}

// GetAuthorizingPerson returns the value of AuthorizingPerson.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfo) GetAuthorizingPerson() OptString {
	return s.AuthorizingPerson
}

// GetBillingTelephoneNumber returns the value of BillingTelephoneNumber.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfo) GetBillingTelephoneNumber() OptString {
	return s.BillingTelephoneNumber
}

// GetCompany returns the value of Company.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfo) GetCompany() OptString {
	return s.Company
}

// GetCustomerRequestedDate returns the value of CustomerRequestedDate.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfo) GetCustomerRequestedDate() OptString {
	return s.CustomerRequestedDate
}

// GetPin returns the value of Pin.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfo) GetPin() OptString {
	return s.Pin
}

// SetAccountNumber sets the value of AccountNumber.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfo) SetAccountNumber(val OptString) {
	s.AccountNumber = val
}

// SetAddress sets the value of Address.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfo) SetAddress(val OptGetPortedNumbersDetailsOKOriginalBillingInfoAddress) {
	s.Address = val
}

// SetAuthorizingPerson sets the value of AuthorizingPerson.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfo) SetAuthorizingPerson(val OptString) {
	s.AuthorizingPerson = val
}

// SetBillingTelephoneNumber sets the value of BillingTelephoneNumber.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfo) SetBillingTelephoneNumber(val OptString) {
	s.BillingTelephoneNumber = val
}

// SetCompany sets the value of Company.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfo) SetCompany(val OptString) {
	s.Company = val
}

// SetCustomerRequestedDate sets the value of CustomerRequestedDate.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfo) SetCustomerRequestedDate(val OptString) {
	s.CustomerRequestedDate = val
}

// SetPin sets the value of Pin.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfo) SetPin(val OptString) {
	s.Pin = val
}

type GetPortedNumbersDetailsOKOriginalBillingInfoAddress struct {
	City        OptString `json:"city"`
	Country     OptString `json:"country"`
	HouseNumber OptString `json:"house_number"`
	StateCode   OptString `json:"state_code"`
	StreetName  OptString `json:"street_name"`
	Zip         OptString `json:"zip"`
}

// GetCity returns the value of City.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfoAddress) GetCity() OptString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfoAddress) GetCountry() OptString {
	return s.Country
}

// GetHouseNumber returns the value of HouseNumber.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfoAddress) GetHouseNumber() OptString {
	return s.HouseNumber
}

// GetStateCode returns the value of StateCode.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfoAddress) GetStateCode() OptString {
	return s.StateCode
}

// GetStreetName returns the value of StreetName.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfoAddress) GetStreetName() OptString {
	return s.StreetName
}

// GetZip returns the value of Zip.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfoAddress) GetZip() OptString {
	return s.Zip
}

// SetCity sets the value of City.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfoAddress) SetCity(val OptString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfoAddress) SetCountry(val OptString) {
	s.Country = val
}

// SetHouseNumber sets the value of HouseNumber.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfoAddress) SetHouseNumber(val OptString) {
	s.HouseNumber = val
}

// SetStateCode sets the value of StateCode.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfoAddress) SetStateCode(val OptString) {
	s.StateCode = val
}

// SetStreetName sets the value of StreetName.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfoAddress) SetStreetName(val OptString) {
	s.StreetName = val
}

// SetZip sets the value of Zip.
func (s *GetPortedNumbersDetailsOKOriginalBillingInfoAddress) SetZip(val OptString) {
	s.Zip = val
}

type GetPortedNumbersDetailsOKReplacingNumbersItem struct {
	// The source number.
	SourceNumber OptString `json:"source_number"`
	// The replaced number.
	TargetNumber OptString `json:"target_number"`
}

// GetSourceNumber returns the value of SourceNumber.
func (s *GetPortedNumbersDetailsOKReplacingNumbersItem) GetSourceNumber() OptString {
	return s.SourceNumber
}

// GetTargetNumber returns the value of TargetNumber.
func (s *GetPortedNumbersDetailsOKReplacingNumbersItem) GetTargetNumber() OptString {
	return s.TargetNumber
}

// SetSourceNumber sets the value of SourceNumber.
func (s *GetPortedNumbersDetailsOKReplacingNumbersItem) SetSourceNumber(val OptString) {
	s.SourceNumber = val
}

// SetTargetNumber sets the value of TargetNumber.
func (s *GetPortedNumbersDetailsOKReplacingNumbersItem) SetTargetNumber(val OptString) {
	s.TargetNumber = val
}

type GetProvisionTemplateOK struct {
	// The provision template ID.
	ID OptString `json:"id"`
	// The display name for the provision template.
	Name OptString `json:"name"`
	// The description for the provision template.
	Description OptString `json:"description"`
	// The [content of the provision template](https://support.zoom.
	// us/hc/en-us/articles/360035817952#h_6ef0cbf5-8d10-4237-91f0-e70f7b73a590).
	Content OptString `json:"content"`
	// The number of devices using the provision template.
	BoundDeviceCount OptInt `json:"bound_device_count"`
}

// GetID returns the value of ID.
func (s *GetProvisionTemplateOK) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetProvisionTemplateOK) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *GetProvisionTemplateOK) GetDescription() OptString {
	return s.Description
}

// GetContent returns the value of Content.
func (s *GetProvisionTemplateOK) GetContent() OptString {
	return s.Content
}

// GetBoundDeviceCount returns the value of BoundDeviceCount.
func (s *GetProvisionTemplateOK) GetBoundDeviceCount() OptInt {
	return s.BoundDeviceCount
}

// SetID sets the value of ID.
func (s *GetProvisionTemplateOK) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetProvisionTemplateOK) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *GetProvisionTemplateOK) SetDescription(val OptString) {
	s.Description = val
}

// SetContent sets the value of Content.
func (s *GetProvisionTemplateOK) SetContent(val OptString) {
	s.Content = val
}

// SetBoundDeviceCount sets the value of BoundDeviceCount.
func (s *GetProvisionTemplateOK) SetBoundDeviceCount(val OptInt) {
	s.BoundDeviceCount = val
}

type GetRoleInformationOK struct {
	// Description of the role.
	Description OptString `json:"description"`
	// The role ID.
	ID OptString `json:"id"`
	// Name of the role.
	Name OptString `json:"name"`
	// Total members assigned to that role.
	TotalMembers OptInt `json:"total_members"`
	// Indicates whether it is a default role.
	IsDefault OptBool `json:"is_default"`
}

// GetDescription returns the value of Description.
func (s *GetRoleInformationOK) GetDescription() OptString {
	return s.Description
}

// GetID returns the value of ID.
func (s *GetRoleInformationOK) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetRoleInformationOK) GetName() OptString {
	return s.Name
}

// GetTotalMembers returns the value of TotalMembers.
func (s *GetRoleInformationOK) GetTotalMembers() OptInt {
	return s.TotalMembers
}

// GetIsDefault returns the value of IsDefault.
func (s *GetRoleInformationOK) GetIsDefault() OptBool {
	return s.IsDefault
}

// SetDescription sets the value of Description.
func (s *GetRoleInformationOK) SetDescription(val OptString) {
	s.Description = val
}

// SetID sets the value of ID.
func (s *GetRoleInformationOK) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetRoleInformationOK) SetName(val OptString) {
	s.Name = val
}

// SetTotalMembers sets the value of TotalMembers.
func (s *GetRoleInformationOK) SetTotalMembers(val OptInt) {
	s.TotalMembers = val
}

// SetIsDefault sets the value of IsDefault.
func (s *GetRoleInformationOK) SetIsDefault(val OptBool) {
	s.IsDefault = val
}

type GetRoutingRuleOK struct {
	// The routing rule name.
	Name OptString `json:"name"`
	// The Perl-compatible number_pattern expression.
	NumberPattern OptString `json:"number_pattern"`
	// The routing rule order to be applied: '1' being the highest.
	Order       OptInt                         `json:"order"`
	RoutingPath OptGetRoutingRuleOKRoutingPath `json:"routing_path"`
	// The unique identifier of the routing rule.
	RoutingRuleID OptString `json:"routing_rule_id"`
	// The unique identifier of the site.
	SiteID OptString `json:"site_id"`
	// The optional replacement pattern: must be in E.164 format.
	Translation OptString `json:"translation"`
}

// GetName returns the value of Name.
func (s *GetRoutingRuleOK) GetName() OptString {
	return s.Name
}

// GetNumberPattern returns the value of NumberPattern.
func (s *GetRoutingRuleOK) GetNumberPattern() OptString {
	return s.NumberPattern
}

// GetOrder returns the value of Order.
func (s *GetRoutingRuleOK) GetOrder() OptInt {
	return s.Order
}

// GetRoutingPath returns the value of RoutingPath.
func (s *GetRoutingRuleOK) GetRoutingPath() OptGetRoutingRuleOKRoutingPath {
	return s.RoutingPath
}

// GetRoutingRuleID returns the value of RoutingRuleID.
func (s *GetRoutingRuleOK) GetRoutingRuleID() OptString {
	return s.RoutingRuleID
}

// GetSiteID returns the value of SiteID.
func (s *GetRoutingRuleOK) GetSiteID() OptString {
	return s.SiteID
}

// GetTranslation returns the value of Translation.
func (s *GetRoutingRuleOK) GetTranslation() OptString {
	return s.Translation
}

// SetName sets the value of Name.
func (s *GetRoutingRuleOK) SetName(val OptString) {
	s.Name = val
}

// SetNumberPattern sets the value of NumberPattern.
func (s *GetRoutingRuleOK) SetNumberPattern(val OptString) {
	s.NumberPattern = val
}

// SetOrder sets the value of Order.
func (s *GetRoutingRuleOK) SetOrder(val OptInt) {
	s.Order = val
}

// SetRoutingPath sets the value of RoutingPath.
func (s *GetRoutingRuleOK) SetRoutingPath(val OptGetRoutingRuleOKRoutingPath) {
	s.RoutingPath = val
}

// SetRoutingRuleID sets the value of RoutingRuleID.
func (s *GetRoutingRuleOK) SetRoutingRuleID(val OptString) {
	s.RoutingRuleID = val
}

// SetSiteID sets the value of SiteID.
func (s *GetRoutingRuleOK) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetTranslation sets the value of Translation.
func (s *GetRoutingRuleOK) SetTranslation(val OptString) {
	s.Translation = val
}

type GetRoutingRuleOKRoutingPath struct {
	// It cannot be null when 'type' = 'sip_group'.
	SipGroup OptGetRoutingRuleOKRoutingPathSipGroup `json:"sip_group"`
	// The routing rule type.
	Type OptString `json:"type"`
}

// GetSipGroup returns the value of SipGroup.
func (s *GetRoutingRuleOKRoutingPath) GetSipGroup() OptGetRoutingRuleOKRoutingPathSipGroup {
	return s.SipGroup
}

// GetType returns the value of Type.
func (s *GetRoutingRuleOKRoutingPath) GetType() OptString {
	return s.Type
}

// SetSipGroup sets the value of SipGroup.
func (s *GetRoutingRuleOKRoutingPath) SetSipGroup(val OptGetRoutingRuleOKRoutingPathSipGroup) {
	s.SipGroup = val
}

// SetType sets the value of Type.
func (s *GetRoutingRuleOKRoutingPath) SetType(val OptString) {
	s.Type = val
}

// It cannot be null when 'type' = 'sip_group'.
type GetRoutingRuleOKRoutingPathSipGroup struct {
	// The unique identifier of the SIP group.
	ID OptString `json:"id"`
	// The SIP group name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetRoutingRuleOKRoutingPathSipGroup) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetRoutingRuleOKRoutingPathSipGroup) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetRoutingRuleOKRoutingPathSipGroup) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetRoutingRuleOKRoutingPathSipGroup) SetName(val OptString) {
	s.Name = val
}

type GetSMSCampaignOK struct {
	// The campaign ID.
	ID OptString `json:"id"`
	// The display name for the SMS campaign.
	DisplayName OptString `json:"display_name"`
	// The status of the SMS campaign. Returns `--` if the campaign is in an exception status.
	Status OptString `json:"status"`
	// Which service the campaign is used for.
	ServiceType OptString `json:"service_type"`
	// The business information from Zoom account.
	Brand OptGetSMSCampaignOKBrand `json:"brand"`
	// Assigned phone numbers.
	PhoneNumbers []GetSMSCampaignOKPhoneNumbersItem `json:"phone_numbers"`
	// Whether to keep the SMS capabilities for all phone numbers associated with this campaign. If
	// 'false', the campaign will expire 90 days from the creation date.
	AutoRenew OptBool `json:"auto_renew"`
	// The creation time of the campaign.
	CreateTime OptString `json:"create_time"`
	// What will you be using these campaigns for.
	UseCase OptString `json:"use_case"`
	// Whether *all* customer-facing messages fit into the categories `Account Notifications`, `Customer
	// Care`, `Delivery Notifications`, `Marketing`, and `Public Service Announcements`.
	CategoriesFit OptBool `json:"categories_fit"`
	// The message's content type.
	ContentType []string `json:"content_type"`
	// The sample message 1.
	SampleMessage1 OptString `json:"sample_message_1"`
	// The sample message 2.
	SampleMessage2 OptString `json:"sample_message_2"`
	// The sample message 3.
	SampleMessage3 OptString `json:"sample_message_3"`
	// The sample message 4.
	SampleMessage4 OptString `json:"sample_message_4"`
	// The sample message 5.
	SampleMessage5 OptString `json:"sample_message_5"`
}

// GetID returns the value of ID.
func (s *GetSMSCampaignOK) GetID() OptString {
	return s.ID
}

// GetDisplayName returns the value of DisplayName.
func (s *GetSMSCampaignOK) GetDisplayName() OptString {
	return s.DisplayName
}

// GetStatus returns the value of Status.
func (s *GetSMSCampaignOK) GetStatus() OptString {
	return s.Status
}

// GetServiceType returns the value of ServiceType.
func (s *GetSMSCampaignOK) GetServiceType() OptString {
	return s.ServiceType
}

// GetBrand returns the value of Brand.
func (s *GetSMSCampaignOK) GetBrand() OptGetSMSCampaignOKBrand {
	return s.Brand
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *GetSMSCampaignOK) GetPhoneNumbers() []GetSMSCampaignOKPhoneNumbersItem {
	return s.PhoneNumbers
}

// GetAutoRenew returns the value of AutoRenew.
func (s *GetSMSCampaignOK) GetAutoRenew() OptBool {
	return s.AutoRenew
}

// GetCreateTime returns the value of CreateTime.
func (s *GetSMSCampaignOK) GetCreateTime() OptString {
	return s.CreateTime
}

// GetUseCase returns the value of UseCase.
func (s *GetSMSCampaignOK) GetUseCase() OptString {
	return s.UseCase
}

// GetCategoriesFit returns the value of CategoriesFit.
func (s *GetSMSCampaignOK) GetCategoriesFit() OptBool {
	return s.CategoriesFit
}

// GetContentType returns the value of ContentType.
func (s *GetSMSCampaignOK) GetContentType() []string {
	return s.ContentType
}

// GetSampleMessage1 returns the value of SampleMessage1.
func (s *GetSMSCampaignOK) GetSampleMessage1() OptString {
	return s.SampleMessage1
}

// GetSampleMessage2 returns the value of SampleMessage2.
func (s *GetSMSCampaignOK) GetSampleMessage2() OptString {
	return s.SampleMessage2
}

// GetSampleMessage3 returns the value of SampleMessage3.
func (s *GetSMSCampaignOK) GetSampleMessage3() OptString {
	return s.SampleMessage3
}

// GetSampleMessage4 returns the value of SampleMessage4.
func (s *GetSMSCampaignOK) GetSampleMessage4() OptString {
	return s.SampleMessage4
}

// GetSampleMessage5 returns the value of SampleMessage5.
func (s *GetSMSCampaignOK) GetSampleMessage5() OptString {
	return s.SampleMessage5
}

// SetID sets the value of ID.
func (s *GetSMSCampaignOK) SetID(val OptString) {
	s.ID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetSMSCampaignOK) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetStatus sets the value of Status.
func (s *GetSMSCampaignOK) SetStatus(val OptString) {
	s.Status = val
}

// SetServiceType sets the value of ServiceType.
func (s *GetSMSCampaignOK) SetServiceType(val OptString) {
	s.ServiceType = val
}

// SetBrand sets the value of Brand.
func (s *GetSMSCampaignOK) SetBrand(val OptGetSMSCampaignOKBrand) {
	s.Brand = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *GetSMSCampaignOK) SetPhoneNumbers(val []GetSMSCampaignOKPhoneNumbersItem) {
	s.PhoneNumbers = val
}

// SetAutoRenew sets the value of AutoRenew.
func (s *GetSMSCampaignOK) SetAutoRenew(val OptBool) {
	s.AutoRenew = val
}

// SetCreateTime sets the value of CreateTime.
func (s *GetSMSCampaignOK) SetCreateTime(val OptString) {
	s.CreateTime = val
}

// SetUseCase sets the value of UseCase.
func (s *GetSMSCampaignOK) SetUseCase(val OptString) {
	s.UseCase = val
}

// SetCategoriesFit sets the value of CategoriesFit.
func (s *GetSMSCampaignOK) SetCategoriesFit(val OptBool) {
	s.CategoriesFit = val
}

// SetContentType sets the value of ContentType.
func (s *GetSMSCampaignOK) SetContentType(val []string) {
	s.ContentType = val
}

// SetSampleMessage1 sets the value of SampleMessage1.
func (s *GetSMSCampaignOK) SetSampleMessage1(val OptString) {
	s.SampleMessage1 = val
}

// SetSampleMessage2 sets the value of SampleMessage2.
func (s *GetSMSCampaignOK) SetSampleMessage2(val OptString) {
	s.SampleMessage2 = val
}

// SetSampleMessage3 sets the value of SampleMessage3.
func (s *GetSMSCampaignOK) SetSampleMessage3(val OptString) {
	s.SampleMessage3 = val
}

// SetSampleMessage4 sets the value of SampleMessage4.
func (s *GetSMSCampaignOK) SetSampleMessage4(val OptString) {
	s.SampleMessage4 = val
}

// SetSampleMessage5 sets the value of SampleMessage5.
func (s *GetSMSCampaignOK) SetSampleMessage5(val OptString) {
	s.SampleMessage5 = val
}

// The business information from Zoom account.
type GetSMSCampaignOKBrand struct {
	// The brand ID.
	ID OptString `json:"id"`
	// The brand name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetSMSCampaignOKBrand) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetSMSCampaignOKBrand) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetSMSCampaignOKBrand) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetSMSCampaignOKBrand) SetName(val OptString) {
	s.Name = val
}

type GetSMSCampaignOKPhoneNumbersItem struct {
	// The phone number ID.
	ID OptString `json:"id"`
	// The phone number that is assigned to the SMS campaign.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *GetSMSCampaignOKPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *GetSMSCampaignOKPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *GetSMSCampaignOKPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *GetSMSCampaignOKPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

type GetSMSChargesUsageReportOK struct {
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The amount of records returns within a single API call.
	PageSize OptInt `json:"page_size"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
	// The start time and date of the sms/mms.
	From OptString `json:"from"`
	// The end time and date of the sms/mms.
	To OptString `json:"to"`
	// An array of sms/mms charges.
	SMSCharges []GetSMSChargesUsageReportOKSMSChargesItem `json:"sms_charges"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *GetSMSChargesUsageReportOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *GetSMSChargesUsageReportOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *GetSMSChargesUsageReportOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// GetFrom returns the value of From.
func (s *GetSMSChargesUsageReportOK) GetFrom() OptString {
	return s.From
}

// GetTo returns the value of To.
func (s *GetSMSChargesUsageReportOK) GetTo() OptString {
	return s.To
}

// GetSMSCharges returns the value of SMSCharges.
func (s *GetSMSChargesUsageReportOK) GetSMSCharges() []GetSMSChargesUsageReportOKSMSChargesItem {
	return s.SMSCharges
}

// SetNextPageToken sets the value of NextPageToken.
func (s *GetSMSChargesUsageReportOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *GetSMSChargesUsageReportOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *GetSMSChargesUsageReportOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

// SetFrom sets the value of From.
func (s *GetSMSChargesUsageReportOK) SetFrom(val OptString) {
	s.From = val
}

// SetTo sets the value of To.
func (s *GetSMSChargesUsageReportOK) SetTo(val OptString) {
	s.To = val
}

// SetSMSCharges sets the value of SMSCharges.
func (s *GetSMSChargesUsageReportOK) SetSMSCharges(val []GetSMSChargesUsageReportOKSMSChargesItem) {
	s.SMSCharges = val
}

type GetSMSChargesUsageReportOKSMSChargesItem struct {
	// The session ID. You can use this value to fetch the sms session details using [Get SMS session
	// details](https://developers.zoom.
	// us/docs/api/rest/reference/phone/methods/#operation/smsSessionDetails).
	SessionID OptString `json:"session_id"`
	// The message ID. You can use this value to fetch details about a specific message in an SMS session
	// using [Get SMS by message ID](https://developers.zoom.
	// us/docs/api/rest/reference/phone/methods/#operation/smsByMessageId).
	MessageID OptString `json:"message_id"`
	// The message type.
	MessageType OptString `json:"message_type"`
	// The sender's phone number.
	FromNumber OptString `json:"from_number"`
	// The sender's extension number.
	FromExtensionNumber OptString `json:"from_extension_number"`
	// The sender's display name.
	FromDisplayName OptString `json:"from_display_name"`
	// The receiver's phone number.
	ToNumber OptString `json:"to_number"`
	// The receiver's extension number.
	ToExtensionNumber OptString `json:"to_extension_number"`
	// The receiver's display name.
	ToDisplayName OptString `json:"to_display_name"`
	// The UTC time the message was sent.
	SentTime OptString `json:"sent_time"`
	// The billing phone number.
	BillingNumber OptString `json:"billing_number"`
	// The name of the cost center.
	CostCenter OptString `json:"cost_center"`
	// The name of the department.
	Department OptString `json:"department"`
	// The rate of billing.
	Rate OptString `json:"rate"`
	// Currency of the billed amount.
	Currency OptString `json:"currency"`
	// The total charge.
	TotalCharge OptString `json:"total_charge"`
}

// GetSessionID returns the value of SessionID.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) GetSessionID() OptString {
	return s.SessionID
}

// GetMessageID returns the value of MessageID.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) GetMessageID() OptString {
	return s.MessageID
}

// GetMessageType returns the value of MessageType.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) GetMessageType() OptString {
	return s.MessageType
}

// GetFromNumber returns the value of FromNumber.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) GetFromNumber() OptString {
	return s.FromNumber
}

// GetFromExtensionNumber returns the value of FromExtensionNumber.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) GetFromExtensionNumber() OptString {
	return s.FromExtensionNumber
}

// GetFromDisplayName returns the value of FromDisplayName.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) GetFromDisplayName() OptString {
	return s.FromDisplayName
}

// GetToNumber returns the value of ToNumber.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) GetToNumber() OptString {
	return s.ToNumber
}

// GetToExtensionNumber returns the value of ToExtensionNumber.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) GetToExtensionNumber() OptString {
	return s.ToExtensionNumber
}

// GetToDisplayName returns the value of ToDisplayName.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) GetToDisplayName() OptString {
	return s.ToDisplayName
}

// GetSentTime returns the value of SentTime.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) GetSentTime() OptString {
	return s.SentTime
}

// GetBillingNumber returns the value of BillingNumber.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) GetBillingNumber() OptString {
	return s.BillingNumber
}

// GetCostCenter returns the value of CostCenter.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) GetCostCenter() OptString {
	return s.CostCenter
}

// GetDepartment returns the value of Department.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) GetDepartment() OptString {
	return s.Department
}

// GetRate returns the value of Rate.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) GetRate() OptString {
	return s.Rate
}

// GetCurrency returns the value of Currency.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) GetCurrency() OptString {
	return s.Currency
}

// GetTotalCharge returns the value of TotalCharge.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) GetTotalCharge() OptString {
	return s.TotalCharge
}

// SetSessionID sets the value of SessionID.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) SetSessionID(val OptString) {
	s.SessionID = val
}

// SetMessageID sets the value of MessageID.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) SetMessageID(val OptString) {
	s.MessageID = val
}

// SetMessageType sets the value of MessageType.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) SetMessageType(val OptString) {
	s.MessageType = val
}

// SetFromNumber sets the value of FromNumber.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) SetFromNumber(val OptString) {
	s.FromNumber = val
}

// SetFromExtensionNumber sets the value of FromExtensionNumber.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) SetFromExtensionNumber(val OptString) {
	s.FromExtensionNumber = val
}

// SetFromDisplayName sets the value of FromDisplayName.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) SetFromDisplayName(val OptString) {
	s.FromDisplayName = val
}

// SetToNumber sets the value of ToNumber.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) SetToNumber(val OptString) {
	s.ToNumber = val
}

// SetToExtensionNumber sets the value of ToExtensionNumber.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) SetToExtensionNumber(val OptString) {
	s.ToExtensionNumber = val
}

// SetToDisplayName sets the value of ToDisplayName.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) SetToDisplayName(val OptString) {
	s.ToDisplayName = val
}

// SetSentTime sets the value of SentTime.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) SetSentTime(val OptString) {
	s.SentTime = val
}

// SetBillingNumber sets the value of BillingNumber.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) SetBillingNumber(val OptString) {
	s.BillingNumber = val
}

// SetCostCenter sets the value of CostCenter.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) SetCostCenter(val OptString) {
	s.CostCenter = val
}

// SetDepartment sets the value of Department.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) SetDepartment(val OptString) {
	s.Department = val
}

// SetRate sets the value of Rate.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) SetRate(val OptString) {
	s.Rate = val
}

// SetCurrency sets the value of Currency.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) SetCurrency(val OptString) {
	s.Currency = val
}

// SetTotalCharge sets the value of TotalCharge.
func (s *GetSMSChargesUsageReportOKSMSChargesItem) SetTotalCharge(val OptString) {
	s.TotalCharge = val
}

type GetSettingTemplateOK struct {
	// The description of the template.
	Description OptString `json:"description"`
	// This field specifies the template ID.
	ID OptString `json:"id"`
	// This field specifies the name of the template.
	Name    OptString                      `json:"name"`
	Policy  OptGetSettingTemplateOKPolicy  `json:"policy"`
	Profile OptGetSettingTemplateOKProfile `json:"profile"`
	// The type of template being queried. Values: `user`, `group`, `auto receptionist` `common area`,
	// `zr`, `interop`.
	Type         OptString                           `json:"type"`
	UserSettings OptGetSettingTemplateOKUserSettings `json:"user_settings"`
}

// GetDescription returns the value of Description.
func (s *GetSettingTemplateOK) GetDescription() OptString {
	return s.Description
}

// GetID returns the value of ID.
func (s *GetSettingTemplateOK) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetSettingTemplateOK) GetName() OptString {
	return s.Name
}

// GetPolicy returns the value of Policy.
func (s *GetSettingTemplateOK) GetPolicy() OptGetSettingTemplateOKPolicy {
	return s.Policy
}

// GetProfile returns the value of Profile.
func (s *GetSettingTemplateOK) GetProfile() OptGetSettingTemplateOKProfile {
	return s.Profile
}

// GetType returns the value of Type.
func (s *GetSettingTemplateOK) GetType() OptString {
	return s.Type
}

// GetUserSettings returns the value of UserSettings.
func (s *GetSettingTemplateOK) GetUserSettings() OptGetSettingTemplateOKUserSettings {
	return s.UserSettings
}

// SetDescription sets the value of Description.
func (s *GetSettingTemplateOK) SetDescription(val OptString) {
	s.Description = val
}

// SetID sets the value of ID.
func (s *GetSettingTemplateOK) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetSettingTemplateOK) SetName(val OptString) {
	s.Name = val
}

// SetPolicy sets the value of Policy.
func (s *GetSettingTemplateOK) SetPolicy(val OptGetSettingTemplateOKPolicy) {
	s.Policy = val
}

// SetProfile sets the value of Profile.
func (s *GetSettingTemplateOK) SetProfile(val OptGetSettingTemplateOKProfile) {
	s.Profile = val
}

// SetType sets the value of Type.
func (s *GetSettingTemplateOK) SetType(val OptString) {
	s.Type = val
}

// SetUserSettings sets the value of UserSettings.
func (s *GetSettingTemplateOK) SetUserSettings(val OptGetSettingTemplateOKUserSettings) {
	s.UserSettings = val
}

type GetSettingTemplateOKPolicy struct {
	AdHocCallRecording OptGetSettingTemplateOKPolicyAdHocCallRecording `json:"ad_hoc_call_recording"`
	AutoCallRecording  OptGetSettingTemplateOKPolicyAutoCallRecording  `json:"auto_call_recording"`
	SMS                OptGetSettingTemplateOKPolicySMS                `json:"sms"`
	Voicemail          OptGetSettingTemplateOKPolicyVoicemail          `json:"voicemail"`
	CallForwarding     OptGetSettingTemplateOKPolicyCallForwarding     `json:"call_forwarding"`
	CallOverflow       OptGetSettingTemplateOKPolicyCallOverflow       `json:"call_overflow"`
}

// GetAdHocCallRecording returns the value of AdHocCallRecording.
func (s *GetSettingTemplateOKPolicy) GetAdHocCallRecording() OptGetSettingTemplateOKPolicyAdHocCallRecording {
	return s.AdHocCallRecording
}

// GetAutoCallRecording returns the value of AutoCallRecording.
func (s *GetSettingTemplateOKPolicy) GetAutoCallRecording() OptGetSettingTemplateOKPolicyAutoCallRecording {
	return s.AutoCallRecording
}

// GetSMS returns the value of SMS.
func (s *GetSettingTemplateOKPolicy) GetSMS() OptGetSettingTemplateOKPolicySMS {
	return s.SMS
}

// GetVoicemail returns the value of Voicemail.
func (s *GetSettingTemplateOKPolicy) GetVoicemail() OptGetSettingTemplateOKPolicyVoicemail {
	return s.Voicemail
}

// GetCallForwarding returns the value of CallForwarding.
func (s *GetSettingTemplateOKPolicy) GetCallForwarding() OptGetSettingTemplateOKPolicyCallForwarding {
	return s.CallForwarding
}

// GetCallOverflow returns the value of CallOverflow.
func (s *GetSettingTemplateOKPolicy) GetCallOverflow() OptGetSettingTemplateOKPolicyCallOverflow {
	return s.CallOverflow
}

// SetAdHocCallRecording sets the value of AdHocCallRecording.
func (s *GetSettingTemplateOKPolicy) SetAdHocCallRecording(val OptGetSettingTemplateOKPolicyAdHocCallRecording) {
	s.AdHocCallRecording = val
}

// SetAutoCallRecording sets the value of AutoCallRecording.
func (s *GetSettingTemplateOKPolicy) SetAutoCallRecording(val OptGetSettingTemplateOKPolicyAutoCallRecording) {
	s.AutoCallRecording = val
}

// SetSMS sets the value of SMS.
func (s *GetSettingTemplateOKPolicy) SetSMS(val OptGetSettingTemplateOKPolicySMS) {
	s.SMS = val
}

// SetVoicemail sets the value of Voicemail.
func (s *GetSettingTemplateOKPolicy) SetVoicemail(val OptGetSettingTemplateOKPolicyVoicemail) {
	s.Voicemail = val
}

// SetCallForwarding sets the value of CallForwarding.
func (s *GetSettingTemplateOKPolicy) SetCallForwarding(val OptGetSettingTemplateOKPolicyCallForwarding) {
	s.CallForwarding = val
}

// SetCallOverflow sets the value of CallOverflow.
func (s *GetSettingTemplateOKPolicy) SetCallOverflow(val OptGetSettingTemplateOKPolicyCallOverflow) {
	s.CallOverflow = val
}

type GetSettingTemplateOKPolicyAdHocCallRecording struct {
	// Whether to allow current extension to record and save calls in the cloud.
	Enable OptBool `json:"enable"`
	// Whether to play a prompt to call participants when the recording has started.
	RecordingStartPrompt OptBool `json:"recording_start_prompt"`
	// Whether to allow call recording transcription.
	RecordingTranscription OptBool `json:"recording_transcription"`
}

// GetEnable returns the value of Enable.
func (s *GetSettingTemplateOKPolicyAdHocCallRecording) GetEnable() OptBool {
	return s.Enable
}

// GetRecordingStartPrompt returns the value of RecordingStartPrompt.
func (s *GetSettingTemplateOKPolicyAdHocCallRecording) GetRecordingStartPrompt() OptBool {
	return s.RecordingStartPrompt
}

// GetRecordingTranscription returns the value of RecordingTranscription.
func (s *GetSettingTemplateOKPolicyAdHocCallRecording) GetRecordingTranscription() OptBool {
	return s.RecordingTranscription
}

// SetEnable sets the value of Enable.
func (s *GetSettingTemplateOKPolicyAdHocCallRecording) SetEnable(val OptBool) {
	s.Enable = val
}

// SetRecordingStartPrompt sets the value of RecordingStartPrompt.
func (s *GetSettingTemplateOKPolicyAdHocCallRecording) SetRecordingStartPrompt(val OptBool) {
	s.RecordingStartPrompt = val
}

// SetRecordingTranscription sets the value of RecordingTranscription.
func (s *GetSettingTemplateOKPolicyAdHocCallRecording) SetRecordingTranscription(val OptBool) {
	s.RecordingTranscription = val
}

type GetSettingTemplateOKPolicyAutoCallRecording struct {
	// Whether to enable automatic call recording.
	Enable OptBool `json:"enable"`
	// Values: inbound, outbound, both.
	RecordingCalls OptString `json:"recording_calls"`
	// Whether to play a prompt to call participants when the recording has started.
	RecordingStartPrompt OptBool `json:"recording_start_prompt"`
	// Whether to allow call recording transcription.
	RecordingTranscription OptBool `json:"recording_transcription"`
}

// GetEnable returns the value of Enable.
func (s *GetSettingTemplateOKPolicyAutoCallRecording) GetEnable() OptBool {
	return s.Enable
}

// GetRecordingCalls returns the value of RecordingCalls.
func (s *GetSettingTemplateOKPolicyAutoCallRecording) GetRecordingCalls() OptString {
	return s.RecordingCalls
}

// GetRecordingStartPrompt returns the value of RecordingStartPrompt.
func (s *GetSettingTemplateOKPolicyAutoCallRecording) GetRecordingStartPrompt() OptBool {
	return s.RecordingStartPrompt
}

// GetRecordingTranscription returns the value of RecordingTranscription.
func (s *GetSettingTemplateOKPolicyAutoCallRecording) GetRecordingTranscription() OptBool {
	return s.RecordingTranscription
}

// SetEnable sets the value of Enable.
func (s *GetSettingTemplateOKPolicyAutoCallRecording) SetEnable(val OptBool) {
	s.Enable = val
}

// SetRecordingCalls sets the value of RecordingCalls.
func (s *GetSettingTemplateOKPolicyAutoCallRecording) SetRecordingCalls(val OptString) {
	s.RecordingCalls = val
}

// SetRecordingStartPrompt sets the value of RecordingStartPrompt.
func (s *GetSettingTemplateOKPolicyAutoCallRecording) SetRecordingStartPrompt(val OptBool) {
	s.RecordingStartPrompt = val
}

// SetRecordingTranscription sets the value of RecordingTranscription.
func (s *GetSettingTemplateOKPolicyAutoCallRecording) SetRecordingTranscription(val OptBool) {
	s.RecordingTranscription = val
}

type GetSettingTemplateOKPolicyCallForwarding struct {
	// Whether to allow users to forward their calls to other numbers.
	Enable OptBool `json:"enable"`
	// `1` - Low restriction (external numbers not allowed)
	// `2` - Medium restriction (external numbers and external contacts not allowed)
	// `3` - High restriction (external numbers, external contacts and internal extensions without
	// inbound automatic call recording not allowed)
	// `4` - No restriction.
	CallForwardingType OptInt `json:"call_forwarding_type"`
}

// GetEnable returns the value of Enable.
func (s *GetSettingTemplateOKPolicyCallForwarding) GetEnable() OptBool {
	return s.Enable
}

// GetCallForwardingType returns the value of CallForwardingType.
func (s *GetSettingTemplateOKPolicyCallForwarding) GetCallForwardingType() OptInt {
	return s.CallForwardingType
}

// SetEnable sets the value of Enable.
func (s *GetSettingTemplateOKPolicyCallForwarding) SetEnable(val OptBool) {
	s.Enable = val
}

// SetCallForwardingType sets the value of CallForwardingType.
func (s *GetSettingTemplateOKPolicyCallForwarding) SetCallForwardingType(val OptInt) {
	s.CallForwardingType = val
}

type GetSettingTemplateOKPolicyCallOverflow struct {
	// Whether to allow users to forward their calls to other numbers when a call is not answered.
	Enable OptBool `json:"enable"`
	// `1` - Low restriction (external numbers not allowed)
	// `2` - Medium restriction (external numbers and external contacts not allowed)
	// `3` - High restriction (external numbers, external contacts and internal extensions without
	// inbound automatic call recording not allowed)
	// `4` - No restriction.
	CallOverflowType OptInt `json:"call_overflow_type"`
}

// GetEnable returns the value of Enable.
func (s *GetSettingTemplateOKPolicyCallOverflow) GetEnable() OptBool {
	return s.Enable
}

// GetCallOverflowType returns the value of CallOverflowType.
func (s *GetSettingTemplateOKPolicyCallOverflow) GetCallOverflowType() OptInt {
	return s.CallOverflowType
}

// SetEnable sets the value of Enable.
func (s *GetSettingTemplateOKPolicyCallOverflow) SetEnable(val OptBool) {
	s.Enable = val
}

// SetCallOverflowType sets the value of CallOverflowType.
func (s *GetSettingTemplateOKPolicyCallOverflow) SetCallOverflowType(val OptInt) {
	s.CallOverflowType = val
}

type GetSettingTemplateOKPolicySMS struct {
	// Whether to allow the user to send and receive messages.
	Enable           OptBool `json:"enable"`
	InternationalSMS OptBool `json:"international_sms"`
}

// GetEnable returns the value of Enable.
func (s *GetSettingTemplateOKPolicySMS) GetEnable() OptBool {
	return s.Enable
}

// GetInternationalSMS returns the value of InternationalSMS.
func (s *GetSettingTemplateOKPolicySMS) GetInternationalSMS() OptBool {
	return s.InternationalSMS
}

// SetEnable sets the value of Enable.
func (s *GetSettingTemplateOKPolicySMS) SetEnable(val OptBool) {
	s.Enable = val
}

// SetInternationalSMS sets the value of InternationalSMS.
func (s *GetSettingTemplateOKPolicySMS) SetInternationalSMS(val OptBool) {
	s.InternationalSMS = val
}

type GetSettingTemplateOKPolicyVoicemail struct {
	// Whether to allow the voicemail transcription.
	AllowTranscription OptBool `json:"allow_transcription"`
	// Whether to allow the current extension to access, receive, or share voicemail.
	Enable OptBool `json:"enable"`
}

// GetAllowTranscription returns the value of AllowTranscription.
func (s *GetSettingTemplateOKPolicyVoicemail) GetAllowTranscription() OptBool {
	return s.AllowTranscription
}

// GetEnable returns the value of Enable.
func (s *GetSettingTemplateOKPolicyVoicemail) GetEnable() OptBool {
	return s.Enable
}

// SetAllowTranscription sets the value of AllowTranscription.
func (s *GetSettingTemplateOKPolicyVoicemail) SetAllowTranscription(val OptBool) {
	s.AllowTranscription = val
}

// SetEnable sets the value of Enable.
func (s *GetSettingTemplateOKPolicyVoicemail) SetEnable(val OptBool) {
	s.Enable = val
}

type GetSettingTemplateOKProfile struct {
	// The area code from which the phone account was created.
	AreaCode OptString `json:"area_code"`
	// The name of the country where the template was created.
	Country OptString `json:"country"`
}

// GetAreaCode returns the value of AreaCode.
func (s *GetSettingTemplateOKProfile) GetAreaCode() OptString {
	return s.AreaCode
}

// GetCountry returns the value of Country.
func (s *GetSettingTemplateOKProfile) GetCountry() OptString {
	return s.Country
}

// SetAreaCode sets the value of AreaCode.
func (s *GetSettingTemplateOKProfile) SetAreaCode(val OptString) {
	s.AreaCode = val
}

// SetCountry sets the value of Country.
func (s *GetSettingTemplateOKProfile) SetCountry(val OptString) {
	s.Country = val
}

type GetSettingTemplateOKUserSettings struct {
	// The audio prompt language code.
	// American English: `en-US`
	// British English: `en-GB`
	// Espa&ntilde;ol americano: `es-US`
	// Fran&ccedil;ais canadien: `fr-CA`
	// Dansk: `da-DK`
	// Deutsch: `de-DE`
	// Espa&ntilde;ol: `es-ES`
	// Fran&ccedil;ais: `fr-FR`
	// Italiano: `it-IT`
	// Nederlands: `nl-NL`
	// Portugues portugal: `pt-PT`
	// Japanese: `ja-JP`
	// Korean: `ko-KO`
	// Portugues brasil: `pt-BR`
	// Chinese: `zh-CN`
	// Taiwanese: `zh-TW`.
	AudioPromptLanguage OptString `json:"audio_prompt_language"`
	// The block calls without caller ID.
	BlockCallsWithoutCallerID OptBool                                         `json:"block_calls_without_caller_id"`
	CallHandling              OptGetSettingTemplateOKUserSettingsCallHandling `json:"call_handling"`
	DeskPhone                 OptGetSettingTemplateOKUserSettingsDeskPhone    `json:"desk_phone"`
	// The value of this field can be either `default` or `disable`.
	// * `default`: This means that the hold music can be set using the [audio library](https://support.
	// zoom.
	// us/hc/en-us/articles/360028212652-Using-the-audio-library-to-customize-greetings-and-hold-music).
	// * `disable`: This means that the hold music is disabled.
	HoldMusic OptString `json:"hold_music"`
}

// GetAudioPromptLanguage returns the value of AudioPromptLanguage.
func (s *GetSettingTemplateOKUserSettings) GetAudioPromptLanguage() OptString {
	return s.AudioPromptLanguage
}

// GetBlockCallsWithoutCallerID returns the value of BlockCallsWithoutCallerID.
func (s *GetSettingTemplateOKUserSettings) GetBlockCallsWithoutCallerID() OptBool {
	return s.BlockCallsWithoutCallerID
}

// GetCallHandling returns the value of CallHandling.
func (s *GetSettingTemplateOKUserSettings) GetCallHandling() OptGetSettingTemplateOKUserSettingsCallHandling {
	return s.CallHandling
}

// GetDeskPhone returns the value of DeskPhone.
func (s *GetSettingTemplateOKUserSettings) GetDeskPhone() OptGetSettingTemplateOKUserSettingsDeskPhone {
	return s.DeskPhone
}

// GetHoldMusic returns the value of HoldMusic.
func (s *GetSettingTemplateOKUserSettings) GetHoldMusic() OptString {
	return s.HoldMusic
}

// SetAudioPromptLanguage sets the value of AudioPromptLanguage.
func (s *GetSettingTemplateOKUserSettings) SetAudioPromptLanguage(val OptString) {
	s.AudioPromptLanguage = val
}

// SetBlockCallsWithoutCallerID sets the value of BlockCallsWithoutCallerID.
func (s *GetSettingTemplateOKUserSettings) SetBlockCallsWithoutCallerID(val OptBool) {
	s.BlockCallsWithoutCallerID = val
}

// SetCallHandling sets the value of CallHandling.
func (s *GetSettingTemplateOKUserSettings) SetCallHandling(val OptGetSettingTemplateOKUserSettingsCallHandling) {
	s.CallHandling = val
}

// SetDeskPhone sets the value of DeskPhone.
func (s *GetSettingTemplateOKUserSettings) SetDeskPhone(val OptGetSettingTemplateOKUserSettingsDeskPhone) {
	s.DeskPhone = val
}

// SetHoldMusic sets the value of HoldMusic.
func (s *GetSettingTemplateOKUserSettings) SetHoldMusic(val OptString) {
	s.HoldMusic = val
}

type GetSettingTemplateOKUserSettingsCallHandling struct {
	BusinessHours OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHours `json:"business_hours"`
	CloseHours    OptGetSettingTemplateOKUserSettingsCallHandlingCloseHours    `json:"close_hours"`
}

// GetBusinessHours returns the value of BusinessHours.
func (s *GetSettingTemplateOKUserSettingsCallHandling) GetBusinessHours() OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHours {
	return s.BusinessHours
}

// GetCloseHours returns the value of CloseHours.
func (s *GetSettingTemplateOKUserSettingsCallHandling) GetCloseHours() OptGetSettingTemplateOKUserSettingsCallHandlingCloseHours {
	return s.CloseHours
}

// SetBusinessHours sets the value of BusinessHours.
func (s *GetSettingTemplateOKUserSettingsCallHandling) SetBusinessHours(val OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHours) {
	s.BusinessHours = val
}

// SetCloseHours sets the value of CloseHours.
func (s *GetSettingTemplateOKUserSettingsCallHandling) SetCloseHours(val OptGetSettingTemplateOKUserSettingsCallHandlingCloseHours) {
	s.CloseHours = val
}

type GetSettingTemplateOKUserSettingsCallHandlingBusinessHours struct {
	// When a call is not answered:
	// 0-Forward to a voicemail;
	// 1-Play a message, then disconnect;
	// 9-Disconnect;
	// 11-Forward to an external number;
	// 26-Forward to External Contacts;
	// 50-Forward to another extension.
	BusinessHourAction OptInt `json:"business_hour_action"`
	// Whether to allow callers to press zero to reach an operator, press one to leave a message, or
	// allow neither of these options.
	ConnectToOperator OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator `json:"connect_to_operator"`
	// When the user is busy on another call:
	// 0-Forward to a voicemail;
	// 1-Play a message, then disconnect;
	// 11-Forward to an external number;
	// 12-Call waiting;
	// 13-Play a busy signal;
	// 26-Forward to External Contacts;
	// 50-Forward to another extension.
	BusyAction OptInt `json:"busy_action"`
	// Whether to allow callers to press 0 to reach an operator or press 1 to leave a message, or allow
	// neither of these options.
	BusyConnectOperator OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator `json:"busy_connect_operator"`
	CustomHours         []GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursCustomHoursItem      `json:"custom_hours"`
	// The call handling ring mode:
	// 0-Simultaneous,
	// 1-Sequential.
	RingType OptString `json:"ring_type"`
	// Ringing duration for each device in seconds. Values:
	// 10,15,20,25,30,35,40,45,50,55,60.
	RingingDuration OptString `json:"ringing_duration"`
	// Values:
	// 1-24 Hours, 7 Days a Week;
	// 2-Custom Hours.
	Type OptInt `json:"type"`
}

// GetBusinessHourAction returns the value of BusinessHourAction.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) GetBusinessHourAction() OptInt {
	return s.BusinessHourAction
}

// GetConnectToOperator returns the value of ConnectToOperator.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) GetConnectToOperator() OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator {
	return s.ConnectToOperator
}

// GetBusyAction returns the value of BusyAction.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) GetBusyAction() OptInt {
	return s.BusyAction
}

// GetBusyConnectOperator returns the value of BusyConnectOperator.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) GetBusyConnectOperator() OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator {
	return s.BusyConnectOperator
}

// GetCustomHours returns the value of CustomHours.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) GetCustomHours() []GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursCustomHoursItem {
	return s.CustomHours
}

// GetRingType returns the value of RingType.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) GetRingType() OptString {
	return s.RingType
}

// GetRingingDuration returns the value of RingingDuration.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) GetRingingDuration() OptString {
	return s.RingingDuration
}

// GetType returns the value of Type.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) GetType() OptInt {
	return s.Type
}

// SetBusinessHourAction sets the value of BusinessHourAction.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) SetBusinessHourAction(val OptInt) {
	s.BusinessHourAction = val
}

// SetConnectToOperator sets the value of ConnectToOperator.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) SetConnectToOperator(val OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) {
	s.ConnectToOperator = val
}

// SetBusyAction sets the value of BusyAction.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) SetBusyAction(val OptInt) {
	s.BusyAction = val
}

// SetBusyConnectOperator sets the value of BusyConnectOperator.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) SetBusyConnectOperator(val OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) {
	s.BusyConnectOperator = val
}

// SetCustomHours sets the value of CustomHours.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) SetCustomHours(val []GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursCustomHoursItem) {
	s.CustomHours = val
}

// SetRingType sets the value of RingType.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) SetRingType(val OptString) {
	s.RingType = val
}

// SetRingingDuration sets the value of RingingDuration.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) SetRingingDuration(val OptString) {
	s.RingingDuration = val
}

// SetType sets the value of Type.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) SetType(val OptInt) {
	s.Type = val
}

// Whether to allow callers to press 0 to reach an operator or press 1 to leave a message, or allow
// neither of these options.
type GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator struct {
	// Whether to enable connect to operator.
	Enable OptBool `json:"enable"`
	// The phone extension ID of the user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue, or
	// sharedLineGroup.
	ID OptString `json:"id"`
	// Values:
	// 1-user,
	// 2-callQueue,
	// 3-autoReceptionist,
	// 4-commonAreaPhone,
	// 5-zoomRoom,
	// 7-sharedLineGroup.
	Type OptString `json:"type"`
	// The forwarding external number when a call is not answered. Make available only when the
	// `busy_action` is `11`.
	ExternalNumber OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber `json:"external_number"`
	// Whether to play the callee's voicemail greeting when the caller reaches the end of forwarding
	// sequence. It's available only when the `busy_action` is `0` or `50`.
	PlayCalleeVoicemailGreeting OptBool `json:"play_callee_voicemail_greeting"`
	// Whether to require pressing 1 before connecting the call. Make available only when the
	// `busy_action` is `11` or '26'.
	RequirePress1BeforeConnecting OptBool `json:"require_press_1_before_connecting"`
	// Whether to allow callers to check their voicemail. Make available only when the `busy_action` is
	// `0`.
	AllowCallerCheckVoicemail OptBool `json:"allow_caller_check_voicemail"`
}

// GetEnable returns the value of Enable.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) GetEnable() OptBool {
	return s.Enable
}

// GetID returns the value of ID.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) GetID() OptString {
	return s.ID
}

// GetType returns the value of Type.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) GetType() OptString {
	return s.Type
}

// GetExternalNumber returns the value of ExternalNumber.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) GetExternalNumber() OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber {
	return s.ExternalNumber
}

// GetPlayCalleeVoicemailGreeting returns the value of PlayCalleeVoicemailGreeting.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) GetPlayCalleeVoicemailGreeting() OptBool {
	return s.PlayCalleeVoicemailGreeting
}

// GetRequirePress1BeforeConnecting returns the value of RequirePress1BeforeConnecting.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) GetRequirePress1BeforeConnecting() OptBool {
	return s.RequirePress1BeforeConnecting
}

// GetAllowCallerCheckVoicemail returns the value of AllowCallerCheckVoicemail.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) GetAllowCallerCheckVoicemail() OptBool {
	return s.AllowCallerCheckVoicemail
}

// SetEnable sets the value of Enable.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) SetEnable(val OptBool) {
	s.Enable = val
}

// SetID sets the value of ID.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) SetID(val OptString) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) SetType(val OptString) {
	s.Type = val
}

// SetExternalNumber sets the value of ExternalNumber.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) SetExternalNumber(val OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) {
	s.ExternalNumber = val
}

// SetPlayCalleeVoicemailGreeting sets the value of PlayCalleeVoicemailGreeting.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) SetPlayCalleeVoicemailGreeting(val OptBool) {
	s.PlayCalleeVoicemailGreeting = val
}

// SetRequirePress1BeforeConnecting sets the value of RequirePress1BeforeConnecting.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) SetRequirePress1BeforeConnecting(val OptBool) {
	s.RequirePress1BeforeConnecting = val
}

// SetAllowCallerCheckVoicemail sets the value of AllowCallerCheckVoicemail.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) SetAllowCallerCheckVoicemail(val OptBool) {
	s.AllowCallerCheckVoicemail = val
}

// The forwarding external number when a call is not answered. Make available only when the
// `busy_action` is `11`.
type GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber struct {
	// The phone number in E164 format.
	Number OptString `json:"number"`
	// The description for the phone number.
	Description OptString `json:"description"`
}

// GetNumber returns the value of Number.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) GetNumber() OptString {
	return s.Number
}

// GetDescription returns the value of Description.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) GetDescription() OptString {
	return s.Description
}

// SetNumber sets the value of Number.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) SetNumber(val OptString) {
	s.Number = val
}

// SetDescription sets the value of Description.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) SetDescription(val OptString) {
	s.Description = val
}

// Whether to allow callers to press zero to reach an operator, press one to leave a message, or
// allow neither of these options.
type GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator struct {
	// Whether to enable connect to operator.
	Enable OptBool `json:"enable"`
	// The phone extension ID of the user, zoomRoom, commonArea, autoReceptionist, callQueue or
	// sharedLineGroup.
	ID OptString `json:"id"`
	// Values:
	// 1-user,
	// 2-callQueue,
	// 3-autoReceptionist,
	// 4-commonArea,
	// 5-zoomRoom,
	// 7-sharedLineGroup.
	Type OptString `json:"type"`
	// The forwarding external number when a call is not answered. Make available only when the
	// `business_hour_action` is `11`.
	ExternalNumber OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber `json:"external_number"`
	// Whether to play the callee's voicemail greeting when the caller reaches the end of forwarding
	// sequence. Make available only when the `business_hour_action` is `0` or `50`.
	PlayCalleeVoicemailGreeting OptBool `json:"play_callee_voicemail_greeting"`
	// Whether to require pressing 1 before connecting the call. Make available only when the
	// `business_hour_action` is `11` or '26'.
	RequirePress1BeforeConnecting OptBool `json:"require_press_1_before_connecting"`
	// Whether to allow callers to check their voicemail. Make available only when the
	// `business_hour_action` is `0`.
	AllowCallerCheckVoicemail OptBool `json:"allow_caller_check_voicemail"`
}

// GetEnable returns the value of Enable.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) GetEnable() OptBool {
	return s.Enable
}

// GetID returns the value of ID.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) GetID() OptString {
	return s.ID
}

// GetType returns the value of Type.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) GetType() OptString {
	return s.Type
}

// GetExternalNumber returns the value of ExternalNumber.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) GetExternalNumber() OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber {
	return s.ExternalNumber
}

// GetPlayCalleeVoicemailGreeting returns the value of PlayCalleeVoicemailGreeting.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) GetPlayCalleeVoicemailGreeting() OptBool {
	return s.PlayCalleeVoicemailGreeting
}

// GetRequirePress1BeforeConnecting returns the value of RequirePress1BeforeConnecting.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) GetRequirePress1BeforeConnecting() OptBool {
	return s.RequirePress1BeforeConnecting
}

// GetAllowCallerCheckVoicemail returns the value of AllowCallerCheckVoicemail.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) GetAllowCallerCheckVoicemail() OptBool {
	return s.AllowCallerCheckVoicemail
}

// SetEnable sets the value of Enable.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) SetEnable(val OptBool) {
	s.Enable = val
}

// SetID sets the value of ID.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) SetID(val OptString) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) SetType(val OptString) {
	s.Type = val
}

// SetExternalNumber sets the value of ExternalNumber.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) SetExternalNumber(val OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) {
	s.ExternalNumber = val
}

// SetPlayCalleeVoicemailGreeting sets the value of PlayCalleeVoicemailGreeting.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) SetPlayCalleeVoicemailGreeting(val OptBool) {
	s.PlayCalleeVoicemailGreeting = val
}

// SetRequirePress1BeforeConnecting sets the value of RequirePress1BeforeConnecting.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) SetRequirePress1BeforeConnecting(val OptBool) {
	s.RequirePress1BeforeConnecting = val
}

// SetAllowCallerCheckVoicemail sets the value of AllowCallerCheckVoicemail.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) SetAllowCallerCheckVoicemail(val OptBool) {
	s.AllowCallerCheckVoicemail = val
}

// The forwarding external number when a call is not answered. Make available only when the
// `business_hour_action` is `11`.
type GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber struct {
	// The phone number in E164 format.
	Number OptString `json:"number"`
	// The description for the phone number.
	Description OptString `json:"description"`
}

// GetNumber returns the value of Number.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) GetNumber() OptString {
	return s.Number
}

// GetDescription returns the value of Description.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) GetDescription() OptString {
	return s.Description
}

// SetNumber sets the value of Number.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) SetNumber(val OptString) {
	s.Number = val
}

// SetDescription sets the value of Description.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) SetDescription(val OptString) {
	s.Description = val
}

type GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursCustomHoursItem struct {
	// Values:
	// hh:mm.
	From OptTime `json:"from"`
	// Values:
	// hh:mm.
	To OptTime `json:"to"`
	// Values:
	// 1-24 Hours,
	// 2-customized hours.
	Type OptInt `json:"type"`
	// Values: 1-7 Sun-Sat.
	Weekday OptInt `json:"weekday"`
}

// GetFrom returns the value of From.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursCustomHoursItem) GetFrom() OptTime {
	return s.From
}

// GetTo returns the value of To.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursCustomHoursItem) GetTo() OptTime {
	return s.To
}

// GetType returns the value of Type.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursCustomHoursItem) GetType() OptInt {
	return s.Type
}

// GetWeekday returns the value of Weekday.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursCustomHoursItem) GetWeekday() OptInt {
	return s.Weekday
}

// SetFrom sets the value of From.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursCustomHoursItem) SetFrom(val OptTime) {
	s.From = val
}

// SetTo sets the value of To.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursCustomHoursItem) SetTo(val OptTime) {
	s.To = val
}

// SetType sets the value of Type.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursCustomHoursItem) SetType(val OptInt) {
	s.Type = val
}

// SetWeekday sets the value of Weekday.
func (s *GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursCustomHoursItem) SetWeekday(val OptInt) {
	s.Weekday = val
}

type GetSettingTemplateOKUserSettingsCallHandlingCloseHours struct {
	// The action to take when a call is not answered:
	// 0-Forward to a voicemail;
	// 1-Play a message, then disconnect;
	// 9-Disconnect;
	// 11-Forward to an external number;
	// 26-Forward to External Contacts;
	// 50-Forward to another extension.
	CloseHourAction OptInt `json:"close_hour_action"`
	// Whether to allow callers to press zero to reach an operator or press One to leave a message, or
	// allow neither of these options.
	ConnectToOperator OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator `json:"connect_to_operator"`
	// The action to take when the user is busy on another call:
	// 0-Forward to a voicemail;
	// 1-Play a message, then disconnect;
	// 11-Forward to an external number;
	// 12-Call waiting;
	// 13-Play a busy signal;
	// 26-Forward to External Contacts;
	// 50-Forward to another extension
	// .
	BusyAction OptInt `json:"busy_action"`
	// Whether to allow callers to press 0 to reach an operator or press 1 to leave a message, or allow
	// neither of these options.
	BusyConnectOperator OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator `json:"busy_connect_operator"`
	// The maximum wait time in seconds. Values:
	// 10,15,20,25,30,35,40,45,50,55,60.
	MaxWaitTime OptString `json:"max_wait_time"`
}

// GetCloseHourAction returns the value of CloseHourAction.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHours) GetCloseHourAction() OptInt {
	return s.CloseHourAction
}

// GetConnectToOperator returns the value of ConnectToOperator.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHours) GetConnectToOperator() OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator {
	return s.ConnectToOperator
}

// GetBusyAction returns the value of BusyAction.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHours) GetBusyAction() OptInt {
	return s.BusyAction
}

// GetBusyConnectOperator returns the value of BusyConnectOperator.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHours) GetBusyConnectOperator() OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator {
	return s.BusyConnectOperator
}

// GetMaxWaitTime returns the value of MaxWaitTime.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHours) GetMaxWaitTime() OptString {
	return s.MaxWaitTime
}

// SetCloseHourAction sets the value of CloseHourAction.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHours) SetCloseHourAction(val OptInt) {
	s.CloseHourAction = val
}

// SetConnectToOperator sets the value of ConnectToOperator.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHours) SetConnectToOperator(val OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) {
	s.ConnectToOperator = val
}

// SetBusyAction sets the value of BusyAction.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHours) SetBusyAction(val OptInt) {
	s.BusyAction = val
}

// SetBusyConnectOperator sets the value of BusyConnectOperator.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHours) SetBusyConnectOperator(val OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) {
	s.BusyConnectOperator = val
}

// SetMaxWaitTime sets the value of MaxWaitTime.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHours) SetMaxWaitTime(val OptString) {
	s.MaxWaitTime = val
}

// Whether to allow callers to press 0 to reach an operator or press 1 to leave a message, or allow
// neither of these options.
type GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator struct {
	Enable OptBool `json:"enable"`
	// The phone extension ID of the user, zoomRoom, commonArea, autoReceptionist, callQueue, or
	// sharedLineGroup.
	ID OptString `json:"id"`
	// The Values:
	// 1-user,
	// 2-callQueue,
	// 3-autoReceptionist,
	// 4-commonArea,
	// 5-zoomRoom,
	// 7-sharedLineGroup.
	Type OptString `json:"type"`
	// The forwarding external number when a call is not answered. It's available only when the
	// `busy_action` is `11`.
	ExternalNumber OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber `json:"external_number"`
	// Whether to play the callee's voicemail greeting when the caller reaches the end of forwarding
	// sequence. Make available only when the `busy_action` is `0` or `50`.
	PlayCalleeVoicemailGreeting OptBool `json:"play_callee_voicemail_greeting"`
	// Whether to require pressing one before connecting the call. Make available only when the
	// `busy_action` is `11` or '26'.
	RequirePress1BeforeConnecting OptBool `json:"require_press_1_before_connecting"`
	// Whether to allow callers to check their voicemail. Make available only when the `busy_action` is
	// `0`.
	AllowCallerCheckVoicemail OptBool `json:"allow_caller_check_voicemail"`
}

// GetEnable returns the value of Enable.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) GetEnable() OptBool {
	return s.Enable
}

// GetID returns the value of ID.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) GetID() OptString {
	return s.ID
}

// GetType returns the value of Type.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) GetType() OptString {
	return s.Type
}

// GetExternalNumber returns the value of ExternalNumber.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) GetExternalNumber() OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber {
	return s.ExternalNumber
}

// GetPlayCalleeVoicemailGreeting returns the value of PlayCalleeVoicemailGreeting.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) GetPlayCalleeVoicemailGreeting() OptBool {
	return s.PlayCalleeVoicemailGreeting
}

// GetRequirePress1BeforeConnecting returns the value of RequirePress1BeforeConnecting.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) GetRequirePress1BeforeConnecting() OptBool {
	return s.RequirePress1BeforeConnecting
}

// GetAllowCallerCheckVoicemail returns the value of AllowCallerCheckVoicemail.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) GetAllowCallerCheckVoicemail() OptBool {
	return s.AllowCallerCheckVoicemail
}

// SetEnable sets the value of Enable.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) SetEnable(val OptBool) {
	s.Enable = val
}

// SetID sets the value of ID.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) SetID(val OptString) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) SetType(val OptString) {
	s.Type = val
}

// SetExternalNumber sets the value of ExternalNumber.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) SetExternalNumber(val OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) {
	s.ExternalNumber = val
}

// SetPlayCalleeVoicemailGreeting sets the value of PlayCalleeVoicemailGreeting.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) SetPlayCalleeVoicemailGreeting(val OptBool) {
	s.PlayCalleeVoicemailGreeting = val
}

// SetRequirePress1BeforeConnecting sets the value of RequirePress1BeforeConnecting.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) SetRequirePress1BeforeConnecting(val OptBool) {
	s.RequirePress1BeforeConnecting = val
}

// SetAllowCallerCheckVoicemail sets the value of AllowCallerCheckVoicemail.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) SetAllowCallerCheckVoicemail(val OptBool) {
	s.AllowCallerCheckVoicemail = val
}

// The forwarding external number when a call is not answered. It's available only when the
// `busy_action` is `11`.
type GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber struct {
	// The phone number in E164 format.
	Number OptString `json:"number"`
	// The description for the phone number.
	Description OptString `json:"description"`
}

// GetNumber returns the value of Number.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) GetNumber() OptString {
	return s.Number
}

// GetDescription returns the value of Description.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) GetDescription() OptString {
	return s.Description
}

// SetNumber sets the value of Number.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) SetNumber(val OptString) {
	s.Number = val
}

// SetDescription sets the value of Description.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) SetDescription(val OptString) {
	s.Description = val
}

// Whether to allow callers to press zero to reach an operator or press One to leave a message, or
// allow neither of these options.
type GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator struct {
	Enable OptBool `json:"enable"`
	// The phone extension ID of the user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue, or
	// sharedLineGroup.
	ID OptString `json:"id"`
	// Values:
	// 1-user,
	// 2-callQueue,
	// 3-autoReceptionist,
	// 4-commonAreaPhone,
	// 5-zoomRoom,
	// 7-sharedLineGroup.
	Type OptString `json:"type"`
	// The forwarding external number when a call is not answered. Make available only when the
	// `close_hour_action` is `11`.
	ExternalNumber OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber `json:"external_number"`
	// Whether to play the callee's voicemail greeting when the caller reaches the end of forwarding
	// sequence. Make available only when the `close_hour_action` is `0` or `50`.
	PlayCalleeVoicemailGreeting OptBool `json:"play_callee_voicemail_greeting"`
	// Whether to require pressing 1 before connecting the call. Make available only when the
	// `close_hour_action` is `11` or '26'.
	RequirePress1BeforeConnecting OptBool `json:"require_press_1_before_connecting"`
	// Whether to allow callers to check their voicemail. Make available only when the
	// `close_hour_action` is `0`.
	AllowCallerCheckVoicemail OptBool `json:"allow_caller_check_voicemail"`
}

// GetEnable returns the value of Enable.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) GetEnable() OptBool {
	return s.Enable
}

// GetID returns the value of ID.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) GetID() OptString {
	return s.ID
}

// GetType returns the value of Type.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) GetType() OptString {
	return s.Type
}

// GetExternalNumber returns the value of ExternalNumber.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) GetExternalNumber() OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber {
	return s.ExternalNumber
}

// GetPlayCalleeVoicemailGreeting returns the value of PlayCalleeVoicemailGreeting.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) GetPlayCalleeVoicemailGreeting() OptBool {
	return s.PlayCalleeVoicemailGreeting
}

// GetRequirePress1BeforeConnecting returns the value of RequirePress1BeforeConnecting.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) GetRequirePress1BeforeConnecting() OptBool {
	return s.RequirePress1BeforeConnecting
}

// GetAllowCallerCheckVoicemail returns the value of AllowCallerCheckVoicemail.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) GetAllowCallerCheckVoicemail() OptBool {
	return s.AllowCallerCheckVoicemail
}

// SetEnable sets the value of Enable.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) SetEnable(val OptBool) {
	s.Enable = val
}

// SetID sets the value of ID.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) SetID(val OptString) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) SetType(val OptString) {
	s.Type = val
}

// SetExternalNumber sets the value of ExternalNumber.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) SetExternalNumber(val OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) {
	s.ExternalNumber = val
}

// SetPlayCalleeVoicemailGreeting sets the value of PlayCalleeVoicemailGreeting.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) SetPlayCalleeVoicemailGreeting(val OptBool) {
	s.PlayCalleeVoicemailGreeting = val
}

// SetRequirePress1BeforeConnecting sets the value of RequirePress1BeforeConnecting.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) SetRequirePress1BeforeConnecting(val OptBool) {
	s.RequirePress1BeforeConnecting = val
}

// SetAllowCallerCheckVoicemail sets the value of AllowCallerCheckVoicemail.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) SetAllowCallerCheckVoicemail(val OptBool) {
	s.AllowCallerCheckVoicemail = val
}

// The forwarding external number when a call is not answered. Make available only when the
// `close_hour_action` is `11`.
type GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber struct {
	// The phone number in E164 format.
	Number OptString `json:"number"`
	// The description for the phone number.
	Description OptString `json:"description"`
}

// GetNumber returns the value of Number.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) GetNumber() OptString {
	return s.Number
}

// GetDescription returns the value of Description.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) GetDescription() OptString {
	return s.Description
}

// SetNumber sets the value of Number.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) SetNumber(val OptString) {
	s.Number = val
}

// SetDescription sets the value of Description.
func (s *GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) SetDescription(val OptString) {
	s.Description = val
}

type GetSettingTemplateOKUserSettingsDeskPhone struct {
	// The pin code.
	PinCode OptString `json:"pin_code"`
}

// GetPinCode returns the value of PinCode.
func (s *GetSettingTemplateOKUserSettingsDeskPhone) GetPinCode() OptString {
	return s.PinCode
}

// SetPinCode sets the value of PinCode.
func (s *GetSettingTemplateOKUserSettingsDeskPhone) SetPinCode(val OptString) {
	s.PinCode = val
}

type GetSharedLineGroupPolicyOK struct {
	CheckVoicemailsOverPhone OptGetSharedLineGroupPolicyOKCheckVoicemailsOverPhone `json:"check_voicemails_over_phone"`
}

// GetCheckVoicemailsOverPhone returns the value of CheckVoicemailsOverPhone.
func (s *GetSharedLineGroupPolicyOK) GetCheckVoicemailsOverPhone() OptGetSharedLineGroupPolicyOKCheckVoicemailsOverPhone {
	return s.CheckVoicemailsOverPhone
}

// SetCheckVoicemailsOverPhone sets the value of CheckVoicemailsOverPhone.
func (s *GetSharedLineGroupPolicyOK) SetCheckVoicemailsOverPhone(val OptGetSharedLineGroupPolicyOKCheckVoicemailsOverPhone) {
	s.CheckVoicemailsOverPhone = val
}

type GetSharedLineGroupPolicyOKCheckVoicemailsOverPhone struct {
	// Whether to allow members in this shared line group to check voicemails for this group over phone
	// using a PIN code.
	Enable bool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked bool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *GetSharedLineGroupPolicyOKCheckVoicemailsOverPhone) GetEnable() bool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *GetSharedLineGroupPolicyOKCheckVoicemailsOverPhone) GetLocked() bool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *GetSharedLineGroupPolicyOKCheckVoicemailsOverPhone) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *GetSharedLineGroupPolicyOKCheckVoicemailsOverPhone) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *GetSharedLineGroupPolicyOKCheckVoicemailsOverPhone) SetEnable(val bool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *GetSharedLineGroupPolicyOKCheckVoicemailsOverPhone) SetLocked(val bool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetSharedLineGroupPolicyOKCheckVoicemailsOverPhone) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *GetSharedLineGroupPolicyOKCheckVoicemailsOverPhone) SetModified(val OptBool) {
	s.Modified = val
}

type GetSiteOutboundCallingCountriesAndRegionsOK struct {
	CountriesRegions []GetSiteOutboundCallingCountriesAndRegionsOKCountriesRegionsItem `json:"countries_regions"`
	// The next page token paginates through large set of results. It returns whenever the set of
	// available results exceeds the current page size. The expiration period for this token is 15
	// minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The total number of records in a single API call.
	PageSize OptInt `json:"page_size"`
}

// GetCountriesRegions returns the value of CountriesRegions.
func (s *GetSiteOutboundCallingCountriesAndRegionsOK) GetCountriesRegions() []GetSiteOutboundCallingCountriesAndRegionsOKCountriesRegionsItem {
	return s.CountriesRegions
}

// GetNextPageToken returns the value of NextPageToken.
func (s *GetSiteOutboundCallingCountriesAndRegionsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *GetSiteOutboundCallingCountriesAndRegionsOK) GetPageSize() OptInt {
	return s.PageSize
}

// SetCountriesRegions sets the value of CountriesRegions.
func (s *GetSiteOutboundCallingCountriesAndRegionsOK) SetCountriesRegions(val []GetSiteOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) {
	s.CountriesRegions = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *GetSiteOutboundCallingCountriesAndRegionsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *GetSiteOutboundCallingCountriesAndRegionsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

type GetSiteOutboundCallingCountriesAndRegionsOKCountriesRegionsItem struct {
	// The country name.
	Name OptString `json:"name"`
	// The country code.
	Code OptInt `json:"code"`
	// The country ISO code.
	IsoCode OptString `json:"iso_code"`
	// The default outbound calling rule.
	// `1` Allowed
	// `2` Blocked
	// `3` Requires local number, caller ID, or plan
	// `4` Requires the extension number and PIN code.
	Rule OptInt `json:"rule"`
	// The enabled carrier, which could be "ZOOM" or "BYOC".
	EnabledCarrier []string `json:"enabled_carrier"`
}

// GetName returns the value of Name.
func (s *GetSiteOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetName() OptString {
	return s.Name
}

// GetCode returns the value of Code.
func (s *GetSiteOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetCode() OptInt {
	return s.Code
}

// GetIsoCode returns the value of IsoCode.
func (s *GetSiteOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetIsoCode() OptString {
	return s.IsoCode
}

// GetRule returns the value of Rule.
func (s *GetSiteOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetRule() OptInt {
	return s.Rule
}

// GetEnabledCarrier returns the value of EnabledCarrier.
func (s *GetSiteOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetEnabledCarrier() []string {
	return s.EnabledCarrier
}

// SetName sets the value of Name.
func (s *GetSiteOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetName(val OptString) {
	s.Name = val
}

// SetCode sets the value of Code.
func (s *GetSiteOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetCode(val OptInt) {
	s.Code = val
}

// SetIsoCode sets the value of IsoCode.
func (s *GetSiteOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetIsoCode(val OptString) {
	s.IsoCode = val
}

// SetRule sets the value of Rule.
func (s *GetSiteOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetRule(val OptInt) {
	s.Rule = val
}

// SetEnabledCarrier sets the value of EnabledCarrier.
func (s *GetSiteOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetEnabledCarrier(val []string) {
	s.EnabledCarrier = val
}

type GetSiteSettingForTypeOK struct {
	// Location-based routing setting of the site.
	LocationBasedRouting OptGetSiteSettingForTypeOKLocationBasedRouting `json:"location_based_routing"`
	// Set the default business hours for all users, Zoom Rooms and Common Areas for the site.
	BusinessHours OptGetSiteSettingForTypeOKBusinessHours `json:"business_hours"`
	// Set the default closed hours for all users, Zoom Rooms, Common Areas, Auto Receptionists, Call
	// Queues and Shared Line Groups for the site.
	ClosedHours OptGetSiteSettingForTypeOKClosedHours `json:"closed_hours"`
	// Set the default holiday hours for all users, Zoom Rooms, Common Areas, Auto Receptionists, Call
	// Queues and Shared Line Groups for the site.
	HolidayHours OptGetSiteSettingForTypeOKHolidayHours `json:"holiday_hours"`
	// Upgrade devices from current site to use the SRTP with AES-256 bit encryption. After adding or
	// removing a device type, devices of the corresponding type will get resynced. For more information,
	// see [Zoom Phone Encryption](https://support.zoom.
	// us/hc/en-us/articles/360042578911#h_36a22ca1-89f1-4614-8d7e-3c6a957b261c).
	Security OptGetSiteSettingForTypeOKSecurity `json:"security"`
	// The outbound caller ID setting.
	OutboundCallerID OptGetSiteSettingForTypeOKOutboundCallerID `json:"outbound_caller_id"`
	// The audio prompt setting.
	AudioPrompt OptGetSiteSettingForTypeOKAudioPrompt `json:"audio_prompt"`
	// The desk phone setting.
	DeskPhone jx.Raw `json:"desk_phone"`
	// The dial by name directory setting.
	DialByName OptGetSiteSettingForTypeOKDialByName `json:"dial_by_name"`
	// Billing account setting.
	BillingAccount OptGetSiteSettingForTypeOKBillingAccount `json:"billing_account"`
}

// GetLocationBasedRouting returns the value of LocationBasedRouting.
func (s *GetSiteSettingForTypeOK) GetLocationBasedRouting() OptGetSiteSettingForTypeOKLocationBasedRouting {
	return s.LocationBasedRouting
}

// GetBusinessHours returns the value of BusinessHours.
func (s *GetSiteSettingForTypeOK) GetBusinessHours() OptGetSiteSettingForTypeOKBusinessHours {
	return s.BusinessHours
}

// GetClosedHours returns the value of ClosedHours.
func (s *GetSiteSettingForTypeOK) GetClosedHours() OptGetSiteSettingForTypeOKClosedHours {
	return s.ClosedHours
}

// GetHolidayHours returns the value of HolidayHours.
func (s *GetSiteSettingForTypeOK) GetHolidayHours() OptGetSiteSettingForTypeOKHolidayHours {
	return s.HolidayHours
}

// GetSecurity returns the value of Security.
func (s *GetSiteSettingForTypeOK) GetSecurity() OptGetSiteSettingForTypeOKSecurity {
	return s.Security
}

// GetOutboundCallerID returns the value of OutboundCallerID.
func (s *GetSiteSettingForTypeOK) GetOutboundCallerID() OptGetSiteSettingForTypeOKOutboundCallerID {
	return s.OutboundCallerID
}

// GetAudioPrompt returns the value of AudioPrompt.
func (s *GetSiteSettingForTypeOK) GetAudioPrompt() OptGetSiteSettingForTypeOKAudioPrompt {
	return s.AudioPrompt
}

// GetDeskPhone returns the value of DeskPhone.
func (s *GetSiteSettingForTypeOK) GetDeskPhone() jx.Raw {
	return s.DeskPhone
}

// GetDialByName returns the value of DialByName.
func (s *GetSiteSettingForTypeOK) GetDialByName() OptGetSiteSettingForTypeOKDialByName {
	return s.DialByName
}

// GetBillingAccount returns the value of BillingAccount.
func (s *GetSiteSettingForTypeOK) GetBillingAccount() OptGetSiteSettingForTypeOKBillingAccount {
	return s.BillingAccount
}

// SetLocationBasedRouting sets the value of LocationBasedRouting.
func (s *GetSiteSettingForTypeOK) SetLocationBasedRouting(val OptGetSiteSettingForTypeOKLocationBasedRouting) {
	s.LocationBasedRouting = val
}

// SetBusinessHours sets the value of BusinessHours.
func (s *GetSiteSettingForTypeOK) SetBusinessHours(val OptGetSiteSettingForTypeOKBusinessHours) {
	s.BusinessHours = val
}

// SetClosedHours sets the value of ClosedHours.
func (s *GetSiteSettingForTypeOK) SetClosedHours(val OptGetSiteSettingForTypeOKClosedHours) {
	s.ClosedHours = val
}

// SetHolidayHours sets the value of HolidayHours.
func (s *GetSiteSettingForTypeOK) SetHolidayHours(val OptGetSiteSettingForTypeOKHolidayHours) {
	s.HolidayHours = val
}

// SetSecurity sets the value of Security.
func (s *GetSiteSettingForTypeOK) SetSecurity(val OptGetSiteSettingForTypeOKSecurity) {
	s.Security = val
}

// SetOutboundCallerID sets the value of OutboundCallerID.
func (s *GetSiteSettingForTypeOK) SetOutboundCallerID(val OptGetSiteSettingForTypeOKOutboundCallerID) {
	s.OutboundCallerID = val
}

// SetAudioPrompt sets the value of AudioPrompt.
func (s *GetSiteSettingForTypeOK) SetAudioPrompt(val OptGetSiteSettingForTypeOKAudioPrompt) {
	s.AudioPrompt = val
}

// SetDeskPhone sets the value of DeskPhone.
func (s *GetSiteSettingForTypeOK) SetDeskPhone(val jx.Raw) {
	s.DeskPhone = val
}

// SetDialByName sets the value of DialByName.
func (s *GetSiteSettingForTypeOK) SetDialByName(val OptGetSiteSettingForTypeOKDialByName) {
	s.DialByName = val
}

// SetBillingAccount sets the value of BillingAccount.
func (s *GetSiteSettingForTypeOK) SetBillingAccount(val OptGetSiteSettingForTypeOKBillingAccount) {
	s.BillingAccount = val
}

// The audio prompt setting.
type GetSiteSettingForTypeOKAudioPrompt struct {
	// Audio prompt language code.
	// American English: `en-US`
	// British English: `en-GB`
	// Espa&ntilde;ol americano: `es-US`
	// Fran&ccedil;ais canadien: `fr-CA`
	// Dansk: `da-DK`
	// Deutsch: `de-DE`
	// Espa&ntilde;ol: `es-ES`
	// Fran&ccedil;ais: `fr-FR`
	// Italiano: `it-IT`
	// Nederlands: `nl-NL`
	// Portugues portugal: `pt-PT`
	// Japanese: `ja-JP`
	// Korean: `ko-KO`
	// Portugues brasil: `pt-BR`
	// Chinese: `zh-CN`
	// Taiwanese: `zh-TW`.
	Language                                           OptString                                                                               `json:"language"`
	GreetingLeaveVoicemailInstruction                  OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction                  `json:"greeting_leave_voicemail_instruction"`
	GreetingMenuLeaveOrCheckVoicemail                  OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail                  `json:"greeting_menu_leave_or_check_voicemail"`
	GreetingMenuConnectToOperatorOrLeaveVoicemail      OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail      `json:"greeting_menu_connect_to_operator_or_leave_voicemail"`
	GreetingMenuConnectToOperatorLeaveOrCheckVoicemail OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail `json:"greeting_menu_connect_to_operator_leave_or_check_voicemail"`
	LeaveVoicemailIntroduction                         OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction                         `json:"leave_voicemail_introduction"`
	MessageGreeting                                    OptGetSiteSettingForTypeOKAudioPromptMessageGreeting                                    `json:"message_greeting"`
	// The audio prompt setting for respective hours.
	AudioWhileConnecting OptGetSiteSettingForTypeOKAudioPromptAudioWhileConnecting `json:"audio_while_connecting"`
	// The audio prompt setting for respective hours.
	HoldMusic OptGetSiteSettingForTypeOKAudioPromptHoldMusic `json:"hold_music"`
}

// GetLanguage returns the value of Language.
func (s *GetSiteSettingForTypeOKAudioPrompt) GetLanguage() OptString {
	return s.Language
}

// GetGreetingLeaveVoicemailInstruction returns the value of GreetingLeaveVoicemailInstruction.
func (s *GetSiteSettingForTypeOKAudioPrompt) GetGreetingLeaveVoicemailInstruction() OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction {
	return s.GreetingLeaveVoicemailInstruction
}

// GetGreetingMenuLeaveOrCheckVoicemail returns the value of GreetingMenuLeaveOrCheckVoicemail.
func (s *GetSiteSettingForTypeOKAudioPrompt) GetGreetingMenuLeaveOrCheckVoicemail() OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail {
	return s.GreetingMenuLeaveOrCheckVoicemail
}

// GetGreetingMenuConnectToOperatorOrLeaveVoicemail returns the value of GreetingMenuConnectToOperatorOrLeaveVoicemail.
func (s *GetSiteSettingForTypeOKAudioPrompt) GetGreetingMenuConnectToOperatorOrLeaveVoicemail() OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail {
	return s.GreetingMenuConnectToOperatorOrLeaveVoicemail
}

// GetGreetingMenuConnectToOperatorLeaveOrCheckVoicemail returns the value of GreetingMenuConnectToOperatorLeaveOrCheckVoicemail.
func (s *GetSiteSettingForTypeOKAudioPrompt) GetGreetingMenuConnectToOperatorLeaveOrCheckVoicemail() OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail {
	return s.GreetingMenuConnectToOperatorLeaveOrCheckVoicemail
}

// GetLeaveVoicemailIntroduction returns the value of LeaveVoicemailIntroduction.
func (s *GetSiteSettingForTypeOKAudioPrompt) GetLeaveVoicemailIntroduction() OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction {
	return s.LeaveVoicemailIntroduction
}

// GetMessageGreeting returns the value of MessageGreeting.
func (s *GetSiteSettingForTypeOKAudioPrompt) GetMessageGreeting() OptGetSiteSettingForTypeOKAudioPromptMessageGreeting {
	return s.MessageGreeting
}

// GetAudioWhileConnecting returns the value of AudioWhileConnecting.
func (s *GetSiteSettingForTypeOKAudioPrompt) GetAudioWhileConnecting() OptGetSiteSettingForTypeOKAudioPromptAudioWhileConnecting {
	return s.AudioWhileConnecting
}

// GetHoldMusic returns the value of HoldMusic.
func (s *GetSiteSettingForTypeOKAudioPrompt) GetHoldMusic() OptGetSiteSettingForTypeOKAudioPromptHoldMusic {
	return s.HoldMusic
}

// SetLanguage sets the value of Language.
func (s *GetSiteSettingForTypeOKAudioPrompt) SetLanguage(val OptString) {
	s.Language = val
}

// SetGreetingLeaveVoicemailInstruction sets the value of GreetingLeaveVoicemailInstruction.
func (s *GetSiteSettingForTypeOKAudioPrompt) SetGreetingLeaveVoicemailInstruction(val OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction) {
	s.GreetingLeaveVoicemailInstruction = val
}

// SetGreetingMenuLeaveOrCheckVoicemail sets the value of GreetingMenuLeaveOrCheckVoicemail.
func (s *GetSiteSettingForTypeOKAudioPrompt) SetGreetingMenuLeaveOrCheckVoicemail(val OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail) {
	s.GreetingMenuLeaveOrCheckVoicemail = val
}

// SetGreetingMenuConnectToOperatorOrLeaveVoicemail sets the value of GreetingMenuConnectToOperatorOrLeaveVoicemail.
func (s *GetSiteSettingForTypeOKAudioPrompt) SetGreetingMenuConnectToOperatorOrLeaveVoicemail(val OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) {
	s.GreetingMenuConnectToOperatorOrLeaveVoicemail = val
}

// SetGreetingMenuConnectToOperatorLeaveOrCheckVoicemail sets the value of GreetingMenuConnectToOperatorLeaveOrCheckVoicemail.
func (s *GetSiteSettingForTypeOKAudioPrompt) SetGreetingMenuConnectToOperatorLeaveOrCheckVoicemail(val OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) {
	s.GreetingMenuConnectToOperatorLeaveOrCheckVoicemail = val
}

// SetLeaveVoicemailIntroduction sets the value of LeaveVoicemailIntroduction.
func (s *GetSiteSettingForTypeOKAudioPrompt) SetLeaveVoicemailIntroduction(val OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction) {
	s.LeaveVoicemailIntroduction = val
}

// SetMessageGreeting sets the value of MessageGreeting.
func (s *GetSiteSettingForTypeOKAudioPrompt) SetMessageGreeting(val OptGetSiteSettingForTypeOKAudioPromptMessageGreeting) {
	s.MessageGreeting = val
}

// SetAudioWhileConnecting sets the value of AudioWhileConnecting.
func (s *GetSiteSettingForTypeOKAudioPrompt) SetAudioWhileConnecting(val OptGetSiteSettingForTypeOKAudioPromptAudioWhileConnecting) {
	s.AudioWhileConnecting = val
}

// SetHoldMusic sets the value of HoldMusic.
func (s *GetSiteSettingForTypeOKAudioPrompt) SetHoldMusic(val OptGetSiteSettingForTypeOKAudioPromptHoldMusic) {
	s.HoldMusic = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptAudioWhileConnecting struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptAudioWhileConnecting) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptAudioWhileConnecting) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptAudioWhileConnecting) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptAudioWhileConnecting) SetName(val OptString) {
	s.Name = val
}

type GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction struct {
	// The audio prompt setting for respective hours.
	BusinessHours OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours `json:"business_hours"`
	// The audio prompt setting for respective hours.
	ClosedHours OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours `json:"closed_hours"`
	// The audio prompt setting for respective hours.
	HolidayHours OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours `json:"holiday_hours"`
}

// GetBusinessHours returns the value of BusinessHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction) GetBusinessHours() OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours {
	return s.BusinessHours
}

// GetClosedHours returns the value of ClosedHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction) GetClosedHours() OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours {
	return s.ClosedHours
}

// GetHolidayHours returns the value of HolidayHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction) GetHolidayHours() OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours {
	return s.HolidayHours
}

// SetBusinessHours sets the value of BusinessHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction) SetBusinessHours(val OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) {
	s.BusinessHours = val
}

// SetClosedHours sets the value of ClosedHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction) SetClosedHours(val OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours) {
	s.ClosedHours = val
}

// SetHolidayHours sets the value of HolidayHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction) SetHolidayHours(val OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) {
	s.HolidayHours = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) SetName(val OptString) {
	s.Name = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours) SetName(val OptString) {
	s.Name = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) SetName(val OptString) {
	s.Name = val
}

type GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail struct {
	// The audio prompt setting for respective hours.
	BusinessHours OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours `json:"business_hours"`
	// The audio prompt setting for respective hours.
	ClosedHours OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours `json:"closed_hours"`
	// The audio prompt setting for respective hours.
	HolidayHours OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours `json:"holiday_hours"`
}

// GetBusinessHours returns the value of BusinessHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) GetBusinessHours() OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours {
	return s.BusinessHours
}

// GetClosedHours returns the value of ClosedHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) GetClosedHours() OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours {
	return s.ClosedHours
}

// GetHolidayHours returns the value of HolidayHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) GetHolidayHours() OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours {
	return s.HolidayHours
}

// SetBusinessHours sets the value of BusinessHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) SetBusinessHours(val OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) {
	s.BusinessHours = val
}

// SetClosedHours sets the value of ClosedHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) SetClosedHours(val OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) {
	s.ClosedHours = val
}

// SetHolidayHours sets the value of HolidayHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) SetHolidayHours(val OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) {
	s.HolidayHours = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) SetName(val OptString) {
	s.Name = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) SetName(val OptString) {
	s.Name = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) SetName(val OptString) {
	s.Name = val
}

type GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail struct {
	// The audio prompt setting for respective hours.
	BusinessHours OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours `json:"business_hours"`
	// The audio prompt setting for respective hours.
	ClosedHours OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours `json:"closed_hours"`
	// The audio prompt setting for respective hours.
	HolidayHours OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours `json:"holiday_hours"`
}

// GetBusinessHours returns the value of BusinessHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) GetBusinessHours() OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours {
	return s.BusinessHours
}

// GetClosedHours returns the value of ClosedHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) GetClosedHours() OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours {
	return s.ClosedHours
}

// GetHolidayHours returns the value of HolidayHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) GetHolidayHours() OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours {
	return s.HolidayHours
}

// SetBusinessHours sets the value of BusinessHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) SetBusinessHours(val OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) {
	s.BusinessHours = val
}

// SetClosedHours sets the value of ClosedHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) SetClosedHours(val OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) {
	s.ClosedHours = val
}

// SetHolidayHours sets the value of HolidayHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) SetHolidayHours(val OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) {
	s.HolidayHours = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) SetName(val OptString) {
	s.Name = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) SetName(val OptString) {
	s.Name = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) SetName(val OptString) {
	s.Name = val
}

type GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail struct {
	// The audio prompt setting for respective hours.
	BusinessHours OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours `json:"business_hours"`
	// The audio prompt setting for respective hours.
	ClosedHours OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours `json:"closed_hours"`
	// The audio prompt setting for respective hours.
	HolidayHours OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours `json:"holiday_hours"`
}

// GetBusinessHours returns the value of BusinessHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail) GetBusinessHours() OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours {
	return s.BusinessHours
}

// GetClosedHours returns the value of ClosedHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail) GetClosedHours() OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours {
	return s.ClosedHours
}

// GetHolidayHours returns the value of HolidayHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail) GetHolidayHours() OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours {
	return s.HolidayHours
}

// SetBusinessHours sets the value of BusinessHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail) SetBusinessHours(val OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) {
	s.BusinessHours = val
}

// SetClosedHours sets the value of ClosedHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail) SetClosedHours(val OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) {
	s.ClosedHours = val
}

// SetHolidayHours sets the value of HolidayHours.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail) SetHolidayHours(val OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) {
	s.HolidayHours = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) SetName(val OptString) {
	s.Name = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) SetName(val OptString) {
	s.Name = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) SetName(val OptString) {
	s.Name = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptHoldMusic struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptHoldMusic) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptHoldMusic) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptHoldMusic) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptHoldMusic) SetName(val OptString) {
	s.Name = val
}

type GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction struct {
	// The audio prompt setting for respective hours.
	BusinessHours OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours `json:"business_hours"`
	// The audio prompt setting for respective hours.
	ClosedHours OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours `json:"closed_hours"`
	// The audio prompt setting for respective hours.
	HolidayHours OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours `json:"holiday_hours"`
}

// GetBusinessHours returns the value of BusinessHours.
func (s *GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction) GetBusinessHours() OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours {
	return s.BusinessHours
}

// GetClosedHours returns the value of ClosedHours.
func (s *GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction) GetClosedHours() OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours {
	return s.ClosedHours
}

// GetHolidayHours returns the value of HolidayHours.
func (s *GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction) GetHolidayHours() OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours {
	return s.HolidayHours
}

// SetBusinessHours sets the value of BusinessHours.
func (s *GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction) SetBusinessHours(val OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours) {
	s.BusinessHours = val
}

// SetClosedHours sets the value of ClosedHours.
func (s *GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction) SetClosedHours(val OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours) {
	s.ClosedHours = val
}

// SetHolidayHours sets the value of HolidayHours.
func (s *GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction) SetHolidayHours(val OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours) {
	s.HolidayHours = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours) SetName(val OptString) {
	s.Name = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours) SetName(val OptString) {
	s.Name = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours) SetName(val OptString) {
	s.Name = val
}

type GetSiteSettingForTypeOKAudioPromptMessageGreeting struct {
	// The audio prompt setting for respective hours.
	BusinessHours OptGetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours `json:"business_hours"`
	// The audio prompt setting for respective hours.
	ClosedHours OptGetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours `json:"closed_hours"`
	// The audio prompt setting for respective hours.
	HolidayHours OptGetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours `json:"holiday_hours"`
}

// GetBusinessHours returns the value of BusinessHours.
func (s *GetSiteSettingForTypeOKAudioPromptMessageGreeting) GetBusinessHours() OptGetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours {
	return s.BusinessHours
}

// GetClosedHours returns the value of ClosedHours.
func (s *GetSiteSettingForTypeOKAudioPromptMessageGreeting) GetClosedHours() OptGetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours {
	return s.ClosedHours
}

// GetHolidayHours returns the value of HolidayHours.
func (s *GetSiteSettingForTypeOKAudioPromptMessageGreeting) GetHolidayHours() OptGetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours {
	return s.HolidayHours
}

// SetBusinessHours sets the value of BusinessHours.
func (s *GetSiteSettingForTypeOKAudioPromptMessageGreeting) SetBusinessHours(val OptGetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours) {
	s.BusinessHours = val
}

// SetClosedHours sets the value of ClosedHours.
func (s *GetSiteSettingForTypeOKAudioPromptMessageGreeting) SetClosedHours(val OptGetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours) {
	s.ClosedHours = val
}

// SetHolidayHours sets the value of HolidayHours.
func (s *GetSiteSettingForTypeOKAudioPromptMessageGreeting) SetHolidayHours(val OptGetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours) {
	s.HolidayHours = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours) SetName(val OptString) {
	s.Name = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours) SetName(val OptString) {
	s.Name = val
}

// The audio prompt setting for respective hours.
type GetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours struct {
	// The audio item ID. If the audio was removed from the user's audio library, it will be marked with
	// a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the
	// audio information in [Get an audio item](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *GetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours) SetName(val OptString) {
	s.Name = val
}

// Billing account setting.
type GetSiteSettingForTypeOKBillingAccount struct {
	// Billing account ID.
	ID OptString `json:"id"`
	// Billing account name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetSiteSettingForTypeOKBillingAccount) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKBillingAccount) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetSiteSettingForTypeOKBillingAccount) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKBillingAccount) SetName(val OptString) {
	s.Name = val
}

// Set the default business hours for all users, Zoom Rooms and Common Areas for the site.
type GetSiteSettingForTypeOKBusinessHours struct {
	// Business Hour Type `1`- 24 hours a day, 7 days a week; `2`- Custom hours.
	CustomHourType OptInt `json:"custom_hour_type"`
	// The settings for custom business hours.
	CustomHours []GetSiteSettingForTypeOKBusinessHoursCustomHoursItem `json:"custom_hours"`
	// Whether to set the default overflow for business hours for users, call queues, and shared line
	// groups.
	Overflow OptGetSiteSettingForTypeOKBusinessHoursOverflow `json:"overflow"`
}

// GetCustomHourType returns the value of CustomHourType.
func (s *GetSiteSettingForTypeOKBusinessHours) GetCustomHourType() OptInt {
	return s.CustomHourType
}

// GetCustomHours returns the value of CustomHours.
func (s *GetSiteSettingForTypeOKBusinessHours) GetCustomHours() []GetSiteSettingForTypeOKBusinessHoursCustomHoursItem {
	return s.CustomHours
}

// GetOverflow returns the value of Overflow.
func (s *GetSiteSettingForTypeOKBusinessHours) GetOverflow() OptGetSiteSettingForTypeOKBusinessHoursOverflow {
	return s.Overflow
}

// SetCustomHourType sets the value of CustomHourType.
func (s *GetSiteSettingForTypeOKBusinessHours) SetCustomHourType(val OptInt) {
	s.CustomHourType = val
}

// SetCustomHours sets the value of CustomHours.
func (s *GetSiteSettingForTypeOKBusinessHours) SetCustomHours(val []GetSiteSettingForTypeOKBusinessHoursCustomHoursItem) {
	s.CustomHours = val
}

// SetOverflow sets the value of Overflow.
func (s *GetSiteSettingForTypeOKBusinessHours) SetOverflow(val OptGetSiteSettingForTypeOKBusinessHoursOverflow) {
	s.Overflow = val
}

type GetSiteSettingForTypeOKBusinessHoursCustomHoursItem struct {
	// The start time for custom hours in `HH:mm` format.
	From OptString `json:"from"`
	// The end time custom hours in `HH:mm` format.
	To OptString `json:"to"`
	// The type of custom hours:
	// * `0` &mdash; Disabled.
	// * `1` &mdash; 24 hours.
	// * `2` &mdash; Customized hours.
	Type OptInt `json:"type"`
	// The day of the week:
	// * `1` &mdash; Sunday
	// * `2` &mdash; Monday
	// * `3` &mdash; Tuesday
	// * `4` &mdash; Wednesday
	// * `5` &mdash; Thursday
	// * `6` &mdash; Friday
	// * `7` &mdash; Saturday.
	Weekday OptInt `json:"weekday"`
}

// GetFrom returns the value of From.
func (s *GetSiteSettingForTypeOKBusinessHoursCustomHoursItem) GetFrom() OptString {
	return s.From
}

// GetTo returns the value of To.
func (s *GetSiteSettingForTypeOKBusinessHoursCustomHoursItem) GetTo() OptString {
	return s.To
}

// GetType returns the value of Type.
func (s *GetSiteSettingForTypeOKBusinessHoursCustomHoursItem) GetType() OptInt {
	return s.Type
}

// GetWeekday returns the value of Weekday.
func (s *GetSiteSettingForTypeOKBusinessHoursCustomHoursItem) GetWeekday() OptInt {
	return s.Weekday
}

// SetFrom sets the value of From.
func (s *GetSiteSettingForTypeOKBusinessHoursCustomHoursItem) SetFrom(val OptString) {
	s.From = val
}

// SetTo sets the value of To.
func (s *GetSiteSettingForTypeOKBusinessHoursCustomHoursItem) SetTo(val OptString) {
	s.To = val
}

// SetType sets the value of Type.
func (s *GetSiteSettingForTypeOKBusinessHoursCustomHoursItem) SetType(val OptInt) {
	s.Type = val
}

// SetWeekday sets the value of Weekday.
func (s *GetSiteSettingForTypeOKBusinessHoursCustomHoursItem) SetWeekday(val OptInt) {
	s.Weekday = val
}

// Whether to set the default overflow for business hours for users, call queues, and shared line
// groups.
type GetSiteSettingForTypeOKBusinessHoursOverflow struct {
	// Whether to allow callers to reach an operator.
	AllowCallerToReachOperator OptBool `json:"allow_caller_to_reach_operator"`
	// This field enables the operator to allow callers to reach.
	Operator OptGetSiteSettingForTypeOKBusinessHoursOverflowOperator `json:"operator"`
	// Whether to allow callers to check voicemail.
	AllowCallerToCheckVoicemail OptBool `json:"allow_caller_to_check_voicemail"`
}

// GetAllowCallerToReachOperator returns the value of AllowCallerToReachOperator.
func (s *GetSiteSettingForTypeOKBusinessHoursOverflow) GetAllowCallerToReachOperator() OptBool {
	return s.AllowCallerToReachOperator
}

// GetOperator returns the value of Operator.
func (s *GetSiteSettingForTypeOKBusinessHoursOverflow) GetOperator() OptGetSiteSettingForTypeOKBusinessHoursOverflowOperator {
	return s.Operator
}

// GetAllowCallerToCheckVoicemail returns the value of AllowCallerToCheckVoicemail.
func (s *GetSiteSettingForTypeOKBusinessHoursOverflow) GetAllowCallerToCheckVoicemail() OptBool {
	return s.AllowCallerToCheckVoicemail
}

// SetAllowCallerToReachOperator sets the value of AllowCallerToReachOperator.
func (s *GetSiteSettingForTypeOKBusinessHoursOverflow) SetAllowCallerToReachOperator(val OptBool) {
	s.AllowCallerToReachOperator = val
}

// SetOperator sets the value of Operator.
func (s *GetSiteSettingForTypeOKBusinessHoursOverflow) SetOperator(val OptGetSiteSettingForTypeOKBusinessHoursOverflowOperator) {
	s.Operator = val
}

// SetAllowCallerToCheckVoicemail sets the value of AllowCallerToCheckVoicemail.
func (s *GetSiteSettingForTypeOKBusinessHoursOverflow) SetAllowCallerToCheckVoicemail(val OptBool) {
	s.AllowCallerToCheckVoicemail = val
}

// This field enables the operator to allow callers to reach.
type GetSiteSettingForTypeOKBusinessHoursOverflowOperator struct {
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The display name of extension.
	DisplayName OptString `json:"display_name"`
	// The extension type.
	// * `user`
	// * `callQueue`
	// * `autoReceptionist`
	// * `commonArea`
	// * `zoomRoom`
	// * `ciscoRoom/PolycomRoom`
	// * `sharedLineGroup`.
	ExtensionType OptString `json:"extension_type"`
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetSiteSettingForTypeOKBusinessHoursOverflowOperator) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetSiteSettingForTypeOKBusinessHoursOverflowOperator) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetDisplayName returns the value of DisplayName.
func (s *GetSiteSettingForTypeOKBusinessHoursOverflowOperator) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetSiteSettingForTypeOKBusinessHoursOverflowOperator) GetExtensionType() OptString {
	return s.ExtensionType
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetSiteSettingForTypeOKBusinessHoursOverflowOperator) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetSiteSettingForTypeOKBusinessHoursOverflowOperator) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetSiteSettingForTypeOKBusinessHoursOverflowOperator) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetSiteSettingForTypeOKBusinessHoursOverflowOperator) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// Set the default closed hours for all users, Zoom Rooms, Common Areas, Auto Receptionists, Call
// Queues and Shared Line Groups for the site.
type GetSiteSettingForTypeOKClosedHours struct {
	// Whether to set the default overflow for business hours for users, call queues, and shared line
	// groups.
	Overflow OptGetSiteSettingForTypeOKClosedHoursOverflow `json:"overflow"`
}

// GetOverflow returns the value of Overflow.
func (s *GetSiteSettingForTypeOKClosedHours) GetOverflow() OptGetSiteSettingForTypeOKClosedHoursOverflow {
	return s.Overflow
}

// SetOverflow sets the value of Overflow.
func (s *GetSiteSettingForTypeOKClosedHours) SetOverflow(val OptGetSiteSettingForTypeOKClosedHoursOverflow) {
	s.Overflow = val
}

// Whether to set the default overflow for business hours for users, call queues, and shared line
// groups.
type GetSiteSettingForTypeOKClosedHoursOverflow struct {
	// Whether to allow callers to reach an operator.
	AllowCallerToReachOperator OptBool `json:"allow_caller_to_reach_operator"`
	// This field enables the operator to allow callers to reach.
	Operator OptGetSiteSettingForTypeOKClosedHoursOverflowOperator `json:"operator"`
	// Whether to allow callers to check voicemail.
	AllowCallerToCheckVoicemail OptBool `json:"allow_caller_to_check_voicemail"`
}

// GetAllowCallerToReachOperator returns the value of AllowCallerToReachOperator.
func (s *GetSiteSettingForTypeOKClosedHoursOverflow) GetAllowCallerToReachOperator() OptBool {
	return s.AllowCallerToReachOperator
}

// GetOperator returns the value of Operator.
func (s *GetSiteSettingForTypeOKClosedHoursOverflow) GetOperator() OptGetSiteSettingForTypeOKClosedHoursOverflowOperator {
	return s.Operator
}

// GetAllowCallerToCheckVoicemail returns the value of AllowCallerToCheckVoicemail.
func (s *GetSiteSettingForTypeOKClosedHoursOverflow) GetAllowCallerToCheckVoicemail() OptBool {
	return s.AllowCallerToCheckVoicemail
}

// SetAllowCallerToReachOperator sets the value of AllowCallerToReachOperator.
func (s *GetSiteSettingForTypeOKClosedHoursOverflow) SetAllowCallerToReachOperator(val OptBool) {
	s.AllowCallerToReachOperator = val
}

// SetOperator sets the value of Operator.
func (s *GetSiteSettingForTypeOKClosedHoursOverflow) SetOperator(val OptGetSiteSettingForTypeOKClosedHoursOverflowOperator) {
	s.Operator = val
}

// SetAllowCallerToCheckVoicemail sets the value of AllowCallerToCheckVoicemail.
func (s *GetSiteSettingForTypeOKClosedHoursOverflow) SetAllowCallerToCheckVoicemail(val OptBool) {
	s.AllowCallerToCheckVoicemail = val
}

// This field enables the operator to allow callers to reach.
type GetSiteSettingForTypeOKClosedHoursOverflowOperator struct {
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The display name of extension.
	DisplayName OptString `json:"display_name"`
	// The extension type.
	// * `user`
	// * `callQueue`
	// * `autoReceptionist`
	// * `commonArea`
	// * `zoomRoom`
	// * `ciscoRoom/PolycomRoom`
	// * `sharedLineGroup`.
	ExtensionType OptString `json:"extension_type"`
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetSiteSettingForTypeOKClosedHoursOverflowOperator) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetSiteSettingForTypeOKClosedHoursOverflowOperator) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetDisplayName returns the value of DisplayName.
func (s *GetSiteSettingForTypeOKClosedHoursOverflowOperator) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetSiteSettingForTypeOKClosedHoursOverflowOperator) GetExtensionType() OptString {
	return s.ExtensionType
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetSiteSettingForTypeOKClosedHoursOverflowOperator) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetSiteSettingForTypeOKClosedHoursOverflowOperator) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetSiteSettingForTypeOKClosedHoursOverflowOperator) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetSiteSettingForTypeOKClosedHoursOverflowOperator) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// The dial by name directory setting.
type GetSiteSettingForTypeOKDialByName struct {
	// Whether to allow callers to search for an extension by the first or last name. Currently supports
	// English only.
	Status OptBool `json:"status"`
	// Whether to inherit the dial by name directory maintained at the account level. This directory is
	// read-only to sites.
	Inherit OptBool `json:"inherit"`
	// Search extensions by first or last name. Callers must enter at least 2 characters to perform a
	// name search.
	Rule OptString `json:"rule"`
}

// GetStatus returns the value of Status.
func (s *GetSiteSettingForTypeOKDialByName) GetStatus() OptBool {
	return s.Status
}

// GetInherit returns the value of Inherit.
func (s *GetSiteSettingForTypeOKDialByName) GetInherit() OptBool {
	return s.Inherit
}

// GetRule returns the value of Rule.
func (s *GetSiteSettingForTypeOKDialByName) GetRule() OptString {
	return s.Rule
}

// SetStatus sets the value of Status.
func (s *GetSiteSettingForTypeOKDialByName) SetStatus(val OptBool) {
	s.Status = val
}

// SetInherit sets the value of Inherit.
func (s *GetSiteSettingForTypeOKDialByName) SetInherit(val OptBool) {
	s.Inherit = val
}

// SetRule sets the value of Rule.
func (s *GetSiteSettingForTypeOKDialByName) SetRule(val OptString) {
	s.Rule = val
}

// Set the default holiday hours for all users, Zoom Rooms, Common Areas, Auto Receptionists, Call
// Queues and Shared Line Groups for the site.
type GetSiteSettingForTypeOKHolidayHours struct {
	// The settings for holiday hours.
	Holidays []GetSiteSettingForTypeOKHolidayHoursHolidaysItem `json:"holidays"`
	// Whether to set the default overflow for business hours for users, call queues, and shared line
	// groups.
	Overflow OptGetSiteSettingForTypeOKHolidayHoursOverflow `json:"overflow"`
}

// GetHolidays returns the value of Holidays.
func (s *GetSiteSettingForTypeOKHolidayHours) GetHolidays() []GetSiteSettingForTypeOKHolidayHoursHolidaysItem {
	return s.Holidays
}

// GetOverflow returns the value of Overflow.
func (s *GetSiteSettingForTypeOKHolidayHours) GetOverflow() OptGetSiteSettingForTypeOKHolidayHoursOverflow {
	return s.Overflow
}

// SetHolidays sets the value of Holidays.
func (s *GetSiteSettingForTypeOKHolidayHours) SetHolidays(val []GetSiteSettingForTypeOKHolidayHoursHolidaysItem) {
	s.Holidays = val
}

// SetOverflow sets the value of Overflow.
func (s *GetSiteSettingForTypeOKHolidayHours) SetOverflow(val OptGetSiteSettingForTypeOKHolidayHoursOverflow) {
	s.Overflow = val
}

type GetSiteSettingForTypeOKHolidayHoursHolidaysItem struct {
	// The holiday ID.
	HolidayID OptString `json:"holiday_id"`
	// The name of the holiday.
	Name OptString `json:"name"`
	// The holiday start date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.
	From OptDateTime `json:"from"`
	// The holiday end date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.
	To OptDateTime `json:"to"`
}

// GetHolidayID returns the value of HolidayID.
func (s *GetSiteSettingForTypeOKHolidayHoursHolidaysItem) GetHolidayID() OptString {
	return s.HolidayID
}

// GetName returns the value of Name.
func (s *GetSiteSettingForTypeOKHolidayHoursHolidaysItem) GetName() OptString {
	return s.Name
}

// GetFrom returns the value of From.
func (s *GetSiteSettingForTypeOKHolidayHoursHolidaysItem) GetFrom() OptDateTime {
	return s.From
}

// GetTo returns the value of To.
func (s *GetSiteSettingForTypeOKHolidayHoursHolidaysItem) GetTo() OptDateTime {
	return s.To
}

// SetHolidayID sets the value of HolidayID.
func (s *GetSiteSettingForTypeOKHolidayHoursHolidaysItem) SetHolidayID(val OptString) {
	s.HolidayID = val
}

// SetName sets the value of Name.
func (s *GetSiteSettingForTypeOKHolidayHoursHolidaysItem) SetName(val OptString) {
	s.Name = val
}

// SetFrom sets the value of From.
func (s *GetSiteSettingForTypeOKHolidayHoursHolidaysItem) SetFrom(val OptDateTime) {
	s.From = val
}

// SetTo sets the value of To.
func (s *GetSiteSettingForTypeOKHolidayHoursHolidaysItem) SetTo(val OptDateTime) {
	s.To = val
}

// Whether to set the default overflow for business hours for users, call queues, and shared line
// groups.
type GetSiteSettingForTypeOKHolidayHoursOverflow struct {
	// Whether to allow callers to reach an operator.
	AllowCallerToReachOperator OptBool `json:"allow_caller_to_reach_operator"`
	// This field enables the operator to allow callers to reach.
	Operator OptGetSiteSettingForTypeOKHolidayHoursOverflowOperator `json:"operator"`
	// Whether to allow callers to check voicemail.
	AllowCallerToCheckVoicemail OptBool `json:"allow_caller_to_check_voicemail"`
}

// GetAllowCallerToReachOperator returns the value of AllowCallerToReachOperator.
func (s *GetSiteSettingForTypeOKHolidayHoursOverflow) GetAllowCallerToReachOperator() OptBool {
	return s.AllowCallerToReachOperator
}

// GetOperator returns the value of Operator.
func (s *GetSiteSettingForTypeOKHolidayHoursOverflow) GetOperator() OptGetSiteSettingForTypeOKHolidayHoursOverflowOperator {
	return s.Operator
}

// GetAllowCallerToCheckVoicemail returns the value of AllowCallerToCheckVoicemail.
func (s *GetSiteSettingForTypeOKHolidayHoursOverflow) GetAllowCallerToCheckVoicemail() OptBool {
	return s.AllowCallerToCheckVoicemail
}

// SetAllowCallerToReachOperator sets the value of AllowCallerToReachOperator.
func (s *GetSiteSettingForTypeOKHolidayHoursOverflow) SetAllowCallerToReachOperator(val OptBool) {
	s.AllowCallerToReachOperator = val
}

// SetOperator sets the value of Operator.
func (s *GetSiteSettingForTypeOKHolidayHoursOverflow) SetOperator(val OptGetSiteSettingForTypeOKHolidayHoursOverflowOperator) {
	s.Operator = val
}

// SetAllowCallerToCheckVoicemail sets the value of AllowCallerToCheckVoicemail.
func (s *GetSiteSettingForTypeOKHolidayHoursOverflow) SetAllowCallerToCheckVoicemail(val OptBool) {
	s.AllowCallerToCheckVoicemail = val
}

// This field enables the operator to allow callers to reach.
type GetSiteSettingForTypeOKHolidayHoursOverflowOperator struct {
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The display name of extension.
	DisplayName OptString `json:"display_name"`
	// The extension type.
	// * `user`
	// * `callQueue`
	// * `autoReceptionist`
	// * `commonArea`
	// * `zoomRoom`
	// * `ciscoRoom/PolycomRoom`
	// * `sharedLineGroup`.
	ExtensionType OptString `json:"extension_type"`
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetSiteSettingForTypeOKHolidayHoursOverflowOperator) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetSiteSettingForTypeOKHolidayHoursOverflowOperator) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetDisplayName returns the value of DisplayName.
func (s *GetSiteSettingForTypeOKHolidayHoursOverflowOperator) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionType returns the value of ExtensionType.
func (s *GetSiteSettingForTypeOKHolidayHoursOverflowOperator) GetExtensionType() OptString {
	return s.ExtensionType
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetSiteSettingForTypeOKHolidayHoursOverflowOperator) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetSiteSettingForTypeOKHolidayHoursOverflowOperator) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetDisplayName sets the value of DisplayName.
func (s *GetSiteSettingForTypeOKHolidayHoursOverflowOperator) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *GetSiteSettingForTypeOKHolidayHoursOverflowOperator) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// Location-based routing setting of the site.
type GetSiteSettingForTypeOKLocationBasedRouting struct {
	// When the policy is enabled, Zoom Phone calls will be subject to the policy options defined.
	Enable OptBool `json:"enable"`
	// Place and receive PSTN (Public Switched Telephone Network) calls only when inside the locations.
	PlaceReceivePstnCalls OptBool `json:"place_receive_pstn_calls"`
	// Enable media offload for extensions to PSTN (Public Switched Telephone Network) calls.
	EnableMediaOffLoadPstnCalls OptBool `json:"enable_media_off_load_pstn_calls"`
}

// GetEnable returns the value of Enable.
func (s *GetSiteSettingForTypeOKLocationBasedRouting) GetEnable() OptBool {
	return s.Enable
}

// GetPlaceReceivePstnCalls returns the value of PlaceReceivePstnCalls.
func (s *GetSiteSettingForTypeOKLocationBasedRouting) GetPlaceReceivePstnCalls() OptBool {
	return s.PlaceReceivePstnCalls
}

// GetEnableMediaOffLoadPstnCalls returns the value of EnableMediaOffLoadPstnCalls.
func (s *GetSiteSettingForTypeOKLocationBasedRouting) GetEnableMediaOffLoadPstnCalls() OptBool {
	return s.EnableMediaOffLoadPstnCalls
}

// SetEnable sets the value of Enable.
func (s *GetSiteSettingForTypeOKLocationBasedRouting) SetEnable(val OptBool) {
	s.Enable = val
}

// SetPlaceReceivePstnCalls sets the value of PlaceReceivePstnCalls.
func (s *GetSiteSettingForTypeOKLocationBasedRouting) SetPlaceReceivePstnCalls(val OptBool) {
	s.PlaceReceivePstnCalls = val
}

// SetEnableMediaOffLoadPstnCalls sets the value of EnableMediaOffLoadPstnCalls.
func (s *GetSiteSettingForTypeOKLocationBasedRouting) SetEnableMediaOffLoadPstnCalls(val OptBool) {
	s.EnableMediaOffLoadPstnCalls = val
}

// The outbound caller ID setting.
type GetSiteSettingForTypeOKOutboundCallerID struct {
	// When checked, auto receptionists members will use the numbers as the outbound caller ID.
	AutoReceptionistsNumbers OptBool `json:"auto_receptionists_numbers"`
	// When checked, call queue members will use the numbers as the outbound caller ID.
	CallQueueNumbers OptBool `json:"call_queue_numbers"`
	// When checked, share line group members will use the numbers as the outbound caller ID.
	ShareLineGroupNumbers OptBool `json:"share_line_group_numbers"`
	// When a call is made to an internal extension that uses the numbers associated with Auto
	// Receptionist or Call Queue as the caller ID, the receiver will see an outbound caller ID selected
	// by the caller.
	ShowOutboundCallerIDForInternalCall OptBool `json:"show_outbound_caller_id_for_internal_call"`
}

// GetAutoReceptionistsNumbers returns the value of AutoReceptionistsNumbers.
func (s *GetSiteSettingForTypeOKOutboundCallerID) GetAutoReceptionistsNumbers() OptBool {
	return s.AutoReceptionistsNumbers
}

// GetCallQueueNumbers returns the value of CallQueueNumbers.
func (s *GetSiteSettingForTypeOKOutboundCallerID) GetCallQueueNumbers() OptBool {
	return s.CallQueueNumbers
}

// GetShareLineGroupNumbers returns the value of ShareLineGroupNumbers.
func (s *GetSiteSettingForTypeOKOutboundCallerID) GetShareLineGroupNumbers() OptBool {
	return s.ShareLineGroupNumbers
}

// GetShowOutboundCallerIDForInternalCall returns the value of ShowOutboundCallerIDForInternalCall.
func (s *GetSiteSettingForTypeOKOutboundCallerID) GetShowOutboundCallerIDForInternalCall() OptBool {
	return s.ShowOutboundCallerIDForInternalCall
}

// SetAutoReceptionistsNumbers sets the value of AutoReceptionistsNumbers.
func (s *GetSiteSettingForTypeOKOutboundCallerID) SetAutoReceptionistsNumbers(val OptBool) {
	s.AutoReceptionistsNumbers = val
}

// SetCallQueueNumbers sets the value of CallQueueNumbers.
func (s *GetSiteSettingForTypeOKOutboundCallerID) SetCallQueueNumbers(val OptBool) {
	s.CallQueueNumbers = val
}

// SetShareLineGroupNumbers sets the value of ShareLineGroupNumbers.
func (s *GetSiteSettingForTypeOKOutboundCallerID) SetShareLineGroupNumbers(val OptBool) {
	s.ShareLineGroupNumbers = val
}

// SetShowOutboundCallerIDForInternalCall sets the value of ShowOutboundCallerIDForInternalCall.
func (s *GetSiteSettingForTypeOKOutboundCallerID) SetShowOutboundCallerIDForInternalCall(val OptBool) {
	s.ShowOutboundCallerIDForInternalCall = val
}

// Upgrade devices from current site to use the SRTP with AES-256 bit encryption. After adding or
// removing a device type, devices of the corresponding type will get resynced. For more information,
// see [Zoom Phone Encryption](https://support.zoom.
// us/hc/en-us/articles/360042578911#h_36a22ca1-89f1-4614-8d7e-3c6a957b261c).
type GetSiteSettingForTypeOKSecurity struct {
	// The effective device types.
	DeviceTypes []string `json:"device_types"`
}

// GetDeviceTypes returns the value of DeviceTypes.
func (s *GetSiteSettingForTypeOKSecurity) GetDeviceTypes() []string {
	return s.DeviceTypes
}

// SetDeviceTypes sets the value of DeviceTypes.
func (s *GetSiteSettingForTypeOKSecurity) SetDeviceTypes(val []string) {
	s.DeviceTypes = val
}

type GetSmsSessionsOK struct {
	SMSSessions []GetSmsSessionsOKSMSSessionsItem `json:"sms_sessions"`
	// The sync token for a backward (`BSync`) or forward (`ISync`) sync.
	SyncToken OptString `json:"sync_token"`
}

// GetSMSSessions returns the value of SMSSessions.
func (s *GetSmsSessionsOK) GetSMSSessions() []GetSmsSessionsOKSMSSessionsItem {
	return s.SMSSessions
}

// GetSyncToken returns the value of SyncToken.
func (s *GetSmsSessionsOK) GetSyncToken() OptString {
	return s.SyncToken
}

// SetSMSSessions sets the value of SMSSessions.
func (s *GetSmsSessionsOK) SetSMSSessions(val []GetSmsSessionsOKSMSSessionsItem) {
	s.SMSSessions = val
}

// SetSyncToken sets the value of SyncToken.
func (s *GetSmsSessionsOK) SetSyncToken(val OptString) {
	s.SyncToken = val
}

type GetSmsSessionsOKSMSSessionsItem struct {
	// The last send or receive time in UTC.
	LastAccessTime OptString                                       `json:"last_access_time"`
	LatestMessage  OptGetSmsSessionsOKSMSSessionsItemLatestMessage `json:"latest_message"`
	// The SMS senders and receivers.
	Participants []GetSmsSessionsOKSMSSessionsItemParticipantsItem `json:"participants"`
	// The SMS session ID.
	SessionID OptString `json:"session_id"`
	// The session type.
	// The value for this field can be one of the following:
	// `user`
	// `call_queue`
	// `auto_receptionist`.
	SessionType OptString `json:"session_type"`
	// The number of unread messages.
	UnreadMessageCount OptInt `json:"unread_message_count"`
}

// GetLastAccessTime returns the value of LastAccessTime.
func (s *GetSmsSessionsOKSMSSessionsItem) GetLastAccessTime() OptString {
	return s.LastAccessTime
}

// GetLatestMessage returns the value of LatestMessage.
func (s *GetSmsSessionsOKSMSSessionsItem) GetLatestMessage() OptGetSmsSessionsOKSMSSessionsItemLatestMessage {
	return s.LatestMessage
}

// GetParticipants returns the value of Participants.
func (s *GetSmsSessionsOKSMSSessionsItem) GetParticipants() []GetSmsSessionsOKSMSSessionsItemParticipantsItem {
	return s.Participants
}

// GetSessionID returns the value of SessionID.
func (s *GetSmsSessionsOKSMSSessionsItem) GetSessionID() OptString {
	return s.SessionID
}

// GetSessionType returns the value of SessionType.
func (s *GetSmsSessionsOKSMSSessionsItem) GetSessionType() OptString {
	return s.SessionType
}

// GetUnreadMessageCount returns the value of UnreadMessageCount.
func (s *GetSmsSessionsOKSMSSessionsItem) GetUnreadMessageCount() OptInt {
	return s.UnreadMessageCount
}

// SetLastAccessTime sets the value of LastAccessTime.
func (s *GetSmsSessionsOKSMSSessionsItem) SetLastAccessTime(val OptString) {
	s.LastAccessTime = val
}

// SetLatestMessage sets the value of LatestMessage.
func (s *GetSmsSessionsOKSMSSessionsItem) SetLatestMessage(val OptGetSmsSessionsOKSMSSessionsItemLatestMessage) {
	s.LatestMessage = val
}

// SetParticipants sets the value of Participants.
func (s *GetSmsSessionsOKSMSSessionsItem) SetParticipants(val []GetSmsSessionsOKSMSSessionsItemParticipantsItem) {
	s.Participants = val
}

// SetSessionID sets the value of SessionID.
func (s *GetSmsSessionsOKSMSSessionsItem) SetSessionID(val OptString) {
	s.SessionID = val
}

// SetSessionType sets the value of SessionType.
func (s *GetSmsSessionsOKSMSSessionsItem) SetSessionType(val OptString) {
	s.SessionType = val
}

// SetUnreadMessageCount sets the value of UnreadMessageCount.
func (s *GetSmsSessionsOKSMSSessionsItem) SetUnreadMessageCount(val OptInt) {
	s.UnreadMessageCount = val
}

type GetSmsSessionsOKSMSSessionsItemLatestMessage struct {
	Attachments []GetSmsSessionsOKSMSSessionsItemLatestMessageAttachmentsItem `json:"attachments"`
	// The UTC time the message was created.
	DateTime OptString `json:"date_time"`
	// `In`(SMS received) or `Out`(SMS sent).
	Direction OptString `json:"direction"`
	// The content of the SMS.
	Message OptString `json:"message"`
	// The message ID.
	MessageID OptString `json:"message_id"`
	// The message type:
	// 1 - SMS
	// 2 - MMS
	// 3 - GROUP_SMS
	// 4 - GROUP_MMS
	// 5 - SMS_INTER
	// 6 - MSG_ON_NET.
	MessageType OptInt                                                      `json:"message_type"`
	Sender      OptGetSmsSessionsOKSMSSessionsItemLatestMessageSender       `json:"sender"`
	ToMembers   []GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItem `json:"to_members"`
}

// GetAttachments returns the value of Attachments.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessage) GetAttachments() []GetSmsSessionsOKSMSSessionsItemLatestMessageAttachmentsItem {
	return s.Attachments
}

// GetDateTime returns the value of DateTime.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessage) GetDateTime() OptString {
	return s.DateTime
}

// GetDirection returns the value of Direction.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessage) GetDirection() OptString {
	return s.Direction
}

// GetMessage returns the value of Message.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessage) GetMessage() OptString {
	return s.Message
}

// GetMessageID returns the value of MessageID.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessage) GetMessageID() OptString {
	return s.MessageID
}

// GetMessageType returns the value of MessageType.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessage) GetMessageType() OptInt {
	return s.MessageType
}

// GetSender returns the value of Sender.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessage) GetSender() OptGetSmsSessionsOKSMSSessionsItemLatestMessageSender {
	return s.Sender
}

// GetToMembers returns the value of ToMembers.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessage) GetToMembers() []GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItem {
	return s.ToMembers
}

// SetAttachments sets the value of Attachments.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessage) SetAttachments(val []GetSmsSessionsOKSMSSessionsItemLatestMessageAttachmentsItem) {
	s.Attachments = val
}

// SetDateTime sets the value of DateTime.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessage) SetDateTime(val OptString) {
	s.DateTime = val
}

// SetDirection sets the value of Direction.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessage) SetDirection(val OptString) {
	s.Direction = val
}

// SetMessage sets the value of Message.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessage) SetMessage(val OptString) {
	s.Message = val
}

// SetMessageID sets the value of MessageID.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessage) SetMessageID(val OptString) {
	s.MessageID = val
}

// SetMessageType sets the value of MessageType.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessage) SetMessageType(val OptInt) {
	s.MessageType = val
}

// SetSender sets the value of Sender.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessage) SetSender(val OptGetSmsSessionsOKSMSSessionsItemLatestMessageSender) {
	s.Sender = val
}

// SetToMembers sets the value of ToMembers.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessage) SetToMembers(val []GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItem) {
	s.ToMembers = val
}

type GetSmsSessionsOKSMSSessionsItemLatestMessageAttachmentsItem struct {
	// The media file ID.
	ID OptString `json:"id"`
	// The file type: OTHER, PNG, GIF, JPG/JPEG, AUDIO, VIDEO.
	Type OptString `json:"type"`
}

// GetID returns the value of ID.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageAttachmentsItem) GetID() OptString {
	return s.ID
}

// GetType returns the value of Type.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageAttachmentsItem) GetType() OptString {
	return s.Type
}

// SetID sets the value of ID.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageAttachmentsItem) SetID(val OptString) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageAttachmentsItem) SetType(val OptString) {
	s.Type = val
}

type GetSmsSessionsOKSMSSessionsItemLatestMessageSender struct {
	// The sender's name.
	DisplayName OptString                                                  `json:"display_name"`
	Owner       OptGetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner `json:"owner"`
	// The sender's phone number.
	PhoneNumber string `json:"phone_number"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageSender) GetDisplayName() OptString {
	return s.DisplayName
}

// GetOwner returns the value of Owner.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageSender) GetOwner() OptGetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner {
	return s.Owner
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageSender) GetPhoneNumber() string {
	return s.PhoneNumber
}

// SetDisplayName sets the value of DisplayName.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageSender) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetOwner sets the value of Owner.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageSender) SetOwner(val OptGetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner) {
	s.Owner = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageSender) SetPhoneNumber(val string) {
	s.PhoneNumber = val
}

type GetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner struct {
	// The owner ID.
	ID OptString `json:"id"`
	// The owner type:
	// *`user`
	// *`callQueue`
	// *`autoReceptionist`
	// *`sharedLineGroup`.
	Type OptString `json:"type"`
}

// GetID returns the value of ID.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner) GetID() OptString {
	return s.ID
}

// GetType returns the value of Type.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner) GetType() OptString {
	return s.Type
}

// SetID sets the value of ID.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner) SetID(val OptString) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner) SetType(val OptString) {
	s.Type = val
}

type GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItem struct {
	// The participant name.
	DisplayName OptString                                                         `json:"display_name"`
	Owner       OptGetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner `json:"owner"`
	// The receiver's phone number.
	PhoneNumber string `json:"phone_number"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetOwner returns the value of Owner.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItem) GetOwner() OptGetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner {
	return s.Owner
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItem) GetPhoneNumber() string {
	return s.PhoneNumber
}

// SetDisplayName sets the value of DisplayName.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetOwner sets the value of Owner.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItem) SetOwner(val OptGetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner) {
	s.Owner = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItem) SetPhoneNumber(val string) {
	s.PhoneNumber = val
}

type GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner struct {
	// The owner ID.
	ID OptString `json:"id"`
	// The owner type:
	// *`user`
	// *`callQueue`
	// *`autoReceptionist`
	// *`sharedLineGroup`.
	Type OptString `json:"type"`
}

// GetID returns the value of ID.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner) GetID() OptString {
	return s.ID
}

// GetType returns the value of Type.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner) GetType() OptString {
	return s.Type
}

// SetID sets the value of ID.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner) SetID(val OptString) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner) SetType(val OptString) {
	s.Type = val
}

type GetSmsSessionsOKSMSSessionsItemParticipantsItem struct {
	// The SMS sender or receiver name.
	DisplayName OptString                                               `json:"display_name"`
	Owner       OptGetSmsSessionsOKSMSSessionsItemParticipantsItemOwner `json:"owner"`
	// The SMS sender or receiver phone number.
	PhoneNumber OptString `json:"phone_number"`
	// Whether it is the owner of the session.
	IsSessionOwner OptBool `json:"is_session_owner"`
}

// GetDisplayName returns the value of DisplayName.
func (s *GetSmsSessionsOKSMSSessionsItemParticipantsItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetOwner returns the value of Owner.
func (s *GetSmsSessionsOKSMSSessionsItemParticipantsItem) GetOwner() OptGetSmsSessionsOKSMSSessionsItemParticipantsItemOwner {
	return s.Owner
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *GetSmsSessionsOKSMSSessionsItemParticipantsItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetIsSessionOwner returns the value of IsSessionOwner.
func (s *GetSmsSessionsOKSMSSessionsItemParticipantsItem) GetIsSessionOwner() OptBool {
	return s.IsSessionOwner
}

// SetDisplayName sets the value of DisplayName.
func (s *GetSmsSessionsOKSMSSessionsItemParticipantsItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetOwner sets the value of Owner.
func (s *GetSmsSessionsOKSMSSessionsItemParticipantsItem) SetOwner(val OptGetSmsSessionsOKSMSSessionsItemParticipantsItemOwner) {
	s.Owner = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *GetSmsSessionsOKSMSSessionsItemParticipantsItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetIsSessionOwner sets the value of IsSessionOwner.
func (s *GetSmsSessionsOKSMSSessionsItemParticipantsItem) SetIsSessionOwner(val OptBool) {
	s.IsSessionOwner = val
}

type GetSmsSessionsOKSMSSessionsItemParticipantsItemOwner struct {
	// The owner ID.
	ID OptString `json:"id"`
	// The owner type:
	// *`user`
	// *`callQueue`
	// *`autoReceptionist`
	// *`sharedLineGroup`.
	Type OptString `json:"type"`
}

// GetID returns the value of ID.
func (s *GetSmsSessionsOKSMSSessionsItemParticipantsItemOwner) GetID() OptString {
	return s.ID
}

// GetType returns the value of Type.
func (s *GetSmsSessionsOKSMSSessionsItemParticipantsItemOwner) GetType() OptString {
	return s.Type
}

// SetID sets the value of ID.
func (s *GetSmsSessionsOKSMSSessionsItemParticipantsItemOwner) SetID(val OptString) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *GetSmsSessionsOKSMSSessionsItemParticipantsItemOwner) SetType(val OptString) {
	s.Type = val
}

type GetUserOutboundCallingCountriesAndRegionsOK struct {
	CountriesRegions []GetUserOutboundCallingCountriesAndRegionsOKCountriesRegionsItem `json:"countries_regions"`
	// The next page token paginates through large set of results. The next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The total number of records in a single API call.
	PageSize OptInt `json:"page_size"`
}

// GetCountriesRegions returns the value of CountriesRegions.
func (s *GetUserOutboundCallingCountriesAndRegionsOK) GetCountriesRegions() []GetUserOutboundCallingCountriesAndRegionsOKCountriesRegionsItem {
	return s.CountriesRegions
}

// GetNextPageToken returns the value of NextPageToken.
func (s *GetUserOutboundCallingCountriesAndRegionsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *GetUserOutboundCallingCountriesAndRegionsOK) GetPageSize() OptInt {
	return s.PageSize
}

// SetCountriesRegions sets the value of CountriesRegions.
func (s *GetUserOutboundCallingCountriesAndRegionsOK) SetCountriesRegions(val []GetUserOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) {
	s.CountriesRegions = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *GetUserOutboundCallingCountriesAndRegionsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *GetUserOutboundCallingCountriesAndRegionsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

type GetUserOutboundCallingCountriesAndRegionsOKCountriesRegionsItem struct {
	// The country name.
	Name OptString `json:"name"`
	// The country code.
	Code OptInt `json:"code"`
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	IsoCode OptString `json:"iso_code"`
	// The default outbound calling rule.
	// `1` Allowed
	// `2` Blocked
	// `3` Requires local number, caller ID, or plan
	// `4` Requires the extension number and PIN code.
	Rule OptInt `json:"rule"`
	// The enabled carrier, which could be "ZOOM" or "BYOC".
	EnabledCarrier []string `json:"enabled_carrier"`
}

// GetName returns the value of Name.
func (s *GetUserOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetName() OptString {
	return s.Name
}

// GetCode returns the value of Code.
func (s *GetUserOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetCode() OptInt {
	return s.Code
}

// GetIsoCode returns the value of IsoCode.
func (s *GetUserOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetIsoCode() OptString {
	return s.IsoCode
}

// GetRule returns the value of Rule.
func (s *GetUserOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetRule() OptInt {
	return s.Rule
}

// GetEnabledCarrier returns the value of EnabledCarrier.
func (s *GetUserOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) GetEnabledCarrier() []string {
	return s.EnabledCarrier
}

// SetName sets the value of Name.
func (s *GetUserOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetName(val OptString) {
	s.Name = val
}

// SetCode sets the value of Code.
func (s *GetUserOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetCode(val OptInt) {
	s.Code = val
}

// SetIsoCode sets the value of IsoCode.
func (s *GetUserOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetIsoCode(val OptString) {
	s.IsoCode = val
}

// SetRule sets the value of Rule.
func (s *GetUserOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetRule(val OptInt) {
	s.Rule = val
}

// SetEnabledCarrier sets the value of EnabledCarrier.
func (s *GetUserOutboundCallingCountriesAndRegionsOKCountriesRegionsItem) SetEnabledCarrier(val []string) {
	s.EnabledCarrier = val
}

// The voicemail information.
type GetVoicemailDetailsByCallIdOrCallLogIdOK struct {
	// The phone call ID.
	CallID OptString `json:"call_id"`
	// The call log ID.
	CallLogID OptString `json:"call_log_id"`
	// The name of the callee.
	CalleeName OptString `json:"callee_name"`
	// The number associated with the callee. Could be a phone number or an extension. Check the number
	// type to differentiate the two.
	CalleeNumber OptString `json:"callee_number"`
	// The callee's number type:
	// * `1` &mdash; Internal number.
	// * `2` &mdash; External number.
	// * `3` &mdash; Customized emergency number.
	CalleeNumberType OptInt `json:"callee_number_type"`
	// The name of the caller.
	CallerName OptString `json:"caller_name"`
	// The number associated with the caller. Could be a phone number or an extension. Check the number
	// type to differentiate the two.
	CallerNumber OptString `json:"caller_number"`
	// The caller's number type:
	// * `1` &mdash; Internal number.
	// * `2` &mdash; External number.
	CallerNumberType OptInt `json:"caller_number_type"`
	// The date the voicemail was created.
	DateTime OptString `json:"date_time"`
	// The URL to download the voicemail.
	DownloadURL OptString `json:"download_url"`
	// The duration of voicemail in seconds.
	Duration OptInt `json:"duration"`
	// The voicemail ID.
	ID OptString `json:"id"`
	// The voicemail status: either 'read' or 'unread'.
	Status OptString `json:"status"`
	// The voicemail transcript.
	Transcription OptGetVoicemailDetailsByCallIdOrCallLogIdOKTranscription `json:"transcription"`
}

// GetCallID returns the value of CallID.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) GetCallID() OptString {
	return s.CallID
}

// GetCallLogID returns the value of CallLogID.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) GetCallLogID() OptString {
	return s.CallLogID
}

// GetCalleeName returns the value of CalleeName.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) GetCalleeName() OptString {
	return s.CalleeName
}

// GetCalleeNumber returns the value of CalleeNumber.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) GetCalleeNumber() OptString {
	return s.CalleeNumber
}

// GetCalleeNumberType returns the value of CalleeNumberType.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) GetCalleeNumberType() OptInt {
	return s.CalleeNumberType
}

// GetCallerName returns the value of CallerName.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) GetCallerName() OptString {
	return s.CallerName
}

// GetCallerNumber returns the value of CallerNumber.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) GetCallerNumber() OptString {
	return s.CallerNumber
}

// GetCallerNumberType returns the value of CallerNumberType.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) GetCallerNumberType() OptInt {
	return s.CallerNumberType
}

// GetDateTime returns the value of DateTime.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) GetDateTime() OptString {
	return s.DateTime
}

// GetDownloadURL returns the value of DownloadURL.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) GetDownloadURL() OptString {
	return s.DownloadURL
}

// GetDuration returns the value of Duration.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) GetDuration() OptInt {
	return s.Duration
}

// GetID returns the value of ID.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) GetID() OptString {
	return s.ID
}

// GetStatus returns the value of Status.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) GetStatus() OptString {
	return s.Status
}

// GetTranscription returns the value of Transcription.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) GetTranscription() OptGetVoicemailDetailsByCallIdOrCallLogIdOKTranscription {
	return s.Transcription
}

// SetCallID sets the value of CallID.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) SetCallID(val OptString) {
	s.CallID = val
}

// SetCallLogID sets the value of CallLogID.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) SetCallLogID(val OptString) {
	s.CallLogID = val
}

// SetCalleeName sets the value of CalleeName.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) SetCalleeName(val OptString) {
	s.CalleeName = val
}

// SetCalleeNumber sets the value of CalleeNumber.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) SetCalleeNumber(val OptString) {
	s.CalleeNumber = val
}

// SetCalleeNumberType sets the value of CalleeNumberType.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) SetCalleeNumberType(val OptInt) {
	s.CalleeNumberType = val
}

// SetCallerName sets the value of CallerName.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) SetCallerName(val OptString) {
	s.CallerName = val
}

// SetCallerNumber sets the value of CallerNumber.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) SetCallerNumber(val OptString) {
	s.CallerNumber = val
}

// SetCallerNumberType sets the value of CallerNumberType.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) SetCallerNumberType(val OptInt) {
	s.CallerNumberType = val
}

// SetDateTime sets the value of DateTime.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) SetDateTime(val OptString) {
	s.DateTime = val
}

// SetDownloadURL sets the value of DownloadURL.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) SetDownloadURL(val OptString) {
	s.DownloadURL = val
}

// SetDuration sets the value of Duration.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) SetDuration(val OptInt) {
	s.Duration = val
}

// SetID sets the value of ID.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) SetID(val OptString) {
	s.ID = val
}

// SetStatus sets the value of Status.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) SetStatus(val OptString) {
	s.Status = val
}

// SetTranscription sets the value of Transcription.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOK) SetTranscription(val OptGetVoicemailDetailsByCallIdOrCallLogIdOKTranscription) {
	s.Transcription = val
}

// The voicemail transcript.
type GetVoicemailDetailsByCallIdOrCallLogIdOKTranscription struct {
	// The content of the voicemail transcript.
	Content OptString `json:"content"`
	// The status of the voicemail transcript:
	// * `0` &mdash; Transcript is not available.
	// * `1` &mdash; Transcript is processing.
	// * `2` &mdash; Transcript processed successfully.
	// * `4` &mdash; Transcript is disabled.
	// * `5` &mdash; Transcript is enabled.
	// * `9` &mdash; Transcript web error.
	// * `11` &mdash; Transcript download error.
	// * `12` &mdash; Transcript upload error.
	// * `13` &mdash; Transcript web database error.
	// * `14` &mdash; Transcript BYOS (Bring Your Own Storage) upload error.
	// * `409` &mdash; Transcript duplicate processing request error.
	// * `415` &mdash; Transcript unsupported media error.
	// * `422` &mdash; Transcript cannot be processed.
	// * `500` &mdash; Transcript server error.
	// * `601` &mdash; Transcript AISense after retry error.
	// * `602` &mdash; Transcript AISense upload file error.
	// * `603` &mdash; Transcript AISense download file error.
	// * `999` &mdash; Transcript AISense error.
	Status OptInt `json:"status"`
	// This field indicates the company that provides the transcription engine technology.
	Engine OptString `json:"engine"`
}

// GetContent returns the value of Content.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOKTranscription) GetContent() OptString {
	return s.Content
}

// GetStatus returns the value of Status.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOKTranscription) GetStatus() OptInt {
	return s.Status
}

// GetEngine returns the value of Engine.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOKTranscription) GetEngine() OptString {
	return s.Engine
}

// SetContent sets the value of Content.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOKTranscription) SetContent(val OptString) {
	s.Content = val
}

// SetStatus sets the value of Status.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOKTranscription) SetStatus(val OptInt) {
	s.Status = val
}

// SetEngine sets the value of Engine.
func (s *GetVoicemailDetailsByCallIdOrCallLogIdOKTranscription) SetEngine(val OptString) {
	s.Engine = val
}

// The voicemail information.
type GetVoicemailDetailsOK struct {
	// The phone call's unique ID.
	CallID OptString `json:"call_id"`
	// The phone call log's unique ID.
	CallLogID OptString `json:"call_log_id"`
	// The name of the callee.
	CalleeName OptString `json:"callee_name"`
	// The number associated with the callee. Could be a phone number or an extension. Check the number
	// type to differentiate the two.
	CalleeNumber OptString `json:"callee_number"`
	// The callee's number type:
	// * `1` &mdash; Internal number.
	// * `2` &mdash; External number.
	// * `3` &mdash; Customized emergency number.
	CalleeNumberType OptInt `json:"callee_number_type"`
	// The name of the caller.
	CallerName OptString `json:"caller_name"`
	// The number associated with the caller. Could be a phone number or an extension. Check the number
	// type to differentiate the two.
	CallerNumber OptString `json:"caller_number"`
	// The caller's number type:
	// * `1` &mdash; Internal number.
	// * `2` &mdash; External number.
	CallerNumberType OptInt `json:"caller_number_type"`
	// The date the voicemail was created.
	DateTime OptString `json:"date_time"`
	// The URL to download the voicemail.
	DownloadURL OptString `json:"download_url"`
	// The duration of voicemail in seconds.
	Duration OptInt `json:"duration"`
	// The voicemail ID.
	ID OptString `json:"id"`
	// The status of the voicemail. It can be either 'read' or 'unread'.
	Status OptString `json:"status"`
	// The voicemail transcript.
	Transcription OptGetVoicemailDetailsOKTranscription `json:"transcription"`
}

// GetCallID returns the value of CallID.
func (s *GetVoicemailDetailsOK) GetCallID() OptString {
	return s.CallID
}

// GetCallLogID returns the value of CallLogID.
func (s *GetVoicemailDetailsOK) GetCallLogID() OptString {
	return s.CallLogID
}

// GetCalleeName returns the value of CalleeName.
func (s *GetVoicemailDetailsOK) GetCalleeName() OptString {
	return s.CalleeName
}

// GetCalleeNumber returns the value of CalleeNumber.
func (s *GetVoicemailDetailsOK) GetCalleeNumber() OptString {
	return s.CalleeNumber
}

// GetCalleeNumberType returns the value of CalleeNumberType.
func (s *GetVoicemailDetailsOK) GetCalleeNumberType() OptInt {
	return s.CalleeNumberType
}

// GetCallerName returns the value of CallerName.
func (s *GetVoicemailDetailsOK) GetCallerName() OptString {
	return s.CallerName
}

// GetCallerNumber returns the value of CallerNumber.
func (s *GetVoicemailDetailsOK) GetCallerNumber() OptString {
	return s.CallerNumber
}

// GetCallerNumberType returns the value of CallerNumberType.
func (s *GetVoicemailDetailsOK) GetCallerNumberType() OptInt {
	return s.CallerNumberType
}

// GetDateTime returns the value of DateTime.
func (s *GetVoicemailDetailsOK) GetDateTime() OptString {
	return s.DateTime
}

// GetDownloadURL returns the value of DownloadURL.
func (s *GetVoicemailDetailsOK) GetDownloadURL() OptString {
	return s.DownloadURL
}

// GetDuration returns the value of Duration.
func (s *GetVoicemailDetailsOK) GetDuration() OptInt {
	return s.Duration
}

// GetID returns the value of ID.
func (s *GetVoicemailDetailsOK) GetID() OptString {
	return s.ID
}

// GetStatus returns the value of Status.
func (s *GetVoicemailDetailsOK) GetStatus() OptString {
	return s.Status
}

// GetTranscription returns the value of Transcription.
func (s *GetVoicemailDetailsOK) GetTranscription() OptGetVoicemailDetailsOKTranscription {
	return s.Transcription
}

// SetCallID sets the value of CallID.
func (s *GetVoicemailDetailsOK) SetCallID(val OptString) {
	s.CallID = val
}

// SetCallLogID sets the value of CallLogID.
func (s *GetVoicemailDetailsOK) SetCallLogID(val OptString) {
	s.CallLogID = val
}

// SetCalleeName sets the value of CalleeName.
func (s *GetVoicemailDetailsOK) SetCalleeName(val OptString) {
	s.CalleeName = val
}

// SetCalleeNumber sets the value of CalleeNumber.
func (s *GetVoicemailDetailsOK) SetCalleeNumber(val OptString) {
	s.CalleeNumber = val
}

// SetCalleeNumberType sets the value of CalleeNumberType.
func (s *GetVoicemailDetailsOK) SetCalleeNumberType(val OptInt) {
	s.CalleeNumberType = val
}

// SetCallerName sets the value of CallerName.
func (s *GetVoicemailDetailsOK) SetCallerName(val OptString) {
	s.CallerName = val
}

// SetCallerNumber sets the value of CallerNumber.
func (s *GetVoicemailDetailsOK) SetCallerNumber(val OptString) {
	s.CallerNumber = val
}

// SetCallerNumberType sets the value of CallerNumberType.
func (s *GetVoicemailDetailsOK) SetCallerNumberType(val OptInt) {
	s.CallerNumberType = val
}

// SetDateTime sets the value of DateTime.
func (s *GetVoicemailDetailsOK) SetDateTime(val OptString) {
	s.DateTime = val
}

// SetDownloadURL sets the value of DownloadURL.
func (s *GetVoicemailDetailsOK) SetDownloadURL(val OptString) {
	s.DownloadURL = val
}

// SetDuration sets the value of Duration.
func (s *GetVoicemailDetailsOK) SetDuration(val OptInt) {
	s.Duration = val
}

// SetID sets the value of ID.
func (s *GetVoicemailDetailsOK) SetID(val OptString) {
	s.ID = val
}

// SetStatus sets the value of Status.
func (s *GetVoicemailDetailsOK) SetStatus(val OptString) {
	s.Status = val
}

// SetTranscription sets the value of Transcription.
func (s *GetVoicemailDetailsOK) SetTranscription(val OptGetVoicemailDetailsOKTranscription) {
	s.Transcription = val
}

// The voicemail transcript.
type GetVoicemailDetailsOKTranscription struct {
	// The content of the voicemail transcript.
	Content OptString `json:"content"`
	// Status of the voicemail transcript:
	// * `0` &mdash; Transcript is not available.
	// * `1` &mdash; Transcript is processing.
	// * `2` &mdash; Transcript processed successfully.
	// * `4` &mdash; Transcript is disabled.
	// * `5` &mdash; Transcript is enabled.
	// * `9` &mdash; Transcript web error.
	// * `11` &mdash; Transcript download error.
	// * `12` &mdash; Transcript upload error.
	// * `13` &mdash; Transcript web database error.
	// * `14` &mdash; Transcript BYOS (Bring Your Own Storage) upload error.
	// * `409` &mdash; Transcript duplicate processing request error.
	// * `415` &mdash; Transcript unsupported media error.
	// * `422` &mdash; Transcript cannot be processed.
	// * `500` &mdash; Transcript server error.
	// * `601` &mdash; Transcript AISense after retry error.
	// * `602` &mdash; Transcript AISense upload file error.
	// * `603` &mdash; Transcript AISense download file error.
	// * `999` &mdash; Transcript AISense error.
	Status OptInt `json:"status"`
	// This field indicates the company that provides the transcription engine technology.
	Engine OptString `json:"engine"`
}

// GetContent returns the value of Content.
func (s *GetVoicemailDetailsOKTranscription) GetContent() OptString {
	return s.Content
}

// GetStatus returns the value of Status.
func (s *GetVoicemailDetailsOKTranscription) GetStatus() OptInt {
	return s.Status
}

// GetEngine returns the value of Engine.
func (s *GetVoicemailDetailsOKTranscription) GetEngine() OptString {
	return s.Engine
}

// SetContent sets the value of Content.
func (s *GetVoicemailDetailsOKTranscription) SetContent(val OptString) {
	s.Content = val
}

// SetStatus sets the value of Status.
func (s *GetVoicemailDetailsOKTranscription) SetStatus(val OptInt) {
	s.Status = val
}

// SetEngine sets the value of Engine.
func (s *GetVoicemailDetailsOKTranscription) SetEngine(val OptString) {
	s.Engine = val
}

type GetZoomRoomOK struct {
	CallingPlans []GetZoomRoomOKCallingPlansItem `json:"calling_plans"`
	// The emergency location's address information.
	EmergencyAddress OptGetZoomRoomOKEmergencyAddress `json:"emergency_address"`
	// Extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number of the Zoom Room.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// Unique Identifier of the Zoom Room.
	ID OptString `json:"id"`
	// Name of the Zoom Room.
	Name         OptString                       `json:"name"`
	PhoneNumbers []GetZoomRoomOKPhoneNumbersItem `json:"phone_numbers"`
	Policy       OptGetZoomRoomOKPolicy          `json:"policy"`
	Site         OptGetZoomRoomOKSite            `json:"site"`
}

// GetCallingPlans returns the value of CallingPlans.
func (s *GetZoomRoomOK) GetCallingPlans() []GetZoomRoomOKCallingPlansItem {
	return s.CallingPlans
}

// GetEmergencyAddress returns the value of EmergencyAddress.
func (s *GetZoomRoomOK) GetEmergencyAddress() OptGetZoomRoomOKEmergencyAddress {
	return s.EmergencyAddress
}

// GetExtensionID returns the value of ExtensionID.
func (s *GetZoomRoomOK) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *GetZoomRoomOK) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *GetZoomRoomOK) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetZoomRoomOK) GetName() OptString {
	return s.Name
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *GetZoomRoomOK) GetPhoneNumbers() []GetZoomRoomOKPhoneNumbersItem {
	return s.PhoneNumbers
}

// GetPolicy returns the value of Policy.
func (s *GetZoomRoomOK) GetPolicy() OptGetZoomRoomOKPolicy {
	return s.Policy
}

// GetSite returns the value of Site.
func (s *GetZoomRoomOK) GetSite() OptGetZoomRoomOKSite {
	return s.Site
}

// SetCallingPlans sets the value of CallingPlans.
func (s *GetZoomRoomOK) SetCallingPlans(val []GetZoomRoomOKCallingPlansItem) {
	s.CallingPlans = val
}

// SetEmergencyAddress sets the value of EmergencyAddress.
func (s *GetZoomRoomOK) SetEmergencyAddress(val OptGetZoomRoomOKEmergencyAddress) {
	s.EmergencyAddress = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *GetZoomRoomOK) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *GetZoomRoomOK) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *GetZoomRoomOK) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetZoomRoomOK) SetName(val OptString) {
	s.Name = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *GetZoomRoomOK) SetPhoneNumbers(val []GetZoomRoomOKPhoneNumbersItem) {
	s.PhoneNumbers = val
}

// SetPolicy sets the value of Policy.
func (s *GetZoomRoomOK) SetPolicy(val OptGetZoomRoomOKPolicy) {
	s.Policy = val
}

// SetSite sets the value of Site.
func (s *GetZoomRoomOK) SetSite(val OptGetZoomRoomOKSite) {
	s.Site = val
}

type GetZoomRoomOKCallingPlansItem struct {
	// Name of the calling plan that Zoom Room is enrolled in.
	Name OptString `json:"name"`
	// Type of calling plan that Zoom Room is enrolled in.
	Type OptInt `json:"type"`
	// Billing account ID. Displayed when the zoom room is located in India.
	BillingAccountID OptString `json:"billing_account_id"`
	// Billing account name. Displayed when the zoom room is located in India.
	BillingAccountName OptString `json:"billing_account_name"`
}

// GetName returns the value of Name.
func (s *GetZoomRoomOKCallingPlansItem) GetName() OptString {
	return s.Name
}

// GetType returns the value of Type.
func (s *GetZoomRoomOKCallingPlansItem) GetType() OptInt {
	return s.Type
}

// GetBillingAccountID returns the value of BillingAccountID.
func (s *GetZoomRoomOKCallingPlansItem) GetBillingAccountID() OptString {
	return s.BillingAccountID
}

// GetBillingAccountName returns the value of BillingAccountName.
func (s *GetZoomRoomOKCallingPlansItem) GetBillingAccountName() OptString {
	return s.BillingAccountName
}

// SetName sets the value of Name.
func (s *GetZoomRoomOKCallingPlansItem) SetName(val OptString) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *GetZoomRoomOKCallingPlansItem) SetType(val OptInt) {
	s.Type = val
}

// SetBillingAccountID sets the value of BillingAccountID.
func (s *GetZoomRoomOKCallingPlansItem) SetBillingAccountID(val OptString) {
	s.BillingAccountID = val
}

// SetBillingAccountName sets the value of BillingAccountName.
func (s *GetZoomRoomOKCallingPlansItem) SetBillingAccountName(val OptString) {
	s.BillingAccountName = val
}

// The emergency location's address information.
type GetZoomRoomOKEmergencyAddress struct {
	// The emergency location address line 1.
	AddressLine1 OptString `json:"address_line1"`
	// The emergency location address line 2.
	AddressLine2 OptString `json:"address_line2"`
	// The emergency location address's city.
	City OptString `json:"city"`
	// Two-lettered country code (Aplha-2 code in ISO-3166 format).
	Country OptString `json:"country"`
	// The emergency location address ID.
	ID OptString `json:"id"`
	// The emergency location address's state code.
	StateCode OptString `json:"state_code"`
	// The emergency address zip code.
	Zip OptString `json:"zip"`
}

// GetAddressLine1 returns the value of AddressLine1.
func (s *GetZoomRoomOKEmergencyAddress) GetAddressLine1() OptString {
	return s.AddressLine1
}

// GetAddressLine2 returns the value of AddressLine2.
func (s *GetZoomRoomOKEmergencyAddress) GetAddressLine2() OptString {
	return s.AddressLine2
}

// GetCity returns the value of City.
func (s *GetZoomRoomOKEmergencyAddress) GetCity() OptString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *GetZoomRoomOKEmergencyAddress) GetCountry() OptString {
	return s.Country
}

// GetID returns the value of ID.
func (s *GetZoomRoomOKEmergencyAddress) GetID() OptString {
	return s.ID
}

// GetStateCode returns the value of StateCode.
func (s *GetZoomRoomOKEmergencyAddress) GetStateCode() OptString {
	return s.StateCode
}

// GetZip returns the value of Zip.
func (s *GetZoomRoomOKEmergencyAddress) GetZip() OptString {
	return s.Zip
}

// SetAddressLine1 sets the value of AddressLine1.
func (s *GetZoomRoomOKEmergencyAddress) SetAddressLine1(val OptString) {
	s.AddressLine1 = val
}

// SetAddressLine2 sets the value of AddressLine2.
func (s *GetZoomRoomOKEmergencyAddress) SetAddressLine2(val OptString) {
	s.AddressLine2 = val
}

// SetCity sets the value of City.
func (s *GetZoomRoomOKEmergencyAddress) SetCity(val OptString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *GetZoomRoomOKEmergencyAddress) SetCountry(val OptString) {
	s.Country = val
}

// SetID sets the value of ID.
func (s *GetZoomRoomOKEmergencyAddress) SetID(val OptString) {
	s.ID = val
}

// SetStateCode sets the value of StateCode.
func (s *GetZoomRoomOKEmergencyAddress) SetStateCode(val OptString) {
	s.StateCode = val
}

// SetZip sets the value of Zip.
func (s *GetZoomRoomOKEmergencyAddress) SetZip(val OptString) {
	s.Zip = val
}

type GetZoomRoomOKPhoneNumbersItem struct {
	// ID for phone number.
	ID OptString `json:"id"`
	// Phone number in E164 format.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *GetZoomRoomOKPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *GetZoomRoomOKPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *GetZoomRoomOKPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *GetZoomRoomOKPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

type GetZoomRoomOKPolicy struct {
	InternationalCalling   OptGetZoomRoomOKPolicyInternationalCalling   `json:"international_calling"`
	SelectOutboundCallerID OptGetZoomRoomOKPolicySelectOutboundCallerID `json:"select_outbound_caller_id"`
}

// GetInternationalCalling returns the value of InternationalCalling.
func (s *GetZoomRoomOKPolicy) GetInternationalCalling() OptGetZoomRoomOKPolicyInternationalCalling {
	return s.InternationalCalling
}

// GetSelectOutboundCallerID returns the value of SelectOutboundCallerID.
func (s *GetZoomRoomOKPolicy) GetSelectOutboundCallerID() OptGetZoomRoomOKPolicySelectOutboundCallerID {
	return s.SelectOutboundCallerID
}

// SetInternationalCalling sets the value of InternationalCalling.
func (s *GetZoomRoomOKPolicy) SetInternationalCalling(val OptGetZoomRoomOKPolicyInternationalCalling) {
	s.InternationalCalling = val
}

// SetSelectOutboundCallerID sets the value of SelectOutboundCallerID.
func (s *GetZoomRoomOKPolicy) SetSelectOutboundCallerID(val OptGetZoomRoomOKPolicySelectOutboundCallerID) {
	s.SelectOutboundCallerID = val
}

type GetZoomRoomOKPolicyInternationalCalling struct {
	// Allow current extension to place international calls outside of the calling plan.
	Enable OptBool `json:"enable"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *GetZoomRoomOKPolicyInternationalCalling) GetEnable() OptBool {
	return s.Enable
}

// GetLockedBy returns the value of LockedBy.
func (s *GetZoomRoomOKPolicyInternationalCalling) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *GetZoomRoomOKPolicyInternationalCalling) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetZoomRoomOKPolicyInternationalCalling) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type GetZoomRoomOKPolicySelectOutboundCallerID struct {
	// Allow current extension to change outbound caller ID when placing calls.
	Enable OptBool `json:"enable"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *GetZoomRoomOKPolicySelectOutboundCallerID) GetEnable() OptBool {
	return s.Enable
}

// GetLockedBy returns the value of LockedBy.
func (s *GetZoomRoomOKPolicySelectOutboundCallerID) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *GetZoomRoomOKPolicySelectOutboundCallerID) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLockedBy sets the value of LockedBy.
func (s *GetZoomRoomOKPolicySelectOutboundCallerID) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type GetZoomRoomOKSite struct {
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
	ID OptString `json:"id"`
	// Name of the site.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *GetZoomRoomOKSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *GetZoomRoomOKSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *GetZoomRoomOKSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *GetZoomRoomOKSite) SetName(val OptString) {
	s.Name = val
}

type ListAccountLevelInboundBlockRulesOK struct {
	// The inbound blocked rules.
	AccountBlockedRules []ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem `json:"account_blocked_rules"`
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The total number of records returned from a single API call.
	PageSize OptInt `json:"page_size"`
}

// GetAccountBlockedRules returns the value of AccountBlockedRules.
func (s *ListAccountLevelInboundBlockRulesOK) GetAccountBlockedRules() []ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem {
	return s.AccountBlockedRules
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListAccountLevelInboundBlockRulesOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListAccountLevelInboundBlockRulesOK) GetPageSize() OptInt {
	return s.PageSize
}

// SetAccountBlockedRules sets the value of AccountBlockedRules.
func (s *ListAccountLevelInboundBlockRulesOK) SetAccountBlockedRules(val []ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem) {
	s.AccountBlockedRules = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListAccountLevelInboundBlockRulesOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListAccountLevelInboundBlockRulesOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

type ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem struct {
	// The unique identifier of the block rule.
	ID OptString `json:"id"`
	// The match type for the block rule:
	// * `phoneNumber`: Indicates that only a specific phone number that is shown in the `blocked_number`
	// field is blocked.
	// * `prefix`: Indicates that all numbers starting with the prefix that is shown in the
	// `blocked_number` field are blocked.
	// * `SMS-shortCodes`:  Indicates that only a specific sms short code that is shown in the
	// `blocked_number` field is blocked.
	MatchType OptString `json:"match_type"`
	// The phone number of the block rule, the value is a combination of the `country` and
	// `blocked_number` values.
	// * when the value of the `match_type` is `phoneNumber`, the value of `phone_number` is displayed in
	// E164 format.
	// * when the value of the `match_type` is `prefix`, the value of `phone_number` is appended with the
	// `country` code.
	PhoneNumber OptString `json:"phone_number"`
	// The block type for the block rule:
	// * block_for_other_reasons
	// * block_as_threat.
	Type OptString `json:"type"`
	// Whether the block rule is active or inactive.
	// * `active`: The block rule is active.
	// * `inactive`: The block rule is inactive.
	Status OptString `json:"status"`
	// The comment of the block rule. Enter a comment to help you identify the blocked number or prefix.
	Comment OptString `json:"comment"`
	// The block rule phone number prefix or sms short code or pure phone number without the country code.
	BlockedNumber OptString `json:"blocked_number"`
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	// This field is required when the value is as follows:
	// * `match_type` is `phoneNumber` or `prefix`.
	Country OptString `json:"country"`
}

// GetID returns the value of ID.
func (s *ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem) GetID() OptString {
	return s.ID
}

// GetMatchType returns the value of MatchType.
func (s *ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem) GetMatchType() OptString {
	return s.MatchType
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetType returns the value of Type.
func (s *ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem) GetType() OptString {
	return s.Type
}

// GetStatus returns the value of Status.
func (s *ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem) GetStatus() OptString {
	return s.Status
}

// GetComment returns the value of Comment.
func (s *ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem) GetComment() OptString {
	return s.Comment
}

// GetBlockedNumber returns the value of BlockedNumber.
func (s *ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem) GetBlockedNumber() OptString {
	return s.BlockedNumber
}

// GetCountry returns the value of Country.
func (s *ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem) GetCountry() OptString {
	return s.Country
}

// SetID sets the value of ID.
func (s *ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem) SetID(val OptString) {
	s.ID = val
}

// SetMatchType sets the value of MatchType.
func (s *ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem) SetMatchType(val OptString) {
	s.MatchType = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetType sets the value of Type.
func (s *ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem) SetType(val OptString) {
	s.Type = val
}

// SetStatus sets the value of Status.
func (s *ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem) SetStatus(val OptString) {
	s.Status = val
}

// SetComment sets the value of Comment.
func (s *ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem) SetComment(val OptString) {
	s.Comment = val
}

// SetBlockedNumber sets the value of BlockedNumber.
func (s *ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem) SetBlockedNumber(val OptString) {
	s.BlockedNumber = val
}

// SetCountry sets the value of Country.
func (s *ListAccountLevelInboundBlockRulesOKAccountBlockedRulesItem) SetCountry(val OptString) {
	s.Country = val
}

type ListAccountLevelInboundBlockedStatisticsOK struct {
	// The inbound blocked extension rule statistics.
	BlockedStatistic []ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem `json:"blocked_statistic"`
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The total number of records returned from a single API call.
	PageSize OptInt `json:"page_size"`
}

// GetBlockedStatistic returns the value of BlockedStatistic.
func (s *ListAccountLevelInboundBlockedStatisticsOK) GetBlockedStatistic() []ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem {
	return s.BlockedStatistic
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListAccountLevelInboundBlockedStatisticsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListAccountLevelInboundBlockedStatisticsOK) GetPageSize() OptInt {
	return s.PageSize
}

// SetBlockedStatistic sets the value of BlockedStatistic.
func (s *ListAccountLevelInboundBlockedStatisticsOK) SetBlockedStatistic(val []ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem) {
	s.BlockedStatistic = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListAccountLevelInboundBlockedStatisticsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListAccountLevelInboundBlockedStatisticsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

type ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem struct {
	// The unique identifier of the blocked statistic.
	ID OptString `json:"id"`
	// The match type for the block rule:
	// * `phoneNumber`: Indicates that only a specific phone number that is shown in the `blocked_number`
	// field is blocked.
	// * `prefix`: Indicates that all numbers starting with the prefix that is shown in the
	// `blocked_number` field are blocked.
	// * `SMS-shortCodes`:  Indicates that only a specific sms short code that is shown in the
	// `blocked_number` field is blocked.
	MatchType OptString `json:"match_type"`
	// The phone number of the block rule, the value is a combination of the `country` and
	// `blocked_number` values.
	// * when the value of the `match_type` is `phoneNumber`, the value of `phone_number` is displayed in
	// E164 format.
	// * when the value of the `match_type` is `prefix`, the value of `phone_number` is appended with the
	// `country` code.
	PhoneNumber OptString `json:"phone_number"`
	// The block type for the block rule:
	// * block_for_other_reasons
	// * block_as_threat.
	Type OptString `json:"type"`
	// This field counts the number of extensions (phone users, Zoom rooms, common area phones, call
	// queues, etc.) that have marked the `phone_number` as `type` = `block_for_other_reasons`.
	BlockCount OptInt `json:"block_count"`
	// This field counts the number of extensions (phone users, Zoom rooms, common area phones, call
	// queues, etc.) that have marked the `phone_number` as `type` = `block_as_threat`.
	ThreatCount OptInt `json:"threat_count"`
	// The block rule phone number prefix, SMS short code, or pure phone number without the country code.
	BlockedNumber OptString `json:"blocked_number"`
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	// This field is required when the value is as follows:
	// * `match_type` is `phoneNumber` or `prefix`.
	Country OptString `json:"country"`
}

// GetID returns the value of ID.
func (s *ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem) GetID() OptString {
	return s.ID
}

// GetMatchType returns the value of MatchType.
func (s *ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem) GetMatchType() OptString {
	return s.MatchType
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetType returns the value of Type.
func (s *ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem) GetType() OptString {
	return s.Type
}

// GetBlockCount returns the value of BlockCount.
func (s *ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem) GetBlockCount() OptInt {
	return s.BlockCount
}

// GetThreatCount returns the value of ThreatCount.
func (s *ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem) GetThreatCount() OptInt {
	return s.ThreatCount
}

// GetBlockedNumber returns the value of BlockedNumber.
func (s *ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem) GetBlockedNumber() OptString {
	return s.BlockedNumber
}

// GetCountry returns the value of Country.
func (s *ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem) GetCountry() OptString {
	return s.Country
}

// SetID sets the value of ID.
func (s *ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem) SetID(val OptString) {
	s.ID = val
}

// SetMatchType sets the value of MatchType.
func (s *ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem) SetMatchType(val OptString) {
	s.MatchType = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetType sets the value of Type.
func (s *ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem) SetType(val OptString) {
	s.Type = val
}

// SetBlockCount sets the value of BlockCount.
func (s *ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem) SetBlockCount(val OptInt) {
	s.BlockCount = val
}

// SetThreatCount sets the value of ThreatCount.
func (s *ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem) SetThreatCount(val OptInt) {
	s.ThreatCount = val
}

// SetBlockedNumber sets the value of BlockedNumber.
func (s *ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem) SetBlockedNumber(val OptString) {
	s.BlockedNumber = val
}

// SetCountry sets the value of Country.
func (s *ListAccountLevelInboundBlockedStatisticsOKBlockedStatisticItem) SetCountry(val OptString) {
	s.Country = val
}

type ListAccountOutboundCallingExceptionRuleOK struct {
	ExceptionRules []ListAccountOutboundCallingExceptionRuleOKExceptionRulesItem `json:"exception_rules"`
	// The next page token paginates through a large set of results. It returns whenever the set of
	// available results exceeds the current page size. The expiration period for this token is 15
	// minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The total number of records in a single API call.
	PageSize OptInt `json:"page_size"`
}

// GetExceptionRules returns the value of ExceptionRules.
func (s *ListAccountOutboundCallingExceptionRuleOK) GetExceptionRules() []ListAccountOutboundCallingExceptionRuleOKExceptionRulesItem {
	return s.ExceptionRules
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListAccountOutboundCallingExceptionRuleOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListAccountOutboundCallingExceptionRuleOK) GetPageSize() OptInt {
	return s.PageSize
}

// SetExceptionRules sets the value of ExceptionRules.
func (s *ListAccountOutboundCallingExceptionRuleOK) SetExceptionRules(val []ListAccountOutboundCallingExceptionRuleOKExceptionRulesItem) {
	s.ExceptionRules = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListAccountOutboundCallingExceptionRuleOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListAccountOutboundCallingExceptionRuleOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

type ListAccountOutboundCallingExceptionRuleOKExceptionRulesItem struct {
	// The exception rule ID.
	ID OptString `json:"id"`
	// The match type for the exception rule. The values are `phoneNumber`or `prefix`.
	MatchType OptString `json:"match_type"`
	// The exception rule phone number prefix or the phone number without the country code.
	PrefixNumber OptString `json:"prefix_number"`
	// The exception rule type.
	// `1` - Allowed
	// `2` - Blocked
	// `3` - Requires local number, caller ID, or plan
	// `4` - Requires the extension number and PIN code.
	Rule OptInt `json:"rule"`
	// A comment to identify the exception rule number or the prefix.
	Comment OptString `json:"comment"`
	// Whether the exception rule is active or inactive.
	// `active`: The exception rule is active.
	// `inactive`: The exception rule is inactive.
	Status OptString `json:"status"`
}

// GetID returns the value of ID.
func (s *ListAccountOutboundCallingExceptionRuleOKExceptionRulesItem) GetID() OptString {
	return s.ID
}

// GetMatchType returns the value of MatchType.
func (s *ListAccountOutboundCallingExceptionRuleOKExceptionRulesItem) GetMatchType() OptString {
	return s.MatchType
}

// GetPrefixNumber returns the value of PrefixNumber.
func (s *ListAccountOutboundCallingExceptionRuleOKExceptionRulesItem) GetPrefixNumber() OptString {
	return s.PrefixNumber
}

// GetRule returns the value of Rule.
func (s *ListAccountOutboundCallingExceptionRuleOKExceptionRulesItem) GetRule() OptInt {
	return s.Rule
}

// GetComment returns the value of Comment.
func (s *ListAccountOutboundCallingExceptionRuleOKExceptionRulesItem) GetComment() OptString {
	return s.Comment
}

// GetStatus returns the value of Status.
func (s *ListAccountOutboundCallingExceptionRuleOKExceptionRulesItem) GetStatus() OptString {
	return s.Status
}

// SetID sets the value of ID.
func (s *ListAccountOutboundCallingExceptionRuleOKExceptionRulesItem) SetID(val OptString) {
	s.ID = val
}

// SetMatchType sets the value of MatchType.
func (s *ListAccountOutboundCallingExceptionRuleOKExceptionRulesItem) SetMatchType(val OptString) {
	s.MatchType = val
}

// SetPrefixNumber sets the value of PrefixNumber.
func (s *ListAccountOutboundCallingExceptionRuleOKExceptionRulesItem) SetPrefixNumber(val OptString) {
	s.PrefixNumber = val
}

// SetRule sets the value of Rule.
func (s *ListAccountOutboundCallingExceptionRuleOKExceptionRulesItem) SetRule(val OptInt) {
	s.Rule = val
}

// SetComment sets the value of Comment.
func (s *ListAccountOutboundCallingExceptionRuleOKExceptionRulesItem) SetComment(val OptString) {
	s.Comment = val
}

// SetStatus sets the value of Status.
func (s *ListAccountOutboundCallingExceptionRuleOKExceptionRulesItem) SetStatus(val OptString) {
	s.Status = val
}

type ListAccountPhoneNumbersOK struct {
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.).
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single API call.
	PageSize     OptInt                                      `json:"page_size"`
	PhoneNumbers []ListAccountPhoneNumbersOKPhoneNumbersItem `json:"phone_numbers"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListAccountPhoneNumbersOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListAccountPhoneNumbersOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *ListAccountPhoneNumbersOK) GetPhoneNumbers() []ListAccountPhoneNumbersOKPhoneNumbersItem {
	return s.PhoneNumbers
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListAccountPhoneNumbersOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListAccountPhoneNumbersOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListAccountPhoneNumbersOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *ListAccountPhoneNumbersOK) SetPhoneNumbers(val []ListAccountPhoneNumbersOKPhoneNumbersItem) {
	s.PhoneNumbers = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListAccountPhoneNumbersOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListAccountPhoneNumbersOKPhoneNumbersItem struct {
	Assignee OptListAccountPhoneNumbersOKPhoneNumbersItemAssignee `json:"assignee"`
	// The capability for the phone number, whether it can take incoming calls, make outgoing calls, or
	// both. Values include `incoming`, `outgoing`, or both values.
	Capability []string `json:"capability"`
	// This field displays when the `type` request parameter is `byoc`.
	Carrier OptListAccountPhoneNumbersOKPhoneNumbersItemCarrier `json:"carrier"`
	// The display name for the phone number.
	DisplayName OptString `json:"display_name"`
	// This field displays when the `type` request parameter is `byoc`.
	EmergencyAddress OptListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress `json:"emergency_address"`
	// This field displays when the `type` request parameter is `byoc`. The emergency address status:
	// `1`-carrier update required, `2`-confirmed.
	EmergencyAddressStatus OptInt `json:"emergency_address_status"`
	// This field displays when the `type` request parameter is `byoc`. The time of emergency address
	// information update (format: 'yyyy-MM-ddThh:dd:ssZ').
	EmergencyAddressUpdateTime OptString `json:"emergency_address_update_time"`
	// The unique identifier of the phone number.
	ID OptString `json:"id"`
	// The location (city, state and country) where the phone number is assigned.
	Location OptString `json:"location"`
	// The phone number in E164 format.
	Number OptString `json:"number"`
	// The type of number. Values can be one of the following:
	// `toll`, `tollfree`.
	NumberType OptString `json:"number_type"`
	// This field displays when the `type` request parameter is `byoc`.
	SipGroup OptListAccountPhoneNumbersOKPhoneNumbersItemSipGroup `json:"sip_group"`
	Site     OptListAccountPhoneNumbersOKPhoneNumbersItemSite     `json:"site"`
	// The source of the phone number.
	Source OptString `json:"source"`
	// The status of the number.
	Status OptString `json:"status"`
}

// GetAssignee returns the value of Assignee.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) GetAssignee() OptListAccountPhoneNumbersOKPhoneNumbersItemAssignee {
	return s.Assignee
}

// GetCapability returns the value of Capability.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) GetCapability() []string {
	return s.Capability
}

// GetCarrier returns the value of Carrier.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) GetCarrier() OptListAccountPhoneNumbersOKPhoneNumbersItemCarrier {
	return s.Carrier
}

// GetDisplayName returns the value of DisplayName.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetEmergencyAddress returns the value of EmergencyAddress.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) GetEmergencyAddress() OptListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress {
	return s.EmergencyAddress
}

// GetEmergencyAddressStatus returns the value of EmergencyAddressStatus.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) GetEmergencyAddressStatus() OptInt {
	return s.EmergencyAddressStatus
}

// GetEmergencyAddressUpdateTime returns the value of EmergencyAddressUpdateTime.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) GetEmergencyAddressUpdateTime() OptString {
	return s.EmergencyAddressUpdateTime
}

// GetID returns the value of ID.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetLocation returns the value of Location.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) GetLocation() OptString {
	return s.Location
}

// GetNumber returns the value of Number.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// GetNumberType returns the value of NumberType.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) GetNumberType() OptString {
	return s.NumberType
}

// GetSipGroup returns the value of SipGroup.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) GetSipGroup() OptListAccountPhoneNumbersOKPhoneNumbersItemSipGroup {
	return s.SipGroup
}

// GetSite returns the value of Site.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) GetSite() OptListAccountPhoneNumbersOKPhoneNumbersItemSite {
	return s.Site
}

// GetSource returns the value of Source.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) GetSource() OptString {
	return s.Source
}

// GetStatus returns the value of Status.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) GetStatus() OptString {
	return s.Status
}

// SetAssignee sets the value of Assignee.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) SetAssignee(val OptListAccountPhoneNumbersOKPhoneNumbersItemAssignee) {
	s.Assignee = val
}

// SetCapability sets the value of Capability.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) SetCapability(val []string) {
	s.Capability = val
}

// SetCarrier sets the value of Carrier.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) SetCarrier(val OptListAccountPhoneNumbersOKPhoneNumbersItemCarrier) {
	s.Carrier = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetEmergencyAddress sets the value of EmergencyAddress.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) SetEmergencyAddress(val OptListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) {
	s.EmergencyAddress = val
}

// SetEmergencyAddressStatus sets the value of EmergencyAddressStatus.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) SetEmergencyAddressStatus(val OptInt) {
	s.EmergencyAddressStatus = val
}

// SetEmergencyAddressUpdateTime sets the value of EmergencyAddressUpdateTime.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) SetEmergencyAddressUpdateTime(val OptString) {
	s.EmergencyAddressUpdateTime = val
}

// SetID sets the value of ID.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetLocation sets the value of Location.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) SetLocation(val OptString) {
	s.Location = val
}

// SetNumber sets the value of Number.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

// SetNumberType sets the value of NumberType.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) SetNumberType(val OptString) {
	s.NumberType = val
}

// SetSipGroup sets the value of SipGroup.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) SetSipGroup(val OptListAccountPhoneNumbersOKPhoneNumbersItemSipGroup) {
	s.SipGroup = val
}

// SetSite sets the value of Site.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) SetSite(val OptListAccountPhoneNumbersOKPhoneNumbersItemSite) {
	s.Site = val
}

// SetSource sets the value of Source.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) SetSource(val OptString) {
	s.Source = val
}

// SetStatus sets the value of Status.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItem) SetStatus(val OptString) {
	s.Status = val
}

type ListAccountPhoneNumbersOKPhoneNumbersItemAssignee struct {
	// The extension number of the phone.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The unique identifier of the user to whom the number has been assigned.
	ID OptString `json:"id"`
	// The name of the user to whom the number has been assigned.
	Name OptString `json:"name"`
	// This field indicates to whom the phone number belongs.
	// `user`: Number has been assigned to an existing phone user that allows them to receive calls
	// through their extension number or direct phone number.
	// `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.
	// us/hc/en-us/articles/360021524831-Managing-Call-Queues).
	// `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.
	// us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).
	// `commonArea`: Phone number has been assigned to a [common area](https://support.zoom.
	// us/hc/en-us/articles/4481136653709-May-2022-New-Common-Area-Experience).
	// `emergencyNumberPool` `companyLocation` `meetingService`.
	Type OptString `json:"type"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemAssignee) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemAssignee) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemAssignee) GetName() OptString {
	return s.Name
}

// GetType returns the value of Type.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemAssignee) GetType() OptString {
	return s.Type
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemAssignee) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemAssignee) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemAssignee) SetName(val OptString) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemAssignee) SetType(val OptString) {
	s.Type = val
}

// This field displays when the `type` request parameter is `byoc`.
type ListAccountPhoneNumbersOKPhoneNumbersItemCarrier struct {
	// The carrier code.
	Code OptInt `json:"code"`
	// The name of the carrier to which the phone number is assigned.
	Name OptString `json:"name"`
}

// GetCode returns the value of Code.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemCarrier) GetCode() OptInt {
	return s.Code
}

// GetName returns the value of Name.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemCarrier) GetName() OptString {
	return s.Name
}

// SetCode sets the value of Code.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemCarrier) SetCode(val OptInt) {
	s.Code = val
}

// SetName sets the value of Name.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemCarrier) SetName(val OptString) {
	s.Name = val
}

// This field displays when the `type` request parameter is `byoc`.
type ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress struct {
	// The address Line 1 of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that consists of the house number
	// and street name.
	AddressLine1 OptString `json:"address_line1"`
	// Address Line 2 of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that consists of building number,
	// floor number, unit and so on.
	AddressLine2 OptString `json:"address_line2"`
	// The city of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	City OptString `json:"city"`
	// The two-lettered country code (Aplha-2 code in ISO-3166 format) standard of the site's [emergency
	// address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	Country OptString `json:"country"`
	// The state code of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	StateCode OptString `json:"state_code"`
	// The zip code of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	Zip OptString `json:"zip"`
}

// GetAddressLine1 returns the value of AddressLine1.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) GetAddressLine1() OptString {
	return s.AddressLine1
}

// GetAddressLine2 returns the value of AddressLine2.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) GetAddressLine2() OptString {
	return s.AddressLine2
}

// GetCity returns the value of City.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) GetCity() OptString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) GetCountry() OptString {
	return s.Country
}

// GetStateCode returns the value of StateCode.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) GetStateCode() OptString {
	return s.StateCode
}

// GetZip returns the value of Zip.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) GetZip() OptString {
	return s.Zip
}

// SetAddressLine1 sets the value of AddressLine1.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) SetAddressLine1(val OptString) {
	s.AddressLine1 = val
}

// SetAddressLine2 sets the value of AddressLine2.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) SetAddressLine2(val OptString) {
	s.AddressLine2 = val
}

// SetCity sets the value of City.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) SetCity(val OptString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) SetCountry(val OptString) {
	s.Country = val
}

// SetStateCode sets the value of StateCode.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) SetStateCode(val OptString) {
	s.StateCode = val
}

// SetZip sets the value of Zip.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) SetZip(val OptString) {
	s.Zip = val
}

// This field displays when the `type` request parameter is `byoc`.
type ListAccountPhoneNumbersOKPhoneNumbersItemSipGroup struct {
	// The name of the SIP group.
	DisplayName OptString `json:"display_name"`
	// The ID of the SIP group. See the **Creating SIP groups** section in [Creating a shared directory
	// of external contacts](https://support.zoom.
	// us/hc/en-us/articles/360037050092-Creating-a-shared-directory-of-external-contacts) for details.
	ID OptString `json:"id"`
}

// GetDisplayName returns the value of DisplayName.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemSipGroup) GetDisplayName() OptString {
	return s.DisplayName
}

// GetID returns the value of ID.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemSipGroup) GetID() OptString {
	return s.ID
}

// SetDisplayName sets the value of DisplayName.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemSipGroup) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetID sets the value of ID.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemSipGroup) SetID(val OptString) {
	s.ID = val
}

type ListAccountPhoneNumbersOKPhoneNumbersItemSite struct {
	// The target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites)
	// in which the phone number was assigned. Sites allow you to organize the phone users in your
	// organization. For example, you sites could be created based on different office locations.
	ID OptString `json:"id"`
	// The name of the site where the phone number is assigned.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListAccountPhoneNumbersOKPhoneNumbersItemSite) SetName(val OptString) {
	s.Name = val
}

type ListAccountProvisionTemplateOK struct {
	// The next page token paginates through large set of results. A next page token is returned whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.).
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single API call.
	PageSize           OptInt                                                 `json:"page_size"`
	ProvisionTemplates []ListAccountProvisionTemplateOKProvisionTemplatesItem `json:"provision_templates"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListAccountProvisionTemplateOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListAccountProvisionTemplateOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetProvisionTemplates returns the value of ProvisionTemplates.
func (s *ListAccountProvisionTemplateOK) GetProvisionTemplates() []ListAccountProvisionTemplateOKProvisionTemplatesItem {
	return s.ProvisionTemplates
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListAccountProvisionTemplateOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListAccountProvisionTemplateOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListAccountProvisionTemplateOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetProvisionTemplates sets the value of ProvisionTemplates.
func (s *ListAccountProvisionTemplateOK) SetProvisionTemplates(val []ListAccountProvisionTemplateOKProvisionTemplatesItem) {
	s.ProvisionTemplates = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListAccountProvisionTemplateOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListAccountProvisionTemplateOKProvisionTemplatesItem struct {
	// The provision template ID.
	ID OptString `json:"id"`
	// The display name for the provision template.
	Name OptString `json:"name"`
	// The description for the provision template.
	Description OptString `json:"description"`
	// The number of devices using the provision template.
	BoundDeviceCount OptInt `json:"bound_device_count"`
}

// GetID returns the value of ID.
func (s *ListAccountProvisionTemplateOKProvisionTemplatesItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListAccountProvisionTemplateOKProvisionTemplatesItem) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *ListAccountProvisionTemplateOKProvisionTemplatesItem) GetDescription() OptString {
	return s.Description
}

// GetBoundDeviceCount returns the value of BoundDeviceCount.
func (s *ListAccountProvisionTemplateOKProvisionTemplatesItem) GetBoundDeviceCount() OptInt {
	return s.BoundDeviceCount
}

// SetID sets the value of ID.
func (s *ListAccountProvisionTemplateOKProvisionTemplatesItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListAccountProvisionTemplateOKProvisionTemplatesItem) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *ListAccountProvisionTemplateOKProvisionTemplatesItem) SetDescription(val OptString) {
	s.Description = val
}

// SetBoundDeviceCount sets the value of BoundDeviceCount.
func (s *ListAccountProvisionTemplateOKProvisionTemplatesItem) SetBoundDeviceCount(val OptInt) {
	s.BoundDeviceCount = val
}

type ListAccountSMSCampaignsOK struct {
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.).
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single API call.
	PageSize     OptInt                                      `json:"page_size"`
	SMSCampaigns []ListAccountSMSCampaignsOKSMSCampaignsItem `json:"sms_campaigns"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListAccountSMSCampaignsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListAccountSMSCampaignsOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetSMSCampaigns returns the value of SMSCampaigns.
func (s *ListAccountSMSCampaignsOK) GetSMSCampaigns() []ListAccountSMSCampaignsOKSMSCampaignsItem {
	return s.SMSCampaigns
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListAccountSMSCampaignsOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListAccountSMSCampaignsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListAccountSMSCampaignsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetSMSCampaigns sets the value of SMSCampaigns.
func (s *ListAccountSMSCampaignsOK) SetSMSCampaigns(val []ListAccountSMSCampaignsOKSMSCampaignsItem) {
	s.SMSCampaigns = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListAccountSMSCampaignsOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListAccountSMSCampaignsOKSMSCampaignsItem struct {
	// The campaign ID.
	ID OptString `json:"id"`
	// The display name for the SMS campaign.
	DisplayName OptString `json:"display_name"`
	// The status of the SMS campaign. Returns `--` if the campaign is in an exception status.
	Status OptString `json:"status"`
	// The business information from Zoom account.
	Brand OptListAccountSMSCampaignsOKSMSCampaignsItemBrand `json:"brand"`
}

// GetID returns the value of ID.
func (s *ListAccountSMSCampaignsOKSMSCampaignsItem) GetID() OptString {
	return s.ID
}

// GetDisplayName returns the value of DisplayName.
func (s *ListAccountSMSCampaignsOKSMSCampaignsItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetStatus returns the value of Status.
func (s *ListAccountSMSCampaignsOKSMSCampaignsItem) GetStatus() OptString {
	return s.Status
}

// GetBrand returns the value of Brand.
func (s *ListAccountSMSCampaignsOKSMSCampaignsItem) GetBrand() OptListAccountSMSCampaignsOKSMSCampaignsItemBrand {
	return s.Brand
}

// SetID sets the value of ID.
func (s *ListAccountSMSCampaignsOKSMSCampaignsItem) SetID(val OptString) {
	s.ID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ListAccountSMSCampaignsOKSMSCampaignsItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetStatus sets the value of Status.
func (s *ListAccountSMSCampaignsOKSMSCampaignsItem) SetStatus(val OptString) {
	s.Status = val
}

// SetBrand sets the value of Brand.
func (s *ListAccountSMSCampaignsOKSMSCampaignsItem) SetBrand(val OptListAccountSMSCampaignsOKSMSCampaignsItemBrand) {
	s.Brand = val
}

// The business information from Zoom account.
type ListAccountSMSCampaignsOKSMSCampaignsItemBrand struct {
	// The brand ID.
	ID OptString `json:"id"`
	// The brand name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListAccountSMSCampaignsOKSMSCampaignsItemBrand) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListAccountSMSCampaignsOKSMSCampaignsItemBrand) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListAccountSMSCampaignsOKSMSCampaignsItemBrand) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListAccountSMSCampaignsOKSMSCampaignsItemBrand) SetName(val OptString) {
	s.Name = val
}

type ListActivationCodesOK struct {
	// The activation code information of the common areas.
	CommonAreasActivationCodes []ListActivationCodesOKCommonAreasActivationCodesItem `json:"common_areas_activation_codes"`
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The total number of records returned from a single API call.
	PageSize OptInt `json:"page_size"`
}

// GetCommonAreasActivationCodes returns the value of CommonAreasActivationCodes.
func (s *ListActivationCodesOK) GetCommonAreasActivationCodes() []ListActivationCodesOKCommonAreasActivationCodesItem {
	return s.CommonAreasActivationCodes
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListActivationCodesOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListActivationCodesOK) GetPageSize() OptInt {
	return s.PageSize
}

// SetCommonAreasActivationCodes sets the value of CommonAreasActivationCodes.
func (s *ListActivationCodesOK) SetCommonAreasActivationCodes(val []ListActivationCodesOKCommonAreasActivationCodesItem) {
	s.CommonAreasActivationCodes = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListActivationCodesOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListActivationCodesOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

type ListActivationCodesOKCommonAreasActivationCodesItem struct {
	// The common area ID or common area extension ID.
	CommonAreaID OptString `json:"common_area_id"`
	// The display name of the common area.
	DisplayName OptString `json:"display_name"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The activation code.
	ActivationCode OptString `json:"activation_code"`
	// The time when the activation code expires (format: 'yyyy-MM-ddThh:dd:ssZ').
	ActivationCodeExpiration OptString `json:"activation_code_expiration"`
	// The values of this field can be `used` or `not_used`.
	// used: The common area has been logged in to a smartphone through an activation code.
	// not_used: The common area is never logged in to a smartphone through an activation code.
	Status OptString                                                  `json:"status"`
	Site   OptListActivationCodesOKCommonAreasActivationCodesItemSite `json:"site"`
}

// GetCommonAreaID returns the value of CommonAreaID.
func (s *ListActivationCodesOKCommonAreasActivationCodesItem) GetCommonAreaID() OptString {
	return s.CommonAreaID
}

// GetDisplayName returns the value of DisplayName.
func (s *ListActivationCodesOKCommonAreasActivationCodesItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListActivationCodesOKCommonAreasActivationCodesItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetActivationCode returns the value of ActivationCode.
func (s *ListActivationCodesOKCommonAreasActivationCodesItem) GetActivationCode() OptString {
	return s.ActivationCode
}

// GetActivationCodeExpiration returns the value of ActivationCodeExpiration.
func (s *ListActivationCodesOKCommonAreasActivationCodesItem) GetActivationCodeExpiration() OptString {
	return s.ActivationCodeExpiration
}

// GetStatus returns the value of Status.
func (s *ListActivationCodesOKCommonAreasActivationCodesItem) GetStatus() OptString {
	return s.Status
}

// GetSite returns the value of Site.
func (s *ListActivationCodesOKCommonAreasActivationCodesItem) GetSite() OptListActivationCodesOKCommonAreasActivationCodesItemSite {
	return s.Site
}

// SetCommonAreaID sets the value of CommonAreaID.
func (s *ListActivationCodesOKCommonAreasActivationCodesItem) SetCommonAreaID(val OptString) {
	s.CommonAreaID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ListActivationCodesOKCommonAreasActivationCodesItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListActivationCodesOKCommonAreasActivationCodesItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetActivationCode sets the value of ActivationCode.
func (s *ListActivationCodesOKCommonAreasActivationCodesItem) SetActivationCode(val OptString) {
	s.ActivationCode = val
}

// SetActivationCodeExpiration sets the value of ActivationCodeExpiration.
func (s *ListActivationCodesOKCommonAreasActivationCodesItem) SetActivationCodeExpiration(val OptString) {
	s.ActivationCodeExpiration = val
}

// SetStatus sets the value of Status.
func (s *ListActivationCodesOKCommonAreasActivationCodesItem) SetStatus(val OptString) {
	s.Status = val
}

// SetSite sets the value of Site.
func (s *ListActivationCodesOKCommonAreasActivationCodesItem) SetSite(val OptListActivationCodesOKCommonAreasActivationCodesItemSite) {
	s.Site = val
}

type ListActivationCodesOKCommonAreasActivationCodesItemSite struct {
	// The unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) that the common area is assigned.
	SiteID OptString `json:"site_id"`
	// The name of the site.
	Name OptString `json:"name"`
}

// GetSiteID returns the value of SiteID.
func (s *ListActivationCodesOKCommonAreasActivationCodesItemSite) GetSiteID() OptString {
	return s.SiteID
}

// GetName returns the value of Name.
func (s *ListActivationCodesOKCommonAreasActivationCodesItemSite) GetName() OptString {
	return s.Name
}

// SetSiteID sets the value of SiteID.
func (s *ListActivationCodesOKCommonAreasActivationCodesItemSite) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetName sets the value of Name.
func (s *ListActivationCodesOKCommonAreasActivationCodesItemSite) SetName(val OptString) {
	s.Name = val
}

type ListAlertSettingsWithPagingQueryOK struct {
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of the available result list exceeds the page size.
	NextPageToken OptString `json:"next_page_token"`
	// The size of each page.
	PageSize      OptInt                                                `json:"page_size"`
	AlertSettings []ListAlertSettingsWithPagingQueryOKAlertSettingsItem `json:"alert_settings"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListAlertSettingsWithPagingQueryOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListAlertSettingsWithPagingQueryOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetAlertSettings returns the value of AlertSettings.
func (s *ListAlertSettingsWithPagingQueryOK) GetAlertSettings() []ListAlertSettingsWithPagingQueryOKAlertSettingsItem {
	return s.AlertSettings
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListAlertSettingsWithPagingQueryOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListAlertSettingsWithPagingQueryOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetAlertSettings sets the value of AlertSettings.
func (s *ListAlertSettingsWithPagingQueryOK) SetAlertSettings(val []ListAlertSettingsWithPagingQueryOKAlertSettingsItem) {
	s.AlertSettings = val
}

type ListAlertSettingsWithPagingQueryOKAlertSettingsItem struct {
	// The unique identifier of the alert setting.
	AlertSettingID OptString `json:"alert_setting_id"`
	// The name of the alert setting.
	AlertSettingName OptString `json:"alert_setting_name"`
	// The module of the alert. The module and its code mappings display as:
	// `Call Queue Management`-`1`, `Route Group Management`-`2`, `Devices &amp; Phones Management`-`3`,
	// `Call Quality Management`-`4`, `Emergency Services Management`-`5`.
	Module OptInt `json:"module"`
	// The rule of the alert. The rule and its code mappings display as:
	// `Service Level`-`1`, `Inbound Abandoned Calls`-`2`, `Inbound Overflowed Calls`-`3`, `Inbound Avg
	// Call Waiting Time`-`4`, `Inbound Forwarded to Voicemail`-`5`, `Number of Waiting Calls`-`6`,
	// `Member Availability (Active)`-`7`, `Member Availability (Opt-in/Opt-out)`-`8`, `Route groups
	// status change`-`9`, `Devices go offline`-`10`, `Devices go online`-`11`, `Device offline
	// rate`-`12`, `QoS Alert`-`13`, `Emergency Call Alert`-`14`.
	Rule OptInt `json:"rule"`
	// The rule conditions.
	RuleConditions []ListAlertSettingsWithPagingQueryOKAlertSettingsItemRuleConditionsItem `json:"rule_conditions"`
	// The targets of the alert.
	Targets []ListAlertSettingsWithPagingQueryOKAlertSettingsItemTargetsItem `json:"targets"`
	// The time frame type.
	// The available values: `all_day`, `specific_time`.
	TimeFrameType OptString `json:"time_frame_type"`
	// The start time of time frame in which the alert was triggered, in `HH:mm:ss` format.
	// When the `time_frame_type` is `all_day`, the value is `00:00:00`.
	TimeFrameFrom OptString `json:"time_frame_from"`
	// The end time of time frame in which the alert was triggered, in `HH:mm:ss` format.
	// When the `time_frame_type` is `all_day`, the value is `00:00:00`.
	TimeFrameTo OptString `json:"time_frame_to"`
	// The frequency of alert triggers. The unit is `minutes`.
	// When the value of `module` represents `Call Queue Management` or `Route Group Management` or
	// `Devices &amp; Phones Management` or `Call Quality Management`, it will be used.
	Frequency OptInt `json:"frequency"`
	// The email addresses of recipients.
	EmailRecipients []string `json:"email_recipients"`
	// The chat channels.
	// This field applies when the value of `module` represents `Call Queue Management` or `Route Group
	// Management` or `Devices &amp; Phones Management` or `Call Quality Management`.
	ChatChannels []ListAlertSettingsWithPagingQueryOKAlertSettingsItemChatChannelsItem `json:"chat_channels"`
	// The alert's status:
	// * `0` &mdash; Inactive.
	// * `1` &mdash; Active.
	Status OptInt `json:"status"`
}

// GetAlertSettingID returns the value of AlertSettingID.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) GetAlertSettingID() OptString {
	return s.AlertSettingID
}

// GetAlertSettingName returns the value of AlertSettingName.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) GetAlertSettingName() OptString {
	return s.AlertSettingName
}

// GetModule returns the value of Module.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) GetModule() OptInt {
	return s.Module
}

// GetRule returns the value of Rule.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) GetRule() OptInt {
	return s.Rule
}

// GetRuleConditions returns the value of RuleConditions.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) GetRuleConditions() []ListAlertSettingsWithPagingQueryOKAlertSettingsItemRuleConditionsItem {
	return s.RuleConditions
}

// GetTargets returns the value of Targets.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) GetTargets() []ListAlertSettingsWithPagingQueryOKAlertSettingsItemTargetsItem {
	return s.Targets
}

// GetTimeFrameType returns the value of TimeFrameType.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) GetTimeFrameType() OptString {
	return s.TimeFrameType
}

// GetTimeFrameFrom returns the value of TimeFrameFrom.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) GetTimeFrameFrom() OptString {
	return s.TimeFrameFrom
}

// GetTimeFrameTo returns the value of TimeFrameTo.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) GetTimeFrameTo() OptString {
	return s.TimeFrameTo
}

// GetFrequency returns the value of Frequency.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) GetFrequency() OptInt {
	return s.Frequency
}

// GetEmailRecipients returns the value of EmailRecipients.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) GetEmailRecipients() []string {
	return s.EmailRecipients
}

// GetChatChannels returns the value of ChatChannels.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) GetChatChannels() []ListAlertSettingsWithPagingQueryOKAlertSettingsItemChatChannelsItem {
	return s.ChatChannels
}

// GetStatus returns the value of Status.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) GetStatus() OptInt {
	return s.Status
}

// SetAlertSettingID sets the value of AlertSettingID.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) SetAlertSettingID(val OptString) {
	s.AlertSettingID = val
}

// SetAlertSettingName sets the value of AlertSettingName.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) SetAlertSettingName(val OptString) {
	s.AlertSettingName = val
}

// SetModule sets the value of Module.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) SetModule(val OptInt) {
	s.Module = val
}

// SetRule sets the value of Rule.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) SetRule(val OptInt) {
	s.Rule = val
}

// SetRuleConditions sets the value of RuleConditions.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) SetRuleConditions(val []ListAlertSettingsWithPagingQueryOKAlertSettingsItemRuleConditionsItem) {
	s.RuleConditions = val
}

// SetTargets sets the value of Targets.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) SetTargets(val []ListAlertSettingsWithPagingQueryOKAlertSettingsItemTargetsItem) {
	s.Targets = val
}

// SetTimeFrameType sets the value of TimeFrameType.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) SetTimeFrameType(val OptString) {
	s.TimeFrameType = val
}

// SetTimeFrameFrom sets the value of TimeFrameFrom.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) SetTimeFrameFrom(val OptString) {
	s.TimeFrameFrom = val
}

// SetTimeFrameTo sets the value of TimeFrameTo.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) SetTimeFrameTo(val OptString) {
	s.TimeFrameTo = val
}

// SetFrequency sets the value of Frequency.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) SetFrequency(val OptInt) {
	s.Frequency = val
}

// SetEmailRecipients sets the value of EmailRecipients.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) SetEmailRecipients(val []string) {
	s.EmailRecipients = val
}

// SetChatChannels sets the value of ChatChannels.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) SetChatChannels(val []ListAlertSettingsWithPagingQueryOKAlertSettingsItemChatChannelsItem) {
	s.ChatChannels = val
}

// SetStatus sets the value of Status.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItem) SetStatus(val OptInt) {
	s.Status = val
}

type ListAlertSettingsWithPagingQueryOKAlertSettingsItemChatChannelsItem struct {
	// The channel name.
	ChatChannelName OptString `json:"chat_channel_name"`
	// The verification token.
	Token OptString `json:"token"`
	// The end point.
	EndPoint OptString `json:"end_point"`
}

// GetChatChannelName returns the value of ChatChannelName.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItemChatChannelsItem) GetChatChannelName() OptString {
	return s.ChatChannelName
}

// GetToken returns the value of Token.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItemChatChannelsItem) GetToken() OptString {
	return s.Token
}

// GetEndPoint returns the value of EndPoint.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItemChatChannelsItem) GetEndPoint() OptString {
	return s.EndPoint
}

// SetChatChannelName sets the value of ChatChannelName.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItemChatChannelsItem) SetChatChannelName(val OptString) {
	s.ChatChannelName = val
}

// SetToken sets the value of Token.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItemChatChannelsItem) SetToken(val OptString) {
	s.Token = val
}

// SetEndPoint sets the value of EndPoint.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItemChatChannelsItem) SetEndPoint(val OptString) {
	s.EndPoint = val
}

type ListAlertSettingsWithPagingQueryOKAlertSettingsItemRuleConditionsItem struct {
	// The condition type.
	// * `1`-`Threshold`
	// * `2`-`Warning`
	// * `3`-`Critical`
	// * `4`-`Alert`
	// * `5`-`Severity`.
	// The `Threshold` is used in the case of the `Service Level` rule.
	// The `Warning` or `Critical` is used in the case of the `Service Level` or `Inbound Abandoned
	// Calls` or `Inbound Overflowed Calls` or `Number of Waiting Calls` or `Inbound Forwarded to
	// Voicemail` or `Member Availability (Active)` or `Member Availability (Opt-in/Opt-out)` or `Device
	// offline rate` or `Inbound Avg Call Waiting Time` or `QoS Alert` rule.
	// The `Alert` is used in the case of the `Devices go offline` or `device_online_time` rule.
	// The `Severity` is used in the case of the `Emergency Call Alert` or `Route groups status change`
	// rule.
	RuleConditionType OptInt `json:"rule_condition_type"`
	// The rule condition value.
	// In the case of the value of `rule_condition_type`  is `1`, the available values: `15`, `30`, `60`,
	// `120`, `180`, `240`, `300`.
	// In the case of the value of `rule_condition_type `is `2` or `3`, when the value of `rule`
	// represents `Service Level` or `Inbound Abandoned Calls` or `Inbound Overflowed Calls` or `Inbound
	// Forwarded to Voicemail` or `Member Availability (Active)` or `Member Availability
	// (Opt-in/Opt-out)` or `Device offline rate`, the unit is `percentage`, the value can only be in the
	// range of `1` to `100`, when the value of `rule` represents `Inbound Avg Call Waiting Time`, the
	// unit is `seconds`, the available values: `10`, `15`, `20`, `25`, `30`, `45`, `60`, `120`, `180`,
	// `240`, `300`, `600`, `900`, `1200`, `1500`, `1800`, when the value of `rule` represents `QoS
	// Alert`, the value can be only in the range of `0` to `5`.
	// In the case of the value of `rule_condition_type` is `4`, the available values:`5`, `10`, `15`,
	// `30`,`60`.
	// In the case of the value of `rule_condition_type` is `5`,the available values:`Warning`,`Critical`.
	RuleConditionValue OptString `json:"rule_condition_value"`
}

// GetRuleConditionType returns the value of RuleConditionType.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItemRuleConditionsItem) GetRuleConditionType() OptInt {
	return s.RuleConditionType
}

// GetRuleConditionValue returns the value of RuleConditionValue.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItemRuleConditionsItem) GetRuleConditionValue() OptString {
	return s.RuleConditionValue
}

// SetRuleConditionType sets the value of RuleConditionType.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItemRuleConditionsItem) SetRuleConditionType(val OptInt) {
	s.RuleConditionType = val
}

// SetRuleConditionValue sets the value of RuleConditionValue.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItemRuleConditionsItem) SetRuleConditionValue(val OptString) {
	s.RuleConditionValue = val
}

type ListAlertSettingsWithPagingQueryOKAlertSettingsItemTargetsItem struct {
	// The target name.
	TargetName OptString `json:"target_name"`
}

// GetTargetName returns the value of TargetName.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItemTargetsItem) GetTargetName() OptString {
	return s.TargetName
}

// SetTargetName sets the value of TargetName.
func (s *ListAlertSettingsWithPagingQueryOKAlertSettingsItemTargetsItem) SetTargetName(val OptString) {
	s.TargetName = val
}

type ListAudioItemsOK struct {
	// Audio item list.
	Audios []ListAudioItemsOKAudiosItem `json:"audios"`
}

// GetAudios returns the value of Audios.
func (s *ListAudioItemsOK) GetAudios() []ListAudioItemsOKAudiosItem {
	return s.Audios
}

// SetAudios sets the value of Audios.
func (s *ListAudioItemsOK) SetAudios(val []ListAudioItemsOKAudiosItem) {
	s.Audios = val
}

type ListAudioItemsOKAudiosItem struct {
	// Unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
	// Name of the audio item.
	Name OptString `json:"name"`
}

// GetAudioID returns the value of AudioID.
func (s *ListAudioItemsOKAudiosItem) GetAudioID() OptString {
	return s.AudioID
}

// GetName returns the value of Name.
func (s *ListAudioItemsOKAudiosItem) GetName() OptString {
	return s.Name
}

// SetAudioID sets the value of AudioID.
func (s *ListAudioItemsOKAudiosItem) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetName sets the value of Name.
func (s *ListAudioItemsOKAudiosItem) SetName(val OptString) {
	s.Name = val
}

type ListAutoReceptionistsOK struct {
	AutoReceptionists []ListAutoReceptionistsOKAutoReceptionistsItem `json:"auto_receptionists"`
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// Total number of records returned from a single API call.
	PageSize OptInt `json:"page_size"`
	// Total number of records found for this query.
	TotalRecords OptInt `json:"total_records"`
}

// GetAutoReceptionists returns the value of AutoReceptionists.
func (s *ListAutoReceptionistsOK) GetAutoReceptionists() []ListAutoReceptionistsOKAutoReceptionistsItem {
	return s.AutoReceptionists
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListAutoReceptionistsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListAutoReceptionistsOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListAutoReceptionistsOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetAutoReceptionists sets the value of AutoReceptionists.
func (s *ListAutoReceptionistsOK) SetAutoReceptionists(val []ListAutoReceptionistsOKAutoReceptionistsItem) {
	s.AutoReceptionists = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListAutoReceptionistsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListAutoReceptionistsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListAutoReceptionistsOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListAutoReceptionistsOKAutoReceptionistsItem struct {
	// `nullable` Cost center name.
	CostCenter OptString `json:"cost_center"`
	// `nullable` Department name.
	Department OptString `json:"department"`
	// Extension ID.
	ExtensionID OptString `json:"extension_id"`
	// Extension number of the auto receptionist.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The unique identifier of the auto receptionist.
	ID OptString `json:"id"`
	// Name of the auto receptionist.
	Name OptString `json:"name"`
	// [Timezone](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#timezones) of the Auto Receptionist.
	Timezone OptString `json:"timezone"`
	// Audio prompt language.
	AudioPromptLanguage OptString `json:"audio_prompt_language"`
	// The holiday hours.
	HolidayHours []ListAutoReceptionistsOKAutoReceptionistsItemHolidayHoursItem `json:"holiday_hours"`
	PhoneNumbers []ListAutoReceptionistsOKAutoReceptionistsItemPhoneNumbersItem `json:"phone_numbers"`
	Site         OptListAutoReceptionistsOKAutoReceptionistsItemSite            `json:"site"`
}

// GetCostCenter returns the value of CostCenter.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) GetCostCenter() OptString {
	return s.CostCenter
}

// GetDepartment returns the value of Department.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) GetDepartment() OptString {
	return s.Department
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) GetName() OptString {
	return s.Name
}

// GetTimezone returns the value of Timezone.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) GetTimezone() OptString {
	return s.Timezone
}

// GetAudioPromptLanguage returns the value of AudioPromptLanguage.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) GetAudioPromptLanguage() OptString {
	return s.AudioPromptLanguage
}

// GetHolidayHours returns the value of HolidayHours.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) GetHolidayHours() []ListAutoReceptionistsOKAutoReceptionistsItemHolidayHoursItem {
	return s.HolidayHours
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) GetPhoneNumbers() []ListAutoReceptionistsOKAutoReceptionistsItemPhoneNumbersItem {
	return s.PhoneNumbers
}

// GetSite returns the value of Site.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) GetSite() OptListAutoReceptionistsOKAutoReceptionistsItemSite {
	return s.Site
}

// SetCostCenter sets the value of CostCenter.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) SetCostCenter(val OptString) {
	s.CostCenter = val
}

// SetDepartment sets the value of Department.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) SetDepartment(val OptString) {
	s.Department = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) SetName(val OptString) {
	s.Name = val
}

// SetTimezone sets the value of Timezone.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) SetTimezone(val OptString) {
	s.Timezone = val
}

// SetAudioPromptLanguage sets the value of AudioPromptLanguage.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) SetAudioPromptLanguage(val OptString) {
	s.AudioPromptLanguage = val
}

// SetHolidayHours sets the value of HolidayHours.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) SetHolidayHours(val []ListAutoReceptionistsOKAutoReceptionistsItemHolidayHoursItem) {
	s.HolidayHours = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) SetPhoneNumbers(val []ListAutoReceptionistsOKAutoReceptionistsItemPhoneNumbersItem) {
	s.PhoneNumbers = val
}

// SetSite sets the value of Site.
func (s *ListAutoReceptionistsOKAutoReceptionistsItem) SetSite(val OptListAutoReceptionistsOKAutoReceptionistsItemSite) {
	s.Site = val
}

type ListAutoReceptionistsOKAutoReceptionistsItemHolidayHoursItem struct {
	// The holiday ID.
	ID OptString `json:"id"`
	// The name of the holiday.
	Name OptString `json:"name"`
	// The holiday start date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.
	From OptDateTime `json:"from"`
	// The holiday end date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.
	To OptDateTime `json:"to"`
}

// GetID returns the value of ID.
func (s *ListAutoReceptionistsOKAutoReceptionistsItemHolidayHoursItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListAutoReceptionistsOKAutoReceptionistsItemHolidayHoursItem) GetName() OptString {
	return s.Name
}

// GetFrom returns the value of From.
func (s *ListAutoReceptionistsOKAutoReceptionistsItemHolidayHoursItem) GetFrom() OptDateTime {
	return s.From
}

// GetTo returns the value of To.
func (s *ListAutoReceptionistsOKAutoReceptionistsItemHolidayHoursItem) GetTo() OptDateTime {
	return s.To
}

// SetID sets the value of ID.
func (s *ListAutoReceptionistsOKAutoReceptionistsItemHolidayHoursItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListAutoReceptionistsOKAutoReceptionistsItemHolidayHoursItem) SetName(val OptString) {
	s.Name = val
}

// SetFrom sets the value of From.
func (s *ListAutoReceptionistsOKAutoReceptionistsItemHolidayHoursItem) SetFrom(val OptDateTime) {
	s.From = val
}

// SetTo sets the value of To.
func (s *ListAutoReceptionistsOKAutoReceptionistsItemHolidayHoursItem) SetTo(val OptDateTime) {
	s.To = val
}

type ListAutoReceptionistsOKAutoReceptionistsItemPhoneNumbersItem struct {
	// Unique identifier of the phone number.
	ID OptString `json:"id"`
	// Phone number.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *ListAutoReceptionistsOKAutoReceptionistsItemPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *ListAutoReceptionistsOKAutoReceptionistsItemPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *ListAutoReceptionistsOKAutoReceptionistsItemPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *ListAutoReceptionistsOKAutoReceptionistsItemPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

type ListAutoReceptionistsOKAutoReceptionistsItemSite struct {
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is
	// assigned.
	ID OptString `json:"id"`
	// Name of the site.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListAutoReceptionistsOKAutoReceptionistsItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListAutoReceptionistsOKAutoReceptionistsItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListAutoReceptionistsOKAutoReceptionistsItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListAutoReceptionistsOKAutoReceptionistsItemSite) SetName(val OptString) {
	s.Name = val
}

type ListBYOCSIPTrunkOK struct {
	ByocSipTrunk []ListBYOCSIPTrunkOKByocSipTrunkItem `json:"byoc_sip_trunk"`
	// Used to paginate through large result sets. A next page token will be returned whenever the set of
	// available results exceeds the current page size. The expiration period for this token is **15
	// minutes**.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single API call. The default is **30**, and the maximum is
	// **100**.
	PageSize OptInt `json:"page_size"`
}

// GetByocSipTrunk returns the value of ByocSipTrunk.
func (s *ListBYOCSIPTrunkOK) GetByocSipTrunk() []ListBYOCSIPTrunkOKByocSipTrunkItem {
	return s.ByocSipTrunk
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListBYOCSIPTrunkOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListBYOCSIPTrunkOK) GetPageSize() OptInt {
	return s.PageSize
}

// SetByocSipTrunk sets the value of ByocSipTrunk.
func (s *ListBYOCSIPTrunkOK) SetByocSipTrunk(val []ListBYOCSIPTrunkOKByocSipTrunkItem) {
	s.ByocSipTrunk = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListBYOCSIPTrunkOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListBYOCSIPTrunkOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

type ListBYOCSIPTrunkOKByocSipTrunkItem struct {
	// Name of the carrier.
	Carrier OptString `json:"carrier"`
	// The account associated to the carrier.
	CarrierAccount OptString `json:"carrier_account"`
	// The unique SIP Trunk ID.
	ID OptString `json:"id"`
	// The display name of the SIP Trunk.
	Name OptString `json:"name"`
	// The region of the carrier.
	Region OptString `json:"region"`
	// The Session Border Controller (SBC) routing label.
	SbcLabel OptString `json:"sbc_label"`
}

// GetCarrier returns the value of Carrier.
func (s *ListBYOCSIPTrunkOKByocSipTrunkItem) GetCarrier() OptString {
	return s.Carrier
}

// GetCarrierAccount returns the value of CarrierAccount.
func (s *ListBYOCSIPTrunkOKByocSipTrunkItem) GetCarrierAccount() OptString {
	return s.CarrierAccount
}

// GetID returns the value of ID.
func (s *ListBYOCSIPTrunkOKByocSipTrunkItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListBYOCSIPTrunkOKByocSipTrunkItem) GetName() OptString {
	return s.Name
}

// GetRegion returns the value of Region.
func (s *ListBYOCSIPTrunkOKByocSipTrunkItem) GetRegion() OptString {
	return s.Region
}

// GetSbcLabel returns the value of SbcLabel.
func (s *ListBYOCSIPTrunkOKByocSipTrunkItem) GetSbcLabel() OptString {
	return s.SbcLabel
}

// SetCarrier sets the value of Carrier.
func (s *ListBYOCSIPTrunkOKByocSipTrunkItem) SetCarrier(val OptString) {
	s.Carrier = val
}

// SetCarrierAccount sets the value of CarrierAccount.
func (s *ListBYOCSIPTrunkOKByocSipTrunkItem) SetCarrierAccount(val OptString) {
	s.CarrierAccount = val
}

// SetID sets the value of ID.
func (s *ListBYOCSIPTrunkOKByocSipTrunkItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListBYOCSIPTrunkOKByocSipTrunkItem) SetName(val OptString) {
	s.Name = val
}

// SetRegion sets the value of Region.
func (s *ListBYOCSIPTrunkOKByocSipTrunkItem) SetRegion(val OptString) {
	s.Region = val
}

// SetSbcLabel sets the value of SbcLabel.
func (s *ListBYOCSIPTrunkOKByocSipTrunkItem) SetSbcLabel(val OptString) {
	s.SbcLabel = val
}

type ListBillingAccountOK struct {
	BillingAccounts []ListBillingAccountOKBillingAccountsItem `json:"billing_accounts"`
}

// GetBillingAccounts returns the value of BillingAccounts.
func (s *ListBillingAccountOK) GetBillingAccounts() []ListBillingAccountOKBillingAccountsItem {
	return s.BillingAccounts
}

// SetBillingAccounts sets the value of BillingAccounts.
func (s *ListBillingAccountOK) SetBillingAccounts(val []ListBillingAccountOKBillingAccountsItem) {
	s.BillingAccounts = val
}

type ListBillingAccountOKBillingAccountsItem struct {
	// The billing account ID.
	ID OptString `json:"id"`
	// The billing account name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListBillingAccountOKBillingAccountsItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListBillingAccountOKBillingAccountsItem) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListBillingAccountOKBillingAccountsItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListBillingAccountOKBillingAccountsItem) SetName(val OptString) {
	s.Name = val
}

type ListBlockedListOK struct {
	BlockedList []ListBlockedListOKBlockedListItem `json:"blocked_list"`
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The total number of records returned from a single API call.
	PageSize OptInt `json:"page_size"`
	// The total number of records found for this query.
	TotalRecords OptInt `json:"total_records"`
}

// GetBlockedList returns the value of BlockedList.
func (s *ListBlockedListOK) GetBlockedList() []ListBlockedListOKBlockedListItem {
	return s.BlockedList
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListBlockedListOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListBlockedListOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListBlockedListOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetBlockedList sets the value of BlockedList.
func (s *ListBlockedListOK) SetBlockedList(val []ListBlockedListOKBlockedListItem) {
	s.BlockedList = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListBlockedListOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListBlockedListOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListBlockedListOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListBlockedListOKBlockedListItem struct {
	// Block type.
	// `inbound`: The blocked number or numbers with the specified prefix are prevented from calling in
	// to phone users.
	// `outbound`: The phone users  are prevented from calling the blocked number or numbers with the
	// specified prefix.
	BlockType OptString `json:"block_type"`
	// Provide a comment to help you identify the blocked number or prefix.
	Comment OptString `json:"comment"`
	// Unique identifier of the blocked list.
	ID OptString `json:"id"`
	// Indicates the match type for the blocked list:
	// `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number`
	// field is blocked.
	// `prefix`: Indicates that all numbers starting with the prefix that is shown in the `phone_number`
	// field are blocked.
	MatchType OptString `json:"match_type"`
	// The phone number to be blocked if you passed `phoneNumber` as the value for the `match_type` field.
	//  If you passed `prefix` as the value for the `match_type` field, provide the prefix of the phone
	// number in the `country` field. Displayed in E164 format.
	PhoneNumber OptString `json:"phone_number"`
	// Indicates whether the blocking is active or inactive.
	// `active`: The blocked list is active.
	// `inactive`: The blocked list is inactive.
	Status OptString `json:"status"`
}

// GetBlockType returns the value of BlockType.
func (s *ListBlockedListOKBlockedListItem) GetBlockType() OptString {
	return s.BlockType
}

// GetComment returns the value of Comment.
func (s *ListBlockedListOKBlockedListItem) GetComment() OptString {
	return s.Comment
}

// GetID returns the value of ID.
func (s *ListBlockedListOKBlockedListItem) GetID() OptString {
	return s.ID
}

// GetMatchType returns the value of MatchType.
func (s *ListBlockedListOKBlockedListItem) GetMatchType() OptString {
	return s.MatchType
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *ListBlockedListOKBlockedListItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetStatus returns the value of Status.
func (s *ListBlockedListOKBlockedListItem) GetStatus() OptString {
	return s.Status
}

// SetBlockType sets the value of BlockType.
func (s *ListBlockedListOKBlockedListItem) SetBlockType(val OptString) {
	s.BlockType = val
}

// SetComment sets the value of Comment.
func (s *ListBlockedListOKBlockedListItem) SetComment(val OptString) {
	s.Comment = val
}

// SetID sets the value of ID.
func (s *ListBlockedListOKBlockedListItem) SetID(val OptString) {
	s.ID = val
}

// SetMatchType sets the value of MatchType.
func (s *ListBlockedListOKBlockedListItem) SetMatchType(val OptString) {
	s.MatchType = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *ListBlockedListOKBlockedListItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetStatus sets the value of Status.
func (s *ListBlockedListOKBlockedListItem) SetStatus(val OptString) {
	s.Status = val
}

type ListCRPhoneNumbersOK struct {
	CarrierResellerNumbers []ListCRPhoneNumbersOKCarrierResellerNumbersItem `json:"carrier_reseller_numbers"`
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single API call for each page.
	PageSize OptInt `json:"page_size"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
}

// GetCarrierResellerNumbers returns the value of CarrierResellerNumbers.
func (s *ListCRPhoneNumbersOK) GetCarrierResellerNumbers() []ListCRPhoneNumbersOKCarrierResellerNumbersItem {
	return s.CarrierResellerNumbers
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListCRPhoneNumbersOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListCRPhoneNumbersOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListCRPhoneNumbersOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetCarrierResellerNumbers sets the value of CarrierResellerNumbers.
func (s *ListCRPhoneNumbersOK) SetCarrierResellerNumbers(val []ListCRPhoneNumbersOKCarrierResellerNumbersItem) {
	s.CarrierResellerNumbers = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListCRPhoneNumbersOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListCRPhoneNumbersOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListCRPhoneNumbersOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListCRPhoneNumbersOKCarrierResellerNumbersItem struct {
	// Number assignment status.
	AssignedStatus OptString `json:"assigned_status"`
	// Carrier reseller ID.
	CarrierCode OptInt `json:"carrier_code"`
	// Two lettered country [code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	CountryIsoCode OptString `json:"country_iso_code"`
	// Phone number in E164 format.
	PhoneNumber OptString `json:"phone_number"`
	// Status of phone number.
	Status OptString `json:"status"`
	// `nullable` Partner account ID from sub-account.
	SubAccountID OptString `json:"sub_account_id"`
	// `nullable` Sub-account name.
	SubAccountName OptString `json:"sub_account_name"`
}

// GetAssignedStatus returns the value of AssignedStatus.
func (s *ListCRPhoneNumbersOKCarrierResellerNumbersItem) GetAssignedStatus() OptString {
	return s.AssignedStatus
}

// GetCarrierCode returns the value of CarrierCode.
func (s *ListCRPhoneNumbersOKCarrierResellerNumbersItem) GetCarrierCode() OptInt {
	return s.CarrierCode
}

// GetCountryIsoCode returns the value of CountryIsoCode.
func (s *ListCRPhoneNumbersOKCarrierResellerNumbersItem) GetCountryIsoCode() OptString {
	return s.CountryIsoCode
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *ListCRPhoneNumbersOKCarrierResellerNumbersItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetStatus returns the value of Status.
func (s *ListCRPhoneNumbersOKCarrierResellerNumbersItem) GetStatus() OptString {
	return s.Status
}

// GetSubAccountID returns the value of SubAccountID.
func (s *ListCRPhoneNumbersOKCarrierResellerNumbersItem) GetSubAccountID() OptString {
	return s.SubAccountID
}

// GetSubAccountName returns the value of SubAccountName.
func (s *ListCRPhoneNumbersOKCarrierResellerNumbersItem) GetSubAccountName() OptString {
	return s.SubAccountName
}

// SetAssignedStatus sets the value of AssignedStatus.
func (s *ListCRPhoneNumbersOKCarrierResellerNumbersItem) SetAssignedStatus(val OptString) {
	s.AssignedStatus = val
}

// SetCarrierCode sets the value of CarrierCode.
func (s *ListCRPhoneNumbersOKCarrierResellerNumbersItem) SetCarrierCode(val OptInt) {
	s.CarrierCode = val
}

// SetCountryIsoCode sets the value of CountryIsoCode.
func (s *ListCRPhoneNumbersOKCarrierResellerNumbersItem) SetCountryIsoCode(val OptString) {
	s.CountryIsoCode = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *ListCRPhoneNumbersOKCarrierResellerNumbersItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetStatus sets the value of Status.
func (s *ListCRPhoneNumbersOKCarrierResellerNumbersItem) SetStatus(val OptString) {
	s.Status = val
}

// SetSubAccountID sets the value of SubAccountID.
func (s *ListCRPhoneNumbersOKCarrierResellerNumbersItem) SetSubAccountID(val OptString) {
	s.SubAccountID = val
}

// SetSubAccountName sets the value of SubAccountName.
func (s *ListCRPhoneNumbersOKCarrierResellerNumbersItem) SetSubAccountName(val OptString) {
	s.SubAccountName = val
}

type ListCallLogsMetricsOK struct {
	// Call logs.
	CallLogs []ListCallLogsMetricsOKCallLogsItem `json:"call_logs"`
	// The start time and date of the report.
	From OptString `json:"from"`
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single call.
	PageSize OptInt `json:"page_size"`
	// The end time and date of the report.
	To OptString `json:"to"`
	// The total number of records available across all pages.
	TotalRecords OptInt `json:"total_records"`
}

// GetCallLogs returns the value of CallLogs.
func (s *ListCallLogsMetricsOK) GetCallLogs() []ListCallLogsMetricsOKCallLogsItem {
	return s.CallLogs
}

// GetFrom returns the value of From.
func (s *ListCallLogsMetricsOK) GetFrom() OptString {
	return s.From
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListCallLogsMetricsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListCallLogsMetricsOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTo returns the value of To.
func (s *ListCallLogsMetricsOK) GetTo() OptString {
	return s.To
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListCallLogsMetricsOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetCallLogs sets the value of CallLogs.
func (s *ListCallLogsMetricsOK) SetCallLogs(val []ListCallLogsMetricsOKCallLogsItem) {
	s.CallLogs = val
}

// SetFrom sets the value of From.
func (s *ListCallLogsMetricsOK) SetFrom(val OptString) {
	s.From = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListCallLogsMetricsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListCallLogsMetricsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTo sets the value of To.
func (s *ListCallLogsMetricsOK) SetTo(val OptString) {
	s.To = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListCallLogsMetricsOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListCallLogsMetricsOKCallLogsItem struct {
	// The unique identifier of the phone call.
	CallID OptString `json:"call_id"`
	// The callee object that contains information of the calee.
	Callee OptListCallLogsMetricsOKCallLogsItemCallee `json:"callee"`
	// The caller object that contains information of the caller.
	Caller OptListCallLogsMetricsOKCallLogsItemCaller `json:"caller"`
	// The date and time when the call started.
	DateTime OptString `json:"date_time"`
	// The direction of the call. The value of this field can be either `internal` or `outbound`.
	Direction OptString `json:"direction"`
	// The duration of the call in seconds.
	Duration OptInt `json:"duration"`
	// The  Mean Opinion Score (MOS). Zoom uses MOS as the main measurement to report on voice quality.
	// MOS measures voice quality on a scale of one to five. A score of 1 indicates unacceptable voice
	// quality for all users. A score of five is the best voice quality.
	Mos OptString `json:"mos"`
}

// GetCallID returns the value of CallID.
func (s *ListCallLogsMetricsOKCallLogsItem) GetCallID() OptString {
	return s.CallID
}

// GetCallee returns the value of Callee.
func (s *ListCallLogsMetricsOKCallLogsItem) GetCallee() OptListCallLogsMetricsOKCallLogsItemCallee {
	return s.Callee
}

// GetCaller returns the value of Caller.
func (s *ListCallLogsMetricsOKCallLogsItem) GetCaller() OptListCallLogsMetricsOKCallLogsItemCaller {
	return s.Caller
}

// GetDateTime returns the value of DateTime.
func (s *ListCallLogsMetricsOKCallLogsItem) GetDateTime() OptString {
	return s.DateTime
}

// GetDirection returns the value of Direction.
func (s *ListCallLogsMetricsOKCallLogsItem) GetDirection() OptString {
	return s.Direction
}

// GetDuration returns the value of Duration.
func (s *ListCallLogsMetricsOKCallLogsItem) GetDuration() OptInt {
	return s.Duration
}

// GetMos returns the value of Mos.
func (s *ListCallLogsMetricsOKCallLogsItem) GetMos() OptString {
	return s.Mos
}

// SetCallID sets the value of CallID.
func (s *ListCallLogsMetricsOKCallLogsItem) SetCallID(val OptString) {
	s.CallID = val
}

// SetCallee sets the value of Callee.
func (s *ListCallLogsMetricsOKCallLogsItem) SetCallee(val OptListCallLogsMetricsOKCallLogsItemCallee) {
	s.Callee = val
}

// SetCaller sets the value of Caller.
func (s *ListCallLogsMetricsOKCallLogsItem) SetCaller(val OptListCallLogsMetricsOKCallLogsItemCaller) {
	s.Caller = val
}

// SetDateTime sets the value of DateTime.
func (s *ListCallLogsMetricsOKCallLogsItem) SetDateTime(val OptString) {
	s.DateTime = val
}

// SetDirection sets the value of Direction.
func (s *ListCallLogsMetricsOKCallLogsItem) SetDirection(val OptString) {
	s.Direction = val
}

// SetDuration sets the value of Duration.
func (s *ListCallLogsMetricsOKCallLogsItem) SetDuration(val OptInt) {
	s.Duration = val
}

// SetMos sets the value of Mos.
func (s *ListCallLogsMetricsOKCallLogsItem) SetMos(val OptString) {
	s.Mos = val
}

// The callee object that contains information of the calee.
type ListCallLogsMetricsOKCallLogsItemCallee struct {
	// The audio codec.
	Codec OptString `json:"codec"`
	// This setting displays the device's private IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePrivateIP OptString `json:"device_private_ip"`
	// This setting displays the device's public IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePublicIP OptString `json:"device_public_ip"`
	// The device type, and if applicable, its version number. Acceptable device types:
	// * `Windows_Client`
	// * `MAC_Client`
	// * `Linux_Client`
	// * `Android_Phone`
	// * `IOS_Phone`
	// * `Android_Pad`
	// * `IOS_Pad`
	// * [Zoom Phone Appliance](https://support.zoom.
	// us/hc/en-us/articles/360001299063#h_cc0dac0d-44aa-4fb6-8e39-359166c38715)
	// * `Windows_VDI_Client`
	// * `MAC_VDI_Client`
	// * `Linux_VDI_Client`.
	DeviceType OptString `json:"device_type"`
	// The full extension number of the callee.
	ExtensionNumber OptString `json:"extension_number"`
	// The headset the callee uses.
	Headset OptString `json:"headset"`
	// ISP.
	Isp OptString `json:"isp"`
	// The microphone the callee uses for the call.
	Microphone OptString `json:"microphone"`
	// The phone number of the callee in E164 format.
	PhoneNumber OptString `json:"phone_number"`
	// The unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites).
	SiteID OptString `json:"site_id"`
}

// GetCodec returns the value of Codec.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) GetCodec() OptString {
	return s.Codec
}

// GetDevicePrivateIP returns the value of DevicePrivateIP.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) GetDevicePrivateIP() OptString {
	return s.DevicePrivateIP
}

// GetDevicePublicIP returns the value of DevicePublicIP.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) GetDevicePublicIP() OptString {
	return s.DevicePublicIP
}

// GetDeviceType returns the value of DeviceType.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) GetDeviceType() OptString {
	return s.DeviceType
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetHeadset returns the value of Headset.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) GetHeadset() OptString {
	return s.Headset
}

// GetIsp returns the value of Isp.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) GetIsp() OptString {
	return s.Isp
}

// GetMicrophone returns the value of Microphone.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) GetMicrophone() OptString {
	return s.Microphone
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetSiteID returns the value of SiteID.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) GetSiteID() OptString {
	return s.SiteID
}

// SetCodec sets the value of Codec.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) SetCodec(val OptString) {
	s.Codec = val
}

// SetDevicePrivateIP sets the value of DevicePrivateIP.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) SetDevicePrivateIP(val OptString) {
	s.DevicePrivateIP = val
}

// SetDevicePublicIP sets the value of DevicePublicIP.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) SetDevicePublicIP(val OptString) {
	s.DevicePublicIP = val
}

// SetDeviceType sets the value of DeviceType.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) SetDeviceType(val OptString) {
	s.DeviceType = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetHeadset sets the value of Headset.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) SetHeadset(val OptString) {
	s.Headset = val
}

// SetIsp sets the value of Isp.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) SetIsp(val OptString) {
	s.Isp = val
}

// SetMicrophone sets the value of Microphone.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) SetMicrophone(val OptString) {
	s.Microphone = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetSiteID sets the value of SiteID.
func (s *ListCallLogsMetricsOKCallLogsItemCallee) SetSiteID(val OptString) {
	s.SiteID = val
}

// The caller object that contains information of the caller.
type ListCallLogsMetricsOKCallLogsItemCaller struct {
	// Audio codec.
	Codec OptString `json:"codec"`
	// This setting displays the device's private IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePrivateIP OptString `json:"device_private_ip"`
	// This setting display sthe device's public IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePublicIP OptString `json:"device_public_ip"`
	// The device type, and if applicable, its version number. Acceptable device types:
	// * `Windows_Client`
	// * `MAC_Client`
	// * `Linux_Client`
	// * `Android_Phone`
	// * `IOS_Phone`
	// * `Android_Pad`
	// * `IOS_Pad`
	// * [Zoom Phone Appliance](https://support.zoom.
	// us/hc/en-us/articles/360001299063#h_cc0dac0d-44aa-4fb6-8e39-359166c38715)
	// * `Windows_VDI_Client`
	// * `MAC_VDI_Client`
	// * `Linux_VDI_Client`.
	DeviceType OptString `json:"device_type"`
	// The full extension number of the caller.
	ExtensionNumber OptString `json:"extension_number"`
	// The headset the caller uses for the call.
	Headset OptString `json:"headset"`
	// ISP.
	Isp OptString `json:"isp"`
	// The microphone the caller uses for the call.
	Microphone OptString `json:"microphone"`
	// The phone number of the caller in E164 format.
	PhoneNumber OptString `json:"phone_number"`
	// The unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites).
	SiteID OptString `json:"site_id"`
}

// GetCodec returns the value of Codec.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) GetCodec() OptString {
	return s.Codec
}

// GetDevicePrivateIP returns the value of DevicePrivateIP.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) GetDevicePrivateIP() OptString {
	return s.DevicePrivateIP
}

// GetDevicePublicIP returns the value of DevicePublicIP.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) GetDevicePublicIP() OptString {
	return s.DevicePublicIP
}

// GetDeviceType returns the value of DeviceType.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) GetDeviceType() OptString {
	return s.DeviceType
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetHeadset returns the value of Headset.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) GetHeadset() OptString {
	return s.Headset
}

// GetIsp returns the value of Isp.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) GetIsp() OptString {
	return s.Isp
}

// GetMicrophone returns the value of Microphone.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) GetMicrophone() OptString {
	return s.Microphone
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetSiteID returns the value of SiteID.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) GetSiteID() OptString {
	return s.SiteID
}

// SetCodec sets the value of Codec.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) SetCodec(val OptString) {
	s.Codec = val
}

// SetDevicePrivateIP sets the value of DevicePrivateIP.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) SetDevicePrivateIP(val OptString) {
	s.DevicePrivateIP = val
}

// SetDevicePublicIP sets the value of DevicePublicIP.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) SetDevicePublicIP(val OptString) {
	s.DevicePublicIP = val
}

// SetDeviceType sets the value of DeviceType.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) SetDeviceType(val OptString) {
	s.DeviceType = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetHeadset sets the value of Headset.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) SetHeadset(val OptString) {
	s.Headset = val
}

// SetIsp sets the value of Isp.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) SetIsp(val OptString) {
	s.Isp = val
}

// SetMicrophone sets the value of Microphone.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) SetMicrophone(val OptString) {
	s.Microphone = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetSiteID sets the value of SiteID.
func (s *ListCallLogsMetricsOKCallLogsItemCaller) SetSiteID(val OptString) {
	s.SiteID = val
}

type ListCallQueueMembersOK struct {
	CallQueueMembers []ListCallQueueMembersOKCallQueueMembersItem `json:"call_queue_members"`
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned from a single API call.
	PageSize OptInt `json:"page_size"`
	// The total number of records found for this query.
	TotalRecords OptInt `json:"total_records"`
}

// GetCallQueueMembers returns the value of CallQueueMembers.
func (s *ListCallQueueMembersOK) GetCallQueueMembers() []ListCallQueueMembersOKCallQueueMembersItem {
	return s.CallQueueMembers
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListCallQueueMembersOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListCallQueueMembersOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListCallQueueMembersOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetCallQueueMembers sets the value of CallQueueMembers.
func (s *ListCallQueueMembersOK) SetCallQueueMembers(val []ListCallQueueMembersOKCallQueueMembersItem) {
	s.CallQueueMembers = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListCallQueueMembersOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListCallQueueMembersOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListCallQueueMembersOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListCallQueueMembersOKCallQueueMembersItem struct {
	// The member ID.
	ID OptString `json:"id"`
	// The level of the member.
	Level OptString `json:"level"`
	// The name of the user or common area.
	Name OptString `json:"name"`
	// Whether the user can receive calls. It displays if the level is user.
	ReceiveCall OptBool `json:"receive_call"`
	// The extension ID of the user or common area.
	ExtensionID OptString `json:"extension_id"`
}

// GetID returns the value of ID.
func (s *ListCallQueueMembersOKCallQueueMembersItem) GetID() OptString {
	return s.ID
}

// GetLevel returns the value of Level.
func (s *ListCallQueueMembersOKCallQueueMembersItem) GetLevel() OptString {
	return s.Level
}

// GetName returns the value of Name.
func (s *ListCallQueueMembersOKCallQueueMembersItem) GetName() OptString {
	return s.Name
}

// GetReceiveCall returns the value of ReceiveCall.
func (s *ListCallQueueMembersOKCallQueueMembersItem) GetReceiveCall() OptBool {
	return s.ReceiveCall
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListCallQueueMembersOKCallQueueMembersItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// SetID sets the value of ID.
func (s *ListCallQueueMembersOKCallQueueMembersItem) SetID(val OptString) {
	s.ID = val
}

// SetLevel sets the value of Level.
func (s *ListCallQueueMembersOKCallQueueMembersItem) SetLevel(val OptString) {
	s.Level = val
}

// SetName sets the value of Name.
func (s *ListCallQueueMembersOKCallQueueMembersItem) SetName(val OptString) {
	s.Name = val
}

// SetReceiveCall sets the value of ReceiveCall.
func (s *ListCallQueueMembersOKCallQueueMembersItem) SetReceiveCall(val OptBool) {
	s.ReceiveCall = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListCallQueueMembersOKCallQueueMembersItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

type ListCallQueuesOK struct {
	CallQueues []ListCallQueuesOKCallQueuesItem `json:"call_queues"`
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned from a single API call.
	PageSize OptInt `json:"page_size"`
	// The total number of records found for this query.
	TotalRecords OptInt `json:"total_records"`
}

// GetCallQueues returns the value of CallQueues.
func (s *ListCallQueuesOK) GetCallQueues() []ListCallQueuesOKCallQueuesItem {
	return s.CallQueues
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListCallQueuesOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListCallQueuesOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListCallQueuesOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetCallQueues sets the value of CallQueues.
func (s *ListCallQueuesOK) SetCallQueues(val []ListCallQueuesOKCallQueuesItem) {
	s.CallQueues = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListCallQueuesOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListCallQueuesOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListCallQueuesOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListCallQueuesOKCallQueuesItem struct {
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number assigned to the queue.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// Unique identifier of the call queue.
	ID OptString `json:"id"`
	// Name of the Call Queue.
	Name OptString `json:"name"`
	// Phone number(s) assigned to the call queue.
	PhoneNumbers []ListCallQueuesOKCallQueuesItemPhoneNumbersItem `json:"phone_numbers"`
	Site         OptListCallQueuesOKCallQueuesItemSite            `json:"site"`
	// Status of the Call Queue.
	// `active`: Call queue is enabled and active.
	// `inactive`: Call queue is inactive. Inactive call queues cannot be called but will retain its
	// settings and appear in the [Call Queues](https://zoom.us/pbx/page/telephone/groups#/groups) page.
	Status OptString `json:"status"`
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListCallQueuesOKCallQueuesItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListCallQueuesOKCallQueuesItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *ListCallQueuesOKCallQueuesItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListCallQueuesOKCallQueuesItem) GetName() OptString {
	return s.Name
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *ListCallQueuesOKCallQueuesItem) GetPhoneNumbers() []ListCallQueuesOKCallQueuesItemPhoneNumbersItem {
	return s.PhoneNumbers
}

// GetSite returns the value of Site.
func (s *ListCallQueuesOKCallQueuesItem) GetSite() OptListCallQueuesOKCallQueuesItemSite {
	return s.Site
}

// GetStatus returns the value of Status.
func (s *ListCallQueuesOKCallQueuesItem) GetStatus() OptString {
	return s.Status
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListCallQueuesOKCallQueuesItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListCallQueuesOKCallQueuesItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *ListCallQueuesOKCallQueuesItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListCallQueuesOKCallQueuesItem) SetName(val OptString) {
	s.Name = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *ListCallQueuesOKCallQueuesItem) SetPhoneNumbers(val []ListCallQueuesOKCallQueuesItemPhoneNumbersItem) {
	s.PhoneNumbers = val
}

// SetSite sets the value of Site.
func (s *ListCallQueuesOKCallQueuesItem) SetSite(val OptListCallQueuesOKCallQueuesItemSite) {
	s.Site = val
}

// SetStatus sets the value of Status.
func (s *ListCallQueuesOKCallQueuesItem) SetStatus(val OptString) {
	s.Status = val
}

type ListCallQueuesOKCallQueuesItemPhoneNumbersItem struct {
	// Unique identifier of the assigned phone number.
	ID OptString `json:"id"`
	// The phone number.
	Number OptString `json:"number"`
	// Source.
	Source OptString `json:"source"`
}

// GetID returns the value of ID.
func (s *ListCallQueuesOKCallQueuesItemPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *ListCallQueuesOKCallQueuesItemPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// GetSource returns the value of Source.
func (s *ListCallQueuesOKCallQueuesItemPhoneNumbersItem) GetSource() OptString {
	return s.Source
}

// SetID sets the value of ID.
func (s *ListCallQueuesOKCallQueuesItemPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *ListCallQueuesOKCallQueuesItemPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

// SetSource sets the value of Source.
func (s *ListCallQueuesOKCallQueuesItemPhoneNumbersItem) SetSource(val OptString) {
	s.Source = val
}

type ListCallQueuesOKCallQueuesItemSite struct {
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned.
	ID OptString `json:"id"`
	// Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListCallQueuesOKCallQueuesItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListCallQueuesOKCallQueuesItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListCallQueuesOKCallQueuesItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListCallQueuesOKCallQueuesItemSite) SetName(val OptString) {
	s.Name = val
}

type ListCallingPlansOK struct {
	CallingPlans []ListCallingPlansOKCallingPlansItem `json:"calling_plans"`
}

// GetCallingPlans returns the value of CallingPlans.
func (s *ListCallingPlansOK) GetCallingPlans() []ListCallingPlansOKCallingPlansItem {
	return s.CallingPlans
}

// SetCallingPlans sets the value of CallingPlans.
func (s *ListCallingPlansOK) SetCallingPlans(val []ListCallingPlansOKCallingPlansItem) {
	s.CallingPlans = val
}

type ListCallingPlansOKCallingPlansItem struct {
	// Total number of plan used.
	Assigned OptInt `json:"assigned"`
	// Remaining number of calling plans that can be assigned.
	Available OptInt `json:"available"`
	// Name of the plan.
	Name OptString `json:"name"`
	// Total number of plan subscriptions bought.
	Subscribed OptInt `json:"subscribed"`
	// Plan type. Refer to the Plan Number section [here](https://marketplace.zoom.
	// us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).
	Type OptInt `json:"type"`
	// Billing account ID. Displayed when the account is an Indian account.
	BillingAccountID OptString `json:"billing_account_id"`
	// Billing account name. Displayed when the account is an Indian account.
	BillingAccountName OptString `json:"billing_account_name"`
}

// GetAssigned returns the value of Assigned.
func (s *ListCallingPlansOKCallingPlansItem) GetAssigned() OptInt {
	return s.Assigned
}

// GetAvailable returns the value of Available.
func (s *ListCallingPlansOKCallingPlansItem) GetAvailable() OptInt {
	return s.Available
}

// GetName returns the value of Name.
func (s *ListCallingPlansOKCallingPlansItem) GetName() OptString {
	return s.Name
}

// GetSubscribed returns the value of Subscribed.
func (s *ListCallingPlansOKCallingPlansItem) GetSubscribed() OptInt {
	return s.Subscribed
}

// GetType returns the value of Type.
func (s *ListCallingPlansOKCallingPlansItem) GetType() OptInt {
	return s.Type
}

// GetBillingAccountID returns the value of BillingAccountID.
func (s *ListCallingPlansOKCallingPlansItem) GetBillingAccountID() OptString {
	return s.BillingAccountID
}

// GetBillingAccountName returns the value of BillingAccountName.
func (s *ListCallingPlansOKCallingPlansItem) GetBillingAccountName() OptString {
	return s.BillingAccountName
}

// SetAssigned sets the value of Assigned.
func (s *ListCallingPlansOKCallingPlansItem) SetAssigned(val OptInt) {
	s.Assigned = val
}

// SetAvailable sets the value of Available.
func (s *ListCallingPlansOKCallingPlansItem) SetAvailable(val OptInt) {
	s.Available = val
}

// SetName sets the value of Name.
func (s *ListCallingPlansOKCallingPlansItem) SetName(val OptString) {
	s.Name = val
}

// SetSubscribed sets the value of Subscribed.
func (s *ListCallingPlansOKCallingPlansItem) SetSubscribed(val OptInt) {
	s.Subscribed = val
}

// SetType sets the value of Type.
func (s *ListCallingPlansOKCallingPlansItem) SetType(val OptInt) {
	s.Type = val
}

// SetBillingAccountID sets the value of BillingAccountID.
func (s *ListCallingPlansOKCallingPlansItem) SetBillingAccountID(val OptString) {
	s.BillingAccountID = val
}

// SetBillingAccountName sets the value of BillingAccountName.
func (s *ListCallingPlansOKCallingPlansItem) SetBillingAccountName(val OptString) {
	s.BillingAccountName = val
}

type ListCarrierPeeringPhoneNumbersOK struct {
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The information about the phone numbers pushed by the carrier to different customers.
	Numbers []ListCarrierPeeringPhoneNumbersOKNumbersItem `json:"numbers"`
	// The total number of records returned for this API call.
	TotalRecords OptInt `json:"total_records"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListCarrierPeeringPhoneNumbersOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetNumbers returns the value of Numbers.
func (s *ListCarrierPeeringPhoneNumbersOK) GetNumbers() []ListCarrierPeeringPhoneNumbersOKNumbersItem {
	return s.Numbers
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListCarrierPeeringPhoneNumbersOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListCarrierPeeringPhoneNumbersOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetNumbers sets the value of Numbers.
func (s *ListCarrierPeeringPhoneNumbersOK) SetNumbers(val []ListCarrierPeeringPhoneNumbersOKNumbersItem) {
	s.Numbers = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListCarrierPeeringPhoneNumbersOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListCarrierPeeringPhoneNumbersOKNumbersItem struct {
	// The customer's account name.
	CustomerAccountName OptString `json:"customer_account_name"`
	// The customer's account number.
	CustomerAccountNumber OptString `json:"customer_account_number"`
	// Whether the phone number is assigned:
	// * `0` &mdash; Unassigned.
	// * `1` &mdash; Assigned.
	Assigned int `json:"assigned"`
	// The carrier's billing reference ID.
	BillingReferenceID OptString `json:"billing_reference_id"`
	// The phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
	PhoneNumber string `json:"phone_number"`
	// The carrier's service information.
	ServiceInfo OptString `json:"service_info"`
	// The phone number's [SIP trunk](https://en.wikipedia.org/wiki/SIP_trunking).
	SipTrunkName string `json:"sip_trunk_name"`
	// The phone number's status:
	// * `0` &mdash; Inactive.
	// * `1` &mdash; Active.
	Status int `json:"status"`
}

// GetCustomerAccountName returns the value of CustomerAccountName.
func (s *ListCarrierPeeringPhoneNumbersOKNumbersItem) GetCustomerAccountName() OptString {
	return s.CustomerAccountName
}

// GetCustomerAccountNumber returns the value of CustomerAccountNumber.
func (s *ListCarrierPeeringPhoneNumbersOKNumbersItem) GetCustomerAccountNumber() OptString {
	return s.CustomerAccountNumber
}

// GetAssigned returns the value of Assigned.
func (s *ListCarrierPeeringPhoneNumbersOKNumbersItem) GetAssigned() int {
	return s.Assigned
}

// GetBillingReferenceID returns the value of BillingReferenceID.
func (s *ListCarrierPeeringPhoneNumbersOKNumbersItem) GetBillingReferenceID() OptString {
	return s.BillingReferenceID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *ListCarrierPeeringPhoneNumbersOKNumbersItem) GetPhoneNumber() string {
	return s.PhoneNumber
}

// GetServiceInfo returns the value of ServiceInfo.
func (s *ListCarrierPeeringPhoneNumbersOKNumbersItem) GetServiceInfo() OptString {
	return s.ServiceInfo
}

// GetSipTrunkName returns the value of SipTrunkName.
func (s *ListCarrierPeeringPhoneNumbersOKNumbersItem) GetSipTrunkName() string {
	return s.SipTrunkName
}

// GetStatus returns the value of Status.
func (s *ListCarrierPeeringPhoneNumbersOKNumbersItem) GetStatus() int {
	return s.Status
}

// SetCustomerAccountName sets the value of CustomerAccountName.
func (s *ListCarrierPeeringPhoneNumbersOKNumbersItem) SetCustomerAccountName(val OptString) {
	s.CustomerAccountName = val
}

// SetCustomerAccountNumber sets the value of CustomerAccountNumber.
func (s *ListCarrierPeeringPhoneNumbersOKNumbersItem) SetCustomerAccountNumber(val OptString) {
	s.CustomerAccountNumber = val
}

// SetAssigned sets the value of Assigned.
func (s *ListCarrierPeeringPhoneNumbersOKNumbersItem) SetAssigned(val int) {
	s.Assigned = val
}

// SetBillingReferenceID sets the value of BillingReferenceID.
func (s *ListCarrierPeeringPhoneNumbersOKNumbersItem) SetBillingReferenceID(val OptString) {
	s.BillingReferenceID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *ListCarrierPeeringPhoneNumbersOKNumbersItem) SetPhoneNumber(val string) {
	s.PhoneNumber = val
}

// SetServiceInfo sets the value of ServiceInfo.
func (s *ListCarrierPeeringPhoneNumbersOKNumbersItem) SetServiceInfo(val OptString) {
	s.ServiceInfo = val
}

// SetSipTrunkName sets the value of SipTrunkName.
func (s *ListCarrierPeeringPhoneNumbersOKNumbersItem) SetSipTrunkName(val string) {
	s.SipTrunkName = val
}

// SetStatus sets the value of Status.
func (s *ListCarrierPeeringPhoneNumbersOKNumbersItem) SetStatus(val int) {
	s.Status = val
}

type ListCommonAreaOutboundCallingExceptionRuleOK struct {
	ExceptionRules []ListCommonAreaOutboundCallingExceptionRuleOKExceptionRulesItem `json:"exception_rules"`
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The total number of records in a single API call.
	PageSize OptInt `json:"page_size"`
}

// GetExceptionRules returns the value of ExceptionRules.
func (s *ListCommonAreaOutboundCallingExceptionRuleOK) GetExceptionRules() []ListCommonAreaOutboundCallingExceptionRuleOKExceptionRulesItem {
	return s.ExceptionRules
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListCommonAreaOutboundCallingExceptionRuleOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListCommonAreaOutboundCallingExceptionRuleOK) GetPageSize() OptInt {
	return s.PageSize
}

// SetExceptionRules sets the value of ExceptionRules.
func (s *ListCommonAreaOutboundCallingExceptionRuleOK) SetExceptionRules(val []ListCommonAreaOutboundCallingExceptionRuleOKExceptionRulesItem) {
	s.ExceptionRules = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListCommonAreaOutboundCallingExceptionRuleOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListCommonAreaOutboundCallingExceptionRuleOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

type ListCommonAreaOutboundCallingExceptionRuleOKExceptionRulesItem struct {
	// The exception rule ID.
	ID OptString `json:"id"`
	// The match type for the exception rule:
	// `phoneNumber`and `prefix`.
	MatchType OptString `json:"match_type"`
	// The exception rule phone number prefix or the phone number without country code.
	PrefixNumber OptString `json:"prefix_number"`
	// The exception rule type `1` - allowed, `2` - blocked, `3` - require local number, caller ID or
	// plan, `4` - require to enter the extension number and PIN code.
	Rule OptInt `json:"rule"`
	// A comment to help identify the exception rule number or prefix.
	Comment OptString `json:"comment"`
	// Whether the exception rule is active or inactive.
	// `active`: The exception rule is active.
	// `inactive`: The exception rule is inactive.
	Status OptString `json:"status"`
}

// GetID returns the value of ID.
func (s *ListCommonAreaOutboundCallingExceptionRuleOKExceptionRulesItem) GetID() OptString {
	return s.ID
}

// GetMatchType returns the value of MatchType.
func (s *ListCommonAreaOutboundCallingExceptionRuleOKExceptionRulesItem) GetMatchType() OptString {
	return s.MatchType
}

// GetPrefixNumber returns the value of PrefixNumber.
func (s *ListCommonAreaOutboundCallingExceptionRuleOKExceptionRulesItem) GetPrefixNumber() OptString {
	return s.PrefixNumber
}

// GetRule returns the value of Rule.
func (s *ListCommonAreaOutboundCallingExceptionRuleOKExceptionRulesItem) GetRule() OptInt {
	return s.Rule
}

// GetComment returns the value of Comment.
func (s *ListCommonAreaOutboundCallingExceptionRuleOKExceptionRulesItem) GetComment() OptString {
	return s.Comment
}

// GetStatus returns the value of Status.
func (s *ListCommonAreaOutboundCallingExceptionRuleOKExceptionRulesItem) GetStatus() OptString {
	return s.Status
}

// SetID sets the value of ID.
func (s *ListCommonAreaOutboundCallingExceptionRuleOKExceptionRulesItem) SetID(val OptString) {
	s.ID = val
}

// SetMatchType sets the value of MatchType.
func (s *ListCommonAreaOutboundCallingExceptionRuleOKExceptionRulesItem) SetMatchType(val OptString) {
	s.MatchType = val
}

// SetPrefixNumber sets the value of PrefixNumber.
func (s *ListCommonAreaOutboundCallingExceptionRuleOKExceptionRulesItem) SetPrefixNumber(val OptString) {
	s.PrefixNumber = val
}

// SetRule sets the value of Rule.
func (s *ListCommonAreaOutboundCallingExceptionRuleOKExceptionRulesItem) SetRule(val OptInt) {
	s.Rule = val
}

// SetComment sets the value of Comment.
func (s *ListCommonAreaOutboundCallingExceptionRuleOKExceptionRulesItem) SetComment(val OptString) {
	s.Comment = val
}

// SetStatus sets the value of Status.
func (s *ListCommonAreaOutboundCallingExceptionRuleOKExceptionRulesItem) SetStatus(val OptString) {
	s.Status = val
}

type ListCommonAreasOK struct {
	CommonAreas []ListCommonAreasOKCommonAreasItem `json:"common_areas"`
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The total number of records returned from a single API call.
	PageSize OptInt `json:"page_size"`
}

// GetCommonAreas returns the value of CommonAreas.
func (s *ListCommonAreasOK) GetCommonAreas() []ListCommonAreasOKCommonAreasItem {
	return s.CommonAreas
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListCommonAreasOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListCommonAreasOK) GetPageSize() OptInt {
	return s.PageSize
}

// SetCommonAreas sets the value of CommonAreas.
func (s *ListCommonAreasOK) SetCommonAreas(val []ListCommonAreasOKCommonAreasItem) {
	s.CommonAreas = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListCommonAreasOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListCommonAreasOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

type ListCommonAreasOKCommonAreasItem struct {
	CallingPlans []ListCommonAreasOKCommonAreasItemCallingPlansItem `json:"calling_plans"`
	// The display name of the common area.
	DisplayName OptString `json:"display_name"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The common area ID or common area extension ID.
	ID           OptString                                          `json:"id"`
	PhoneNumbers []ListCommonAreasOKCommonAreasItemPhoneNumbersItem `json:"phone_numbers"`
	Site         OptListCommonAreasOKCommonAreasItemSite            `json:"site"`
	// The status of the common area.
	Status OptString `json:"status"`
	// The common area's desk phones.
	DeskPhones []ListCommonAreasOKCommonAreasItemDeskPhonesItem `json:"desk_phones"`
}

// GetCallingPlans returns the value of CallingPlans.
func (s *ListCommonAreasOKCommonAreasItem) GetCallingPlans() []ListCommonAreasOKCommonAreasItemCallingPlansItem {
	return s.CallingPlans
}

// GetDisplayName returns the value of DisplayName.
func (s *ListCommonAreasOKCommonAreasItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListCommonAreasOKCommonAreasItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *ListCommonAreasOKCommonAreasItem) GetID() OptString {
	return s.ID
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *ListCommonAreasOKCommonAreasItem) GetPhoneNumbers() []ListCommonAreasOKCommonAreasItemPhoneNumbersItem {
	return s.PhoneNumbers
}

// GetSite returns the value of Site.
func (s *ListCommonAreasOKCommonAreasItem) GetSite() OptListCommonAreasOKCommonAreasItemSite {
	return s.Site
}

// GetStatus returns the value of Status.
func (s *ListCommonAreasOKCommonAreasItem) GetStatus() OptString {
	return s.Status
}

// GetDeskPhones returns the value of DeskPhones.
func (s *ListCommonAreasOKCommonAreasItem) GetDeskPhones() []ListCommonAreasOKCommonAreasItemDeskPhonesItem {
	return s.DeskPhones
}

// SetCallingPlans sets the value of CallingPlans.
func (s *ListCommonAreasOKCommonAreasItem) SetCallingPlans(val []ListCommonAreasOKCommonAreasItemCallingPlansItem) {
	s.CallingPlans = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ListCommonAreasOKCommonAreasItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListCommonAreasOKCommonAreasItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *ListCommonAreasOKCommonAreasItem) SetID(val OptString) {
	s.ID = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *ListCommonAreasOKCommonAreasItem) SetPhoneNumbers(val []ListCommonAreasOKCommonAreasItemPhoneNumbersItem) {
	s.PhoneNumbers = val
}

// SetSite sets the value of Site.
func (s *ListCommonAreasOKCommonAreasItem) SetSite(val OptListCommonAreasOKCommonAreasItemSite) {
	s.Site = val
}

// SetStatus sets the value of Status.
func (s *ListCommonAreasOKCommonAreasItem) SetStatus(val OptString) {
	s.Status = val
}

// SetDeskPhones sets the value of DeskPhones.
func (s *ListCommonAreasOKCommonAreasItem) SetDeskPhones(val []ListCommonAreasOKCommonAreasItemDeskPhonesItem) {
	s.DeskPhones = val
}

type ListCommonAreasOKCommonAreasItemCallingPlansItem struct {
	// The name of the plan.
	Name OptString `json:"name"`
	// Zoom Phone [calling plan number](https://marketplace.zoom.
	// us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).
	Type OptInt `json:"type"`
	// The ID of the billing account. It displays when the common area is in India.
	BillingAccountID OptString `json:"billing_account_id"`
	// The billing account name. It displays when the common area is in India.
	BillingAccountName OptString `json:"billing_account_name"`
}

// GetName returns the value of Name.
func (s *ListCommonAreasOKCommonAreasItemCallingPlansItem) GetName() OptString {
	return s.Name
}

// GetType returns the value of Type.
func (s *ListCommonAreasOKCommonAreasItemCallingPlansItem) GetType() OptInt {
	return s.Type
}

// GetBillingAccountID returns the value of BillingAccountID.
func (s *ListCommonAreasOKCommonAreasItemCallingPlansItem) GetBillingAccountID() OptString {
	return s.BillingAccountID
}

// GetBillingAccountName returns the value of BillingAccountName.
func (s *ListCommonAreasOKCommonAreasItemCallingPlansItem) GetBillingAccountName() OptString {
	return s.BillingAccountName
}

// SetName sets the value of Name.
func (s *ListCommonAreasOKCommonAreasItemCallingPlansItem) SetName(val OptString) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *ListCommonAreasOKCommonAreasItemCallingPlansItem) SetType(val OptInt) {
	s.Type = val
}

// SetBillingAccountID sets the value of BillingAccountID.
func (s *ListCommonAreasOKCommonAreasItemCallingPlansItem) SetBillingAccountID(val OptString) {
	s.BillingAccountID = val
}

// SetBillingAccountName sets the value of BillingAccountName.
func (s *ListCommonAreasOKCommonAreasItemCallingPlansItem) SetBillingAccountName(val OptString) {
	s.BillingAccountName = val
}

type ListCommonAreasOKCommonAreasItemDeskPhonesItem struct {
	// The desk phone ID.
	ID OptString `json:"id"`
	// The desk phone display name.
	DisplayName OptString `json:"display_name"`
	// The desk phone device type.
	DeviceType OptString `json:"device_type"`
	// The desk phone status.
	Status OptString `json:"status"`
}

// GetID returns the value of ID.
func (s *ListCommonAreasOKCommonAreasItemDeskPhonesItem) GetID() OptString {
	return s.ID
}

// GetDisplayName returns the value of DisplayName.
func (s *ListCommonAreasOKCommonAreasItemDeskPhonesItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetDeviceType returns the value of DeviceType.
func (s *ListCommonAreasOKCommonAreasItemDeskPhonesItem) GetDeviceType() OptString {
	return s.DeviceType
}

// GetStatus returns the value of Status.
func (s *ListCommonAreasOKCommonAreasItemDeskPhonesItem) GetStatus() OptString {
	return s.Status
}

// SetID sets the value of ID.
func (s *ListCommonAreasOKCommonAreasItemDeskPhonesItem) SetID(val OptString) {
	s.ID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ListCommonAreasOKCommonAreasItemDeskPhonesItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetDeviceType sets the value of DeviceType.
func (s *ListCommonAreasOKCommonAreasItemDeskPhonesItem) SetDeviceType(val OptString) {
	s.DeviceType = val
}

// SetStatus sets the value of Status.
func (s *ListCommonAreasOKCommonAreasItemDeskPhonesItem) SetStatus(val OptString) {
	s.Status = val
}

type ListCommonAreasOKCommonAreasItemPhoneNumbersItem struct {
	// The phone number display name.
	DisplayName OptString `json:"display_name"`
	// The phone number ID.
	ID OptString `json:"id"`
	// The phone number.
	Number OptString `json:"number"`
	// The phone number source. The value can be either `internal` or `external`.
	Source OptString `json:"source"`
}

// GetDisplayName returns the value of DisplayName.
func (s *ListCommonAreasOKCommonAreasItemPhoneNumbersItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetID returns the value of ID.
func (s *ListCommonAreasOKCommonAreasItemPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *ListCommonAreasOKCommonAreasItemPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// GetSource returns the value of Source.
func (s *ListCommonAreasOKCommonAreasItemPhoneNumbersItem) GetSource() OptString {
	return s.Source
}

// SetDisplayName sets the value of DisplayName.
func (s *ListCommonAreasOKCommonAreasItemPhoneNumbersItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetID sets the value of ID.
func (s *ListCommonAreasOKCommonAreasItemPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *ListCommonAreasOKCommonAreasItemPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

// SetSource sets the value of Source.
func (s *ListCommonAreasOKCommonAreasItemPhoneNumbersItem) SetSource(val OptString) {
	s.Source = val
}

type ListCommonAreasOKCommonAreasItemSite struct {
	// The unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) that the common area desk phone is
	// assigned.
	ID OptString `json:"id"`
	// The name of the site.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListCommonAreasOKCommonAreasItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListCommonAreasOKCommonAreasItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListCommonAreasOKCommonAreasItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListCommonAreasOKCommonAreasItemSite) SetName(val OptString) {
	s.Name = val
}

type ListCustomizeOutboundCallerNumbersOK struct {
	CustomizeNumbers []ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem `json:"customize_numbers"`
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single API call for each page.
	PageSize OptInt `json:"page_size"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
}

// GetCustomizeNumbers returns the value of CustomizeNumbers.
func (s *ListCustomizeOutboundCallerNumbersOK) GetCustomizeNumbers() []ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem {
	return s.CustomizeNumbers
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListCustomizeOutboundCallerNumbersOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListCustomizeOutboundCallerNumbersOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListCustomizeOutboundCallerNumbersOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetCustomizeNumbers sets the value of CustomizeNumbers.
func (s *ListCustomizeOutboundCallerNumbersOK) SetCustomizeNumbers(val []ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) {
	s.CustomizeNumbers = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListCustomizeOutboundCallerNumbersOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListCustomizeOutboundCallerNumbersOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListCustomizeOutboundCallerNumbersOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem struct {
	// The customization ID.
	CustomizeID OptString `json:"customize_id"`
	// The ID of the phone number.
	PhoneNumberID OptString `json:"phone_number_id"`
	// The phone number in E164 format.
	PhoneNumber OptString `json:"phone_number"`
	// Name of the phone number.
	DisplayName OptString `json:"display_name"`
	// Whether the incoming policy is enabled for the phone number.
	Incoming OptBool `json:"incoming"`
	// Whether the outgoing policy is enabled for the phone number.
	Outgoing OptBool `json:"outgoing"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension type.
	ExtensionType OptString `json:"extension_type"`
	// The extension number.
	ExtensionNumber OptString `json:"extension_number"`
	// The extension name.
	ExtensionName OptString                                                       `json:"extension_name"`
	Site          OptListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite `json:"site"`
}

// GetCustomizeID returns the value of CustomizeID.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetCustomizeID() OptString {
	return s.CustomizeID
}

// GetPhoneNumberID returns the value of PhoneNumberID.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetPhoneNumberID() OptString {
	return s.PhoneNumberID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetDisplayName returns the value of DisplayName.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetIncoming returns the value of Incoming.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetIncoming() OptBool {
	return s.Incoming
}

// GetOutgoing returns the value of Outgoing.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetOutgoing() OptBool {
	return s.Outgoing
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionType returns the value of ExtensionType.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetExtensionName returns the value of ExtensionName.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetExtensionName() OptString {
	return s.ExtensionName
}

// GetSite returns the value of Site.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetSite() OptListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite {
	return s.Site
}

// SetCustomizeID sets the value of CustomizeID.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetCustomizeID(val OptString) {
	s.CustomizeID = val
}

// SetPhoneNumberID sets the value of PhoneNumberID.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetPhoneNumberID(val OptString) {
	s.PhoneNumberID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetIncoming sets the value of Incoming.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetIncoming(val OptBool) {
	s.Incoming = val
}

// SetOutgoing sets the value of Outgoing.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetOutgoing(val OptBool) {
	s.Outgoing = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetExtensionName sets the value of ExtensionName.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetExtensionName(val OptString) {
	s.ExtensionName = val
}

// SetSite sets the value of Site.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetSite(val OptListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) {
	s.Site = val
}

type ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite struct {
	// The unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
	ID OptString `json:"id"`
	// The name of the site.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) SetName(val OptString) {
	s.Name = val
}

// Device line key setting.
type ListDeviceLineKeySettingOK struct {
	// Device ID.
	DeviceID OptString `json:"device_id"`
	// Device name.
	DeviceName OptString `json:"device_name"`
	// Device line key position.
	Positions []ListDeviceLineKeySettingOKPositionsItem `json:"positions"`
}

// GetDeviceID returns the value of DeviceID.
func (s *ListDeviceLineKeySettingOK) GetDeviceID() OptString {
	return s.DeviceID
}

// GetDeviceName returns the value of DeviceName.
func (s *ListDeviceLineKeySettingOK) GetDeviceName() OptString {
	return s.DeviceName
}

// GetPositions returns the value of Positions.
func (s *ListDeviceLineKeySettingOK) GetPositions() []ListDeviceLineKeySettingOKPositionsItem {
	return s.Positions
}

// SetDeviceID sets the value of DeviceID.
func (s *ListDeviceLineKeySettingOK) SetDeviceID(val OptString) {
	s.DeviceID = val
}

// SetDeviceName sets the value of DeviceName.
func (s *ListDeviceLineKeySettingOK) SetDeviceName(val OptString) {
	s.DeviceName = val
}

// SetPositions sets the value of Positions.
func (s *ListDeviceLineKeySettingOK) SetPositions(val []ListDeviceLineKeySettingOKPositionsItem) {
	s.Positions = val
}

type ListDeviceLineKeySettingOKPositionsItem struct {
	// The order of the device line key.
	Index OptInt `json:"index"`
	// Port owner name.
	OwnerExtensionName OptString `json:"owner_extension_name"`
	// Port owner extension number.
	OwnerExtensionNumber OptInt64 `json:"owner_extension_number"`
	// Extension number of the Zoom Phone used by the `user` or `commonArea`.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// Type of the assignee. Available only if the device is assigned.
	ExtensionType OptString `json:"extension_type"`
	// Extension ID of the `user` or `common area`.
	ExtensionID OptString `json:"extension_id"`
	// Display name of the user or common area.
	DisplayName OptString `json:"display_name"`
	// The phone number in E164 format.
	PhoneNumber OptString `json:"phone_number"`
	// Outbound caller ids.
	OutboundCallerIds []ListDeviceLineKeySettingOKPositionsItemOutboundCallerIdsItem `json:"outbound_caller_ids"`
}

// GetIndex returns the value of Index.
func (s *ListDeviceLineKeySettingOKPositionsItem) GetIndex() OptInt {
	return s.Index
}

// GetOwnerExtensionName returns the value of OwnerExtensionName.
func (s *ListDeviceLineKeySettingOKPositionsItem) GetOwnerExtensionName() OptString {
	return s.OwnerExtensionName
}

// GetOwnerExtensionNumber returns the value of OwnerExtensionNumber.
func (s *ListDeviceLineKeySettingOKPositionsItem) GetOwnerExtensionNumber() OptInt64 {
	return s.OwnerExtensionNumber
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListDeviceLineKeySettingOKPositionsItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *ListDeviceLineKeySettingOKPositionsItem) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListDeviceLineKeySettingOKPositionsItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetDisplayName returns the value of DisplayName.
func (s *ListDeviceLineKeySettingOKPositionsItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *ListDeviceLineKeySettingOKPositionsItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetOutboundCallerIds returns the value of OutboundCallerIds.
func (s *ListDeviceLineKeySettingOKPositionsItem) GetOutboundCallerIds() []ListDeviceLineKeySettingOKPositionsItemOutboundCallerIdsItem {
	return s.OutboundCallerIds
}

// SetIndex sets the value of Index.
func (s *ListDeviceLineKeySettingOKPositionsItem) SetIndex(val OptInt) {
	s.Index = val
}

// SetOwnerExtensionName sets the value of OwnerExtensionName.
func (s *ListDeviceLineKeySettingOKPositionsItem) SetOwnerExtensionName(val OptString) {
	s.OwnerExtensionName = val
}

// SetOwnerExtensionNumber sets the value of OwnerExtensionNumber.
func (s *ListDeviceLineKeySettingOKPositionsItem) SetOwnerExtensionNumber(val OptInt64) {
	s.OwnerExtensionNumber = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListDeviceLineKeySettingOKPositionsItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *ListDeviceLineKeySettingOKPositionsItem) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListDeviceLineKeySettingOKPositionsItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ListDeviceLineKeySettingOKPositionsItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *ListDeviceLineKeySettingOKPositionsItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetOutboundCallerIds sets the value of OutboundCallerIds.
func (s *ListDeviceLineKeySettingOKPositionsItem) SetOutboundCallerIds(val []ListDeviceLineKeySettingOKPositionsItemOutboundCallerIdsItem) {
	s.OutboundCallerIds = val
}

type ListDeviceLineKeySettingOKPositionsItemOutboundCallerIdsItem struct {
	// Extension ID of the `user` or `common area`.
	ExtensionID OptString `json:"extension_id"`
	// The phone number in E164 format.
	PhoneNumber OptString `json:"phone_number"`
	// Phone number usage type.
	UsageType OptString `json:"usage_type"`
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListDeviceLineKeySettingOKPositionsItemOutboundCallerIdsItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *ListDeviceLineKeySettingOKPositionsItemOutboundCallerIdsItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetUsageType returns the value of UsageType.
func (s *ListDeviceLineKeySettingOKPositionsItemOutboundCallerIdsItem) GetUsageType() OptString {
	return s.UsageType
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListDeviceLineKeySettingOKPositionsItemOutboundCallerIdsItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *ListDeviceLineKeySettingOKPositionsItemOutboundCallerIdsItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetUsageType sets the value of UsageType.
func (s *ListDeviceLineKeySettingOKPositionsItemOutboundCallerIdsItem) SetUsageType(val OptString) {
	s.UsageType = val
}

type ListEmergencyAddressesOK struct {
	// Information about emergency addresses.
	EmergencyAddresses []ListEmergencyAddressesOKEmergencyAddressesItem `json:"emergency_addresses"`
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned with a single API call.
	PageSize OptInt `json:"page_size"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
}

// GetEmergencyAddresses returns the value of EmergencyAddresses.
func (s *ListEmergencyAddressesOK) GetEmergencyAddresses() []ListEmergencyAddressesOKEmergencyAddressesItem {
	return s.EmergencyAddresses
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListEmergencyAddressesOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListEmergencyAddressesOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListEmergencyAddressesOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetEmergencyAddresses sets the value of EmergencyAddresses.
func (s *ListEmergencyAddressesOK) SetEmergencyAddresses(val []ListEmergencyAddressesOKEmergencyAddressesItem) {
	s.EmergencyAddresses = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListEmergencyAddressesOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListEmergencyAddressesOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListEmergencyAddressesOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListEmergencyAddressesOKEmergencyAddressesItem struct {
	// The emergency address line 1.
	AddressLine1 OptString `json:"address_line1"`
	// The emergency address line 2.
	AddressLine2 OptString `json:"address_line2"`
	// The emergency address city.
	City OptString `json:"city"`
	// The emergency address country.
	Country OptString `json:"country"`
	// The emergency address ID.
	ID OptString `json:"id"`
	// Indicates whether the emergency address is default or not.
	IsDefault OptBool `json:"is_default"`
	// The emergency address owner level:
	// * `0` - Account/Company-level emergency address.
	// * `1` - User/Personal-level emergency address.
	// * `2` - Unknown company/pending emergency address.
	Level OptInt `json:"level"`
	// The emergency address owner information for a user-level emergency address.
	Owner OptListEmergencyAddressesOKEmergencyAddressesItemOwner `json:"owner"`
	// The emergency address site information.
	Site OptListEmergencyAddressesOKEmergencyAddressesItemSite `json:"site"`
	// The emergency address state code.
	StateCode OptString `json:"state_code"`
	// The emergency address verification status:
	// * `1` &mdash; Verification not required.
	// * `2` &mdash; Unverified.
	// * `3` &mdash; Verification requested.
	// * `4` &mdash; Verified.
	// * `5` &mdash; Rejected.
	// * `6` &mdash; Verification failed.
	Status OptInt `json:"status"`
	// The emergency address zip code.
	Zip OptString `json:"zip"`
}

// GetAddressLine1 returns the value of AddressLine1.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) GetAddressLine1() OptString {
	return s.AddressLine1
}

// GetAddressLine2 returns the value of AddressLine2.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) GetAddressLine2() OptString {
	return s.AddressLine2
}

// GetCity returns the value of City.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) GetCity() OptString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) GetCountry() OptString {
	return s.Country
}

// GetID returns the value of ID.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) GetID() OptString {
	return s.ID
}

// GetIsDefault returns the value of IsDefault.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) GetIsDefault() OptBool {
	return s.IsDefault
}

// GetLevel returns the value of Level.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) GetLevel() OptInt {
	return s.Level
}

// GetOwner returns the value of Owner.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) GetOwner() OptListEmergencyAddressesOKEmergencyAddressesItemOwner {
	return s.Owner
}

// GetSite returns the value of Site.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) GetSite() OptListEmergencyAddressesOKEmergencyAddressesItemSite {
	return s.Site
}

// GetStateCode returns the value of StateCode.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) GetStateCode() OptString {
	return s.StateCode
}

// GetStatus returns the value of Status.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) GetStatus() OptInt {
	return s.Status
}

// GetZip returns the value of Zip.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) GetZip() OptString {
	return s.Zip
}

// SetAddressLine1 sets the value of AddressLine1.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) SetAddressLine1(val OptString) {
	s.AddressLine1 = val
}

// SetAddressLine2 sets the value of AddressLine2.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) SetAddressLine2(val OptString) {
	s.AddressLine2 = val
}

// SetCity sets the value of City.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) SetCity(val OptString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) SetCountry(val OptString) {
	s.Country = val
}

// SetID sets the value of ID.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) SetID(val OptString) {
	s.ID = val
}

// SetIsDefault sets the value of IsDefault.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) SetIsDefault(val OptBool) {
	s.IsDefault = val
}

// SetLevel sets the value of Level.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) SetLevel(val OptInt) {
	s.Level = val
}

// SetOwner sets the value of Owner.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) SetOwner(val OptListEmergencyAddressesOKEmergencyAddressesItemOwner) {
	s.Owner = val
}

// SetSite sets the value of Site.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) SetSite(val OptListEmergencyAddressesOKEmergencyAddressesItemSite) {
	s.Site = val
}

// SetStateCode sets the value of StateCode.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) SetStateCode(val OptString) {
	s.StateCode = val
}

// SetStatus sets the value of Status.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) SetStatus(val OptInt) {
	s.Status = val
}

// SetZip sets the value of Zip.
func (s *ListEmergencyAddressesOKEmergencyAddressesItem) SetZip(val OptString) {
	s.Zip = val
}

// The emergency address owner information for a user-level emergency address.
type ListEmergencyAddressesOKEmergencyAddressesItemOwner struct {
	// The emergency address owner extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The emergency address owner ID.
	ID OptString `json:"id"`
	// The emergency address owner name.
	Name OptString `json:"name"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListEmergencyAddressesOKEmergencyAddressesItemOwner) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *ListEmergencyAddressesOKEmergencyAddressesItemOwner) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListEmergencyAddressesOKEmergencyAddressesItemOwner) GetName() OptString {
	return s.Name
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListEmergencyAddressesOKEmergencyAddressesItemOwner) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *ListEmergencyAddressesOKEmergencyAddressesItemOwner) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListEmergencyAddressesOKEmergencyAddressesItemOwner) SetName(val OptString) {
	s.Name = val
}

// The emergency address site information.
type ListEmergencyAddressesOKEmergencyAddressesItemSite struct {
	// The site's ID.
	ID OptString `json:"id"`
	// The site's name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListEmergencyAddressesOKEmergencyAddressesItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListEmergencyAddressesOKEmergencyAddressesItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListEmergencyAddressesOKEmergencyAddressesItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListEmergencyAddressesOKEmergencyAddressesItemSite) SetName(val OptString) {
	s.Name = val
}

type ListExtensionLevelInboundBlockRulesOK struct {
	// The inbound blocked rules.
	ExtensionBlockedRules []ListExtensionLevelInboundBlockRulesOKExtensionBlockedRulesItem `json:"extension_blocked_rules"`
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The total number of records returned from a single API call.
	PageSize OptInt `json:"page_size"`
}

// GetExtensionBlockedRules returns the value of ExtensionBlockedRules.
func (s *ListExtensionLevelInboundBlockRulesOK) GetExtensionBlockedRules() []ListExtensionLevelInboundBlockRulesOKExtensionBlockedRulesItem {
	return s.ExtensionBlockedRules
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListExtensionLevelInboundBlockRulesOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListExtensionLevelInboundBlockRulesOK) GetPageSize() OptInt {
	return s.PageSize
}

// SetExtensionBlockedRules sets the value of ExtensionBlockedRules.
func (s *ListExtensionLevelInboundBlockRulesOK) SetExtensionBlockedRules(val []ListExtensionLevelInboundBlockRulesOKExtensionBlockedRulesItem) {
	s.ExtensionBlockedRules = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListExtensionLevelInboundBlockRulesOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListExtensionLevelInboundBlockRulesOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

type ListExtensionLevelInboundBlockRulesOKExtensionBlockedRulesItem struct {
	// The unique identifier of the block rule.
	ID OptString `json:"id"`
	// The match type for the block rule:
	// * `phoneNumber`: Indicates that only a specific phone number that is shown in the `blocked_number`
	// field is blocked.
	// * `prefix`: Indicates that all numbers starting with the prefix that is shown in the
	// `blocked_number` field are blocked.
	// * `SMS-shortCodes`:  Indicates that only a specific sms short code that is shown in the
	// `blocked_number` field is blocked.
	MatchType OptString `json:"match_type"`
	// The phone number of the block rule, the value is a combination of the `country` and
	// `prefix_number` values.
	// * when the value of the `match_type` is `phoneNumber`, the value of `phone_number` is displayed in
	// E164 format.
	// * when the value of the `match_type` is `prefix`, the value of `phone_number` is appended with the
	// `country` code.
	PhoneNumber OptString `json:"phone_number"`
	// The block type for the block rule:
	// * block_for_other_reasons
	// * block_as_threat.
	Type OptString `json:"type"`
	// The block rule phone number prefix, SMS short code, or pure phone number without the country code.
	BlockedNumber OptString `json:"blocked_number"`
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	// This field is required when the value is as follows:
	// * `match_type` is `phoneNumber` or `prefix`.
	Country OptString `json:"country"`
}

// GetID returns the value of ID.
func (s *ListExtensionLevelInboundBlockRulesOKExtensionBlockedRulesItem) GetID() OptString {
	return s.ID
}

// GetMatchType returns the value of MatchType.
func (s *ListExtensionLevelInboundBlockRulesOKExtensionBlockedRulesItem) GetMatchType() OptString {
	return s.MatchType
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *ListExtensionLevelInboundBlockRulesOKExtensionBlockedRulesItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetType returns the value of Type.
func (s *ListExtensionLevelInboundBlockRulesOKExtensionBlockedRulesItem) GetType() OptString {
	return s.Type
}

// GetBlockedNumber returns the value of BlockedNumber.
func (s *ListExtensionLevelInboundBlockRulesOKExtensionBlockedRulesItem) GetBlockedNumber() OptString {
	return s.BlockedNumber
}

// GetCountry returns the value of Country.
func (s *ListExtensionLevelInboundBlockRulesOKExtensionBlockedRulesItem) GetCountry() OptString {
	return s.Country
}

// SetID sets the value of ID.
func (s *ListExtensionLevelInboundBlockRulesOKExtensionBlockedRulesItem) SetID(val OptString) {
	s.ID = val
}

// SetMatchType sets the value of MatchType.
func (s *ListExtensionLevelInboundBlockRulesOKExtensionBlockedRulesItem) SetMatchType(val OptString) {
	s.MatchType = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *ListExtensionLevelInboundBlockRulesOKExtensionBlockedRulesItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetType sets the value of Type.
func (s *ListExtensionLevelInboundBlockRulesOKExtensionBlockedRulesItem) SetType(val OptString) {
	s.Type = val
}

// SetBlockedNumber sets the value of BlockedNumber.
func (s *ListExtensionLevelInboundBlockRulesOKExtensionBlockedRulesItem) SetBlockedNumber(val OptString) {
	s.BlockedNumber = val
}

// SetCountry sets the value of Country.
func (s *ListExtensionLevelInboundBlockRulesOKExtensionBlockedRulesItem) SetCountry(val OptString) {
	s.Country = val
}

type ListExternalContactsOK struct {
	// External contacts information.
	ExternalContacts []ListExternalContactsOKExternalContactsItem `json:"external_contacts"`
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned with a single API call.
	PageSize OptInt `json:"page_size"`
}

// GetExternalContacts returns the value of ExternalContacts.
func (s *ListExternalContactsOK) GetExternalContacts() []ListExternalContactsOKExternalContactsItem {
	return s.ExternalContacts
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListExternalContactsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListExternalContactsOK) GetPageSize() OptInt {
	return s.PageSize
}

// SetExternalContacts sets the value of ExternalContacts.
func (s *ListExternalContactsOK) SetExternalContacts(val []ListExternalContactsOKExternalContactsItem) {
	s.ExternalContacts = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListExternalContactsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListExternalContactsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

type ListExternalContactsOKExternalContactsItem struct {
	// The external contact's description.
	Description OptString `json:"description"`
	// The external contact's email address.
	Email OptString `json:"email"`
	// The external contact's extension number.
	ExtensionNumber OptString `json:"extension_number"`
	// Zoom-generated external contact ID.
	ExternalContactID OptString `json:"external_contact_id"`
	// Customer-configured external contact ID.
	ID OptString `json:"id"`
	// The external contact's username or extension display name.
	Name OptString `json:"name"`
	// The external contact's phone numbers.
	PhoneNumbers []string `json:"phone_numbers"`
	// Whether to allow the automatic call recording.
	AutoCallRecorded OptBool `json:"auto_call_recorded"`
}

// GetDescription returns the value of Description.
func (s *ListExternalContactsOKExternalContactsItem) GetDescription() OptString {
	return s.Description
}

// GetEmail returns the value of Email.
func (s *ListExternalContactsOKExternalContactsItem) GetEmail() OptString {
	return s.Email
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListExternalContactsOKExternalContactsItem) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetExternalContactID returns the value of ExternalContactID.
func (s *ListExternalContactsOKExternalContactsItem) GetExternalContactID() OptString {
	return s.ExternalContactID
}

// GetID returns the value of ID.
func (s *ListExternalContactsOKExternalContactsItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListExternalContactsOKExternalContactsItem) GetName() OptString {
	return s.Name
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *ListExternalContactsOKExternalContactsItem) GetPhoneNumbers() []string {
	return s.PhoneNumbers
}

// GetAutoCallRecorded returns the value of AutoCallRecorded.
func (s *ListExternalContactsOKExternalContactsItem) GetAutoCallRecorded() OptBool {
	return s.AutoCallRecorded
}

// SetDescription sets the value of Description.
func (s *ListExternalContactsOKExternalContactsItem) SetDescription(val OptString) {
	s.Description = val
}

// SetEmail sets the value of Email.
func (s *ListExternalContactsOKExternalContactsItem) SetEmail(val OptString) {
	s.Email = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListExternalContactsOKExternalContactsItem) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetExternalContactID sets the value of ExternalContactID.
func (s *ListExternalContactsOKExternalContactsItem) SetExternalContactID(val OptString) {
	s.ExternalContactID = val
}

// SetID sets the value of ID.
func (s *ListExternalContactsOKExternalContactsItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListExternalContactsOKExternalContactsItem) SetName(val OptString) {
	s.Name = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *ListExternalContactsOKExternalContactsItem) SetPhoneNumbers(val []string) {
	s.PhoneNumbers = val
}

// SetAutoCallRecorded sets the value of AutoCallRecorded.
func (s *ListExternalContactsOKExternalContactsItem) SetAutoCallRecorded(val OptBool) {
	s.AutoCallRecorded = val
}

type ListFirmwareRulesOK struct {
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of the available result list exceeds the page size.
	NextPageToken OptString `json:"next_page_token"`
	// The size of the page.
	PageSize OptInt `json:"page_size"`
	// Firmware update rules list.
	Rules []ListFirmwareRulesOKRulesItem `json:"rules"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListFirmwareRulesOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListFirmwareRulesOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetRules returns the value of Rules.
func (s *ListFirmwareRulesOK) GetRules() []ListFirmwareRulesOKRulesItem {
	return s.Rules
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListFirmwareRulesOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListFirmwareRulesOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetRules sets the value of Rules.
func (s *ListFirmwareRulesOK) SetRules(val []ListFirmwareRulesOKRulesItem) {
	s.Rules = val
}

type ListFirmwareRulesOKRulesItem struct {
	// Unique identifier of the firmware update rule.
	RuleID OptString `json:"rule_id"`
	// Firmware version.
	Version OptString `json:"version"`
	// Device type.
	DeviceType OptString `json:"device_type"`
	// Device model name.
	DeviceModel OptString `json:"device_model"`
}

// GetRuleID returns the value of RuleID.
func (s *ListFirmwareRulesOKRulesItem) GetRuleID() OptString {
	return s.RuleID
}

// GetVersion returns the value of Version.
func (s *ListFirmwareRulesOKRulesItem) GetVersion() OptString {
	return s.Version
}

// GetDeviceType returns the value of DeviceType.
func (s *ListFirmwareRulesOKRulesItem) GetDeviceType() OptString {
	return s.DeviceType
}

// GetDeviceModel returns the value of DeviceModel.
func (s *ListFirmwareRulesOKRulesItem) GetDeviceModel() OptString {
	return s.DeviceModel
}

// SetRuleID sets the value of RuleID.
func (s *ListFirmwareRulesOKRulesItem) SetRuleID(val OptString) {
	s.RuleID = val
}

// SetVersion sets the value of Version.
func (s *ListFirmwareRulesOKRulesItem) SetVersion(val OptString) {
	s.Version = val
}

// SetDeviceType sets the value of DeviceType.
func (s *ListFirmwareRulesOKRulesItem) SetDeviceType(val OptString) {
	s.DeviceType = val
}

// SetDeviceModel sets the value of DeviceModel.
func (s *ListFirmwareRulesOKRulesItem) SetDeviceModel(val OptString) {
	s.DeviceModel = val
}

type ListFirmwaresOK struct {
	// Firmwares list.
	Firmwares []ListFirmwaresOKFirmwaresItem `json:"firmwares"`
}

// GetFirmwares returns the value of Firmwares.
func (s *ListFirmwaresOK) GetFirmwares() []ListFirmwaresOKFirmwaresItem {
	return s.Firmwares
}

// SetFirmwares sets the value of Firmwares.
func (s *ListFirmwaresOK) SetFirmwares(val []ListFirmwaresOKFirmwaresItem) {
	s.Firmwares = val
}

type ListFirmwaresOKFirmwaresItem struct {
	// Device type.
	DeviceType OptString `json:"device_type"`
	// Device model name.
	DeviceModel OptString `json:"device_model"`
	// Firmware versions.
	Versions []ListFirmwaresOKFirmwaresItemVersionsItem `json:"versions"`
}

// GetDeviceType returns the value of DeviceType.
func (s *ListFirmwaresOKFirmwaresItem) GetDeviceType() OptString {
	return s.DeviceType
}

// GetDeviceModel returns the value of DeviceModel.
func (s *ListFirmwaresOKFirmwaresItem) GetDeviceModel() OptString {
	return s.DeviceModel
}

// GetVersions returns the value of Versions.
func (s *ListFirmwaresOKFirmwaresItem) GetVersions() []ListFirmwaresOKFirmwaresItemVersionsItem {
	return s.Versions
}

// SetDeviceType sets the value of DeviceType.
func (s *ListFirmwaresOKFirmwaresItem) SetDeviceType(val OptString) {
	s.DeviceType = val
}

// SetDeviceModel sets the value of DeviceModel.
func (s *ListFirmwaresOKFirmwaresItem) SetDeviceModel(val OptString) {
	s.DeviceModel = val
}

// SetVersions sets the value of Versions.
func (s *ListFirmwaresOKFirmwaresItem) SetVersions(val []ListFirmwaresOKFirmwaresItemVersionsItem) {
	s.Versions = val
}

type ListFirmwaresOKFirmwaresItemVersionsItem struct {
	// Firmware version.
	Version OptString `json:"version"`
	// The update log.
	UpdateLog OptString `json:"update_log"`
	// Expire time.
	ExpireTime OptString `json:"expire_time"`
	// Version status:
	// * `1` &mdash; Available.
	// * `2` &mdash; Unavailable.
	// * `3` &mdash; Sunset.
	Status OptInt `json:"status"`
}

// GetVersion returns the value of Version.
func (s *ListFirmwaresOKFirmwaresItemVersionsItem) GetVersion() OptString {
	return s.Version
}

// GetUpdateLog returns the value of UpdateLog.
func (s *ListFirmwaresOKFirmwaresItemVersionsItem) GetUpdateLog() OptString {
	return s.UpdateLog
}

// GetExpireTime returns the value of ExpireTime.
func (s *ListFirmwaresOKFirmwaresItemVersionsItem) GetExpireTime() OptString {
	return s.ExpireTime
}

// GetStatus returns the value of Status.
func (s *ListFirmwaresOKFirmwaresItemVersionsItem) GetStatus() OptInt {
	return s.Status
}

// SetVersion sets the value of Version.
func (s *ListFirmwaresOKFirmwaresItemVersionsItem) SetVersion(val OptString) {
	s.Version = val
}

// SetUpdateLog sets the value of UpdateLog.
func (s *ListFirmwaresOKFirmwaresItemVersionsItem) SetUpdateLog(val OptString) {
	s.UpdateLog = val
}

// SetExpireTime sets the value of ExpireTime.
func (s *ListFirmwaresOKFirmwaresItemVersionsItem) SetExpireTime(val OptString) {
	s.ExpireTime = val
}

// SetStatus sets the value of Status.
func (s *ListFirmwaresOKFirmwaresItemVersionsItem) SetStatus(val OptInt) {
	s.Status = val
}

type ListGCPMembersOK struct {
	GroupCallPickupMember []ListGCPMembersOKGroupCallPickupMemberItem `json:"group_call_pickup_member"`
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single API call for each page.
	PageSize OptInt `json:"page_size"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
}

// GetGroupCallPickupMember returns the value of GroupCallPickupMember.
func (s *ListGCPMembersOK) GetGroupCallPickupMember() []ListGCPMembersOKGroupCallPickupMemberItem {
	return s.GroupCallPickupMember
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListGCPMembersOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListGCPMembersOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListGCPMembersOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetGroupCallPickupMember sets the value of GroupCallPickupMember.
func (s *ListGCPMembersOK) SetGroupCallPickupMember(val []ListGCPMembersOKGroupCallPickupMemberItem) {
	s.GroupCallPickupMember = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListGCPMembersOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListGCPMembersOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListGCPMembersOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListGCPMembersOKGroupCallPickupMemberItem struct {
	// ID of the user to whom the group belongs.
	ID OptString `json:"id"`
	// Name of the user.
	DisplayName OptString `json:"display_name"`
	// Extension ID.
	ExtensionID OptString `json:"extension_id"`
	// Type of the assignee.
	ExtensionType OptString `json:"extension_type"`
	// Zoom Phone extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
}

// GetID returns the value of ID.
func (s *ListGCPMembersOKGroupCallPickupMemberItem) GetID() OptString {
	return s.ID
}

// GetDisplayName returns the value of DisplayName.
func (s *ListGCPMembersOKGroupCallPickupMemberItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListGCPMembersOKGroupCallPickupMemberItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionType returns the value of ExtensionType.
func (s *ListGCPMembersOKGroupCallPickupMemberItem) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListGCPMembersOKGroupCallPickupMemberItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// SetID sets the value of ID.
func (s *ListGCPMembersOKGroupCallPickupMemberItem) SetID(val OptString) {
	s.ID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ListGCPMembersOKGroupCallPickupMemberItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListGCPMembersOKGroupCallPickupMemberItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *ListGCPMembersOKGroupCallPickupMemberItem) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListGCPMembersOKGroupCallPickupMemberItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

type ListGCPOK struct {
	GroupCallPickup []ListGCPOKGroupCallPickupItem `json:"group_call_pickup"`
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single API call for each page.
	PageSize OptInt `json:"page_size"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
}

// GetGroupCallPickup returns the value of GroupCallPickup.
func (s *ListGCPOK) GetGroupCallPickup() []ListGCPOKGroupCallPickupItem {
	return s.GroupCallPickup
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListGCPOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListGCPOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListGCPOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetGroupCallPickup sets the value of GroupCallPickup.
func (s *ListGCPOK) SetGroupCallPickup(val []ListGCPOKGroupCallPickupItem) {
	s.GroupCallPickup = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListGCPOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListGCPOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListGCPOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListGCPOKGroupCallPickupItem struct {
	// ID of the group.
	ID OptString `json:"id"`
	// Name of the group.
	DisplayName OptString `json:"display_name"`
	// Extension ID.
	ExtensionID OptString `json:"extension_id"`
	// Extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// Member count of the group.
	MemberCount OptInt `json:"member_count"`
	// Group call pickup  description.
	Description OptString `json:"description"`
	// Determines after how much time (in seconds) the group should be notified: default is `0` second.
	Delay OptInt `json:"delay"`
	// Cost center name.
	CostCenter OptString `json:"cost_center"`
	// Department name.
	Department OptString                           `json:"department"`
	Site       OptListGCPOKGroupCallPickupItemSite `json:"site"`
	// Whether the ringtone is on.
	DirectedCallPickup OptBool `json:"directed_call_pickup"`
}

// GetID returns the value of ID.
func (s *ListGCPOKGroupCallPickupItem) GetID() OptString {
	return s.ID
}

// GetDisplayName returns the value of DisplayName.
func (s *ListGCPOKGroupCallPickupItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListGCPOKGroupCallPickupItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListGCPOKGroupCallPickupItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetMemberCount returns the value of MemberCount.
func (s *ListGCPOKGroupCallPickupItem) GetMemberCount() OptInt {
	return s.MemberCount
}

// GetDescription returns the value of Description.
func (s *ListGCPOKGroupCallPickupItem) GetDescription() OptString {
	return s.Description
}

// GetDelay returns the value of Delay.
func (s *ListGCPOKGroupCallPickupItem) GetDelay() OptInt {
	return s.Delay
}

// GetCostCenter returns the value of CostCenter.
func (s *ListGCPOKGroupCallPickupItem) GetCostCenter() OptString {
	return s.CostCenter
}

// GetDepartment returns the value of Department.
func (s *ListGCPOKGroupCallPickupItem) GetDepartment() OptString {
	return s.Department
}

// GetSite returns the value of Site.
func (s *ListGCPOKGroupCallPickupItem) GetSite() OptListGCPOKGroupCallPickupItemSite {
	return s.Site
}

// GetDirectedCallPickup returns the value of DirectedCallPickup.
func (s *ListGCPOKGroupCallPickupItem) GetDirectedCallPickup() OptBool {
	return s.DirectedCallPickup
}

// SetID sets the value of ID.
func (s *ListGCPOKGroupCallPickupItem) SetID(val OptString) {
	s.ID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ListGCPOKGroupCallPickupItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListGCPOKGroupCallPickupItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListGCPOKGroupCallPickupItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetMemberCount sets the value of MemberCount.
func (s *ListGCPOKGroupCallPickupItem) SetMemberCount(val OptInt) {
	s.MemberCount = val
}

// SetDescription sets the value of Description.
func (s *ListGCPOKGroupCallPickupItem) SetDescription(val OptString) {
	s.Description = val
}

// SetDelay sets the value of Delay.
func (s *ListGCPOKGroupCallPickupItem) SetDelay(val OptInt) {
	s.Delay = val
}

// SetCostCenter sets the value of CostCenter.
func (s *ListGCPOKGroupCallPickupItem) SetCostCenter(val OptString) {
	s.CostCenter = val
}

// SetDepartment sets the value of Department.
func (s *ListGCPOKGroupCallPickupItem) SetDepartment(val OptString) {
	s.Department = val
}

// SetSite sets the value of Site.
func (s *ListGCPOKGroupCallPickupItem) SetSite(val OptListGCPOKGroupCallPickupItemSite) {
	s.Site = val
}

// SetDirectedCallPickup sets the value of DirectedCallPickup.
func (s *ListGCPOKGroupCallPickupItem) SetDirectedCallPickup(val OptBool) {
	s.DirectedCallPickup = val
}

type ListGCPOKGroupCallPickupItemSite struct {
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
	ID OptString `json:"id"`
	// Name of the site.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListGCPOKGroupCallPickupItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListGCPOKGroupCallPickupItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListGCPOKGroupCallPickupItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListGCPOKGroupCallPickupItemSite) SetName(val OptString) {
	s.Name = val
}

// The line key setting.
type ListLineKeySettingOK struct {
	// The line key position.
	LineKeys []ListLineKeySettingOKLineKeysItem `json:"line_keys"`
}

// GetLineKeys returns the value of LineKeys.
func (s *ListLineKeySettingOK) GetLineKeys() []ListLineKeySettingOKLineKeysItem {
	return s.LineKeys
}

// SetLineKeys sets the value of LineKeys.
func (s *ListLineKeySettingOK) SetLineKeys(val []ListLineKeySettingOKLineKeysItem) {
	s.LineKeys = val
}

type ListLineKeySettingOKLineKeysItem struct {
	// The user-defined display name for each line key of the device. The alias can be up to 32
	// characters in length.
	Alias OptString `json:"alias"`
	// The order of the line key on the phone.
	Index OptInt `json:"index"`
	// The line key assignment information.
	KeyAssignment OptListLineKeySettingOKLineKeysItemKeyAssignment `json:"key_assignment"`
	// The line key ID.
	LineKeyID OptString `json:"line_key_id"`
	// The outbound caller number for the line.
	OutboundCallerID OptString `json:"outbound_caller_id"`
	// The line key type.
	// `line`: Line/Shared line access/ Shared line group.
	// `blf`: Busy lamp field.
	// `speed_dial`: Speed-dial a phone number.
	// `zoom_meeting`: Desk phone companion mode.
	// `call_park`: Call park. Users don't need to dial the retrieval codes with this setting.
	// `group_call_pickup`: Pick up inbound calls for call pickup groups.
	Type OptString `json:"type"`
}

// GetAlias returns the value of Alias.
func (s *ListLineKeySettingOKLineKeysItem) GetAlias() OptString {
	return s.Alias
}

// GetIndex returns the value of Index.
func (s *ListLineKeySettingOKLineKeysItem) GetIndex() OptInt {
	return s.Index
}

// GetKeyAssignment returns the value of KeyAssignment.
func (s *ListLineKeySettingOKLineKeysItem) GetKeyAssignment() OptListLineKeySettingOKLineKeysItemKeyAssignment {
	return s.KeyAssignment
}

// GetLineKeyID returns the value of LineKeyID.
func (s *ListLineKeySettingOKLineKeysItem) GetLineKeyID() OptString {
	return s.LineKeyID
}

// GetOutboundCallerID returns the value of OutboundCallerID.
func (s *ListLineKeySettingOKLineKeysItem) GetOutboundCallerID() OptString {
	return s.OutboundCallerID
}

// GetType returns the value of Type.
func (s *ListLineKeySettingOKLineKeysItem) GetType() OptString {
	return s.Type
}

// SetAlias sets the value of Alias.
func (s *ListLineKeySettingOKLineKeysItem) SetAlias(val OptString) {
	s.Alias = val
}

// SetIndex sets the value of Index.
func (s *ListLineKeySettingOKLineKeysItem) SetIndex(val OptInt) {
	s.Index = val
}

// SetKeyAssignment sets the value of KeyAssignment.
func (s *ListLineKeySettingOKLineKeysItem) SetKeyAssignment(val OptListLineKeySettingOKLineKeysItemKeyAssignment) {
	s.KeyAssignment = val
}

// SetLineKeyID sets the value of LineKeyID.
func (s *ListLineKeySettingOKLineKeysItem) SetLineKeyID(val OptString) {
	s.LineKeyID = val
}

// SetOutboundCallerID sets the value of OutboundCallerID.
func (s *ListLineKeySettingOKLineKeysItem) SetOutboundCallerID(val OptString) {
	s.OutboundCallerID = val
}

// SetType sets the value of Type.
func (s *ListLineKeySettingOKLineKeysItem) SetType(val OptString) {
	s.Type = val
}

// The line key assignment information.
type ListLineKeySettingOKLineKeysItemKeyAssignment struct {
	// The display name of the line assigned to the line key.
	DisplayName OptString `json:"display_name"`
	// The extension ID of the line assigned to the line key.
	ExtensionID OptString `json:"extension_id"`
	// The extension number of the line assigned to the line key.
	ExtensionNumber OptString `json:"extension_number"`
	// The phone number of the line assigned to the line key.
	PhoneNumber OptString `json:"phone_number"`
	// The call park retrieval code for `call_park` line key type.
	RetrievalCode OptString `json:"retrieval_code"`
	// The speed dial number used for `speed_dial_number` line key type.
	SpeedDialNumber OptString `json:"speed_dial_number"`
}

// GetDisplayName returns the value of DisplayName.
func (s *ListLineKeySettingOKLineKeysItemKeyAssignment) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListLineKeySettingOKLineKeysItemKeyAssignment) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListLineKeySettingOKLineKeysItemKeyAssignment) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *ListLineKeySettingOKLineKeysItemKeyAssignment) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetRetrievalCode returns the value of RetrievalCode.
func (s *ListLineKeySettingOKLineKeysItemKeyAssignment) GetRetrievalCode() OptString {
	return s.RetrievalCode
}

// GetSpeedDialNumber returns the value of SpeedDialNumber.
func (s *ListLineKeySettingOKLineKeysItemKeyAssignment) GetSpeedDialNumber() OptString {
	return s.SpeedDialNumber
}

// SetDisplayName sets the value of DisplayName.
func (s *ListLineKeySettingOKLineKeysItemKeyAssignment) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListLineKeySettingOKLineKeysItemKeyAssignment) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListLineKeySettingOKLineKeysItemKeyAssignment) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *ListLineKeySettingOKLineKeysItemKeyAssignment) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetRetrievalCode sets the value of RetrievalCode.
func (s *ListLineKeySettingOKLineKeysItemKeyAssignment) SetRetrievalCode(val OptString) {
	s.RetrievalCode = val
}

// SetSpeedDialNumber sets the value of SpeedDialNumber.
func (s *ListLineKeySettingOKLineKeysItemKeyAssignment) SetSpeedDialNumber(val OptString) {
	s.SpeedDialNumber = val
}

type ListLocationsOK struct {
	// The information about emergency service locations.
	Locations []ListLocationsOKLocationsItem `json:"locations"`
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned with a single API call.
	PageSize OptInt `json:"page_size"`
}

// GetLocations returns the value of Locations.
func (s *ListLocationsOK) GetLocations() []ListLocationsOKLocationsItem {
	return s.Locations
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListLocationsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListLocationsOK) GetPageSize() OptInt {
	return s.PageSize
}

// SetLocations sets the value of Locations.
func (s *ListLocationsOK) SetLocations(val []ListLocationsOKLocationsItem) {
	s.Locations = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListLocationsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListLocationsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

type ListLocationsOKLocationsItem struct {
	// The emergency service location's BSSID (Basic Service Set Identifier).
	Bssid OptString `json:"bssid"`
	// The emergency service location's ELIN (Emergency Location Identification Number).
	Elin OptListLocationsOKLocationsItemElin `json:"elin"`
	// The emergency service location's ID.
	ID OptString `json:"id"`
	// The emergency service location's unique ID.
	Identifier OptString `json:"identifier"`
	// The emergency service location's name.
	Name            OptString                                         `json:"name"`
	NetworkSwitches []ListLocationsOKLocationsItemNetworkSwitchesItem `json:"network_switches"`
	// The parent location's ID.
	ParentLocationID OptString `json:"parent_location_id"`
	// The emergency service location's subnet or private IP address.
	PrivateIP OptString `json:"private_ip"`
	// The emergency service location's public IP address.
	PublicIP OptString `json:"public_ip"`
	// The emergency service location's SIP group information.
	SipGroup OptListLocationsOKLocationsItemSipGroup `json:"sip_group"`
	// The emergency service location's site information.
	Site             OptListLocationsOKLocationsItemSite             `json:"site"`
	EmergencyAddress OptListLocationsOKLocationsItemEmergencyAddress `json:"emergency_address"`
	// If true, it requires a user's location match on both public and private IP address, or BSSID, or
	// network switch; detecting only a public IP address is not enough to detect the location.
	MinimumMatchCriteria OptBool `json:"minimum_match_criteria"`
}

// GetBssid returns the value of Bssid.
func (s *ListLocationsOKLocationsItem) GetBssid() OptString {
	return s.Bssid
}

// GetElin returns the value of Elin.
func (s *ListLocationsOKLocationsItem) GetElin() OptListLocationsOKLocationsItemElin {
	return s.Elin
}

// GetID returns the value of ID.
func (s *ListLocationsOKLocationsItem) GetID() OptString {
	return s.ID
}

// GetIdentifier returns the value of Identifier.
func (s *ListLocationsOKLocationsItem) GetIdentifier() OptString {
	return s.Identifier
}

// GetName returns the value of Name.
func (s *ListLocationsOKLocationsItem) GetName() OptString {
	return s.Name
}

// GetNetworkSwitches returns the value of NetworkSwitches.
func (s *ListLocationsOKLocationsItem) GetNetworkSwitches() []ListLocationsOKLocationsItemNetworkSwitchesItem {
	return s.NetworkSwitches
}

// GetParentLocationID returns the value of ParentLocationID.
func (s *ListLocationsOKLocationsItem) GetParentLocationID() OptString {
	return s.ParentLocationID
}

// GetPrivateIP returns the value of PrivateIP.
func (s *ListLocationsOKLocationsItem) GetPrivateIP() OptString {
	return s.PrivateIP
}

// GetPublicIP returns the value of PublicIP.
func (s *ListLocationsOKLocationsItem) GetPublicIP() OptString {
	return s.PublicIP
}

// GetSipGroup returns the value of SipGroup.
func (s *ListLocationsOKLocationsItem) GetSipGroup() OptListLocationsOKLocationsItemSipGroup {
	return s.SipGroup
}

// GetSite returns the value of Site.
func (s *ListLocationsOKLocationsItem) GetSite() OptListLocationsOKLocationsItemSite {
	return s.Site
}

// GetEmergencyAddress returns the value of EmergencyAddress.
func (s *ListLocationsOKLocationsItem) GetEmergencyAddress() OptListLocationsOKLocationsItemEmergencyAddress {
	return s.EmergencyAddress
}

// GetMinimumMatchCriteria returns the value of MinimumMatchCriteria.
func (s *ListLocationsOKLocationsItem) GetMinimumMatchCriteria() OptBool {
	return s.MinimumMatchCriteria
}

// SetBssid sets the value of Bssid.
func (s *ListLocationsOKLocationsItem) SetBssid(val OptString) {
	s.Bssid = val
}

// SetElin sets the value of Elin.
func (s *ListLocationsOKLocationsItem) SetElin(val OptListLocationsOKLocationsItemElin) {
	s.Elin = val
}

// SetID sets the value of ID.
func (s *ListLocationsOKLocationsItem) SetID(val OptString) {
	s.ID = val
}

// SetIdentifier sets the value of Identifier.
func (s *ListLocationsOKLocationsItem) SetIdentifier(val OptString) {
	s.Identifier = val
}

// SetName sets the value of Name.
func (s *ListLocationsOKLocationsItem) SetName(val OptString) {
	s.Name = val
}

// SetNetworkSwitches sets the value of NetworkSwitches.
func (s *ListLocationsOKLocationsItem) SetNetworkSwitches(val []ListLocationsOKLocationsItemNetworkSwitchesItem) {
	s.NetworkSwitches = val
}

// SetParentLocationID sets the value of ParentLocationID.
func (s *ListLocationsOKLocationsItem) SetParentLocationID(val OptString) {
	s.ParentLocationID = val
}

// SetPrivateIP sets the value of PrivateIP.
func (s *ListLocationsOKLocationsItem) SetPrivateIP(val OptString) {
	s.PrivateIP = val
}

// SetPublicIP sets the value of PublicIP.
func (s *ListLocationsOKLocationsItem) SetPublicIP(val OptString) {
	s.PublicIP = val
}

// SetSipGroup sets the value of SipGroup.
func (s *ListLocationsOKLocationsItem) SetSipGroup(val OptListLocationsOKLocationsItemSipGroup) {
	s.SipGroup = val
}

// SetSite sets the value of Site.
func (s *ListLocationsOKLocationsItem) SetSite(val OptListLocationsOKLocationsItemSite) {
	s.Site = val
}

// SetEmergencyAddress sets the value of EmergencyAddress.
func (s *ListLocationsOKLocationsItem) SetEmergencyAddress(val OptListLocationsOKLocationsItemEmergencyAddress) {
	s.EmergencyAddress = val
}

// SetMinimumMatchCriteria sets the value of MinimumMatchCriteria.
func (s *ListLocationsOKLocationsItem) SetMinimumMatchCriteria(val OptBool) {
	s.MinimumMatchCriteria = val
}

// The emergency service location's ELIN (Emergency Location Identification Number).
type ListLocationsOKLocationsItemElin struct {
	// The emergency service location's phone number.
	PhoneNumber OptString `json:"phone_number"`
	// The emergency service location's phone number ID.
	PhoneNumberID OptString `json:"phone_number_id"`
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *ListLocationsOKLocationsItemElin) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetPhoneNumberID returns the value of PhoneNumberID.
func (s *ListLocationsOKLocationsItemElin) GetPhoneNumberID() OptString {
	return s.PhoneNumberID
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *ListLocationsOKLocationsItemElin) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetPhoneNumberID sets the value of PhoneNumberID.
func (s *ListLocationsOKLocationsItemElin) SetPhoneNumberID(val OptString) {
	s.PhoneNumberID = val
}

type ListLocationsOKLocationsItemEmergencyAddress struct {
	// The location's physical address.
	AddressLine1 OptString `json:"address_line1"`
	// The location's optional physical address information. For example, a suite number.
	AddressLine2 OptString `json:"address_line2"`
	// The location's city.
	City OptString `json:"city"`
	// The location's State/Province/Territory.
	StateCode OptString `json:"state_code"`
	// The location's country.
	Country OptString `json:"country"`
	// The location's ZIP or postal code.
	Zip OptString `json:"zip"`
	// The location's VAT/NIF/CIF number. This number is used to get a new phone number online.
	// **Note:** For Belgium, Netherlands, Portugal, Spain, and Switzerland, this field is required.
	VatNumber OptString `json:"vat_number"`
}

// GetAddressLine1 returns the value of AddressLine1.
func (s *ListLocationsOKLocationsItemEmergencyAddress) GetAddressLine1() OptString {
	return s.AddressLine1
}

// GetAddressLine2 returns the value of AddressLine2.
func (s *ListLocationsOKLocationsItemEmergencyAddress) GetAddressLine2() OptString {
	return s.AddressLine2
}

// GetCity returns the value of City.
func (s *ListLocationsOKLocationsItemEmergencyAddress) GetCity() OptString {
	return s.City
}

// GetStateCode returns the value of StateCode.
func (s *ListLocationsOKLocationsItemEmergencyAddress) GetStateCode() OptString {
	return s.StateCode
}

// GetCountry returns the value of Country.
func (s *ListLocationsOKLocationsItemEmergencyAddress) GetCountry() OptString {
	return s.Country
}

// GetZip returns the value of Zip.
func (s *ListLocationsOKLocationsItemEmergencyAddress) GetZip() OptString {
	return s.Zip
}

// GetVatNumber returns the value of VatNumber.
func (s *ListLocationsOKLocationsItemEmergencyAddress) GetVatNumber() OptString {
	return s.VatNumber
}

// SetAddressLine1 sets the value of AddressLine1.
func (s *ListLocationsOKLocationsItemEmergencyAddress) SetAddressLine1(val OptString) {
	s.AddressLine1 = val
}

// SetAddressLine2 sets the value of AddressLine2.
func (s *ListLocationsOKLocationsItemEmergencyAddress) SetAddressLine2(val OptString) {
	s.AddressLine2 = val
}

// SetCity sets the value of City.
func (s *ListLocationsOKLocationsItemEmergencyAddress) SetCity(val OptString) {
	s.City = val
}

// SetStateCode sets the value of StateCode.
func (s *ListLocationsOKLocationsItemEmergencyAddress) SetStateCode(val OptString) {
	s.StateCode = val
}

// SetCountry sets the value of Country.
func (s *ListLocationsOKLocationsItemEmergencyAddress) SetCountry(val OptString) {
	s.Country = val
}

// SetZip sets the value of Zip.
func (s *ListLocationsOKLocationsItemEmergencyAddress) SetZip(val OptString) {
	s.Zip = val
}

// SetVatNumber sets the value of VatNumber.
func (s *ListLocationsOKLocationsItemEmergencyAddress) SetVatNumber(val OptString) {
	s.VatNumber = val
}

type ListLocationsOKLocationsItemNetworkSwitchesItem struct {
	// The MAC address.
	MACAddress OptString `json:"mac_address"`
	// The port's label.
	Port OptString `json:"port"`
	// The port's prefix.
	PortPrefix OptString `json:"port_prefix"`
	// The port's range from value.
	PortRangeFrom OptString `json:"port_range_from"`
	// The port's range to value.
	PortRangeTo OptString `json:"port_range_to"`
}

// GetMACAddress returns the value of MACAddress.
func (s *ListLocationsOKLocationsItemNetworkSwitchesItem) GetMACAddress() OptString {
	return s.MACAddress
}

// GetPort returns the value of Port.
func (s *ListLocationsOKLocationsItemNetworkSwitchesItem) GetPort() OptString {
	return s.Port
}

// GetPortPrefix returns the value of PortPrefix.
func (s *ListLocationsOKLocationsItemNetworkSwitchesItem) GetPortPrefix() OptString {
	return s.PortPrefix
}

// GetPortRangeFrom returns the value of PortRangeFrom.
func (s *ListLocationsOKLocationsItemNetworkSwitchesItem) GetPortRangeFrom() OptString {
	return s.PortRangeFrom
}

// GetPortRangeTo returns the value of PortRangeTo.
func (s *ListLocationsOKLocationsItemNetworkSwitchesItem) GetPortRangeTo() OptString {
	return s.PortRangeTo
}

// SetMACAddress sets the value of MACAddress.
func (s *ListLocationsOKLocationsItemNetworkSwitchesItem) SetMACAddress(val OptString) {
	s.MACAddress = val
}

// SetPort sets the value of Port.
func (s *ListLocationsOKLocationsItemNetworkSwitchesItem) SetPort(val OptString) {
	s.Port = val
}

// SetPortPrefix sets the value of PortPrefix.
func (s *ListLocationsOKLocationsItemNetworkSwitchesItem) SetPortPrefix(val OptString) {
	s.PortPrefix = val
}

// SetPortRangeFrom sets the value of PortRangeFrom.
func (s *ListLocationsOKLocationsItemNetworkSwitchesItem) SetPortRangeFrom(val OptString) {
	s.PortRangeFrom = val
}

// SetPortRangeTo sets the value of PortRangeTo.
func (s *ListLocationsOKLocationsItemNetworkSwitchesItem) SetPortRangeTo(val OptString) {
	s.PortRangeTo = val
}

// The emergency service location's SIP group information.
type ListLocationsOKLocationsItemSipGroup struct {
	// The SIP group's display name.
	DisplayName OptString `json:"display_name"`
	// The SIP group's ID.
	ID OptString `json:"id"`
}

// GetDisplayName returns the value of DisplayName.
func (s *ListLocationsOKLocationsItemSipGroup) GetDisplayName() OptString {
	return s.DisplayName
}

// GetID returns the value of ID.
func (s *ListLocationsOKLocationsItemSipGroup) GetID() OptString {
	return s.ID
}

// SetDisplayName sets the value of DisplayName.
func (s *ListLocationsOKLocationsItemSipGroup) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetID sets the value of ID.
func (s *ListLocationsOKLocationsItemSipGroup) SetID(val OptString) {
	s.ID = val
}

// The emergency service location's site information.
type ListLocationsOKLocationsItemSite struct {
	// The site ID.
	ID OptString `json:"id"`
	// The site name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListLocationsOKLocationsItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListLocationsOKLocationsItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListLocationsOKLocationsItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListLocationsOKLocationsItemSite) SetName(val OptString) {
	s.Name = val
}

type ListMembersOK struct {
	Members []ListMembersOKMembersItem `json:"members"`
	// The current page number of returned records.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single API call.
	PageSize OptInt `json:"page_size"`
	// The number of records.
	TotalRecords OptInt `json:"total_records"`
}

// GetMembers returns the value of Members.
func (s *ListMembersOK) GetMembers() []ListMembersOKMembersItem {
	return s.Members
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListMembersOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListMembersOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListMembersOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetMembers sets the value of Members.
func (s *ListMembersOK) SetMembers(val []ListMembersOKMembersItem) {
	s.Members = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListMembersOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListMembersOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListMembersOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListMembersOKMembersItem struct {
	// Member name.
	DisplayName OptString `json:"display_name"`
	// Extension ID.
	ExtensionID OptString `json:"extension_id"`
	// Extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// Extension type.
	ExtensionType OptString `json:"extension_type"`
}

// GetDisplayName returns the value of DisplayName.
func (s *ListMembersOKMembersItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListMembersOKMembersItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListMembersOKMembersItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *ListMembersOKMembersItem) GetExtensionType() OptString {
	return s.ExtensionType
}

// SetDisplayName sets the value of DisplayName.
func (s *ListMembersOKMembersItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListMembersOKMembersItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListMembersOKMembersItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *ListMembersOKMembersItem) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

type ListMonitoringGroupOK struct {
	MonitoringGroups []ListMonitoringGroupOKMonitoringGroupsItem `json:"monitoring_groups"`
	// The current page number of returned records.
	NextPageToken OptString `json:"next_page_token"`
	// The size of the page.
	PageSize OptInt `json:"page_size"`
	// The total number of records available across all pages.
	TotalRecords OptInt `json:"total_records"`
}

// GetMonitoringGroups returns the value of MonitoringGroups.
func (s *ListMonitoringGroupOK) GetMonitoringGroups() []ListMonitoringGroupOKMonitoringGroupsItem {
	return s.MonitoringGroups
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListMonitoringGroupOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListMonitoringGroupOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListMonitoringGroupOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetMonitoringGroups sets the value of MonitoringGroups.
func (s *ListMonitoringGroupOK) SetMonitoringGroups(val []ListMonitoringGroupOKMonitoringGroupsItem) {
	s.MonitoringGroups = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListMonitoringGroupOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListMonitoringGroupOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListMonitoringGroupOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListMonitoringGroupOKMonitoringGroupsItem struct {
	// The monitoring group ID.
	ID OptString `json:"id"`
	// The number of monitors.
	MonitorMembersCount OptInt `json:"monitor_members_count"`
	// The number of monitored users.
	MonitoredMembersCount OptInt `json:"monitored_members_count"`
	// This field sets the group's monitoring privileges.
	MonitoringPrivileges []string `json:"monitoring_privileges"`
	// The monitoring instance name.
	Name OptString `json:"name"`
	// Whether to play a disclaimer prompt to the call participants.
	Prompt OptBool `json:"prompt"`
	// The site of the monitoring group.
	Site OptListMonitoringGroupOKMonitoringGroupsItemSite `json:"site"`
	// The monitoring type.
	// * `1` &mdash; Users &amp; Common Areas.
	// * `2` &mdash; Call Queues.
	// * `3` &mdash; Shared Line Group.
	// * `4` &mdash; Shared Line Appearance.
	Type OptInt `json:"type"`
}

// GetID returns the value of ID.
func (s *ListMonitoringGroupOKMonitoringGroupsItem) GetID() OptString {
	return s.ID
}

// GetMonitorMembersCount returns the value of MonitorMembersCount.
func (s *ListMonitoringGroupOKMonitoringGroupsItem) GetMonitorMembersCount() OptInt {
	return s.MonitorMembersCount
}

// GetMonitoredMembersCount returns the value of MonitoredMembersCount.
func (s *ListMonitoringGroupOKMonitoringGroupsItem) GetMonitoredMembersCount() OptInt {
	return s.MonitoredMembersCount
}

// GetMonitoringPrivileges returns the value of MonitoringPrivileges.
func (s *ListMonitoringGroupOKMonitoringGroupsItem) GetMonitoringPrivileges() []string {
	return s.MonitoringPrivileges
}

// GetName returns the value of Name.
func (s *ListMonitoringGroupOKMonitoringGroupsItem) GetName() OptString {
	return s.Name
}

// GetPrompt returns the value of Prompt.
func (s *ListMonitoringGroupOKMonitoringGroupsItem) GetPrompt() OptBool {
	return s.Prompt
}

// GetSite returns the value of Site.
func (s *ListMonitoringGroupOKMonitoringGroupsItem) GetSite() OptListMonitoringGroupOKMonitoringGroupsItemSite {
	return s.Site
}

// GetType returns the value of Type.
func (s *ListMonitoringGroupOKMonitoringGroupsItem) GetType() OptInt {
	return s.Type
}

// SetID sets the value of ID.
func (s *ListMonitoringGroupOKMonitoringGroupsItem) SetID(val OptString) {
	s.ID = val
}

// SetMonitorMembersCount sets the value of MonitorMembersCount.
func (s *ListMonitoringGroupOKMonitoringGroupsItem) SetMonitorMembersCount(val OptInt) {
	s.MonitorMembersCount = val
}

// SetMonitoredMembersCount sets the value of MonitoredMembersCount.
func (s *ListMonitoringGroupOKMonitoringGroupsItem) SetMonitoredMembersCount(val OptInt) {
	s.MonitoredMembersCount = val
}

// SetMonitoringPrivileges sets the value of MonitoringPrivileges.
func (s *ListMonitoringGroupOKMonitoringGroupsItem) SetMonitoringPrivileges(val []string) {
	s.MonitoringPrivileges = val
}

// SetName sets the value of Name.
func (s *ListMonitoringGroupOKMonitoringGroupsItem) SetName(val OptString) {
	s.Name = val
}

// SetPrompt sets the value of Prompt.
func (s *ListMonitoringGroupOKMonitoringGroupsItem) SetPrompt(val OptBool) {
	s.Prompt = val
}

// SetSite sets the value of Site.
func (s *ListMonitoringGroupOKMonitoringGroupsItem) SetSite(val OptListMonitoringGroupOKMonitoringGroupsItemSite) {
	s.Site = val
}

// SetType sets the value of Type.
func (s *ListMonitoringGroupOKMonitoringGroupsItem) SetType(val OptInt) {
	s.Type = val
}

// The site of the monitoring group.
type ListMonitoringGroupOKMonitoringGroupsItemSite struct {
	// The site ID.
	ID OptString `json:"id"`
	// The site name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListMonitoringGroupOKMonitoringGroupsItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListMonitoringGroupOKMonitoringGroupsItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListMonitoringGroupOKMonitoringGroupsItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListMonitoringGroupOKMonitoringGroupsItemSite) SetName(val OptString) {
	s.Name = val
}

type ListPastCallMetricsOK struct {
	// The call logs.
	CallLogs []ListPastCallMetricsOKCallLogsItem `json:"call_logs"`
	// The start time and date of the report.
	From OptString `json:"from"`
	// The end time and date of the report.
	To OptString `json:"to"`
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single call.
	PageSize OptInt `json:"page_size"`
	// The total number of records available across all pages.
	TotalRecords OptInt `json:"total_records"`
}

// GetCallLogs returns the value of CallLogs.
func (s *ListPastCallMetricsOK) GetCallLogs() []ListPastCallMetricsOKCallLogsItem {
	return s.CallLogs
}

// GetFrom returns the value of From.
func (s *ListPastCallMetricsOK) GetFrom() OptString {
	return s.From
}

// GetTo returns the value of To.
func (s *ListPastCallMetricsOK) GetTo() OptString {
	return s.To
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListPastCallMetricsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListPastCallMetricsOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListPastCallMetricsOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetCallLogs sets the value of CallLogs.
func (s *ListPastCallMetricsOK) SetCallLogs(val []ListPastCallMetricsOKCallLogsItem) {
	s.CallLogs = val
}

// SetFrom sets the value of From.
func (s *ListPastCallMetricsOK) SetFrom(val OptString) {
	s.From = val
}

// SetTo sets the value of To.
func (s *ListPastCallMetricsOK) SetTo(val OptString) {
	s.To = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListPastCallMetricsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListPastCallMetricsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListPastCallMetricsOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListPastCallMetricsOKCallLogsItem struct {
	// The unique identifier of the phone call.
	CallID OptString `json:"call_id"`
	// The callee object that contains information of the callee.
	Callee OptListPastCallMetricsOKCallLogsItemCallee `json:"callee"`
	// The caller object that contains information of the caller.
	Caller OptListPastCallMetricsOKCallLogsItemCaller `json:"caller"`
	// The date and time when the call started.
	DateTime OptString `json:"date_time"`
	// The direction of the call.
	Direction OptString `json:"direction"`
	// The duration of the call in seconds.
	Duration OptInt `json:"duration"`
	// The Mean Opinion Score (MOS). Zoom uses (MOS) as the main measurement to report on voice quality.
	// MOS measures voice quality on a scale of one to five. A score of 1 indicates unacceptable voice
	// quality for all users. A score of five is the best voice quality.
	Mos OptString `json:"mos"`
}

// GetCallID returns the value of CallID.
func (s *ListPastCallMetricsOKCallLogsItem) GetCallID() OptString {
	return s.CallID
}

// GetCallee returns the value of Callee.
func (s *ListPastCallMetricsOKCallLogsItem) GetCallee() OptListPastCallMetricsOKCallLogsItemCallee {
	return s.Callee
}

// GetCaller returns the value of Caller.
func (s *ListPastCallMetricsOKCallLogsItem) GetCaller() OptListPastCallMetricsOKCallLogsItemCaller {
	return s.Caller
}

// GetDateTime returns the value of DateTime.
func (s *ListPastCallMetricsOKCallLogsItem) GetDateTime() OptString {
	return s.DateTime
}

// GetDirection returns the value of Direction.
func (s *ListPastCallMetricsOKCallLogsItem) GetDirection() OptString {
	return s.Direction
}

// GetDuration returns the value of Duration.
func (s *ListPastCallMetricsOKCallLogsItem) GetDuration() OptInt {
	return s.Duration
}

// GetMos returns the value of Mos.
func (s *ListPastCallMetricsOKCallLogsItem) GetMos() OptString {
	return s.Mos
}

// SetCallID sets the value of CallID.
func (s *ListPastCallMetricsOKCallLogsItem) SetCallID(val OptString) {
	s.CallID = val
}

// SetCallee sets the value of Callee.
func (s *ListPastCallMetricsOKCallLogsItem) SetCallee(val OptListPastCallMetricsOKCallLogsItemCallee) {
	s.Callee = val
}

// SetCaller sets the value of Caller.
func (s *ListPastCallMetricsOKCallLogsItem) SetCaller(val OptListPastCallMetricsOKCallLogsItemCaller) {
	s.Caller = val
}

// SetDateTime sets the value of DateTime.
func (s *ListPastCallMetricsOKCallLogsItem) SetDateTime(val OptString) {
	s.DateTime = val
}

// SetDirection sets the value of Direction.
func (s *ListPastCallMetricsOKCallLogsItem) SetDirection(val OptString) {
	s.Direction = val
}

// SetDuration sets the value of Duration.
func (s *ListPastCallMetricsOKCallLogsItem) SetDuration(val OptInt) {
	s.Duration = val
}

// SetMos sets the value of Mos.
func (s *ListPastCallMetricsOKCallLogsItem) SetMos(val OptString) {
	s.Mos = val
}

// The callee object that contains information of the callee.
type ListPastCallMetricsOKCallLogsItemCallee struct {
	// The audio codec.
	Codec OptString `json:"codec"`
	// This setting displays the device's private IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePrivateIP OptString `json:"device_private_ip"`
	// This setting displays the device's public IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePublicIP OptString `json:"device_public_ip"`
	// The device type, and if applicable, its version number. Acceptable device types:
	// * `Windows_Client`
	// * `MAC_Client`
	// * `Linux_Client`
	// * `Android_Phone`
	// * `IOS_Phone`
	// * `Android_Pad`
	// * `IOS_Pad`
	// * [Zoom Phone Appliance](https://support.zoom.
	// us/hc/en-us/articles/360001299063#h_cc0dac0d-44aa-4fb6-8e39-359166c38715)
	// * `Windows_VDI_Client`
	// * `MAC_VDI_Client`
	// * `Linux_VDI_Client`.
	DeviceType OptString `json:"device_type"`
	// The full extension number of the callee.
	ExtensionNumber OptString `json:"extension_number"`
	// The headset the callee uses for the call.
	Headset OptString `json:"headset"`
	// The internet service provider.
	Isp OptString `json:"isp"`
	// The microphone the callee uses for the call.
	Microphone OptString `json:"microphone"`
	// The phone number of the callee in E164 format.
	PhoneNumber OptString `json:"phone_number"`
	// The unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites).
	SiteID OptString `json:"site_id"`
}

// GetCodec returns the value of Codec.
func (s *ListPastCallMetricsOKCallLogsItemCallee) GetCodec() OptString {
	return s.Codec
}

// GetDevicePrivateIP returns the value of DevicePrivateIP.
func (s *ListPastCallMetricsOKCallLogsItemCallee) GetDevicePrivateIP() OptString {
	return s.DevicePrivateIP
}

// GetDevicePublicIP returns the value of DevicePublicIP.
func (s *ListPastCallMetricsOKCallLogsItemCallee) GetDevicePublicIP() OptString {
	return s.DevicePublicIP
}

// GetDeviceType returns the value of DeviceType.
func (s *ListPastCallMetricsOKCallLogsItemCallee) GetDeviceType() OptString {
	return s.DeviceType
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListPastCallMetricsOKCallLogsItemCallee) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetHeadset returns the value of Headset.
func (s *ListPastCallMetricsOKCallLogsItemCallee) GetHeadset() OptString {
	return s.Headset
}

// GetIsp returns the value of Isp.
func (s *ListPastCallMetricsOKCallLogsItemCallee) GetIsp() OptString {
	return s.Isp
}

// GetMicrophone returns the value of Microphone.
func (s *ListPastCallMetricsOKCallLogsItemCallee) GetMicrophone() OptString {
	return s.Microphone
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *ListPastCallMetricsOKCallLogsItemCallee) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetSiteID returns the value of SiteID.
func (s *ListPastCallMetricsOKCallLogsItemCallee) GetSiteID() OptString {
	return s.SiteID
}

// SetCodec sets the value of Codec.
func (s *ListPastCallMetricsOKCallLogsItemCallee) SetCodec(val OptString) {
	s.Codec = val
}

// SetDevicePrivateIP sets the value of DevicePrivateIP.
func (s *ListPastCallMetricsOKCallLogsItemCallee) SetDevicePrivateIP(val OptString) {
	s.DevicePrivateIP = val
}

// SetDevicePublicIP sets the value of DevicePublicIP.
func (s *ListPastCallMetricsOKCallLogsItemCallee) SetDevicePublicIP(val OptString) {
	s.DevicePublicIP = val
}

// SetDeviceType sets the value of DeviceType.
func (s *ListPastCallMetricsOKCallLogsItemCallee) SetDeviceType(val OptString) {
	s.DeviceType = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListPastCallMetricsOKCallLogsItemCallee) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetHeadset sets the value of Headset.
func (s *ListPastCallMetricsOKCallLogsItemCallee) SetHeadset(val OptString) {
	s.Headset = val
}

// SetIsp sets the value of Isp.
func (s *ListPastCallMetricsOKCallLogsItemCallee) SetIsp(val OptString) {
	s.Isp = val
}

// SetMicrophone sets the value of Microphone.
func (s *ListPastCallMetricsOKCallLogsItemCallee) SetMicrophone(val OptString) {
	s.Microphone = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *ListPastCallMetricsOKCallLogsItemCallee) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetSiteID sets the value of SiteID.
func (s *ListPastCallMetricsOKCallLogsItemCallee) SetSiteID(val OptString) {
	s.SiteID = val
}

// The caller object that contains information of the caller.
type ListPastCallMetricsOKCallLogsItemCaller struct {
	// The audio codec.
	Codec OptString `json:"codec"`
	// This setting displays the device's private IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePrivateIP OptString `json:"device_private_ip"`
	// This setting displays the device's public IP address if the account has the
	// `show_device_ip_for_call_log` parameter set to `enabled`.
	DevicePublicIP OptString `json:"device_public_ip"`
	// The device type, and if applicable, its version number. Acceptable device types:
	// * `Windows_Client`
	// * `MAC_Client`
	// * `Linux_Client`
	// * `Android_Phone`
	// * `IOS_Phone`
	// * `Android_Pad`
	// * `IOS_Pad`
	// * [Zoom Phone Appliance](https://support.zoom.
	// us/hc/en-us/articles/360001299063#h_cc0dac0d-44aa-4fb6-8e39-359166c38715)
	// * `Windows_VDI_Client`
	// * `MAC_VDI_Client`
	// * `Linux_VDI_Client`.
	DeviceType OptString `json:"device_type"`
	// The full extension number of the caller.
	ExtensionNumber OptString `json:"extension_number"`
	// The headset the caller uses for the call.
	Headset OptString `json:"headset"`
	// The internet service provider.
	Isp OptString `json:"isp"`
	// The microphone the caller uses for the call.
	Microphone OptString `json:"microphone"`
	// The phone number of the caller in E164 format.
	PhoneNumber OptString `json:"phone_number"`
	// The unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites).
	SiteID OptString `json:"site_id"`
}

// GetCodec returns the value of Codec.
func (s *ListPastCallMetricsOKCallLogsItemCaller) GetCodec() OptString {
	return s.Codec
}

// GetDevicePrivateIP returns the value of DevicePrivateIP.
func (s *ListPastCallMetricsOKCallLogsItemCaller) GetDevicePrivateIP() OptString {
	return s.DevicePrivateIP
}

// GetDevicePublicIP returns the value of DevicePublicIP.
func (s *ListPastCallMetricsOKCallLogsItemCaller) GetDevicePublicIP() OptString {
	return s.DevicePublicIP
}

// GetDeviceType returns the value of DeviceType.
func (s *ListPastCallMetricsOKCallLogsItemCaller) GetDeviceType() OptString {
	return s.DeviceType
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListPastCallMetricsOKCallLogsItemCaller) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetHeadset returns the value of Headset.
func (s *ListPastCallMetricsOKCallLogsItemCaller) GetHeadset() OptString {
	return s.Headset
}

// GetIsp returns the value of Isp.
func (s *ListPastCallMetricsOKCallLogsItemCaller) GetIsp() OptString {
	return s.Isp
}

// GetMicrophone returns the value of Microphone.
func (s *ListPastCallMetricsOKCallLogsItemCaller) GetMicrophone() OptString {
	return s.Microphone
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *ListPastCallMetricsOKCallLogsItemCaller) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetSiteID returns the value of SiteID.
func (s *ListPastCallMetricsOKCallLogsItemCaller) GetSiteID() OptString {
	return s.SiteID
}

// SetCodec sets the value of Codec.
func (s *ListPastCallMetricsOKCallLogsItemCaller) SetCodec(val OptString) {
	s.Codec = val
}

// SetDevicePrivateIP sets the value of DevicePrivateIP.
func (s *ListPastCallMetricsOKCallLogsItemCaller) SetDevicePrivateIP(val OptString) {
	s.DevicePrivateIP = val
}

// SetDevicePublicIP sets the value of DevicePublicIP.
func (s *ListPastCallMetricsOKCallLogsItemCaller) SetDevicePublicIP(val OptString) {
	s.DevicePublicIP = val
}

// SetDeviceType sets the value of DeviceType.
func (s *ListPastCallMetricsOKCallLogsItemCaller) SetDeviceType(val OptString) {
	s.DeviceType = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListPastCallMetricsOKCallLogsItemCaller) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetHeadset sets the value of Headset.
func (s *ListPastCallMetricsOKCallLogsItemCaller) SetHeadset(val OptString) {
	s.Headset = val
}

// SetIsp sets the value of Isp.
func (s *ListPastCallMetricsOKCallLogsItemCaller) SetIsp(val OptString) {
	s.Isp = val
}

// SetMicrophone sets the value of Microphone.
func (s *ListPastCallMetricsOKCallLogsItemCaller) SetMicrophone(val OptString) {
	s.Microphone = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *ListPastCallMetricsOKCallLogsItemCaller) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetSiteID sets the value of SiteID.
func (s *ListPastCallMetricsOKCallLogsItemCaller) SetSiteID(val OptString) {
	s.SiteID = val
}

type ListPeeringPhoneNumbersOK struct {
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The information about the carrier's phone numbers.
	Numbers []ListPeeringPhoneNumbersOKNumbersItem `json:"numbers"`
	// The total number of records returned for this API call.
	TotalRecords OptInt `json:"total_records"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListPeeringPhoneNumbersOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetNumbers returns the value of Numbers.
func (s *ListPeeringPhoneNumbersOK) GetNumbers() []ListPeeringPhoneNumbersOKNumbersItem {
	return s.Numbers
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListPeeringPhoneNumbersOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListPeeringPhoneNumbersOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetNumbers sets the value of Numbers.
func (s *ListPeeringPhoneNumbersOK) SetNumbers(val []ListPeeringPhoneNumbersOKNumbersItem) {
	s.Numbers = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListPeeringPhoneNumbersOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListPeeringPhoneNumbersOKNumbersItem struct {
	// Whether the phone number is assigned:
	// * `0` &mdash; Unassigned.
	// * `1` &mdash; Assigned.
	Assigned int `json:"assigned"`
	// The carrier's billing reference ID.
	BillingReferenceID OptString `json:"billing_reference_id"`
	// The phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
	PhoneNumber string `json:"phone_number"`
	// The carrier's service information.
	ServiceInfo OptString `json:"service_info"`
	// The phone number's [SIP trunk](https://en.wikipedia.org/wiki/SIP_trunking).
	SipTrunkName string `json:"sip_trunk_name"`
	// The phone number's status:
	// * `0` &mdash; Inactive.
	// * `1` &mdash; Active.
	Status int `json:"status"`
}

// GetAssigned returns the value of Assigned.
func (s *ListPeeringPhoneNumbersOKNumbersItem) GetAssigned() int {
	return s.Assigned
}

// GetBillingReferenceID returns the value of BillingReferenceID.
func (s *ListPeeringPhoneNumbersOKNumbersItem) GetBillingReferenceID() OptString {
	return s.BillingReferenceID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *ListPeeringPhoneNumbersOKNumbersItem) GetPhoneNumber() string {
	return s.PhoneNumber
}

// GetServiceInfo returns the value of ServiceInfo.
func (s *ListPeeringPhoneNumbersOKNumbersItem) GetServiceInfo() OptString {
	return s.ServiceInfo
}

// GetSipTrunkName returns the value of SipTrunkName.
func (s *ListPeeringPhoneNumbersOKNumbersItem) GetSipTrunkName() string {
	return s.SipTrunkName
}

// GetStatus returns the value of Status.
func (s *ListPeeringPhoneNumbersOKNumbersItem) GetStatus() int {
	return s.Status
}

// SetAssigned sets the value of Assigned.
func (s *ListPeeringPhoneNumbersOKNumbersItem) SetAssigned(val int) {
	s.Assigned = val
}

// SetBillingReferenceID sets the value of BillingReferenceID.
func (s *ListPeeringPhoneNumbersOKNumbersItem) SetBillingReferenceID(val OptString) {
	s.BillingReferenceID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *ListPeeringPhoneNumbersOKNumbersItem) SetPhoneNumber(val string) {
	s.PhoneNumber = val
}

// SetServiceInfo sets the value of ServiceInfo.
func (s *ListPeeringPhoneNumbersOKNumbersItem) SetServiceInfo(val OptString) {
	s.ServiceInfo = val
}

// SetSipTrunkName sets the value of SipTrunkName.
func (s *ListPeeringPhoneNumbersOKNumbersItem) SetSipTrunkName(val string) {
	s.SipTrunkName = val
}

// SetStatus sets the value of Status.
func (s *ListPeeringPhoneNumbersOKNumbersItem) SetStatus(val int) {
	s.Status = val
}

type ListPhoneDevicesOK struct {
	Devices []ListPhoneDevicesOKDevicesItem `json:"devices"`
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned with a single API call.
	PageSize OptInt `json:"page_size"`
	// The total number of records found for the query across all pages.
	TotalRecords OptInt `json:"total_records"`
}

// GetDevices returns the value of Devices.
func (s *ListPhoneDevicesOK) GetDevices() []ListPhoneDevicesOKDevicesItem {
	return s.Devices
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListPhoneDevicesOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListPhoneDevicesOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListPhoneDevicesOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetDevices sets the value of Devices.
func (s *ListPhoneDevicesOK) SetDevices(val []ListPhoneDevicesOKDevicesItem) {
	s.Devices = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListPhoneDevicesOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListPhoneDevicesOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListPhoneDevicesOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListPhoneDevicesOKDevicesItem struct {
	Assignee  OptListPhoneDevicesOKDevicesItemAssignee     `json:"assignee"`
	Assignees []ListPhoneDevicesOKDevicesItemAssigneesItem `json:"assignees"`
	// This field provides the manufacturer name and the model name.
	DeviceType OptString `json:"device_type"`
	// Display name of the device.
	DisplayName OptString `json:"display_name"`
	// The device ID.
	ID OptString `json:"id"`
	// The MAC address or serial number of the device.
	MACAddress OptString                            `json:"mac_address"`
	Site       OptListPhoneDevicesOKDevicesItemSite `json:"site"`
	// The status of the device. The value is either `online` or `offline`.
	Status OptString `json:"status"`
	// The provision template ID. It's supported only by some devices. An empty string represents 'No
	// value set'.
	ProvisionTemplateID OptString `json:"provision_template_id"`
}

// GetAssignee returns the value of Assignee.
func (s *ListPhoneDevicesOKDevicesItem) GetAssignee() OptListPhoneDevicesOKDevicesItemAssignee {
	return s.Assignee
}

// GetAssignees returns the value of Assignees.
func (s *ListPhoneDevicesOKDevicesItem) GetAssignees() []ListPhoneDevicesOKDevicesItemAssigneesItem {
	return s.Assignees
}

// GetDeviceType returns the value of DeviceType.
func (s *ListPhoneDevicesOKDevicesItem) GetDeviceType() OptString {
	return s.DeviceType
}

// GetDisplayName returns the value of DisplayName.
func (s *ListPhoneDevicesOKDevicesItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetID returns the value of ID.
func (s *ListPhoneDevicesOKDevicesItem) GetID() OptString {
	return s.ID
}

// GetMACAddress returns the value of MACAddress.
func (s *ListPhoneDevicesOKDevicesItem) GetMACAddress() OptString {
	return s.MACAddress
}

// GetSite returns the value of Site.
func (s *ListPhoneDevicesOKDevicesItem) GetSite() OptListPhoneDevicesOKDevicesItemSite {
	return s.Site
}

// GetStatus returns the value of Status.
func (s *ListPhoneDevicesOKDevicesItem) GetStatus() OptString {
	return s.Status
}

// GetProvisionTemplateID returns the value of ProvisionTemplateID.
func (s *ListPhoneDevicesOKDevicesItem) GetProvisionTemplateID() OptString {
	return s.ProvisionTemplateID
}

// SetAssignee sets the value of Assignee.
func (s *ListPhoneDevicesOKDevicesItem) SetAssignee(val OptListPhoneDevicesOKDevicesItemAssignee) {
	s.Assignee = val
}

// SetAssignees sets the value of Assignees.
func (s *ListPhoneDevicesOKDevicesItem) SetAssignees(val []ListPhoneDevicesOKDevicesItemAssigneesItem) {
	s.Assignees = val
}

// SetDeviceType sets the value of DeviceType.
func (s *ListPhoneDevicesOKDevicesItem) SetDeviceType(val OptString) {
	s.DeviceType = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ListPhoneDevicesOKDevicesItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetID sets the value of ID.
func (s *ListPhoneDevicesOKDevicesItem) SetID(val OptString) {
	s.ID = val
}

// SetMACAddress sets the value of MACAddress.
func (s *ListPhoneDevicesOKDevicesItem) SetMACAddress(val OptString) {
	s.MACAddress = val
}

// SetSite sets the value of Site.
func (s *ListPhoneDevicesOKDevicesItem) SetSite(val OptListPhoneDevicesOKDevicesItemSite) {
	s.Site = val
}

// SetStatus sets the value of Status.
func (s *ListPhoneDevicesOKDevicesItem) SetStatus(val OptString) {
	s.Status = val
}

// SetProvisionTemplateID sets the value of ProvisionTemplateID.
func (s *ListPhoneDevicesOKDevicesItem) SetProvisionTemplateID(val OptString) {
	s.ProvisionTemplateID = val
}

type ListPhoneDevicesOKDevicesItemAssignee struct {
	// The extension number of the Zoom Phone the `user` or `commonArea`uses.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The ID of the user or commonArea to whom the device has been assigned.
	ID OptString `json:"id"`
	// Name.
	Name OptString `json:"name"`
	// The type of the assignee. It's available only if the device is assigned.
	ExtensionType OptString `json:"extension_type"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListPhoneDevicesOKDevicesItemAssignee) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *ListPhoneDevicesOKDevicesItemAssignee) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListPhoneDevicesOKDevicesItemAssignee) GetName() OptString {
	return s.Name
}

// GetExtensionType returns the value of ExtensionType.
func (s *ListPhoneDevicesOKDevicesItemAssignee) GetExtensionType() OptString {
	return s.ExtensionType
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListPhoneDevicesOKDevicesItemAssignee) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *ListPhoneDevicesOKDevicesItemAssignee) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListPhoneDevicesOKDevicesItemAssignee) SetName(val OptString) {
	s.Name = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *ListPhoneDevicesOKDevicesItemAssignee) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

type ListPhoneDevicesOKDevicesItemAssigneesItem struct {
	// The extension number of the Zoom Phone the `user` or `commonArea`uses.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The ID of the user or commonArea to whom the device has been assigned.
	ID OptString `json:"id"`
	// Name.
	Name OptString `json:"name"`
	// The type of the assignee. It's available only if the device is assigned.
	ExtensionType OptString `json:"extension_type"`
	// The extension ID of the `user` or `common area`.
	ExtensionID OptString `json:"extension_id"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListPhoneDevicesOKDevicesItemAssigneesItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *ListPhoneDevicesOKDevicesItemAssigneesItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListPhoneDevicesOKDevicesItemAssigneesItem) GetName() OptString {
	return s.Name
}

// GetExtensionType returns the value of ExtensionType.
func (s *ListPhoneDevicesOKDevicesItemAssigneesItem) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListPhoneDevicesOKDevicesItemAssigneesItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListPhoneDevicesOKDevicesItemAssigneesItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *ListPhoneDevicesOKDevicesItemAssigneesItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListPhoneDevicesOKDevicesItemAssigneesItem) SetName(val OptString) {
	s.Name = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *ListPhoneDevicesOKDevicesItemAssigneesItem) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListPhoneDevicesOKDevicesItemAssigneesItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

type ListPhoneDevicesOKDevicesItemSite struct {
	// The [site](https://support.zoom.us/hc/en-us/articles/360020809672) of the phone user.
	ID OptString `json:"id"`
	// The name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672).
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListPhoneDevicesOKDevicesItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListPhoneDevicesOKDevicesItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListPhoneDevicesOKDevicesItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListPhoneDevicesOKDevicesItemSite) SetName(val OptString) {
	s.Name = val
}

type ListPhonePlansOK struct {
	CallingPlans []ListPhonePlansOKCallingPlansItem `json:"calling_plans"`
	PhoneNumbers []ListPhonePlansOKPhoneNumbersItem `json:"phone_numbers"`
}

// GetCallingPlans returns the value of CallingPlans.
func (s *ListPhonePlansOK) GetCallingPlans() []ListPhonePlansOKCallingPlansItem {
	return s.CallingPlans
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *ListPhonePlansOK) GetPhoneNumbers() []ListPhonePlansOKPhoneNumbersItem {
	return s.PhoneNumbers
}

// SetCallingPlans sets the value of CallingPlans.
func (s *ListPhonePlansOK) SetCallingPlans(val []ListPhonePlansOKCallingPlansItem) {
	s.CallingPlans = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *ListPhonePlansOK) SetPhoneNumbers(val []ListPhonePlansOKPhoneNumbersItem) {
	s.PhoneNumbers = val
}

type ListPhonePlansOKCallingPlansItem struct {
	// Total number of plans used.
	Assigned OptInt `json:"assigned"`
	// Remaining number of calling plans that can be assigned.
	Available OptInt `json:"available"`
	// Name of the plan.
	Name OptString `json:"name"`
	// Total number of plan subscriptions bought.
	Subscribed OptInt `json:"subscribed"`
	// Plan type. Refer to the phone plan code in the [Zoom Phone calling plans](https://marketplace.zoom.
	// us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).
	Type OptInt `json:"type"`
}

// GetAssigned returns the value of Assigned.
func (s *ListPhonePlansOKCallingPlansItem) GetAssigned() OptInt {
	return s.Assigned
}

// GetAvailable returns the value of Available.
func (s *ListPhonePlansOKCallingPlansItem) GetAvailable() OptInt {
	return s.Available
}

// GetName returns the value of Name.
func (s *ListPhonePlansOKCallingPlansItem) GetName() OptString {
	return s.Name
}

// GetSubscribed returns the value of Subscribed.
func (s *ListPhonePlansOKCallingPlansItem) GetSubscribed() OptInt {
	return s.Subscribed
}

// GetType returns the value of Type.
func (s *ListPhonePlansOKCallingPlansItem) GetType() OptInt {
	return s.Type
}

// SetAssigned sets the value of Assigned.
func (s *ListPhonePlansOKCallingPlansItem) SetAssigned(val OptInt) {
	s.Assigned = val
}

// SetAvailable sets the value of Available.
func (s *ListPhonePlansOKCallingPlansItem) SetAvailable(val OptInt) {
	s.Available = val
}

// SetName sets the value of Name.
func (s *ListPhonePlansOKCallingPlansItem) SetName(val OptString) {
	s.Name = val
}

// SetSubscribed sets the value of Subscribed.
func (s *ListPhonePlansOKCallingPlansItem) SetSubscribed(val OptInt) {
	s.Subscribed = val
}

// SetType sets the value of Type.
func (s *ListPhonePlansOKCallingPlansItem) SetType(val OptInt) {
	s.Type = val
}

type ListPhonePlansOKPhoneNumbersItem struct {
	// Total number of phone number plans used.
	Assigned OptInt `json:"assigned"`
	// Remaining number of phone number plans that can be assigned.
	Available OptInt `json:"available"`
	// Name of the phone number plan.
	Name OptString `json:"name"`
	// Total number of phone number plan subscriptions bought.
	Subscribed OptInt `json:"subscribed"`
}

// GetAssigned returns the value of Assigned.
func (s *ListPhonePlansOKPhoneNumbersItem) GetAssigned() OptInt {
	return s.Assigned
}

// GetAvailable returns the value of Available.
func (s *ListPhonePlansOKPhoneNumbersItem) GetAvailable() OptInt {
	return s.Available
}

// GetName returns the value of Name.
func (s *ListPhonePlansOKPhoneNumbersItem) GetName() OptString {
	return s.Name
}

// GetSubscribed returns the value of Subscribed.
func (s *ListPhonePlansOKPhoneNumbersItem) GetSubscribed() OptInt {
	return s.Subscribed
}

// SetAssigned sets the value of Assigned.
func (s *ListPhonePlansOKPhoneNumbersItem) SetAssigned(val OptInt) {
	s.Assigned = val
}

// SetAvailable sets the value of Available.
func (s *ListPhonePlansOKPhoneNumbersItem) SetAvailable(val OptInt) {
	s.Available = val
}

// SetName sets the value of Name.
func (s *ListPhonePlansOKPhoneNumbersItem) SetName(val OptString) {
	s.Name = val
}

// SetSubscribed sets the value of Subscribed.
func (s *ListPhonePlansOKPhoneNumbersItem) SetSubscribed(val OptInt) {
	s.Subscribed = val
}

type ListPhoneRolesOK struct {
	// Phone role list.
	Roles []ListPhoneRolesOKRolesItem `json:"roles"`
}

// GetRoles returns the value of Roles.
func (s *ListPhoneRolesOK) GetRoles() []ListPhoneRolesOKRolesItem {
	return s.Roles
}

// SetRoles sets the value of Roles.
func (s *ListPhoneRolesOK) SetRoles(val []ListPhoneRolesOKRolesItem) {
	s.Roles = val
}

type ListPhoneRolesOKRolesItem struct {
	// Unique identifier of the [role](https://support.zoom.
	// us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management) assigned to the user.
	ID OptString `json:"id"`
	// User's [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control)
	// name.
	Name OptString `json:"name"`
	// Role description.
	Description OptString `json:"description"`
	// Total members assigned to the role.
	TotalMembers OptInt `json:"total_members"`
	// Indicates whether the role is default or not.
	IsDefault OptBool `json:"is_default"`
}

// GetID returns the value of ID.
func (s *ListPhoneRolesOKRolesItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListPhoneRolesOKRolesItem) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *ListPhoneRolesOKRolesItem) GetDescription() OptString {
	return s.Description
}

// GetTotalMembers returns the value of TotalMembers.
func (s *ListPhoneRolesOKRolesItem) GetTotalMembers() OptInt {
	return s.TotalMembers
}

// GetIsDefault returns the value of IsDefault.
func (s *ListPhoneRolesOKRolesItem) GetIsDefault() OptBool {
	return s.IsDefault
}

// SetID sets the value of ID.
func (s *ListPhoneRolesOKRolesItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListPhoneRolesOKRolesItem) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *ListPhoneRolesOKRolesItem) SetDescription(val OptString) {
	s.Description = val
}

// SetTotalMembers sets the value of TotalMembers.
func (s *ListPhoneRolesOKRolesItem) SetTotalMembers(val OptInt) {
	s.TotalMembers = val
}

// SetIsDefault sets the value of IsDefault.
func (s *ListPhoneRolesOKRolesItem) SetIsDefault(val OptBool) {
	s.IsDefault = val
}

type ListPhoneSitesOK struct {
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single API call.
	PageSize OptInt `json:"page_size"`
	// List of site(s).
	Sites []ListPhoneSitesOKSitesItem `json:"sites"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListPhoneSitesOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListPhoneSitesOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetSites returns the value of Sites.
func (s *ListPhoneSitesOK) GetSites() []ListPhoneSitesOKSitesItem {
	return s.Sites
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListPhoneSitesOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListPhoneSitesOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListPhoneSitesOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetSites sets the value of Sites.
func (s *ListPhoneSitesOK) SetSites(val []ListPhoneSitesOKSitesItem) {
	s.Sites = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListPhoneSitesOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListPhoneSitesOKSitesItem struct {
	// The country of the site.
	Country OptListPhoneSitesOKSitesItemCountry `json:"country"`
	// The site ID is the unique identifier of the site.
	ID OptString `json:"id"`
	// The auto receptionist for each site.
	MainAutoReceptionist OptListPhoneSitesOKSitesItemMainAutoReceptionist `json:"main_auto_receptionist"`
	// The name of the site.
	Name OptString `json:"name"`
	// The site code.
	SiteCode OptInt `json:"site_code"`
}

// GetCountry returns the value of Country.
func (s *ListPhoneSitesOKSitesItem) GetCountry() OptListPhoneSitesOKSitesItemCountry {
	return s.Country
}

// GetID returns the value of ID.
func (s *ListPhoneSitesOKSitesItem) GetID() OptString {
	return s.ID
}

// GetMainAutoReceptionist returns the value of MainAutoReceptionist.
func (s *ListPhoneSitesOKSitesItem) GetMainAutoReceptionist() OptListPhoneSitesOKSitesItemMainAutoReceptionist {
	return s.MainAutoReceptionist
}

// GetName returns the value of Name.
func (s *ListPhoneSitesOKSitesItem) GetName() OptString {
	return s.Name
}

// GetSiteCode returns the value of SiteCode.
func (s *ListPhoneSitesOKSitesItem) GetSiteCode() OptInt {
	return s.SiteCode
}

// SetCountry sets the value of Country.
func (s *ListPhoneSitesOKSitesItem) SetCountry(val OptListPhoneSitesOKSitesItemCountry) {
	s.Country = val
}

// SetID sets the value of ID.
func (s *ListPhoneSitesOKSitesItem) SetID(val OptString) {
	s.ID = val
}

// SetMainAutoReceptionist sets the value of MainAutoReceptionist.
func (s *ListPhoneSitesOKSitesItem) SetMainAutoReceptionist(val OptListPhoneSitesOKSitesItemMainAutoReceptionist) {
	s.MainAutoReceptionist = val
}

// SetName sets the value of Name.
func (s *ListPhoneSitesOKSitesItem) SetName(val OptString) {
	s.Name = val
}

// SetSiteCode sets the value of SiteCode.
func (s *ListPhoneSitesOKSitesItem) SetSiteCode(val OptInt) {
	s.SiteCode = val
}

// The country of the site.
type ListPhoneSitesOKSitesItemCountry struct {
	// The two lettered country [code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	Code OptString `json:"code"`
	// The name of the country.
	Name OptString `json:"name"`
}

// GetCode returns the value of Code.
func (s *ListPhoneSitesOKSitesItemCountry) GetCode() OptString {
	return s.Code
}

// GetName returns the value of Name.
func (s *ListPhoneSitesOKSitesItemCountry) GetName() OptString {
	return s.Name
}

// SetCode sets the value of Code.
func (s *ListPhoneSitesOKSitesItemCountry) SetCode(val OptString) {
	s.Code = val
}

// SetName sets the value of Name.
func (s *ListPhoneSitesOKSitesItemCountry) SetName(val OptString) {
	s.Name = val
}

// The auto receptionist for each site.
type ListPhoneSitesOKSitesItemMainAutoReceptionist struct {
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The identifier of the [auto receptionist](https://support.zoom.
	// us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-).
	ID OptString `json:"id"`
	// The name of the auto receptionist.
	Name OptString `json:"name"`
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListPhoneSitesOKSitesItemMainAutoReceptionist) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListPhoneSitesOKSitesItemMainAutoReceptionist) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *ListPhoneSitesOKSitesItemMainAutoReceptionist) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListPhoneSitesOKSitesItemMainAutoReceptionist) GetName() OptString {
	return s.Name
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListPhoneSitesOKSitesItemMainAutoReceptionist) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListPhoneSitesOKSitesItemMainAutoReceptionist) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *ListPhoneSitesOKSitesItemMainAutoReceptionist) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListPhoneSitesOKSitesItemMainAutoReceptionist) SetName(val OptString) {
	s.Name = val
}

type ListPhoneUsersOK struct {
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned from a single API call.
	PageSize OptInt `json:"page_size"`
	// The total records found for this query.
	TotalRecords OptInt                      `json:"total_records"`
	Users        []ListPhoneUsersOKUsersItem `json:"users"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListPhoneUsersOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListPhoneUsersOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListPhoneUsersOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// GetUsers returns the value of Users.
func (s *ListPhoneUsersOK) GetUsers() []ListPhoneUsersOKUsersItem {
	return s.Users
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListPhoneUsersOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListPhoneUsersOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListPhoneUsersOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

// SetUsers sets the value of Users.
func (s *ListPhoneUsersOK) SetUsers(val []ListPhoneUsersOKUsersItem) {
	s.Users = val
}

type ListPhoneUsersOKUsersItem struct {
	CallingPlans []ListPhoneUsersOKUsersItemCallingPlansItem `json:"calling_plans"`
	// The email address of the user.
	Email OptString `json:"email"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number assigned to the user's Zoom phone number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The unique identifier of the user (userId).
	ID OptString `json:"id"`
	// The name of the user.
	Name OptString `json:"name"`
	// The Zoom phone identifier of the user.
	PhoneUserID OptString                        `json:"phone_user_id"`
	Site        OptListPhoneUsersOKUsersItemSite `json:"site"`
	// The status of the user's Zoom Phone license. The value can be either of the following:
	// `activate`: Active Zoom phone user.
	// `deactivate`: User with Zoom phone license disabled. This type of user can't make or receive calls.
	Status       OptString                                   `json:"status"`
	PhoneNumbers []ListPhoneUsersOKUsersItemPhoneNumbersItem `json:"phone_numbers"`
	// The department where the user belongs.
	Department OptString `json:"department"`
	// The cost center where the user belongs.
	CostCenter OptString `json:"cost_center"`
}

// GetCallingPlans returns the value of CallingPlans.
func (s *ListPhoneUsersOKUsersItem) GetCallingPlans() []ListPhoneUsersOKUsersItemCallingPlansItem {
	return s.CallingPlans
}

// GetEmail returns the value of Email.
func (s *ListPhoneUsersOKUsersItem) GetEmail() OptString {
	return s.Email
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListPhoneUsersOKUsersItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListPhoneUsersOKUsersItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *ListPhoneUsersOKUsersItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListPhoneUsersOKUsersItem) GetName() OptString {
	return s.Name
}

// GetPhoneUserID returns the value of PhoneUserID.
func (s *ListPhoneUsersOKUsersItem) GetPhoneUserID() OptString {
	return s.PhoneUserID
}

// GetSite returns the value of Site.
func (s *ListPhoneUsersOKUsersItem) GetSite() OptListPhoneUsersOKUsersItemSite {
	return s.Site
}

// GetStatus returns the value of Status.
func (s *ListPhoneUsersOKUsersItem) GetStatus() OptString {
	return s.Status
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *ListPhoneUsersOKUsersItem) GetPhoneNumbers() []ListPhoneUsersOKUsersItemPhoneNumbersItem {
	return s.PhoneNumbers
}

// GetDepartment returns the value of Department.
func (s *ListPhoneUsersOKUsersItem) GetDepartment() OptString {
	return s.Department
}

// GetCostCenter returns the value of CostCenter.
func (s *ListPhoneUsersOKUsersItem) GetCostCenter() OptString {
	return s.CostCenter
}

// SetCallingPlans sets the value of CallingPlans.
func (s *ListPhoneUsersOKUsersItem) SetCallingPlans(val []ListPhoneUsersOKUsersItemCallingPlansItem) {
	s.CallingPlans = val
}

// SetEmail sets the value of Email.
func (s *ListPhoneUsersOKUsersItem) SetEmail(val OptString) {
	s.Email = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListPhoneUsersOKUsersItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListPhoneUsersOKUsersItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *ListPhoneUsersOKUsersItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListPhoneUsersOKUsersItem) SetName(val OptString) {
	s.Name = val
}

// SetPhoneUserID sets the value of PhoneUserID.
func (s *ListPhoneUsersOKUsersItem) SetPhoneUserID(val OptString) {
	s.PhoneUserID = val
}

// SetSite sets the value of Site.
func (s *ListPhoneUsersOKUsersItem) SetSite(val OptListPhoneUsersOKUsersItemSite) {
	s.Site = val
}

// SetStatus sets the value of Status.
func (s *ListPhoneUsersOKUsersItem) SetStatus(val OptString) {
	s.Status = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *ListPhoneUsersOKUsersItem) SetPhoneNumbers(val []ListPhoneUsersOKUsersItemPhoneNumbersItem) {
	s.PhoneNumbers = val
}

// SetDepartment sets the value of Department.
func (s *ListPhoneUsersOKUsersItem) SetDepartment(val OptString) {
	s.Department = val
}

// SetCostCenter sets the value of CostCenter.
func (s *ListPhoneUsersOKUsersItem) SetCostCenter(val OptString) {
	s.CostCenter = val
}

type ListPhoneUsersOKUsersItemCallingPlansItem struct {
	// The name of the user's calling plan.
	Name OptString `json:"name"`
	// The type of calling plan where the user is enrolled.
	Type OptInt `json:"type"`
	// The billing account ID. It displays when the user is located in India.
	BillingAccountID OptString `json:"billing_account_id"`
	// The billing account name. It displays when the user is located in India.
	BillingAccountName OptString `json:"billing_account_name"`
}

// GetName returns the value of Name.
func (s *ListPhoneUsersOKUsersItemCallingPlansItem) GetName() OptString {
	return s.Name
}

// GetType returns the value of Type.
func (s *ListPhoneUsersOKUsersItemCallingPlansItem) GetType() OptInt {
	return s.Type
}

// GetBillingAccountID returns the value of BillingAccountID.
func (s *ListPhoneUsersOKUsersItemCallingPlansItem) GetBillingAccountID() OptString {
	return s.BillingAccountID
}

// GetBillingAccountName returns the value of BillingAccountName.
func (s *ListPhoneUsersOKUsersItemCallingPlansItem) GetBillingAccountName() OptString {
	return s.BillingAccountName
}

// SetName sets the value of Name.
func (s *ListPhoneUsersOKUsersItemCallingPlansItem) SetName(val OptString) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *ListPhoneUsersOKUsersItemCallingPlansItem) SetType(val OptInt) {
	s.Type = val
}

// SetBillingAccountID sets the value of BillingAccountID.
func (s *ListPhoneUsersOKUsersItemCallingPlansItem) SetBillingAccountID(val OptString) {
	s.BillingAccountID = val
}

// SetBillingAccountName sets the value of BillingAccountName.
func (s *ListPhoneUsersOKUsersItemCallingPlansItem) SetBillingAccountName(val OptString) {
	s.BillingAccountName = val
}

type ListPhoneUsersOKUsersItemPhoneNumbersItem struct {
	// The phone number ID.
	ID OptString `json:"id"`
	// The phone number.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *ListPhoneUsersOKUsersItemPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *ListPhoneUsersOKUsersItemPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *ListPhoneUsersOKUsersItemPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *ListPhoneUsersOKUsersItemPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

type ListPhoneUsersOKUsersItemSite struct {
	// The unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
	ID OptString `json:"id"`
	// The name of the site.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListPhoneUsersOKUsersItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListPhoneUsersOKUsersItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListPhoneUsersOKUsersItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListPhoneUsersOKUsersItemSite) SetName(val OptString) {
	s.Name = val
}

type ListPortedNumbersOK struct {
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single API call.
	PageSize      OptInt                                 `json:"page_size"`
	PortedNumbers []ListPortedNumbersOKPortedNumbersItem `json:"ported_numbers"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListPortedNumbersOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListPortedNumbersOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetPortedNumbers returns the value of PortedNumbers.
func (s *ListPortedNumbersOK) GetPortedNumbers() []ListPortedNumbersOKPortedNumbersItem {
	return s.PortedNumbers
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListPortedNumbersOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListPortedNumbersOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListPortedNumbersOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetPortedNumbers sets the value of PortedNumbers.
func (s *ListPortedNumbersOK) SetPortedNumbers(val []ListPortedNumbersOKPortedNumbersItem) {
	s.PortedNumbers = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListPortedNumbersOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListPortedNumbersOKPortedNumbersItem struct {
	// The ported numbers.
	Numbers []string `json:"numbers"`
	// The ported numbers' order ID.
	OrderID OptString `json:"order_id"`
	// The ported numbers' replacement numbers.
	ReplacingNumbers []ListPortedNumbersOKPortedNumbersItemReplacingNumbersItem `json:"replacing_numbers"`
	// The ported numbers' status.
	Status OptString `json:"status"`
	// The time ported numbers were submitted (format: 'yyyy-MM-ddThh:dd:ssZ').
	SubmissionDateTime OptString `json:"submission_date_time"`
}

// GetNumbers returns the value of Numbers.
func (s *ListPortedNumbersOKPortedNumbersItem) GetNumbers() []string {
	return s.Numbers
}

// GetOrderID returns the value of OrderID.
func (s *ListPortedNumbersOKPortedNumbersItem) GetOrderID() OptString {
	return s.OrderID
}

// GetReplacingNumbers returns the value of ReplacingNumbers.
func (s *ListPortedNumbersOKPortedNumbersItem) GetReplacingNumbers() []ListPortedNumbersOKPortedNumbersItemReplacingNumbersItem {
	return s.ReplacingNumbers
}

// GetStatus returns the value of Status.
func (s *ListPortedNumbersOKPortedNumbersItem) GetStatus() OptString {
	return s.Status
}

// GetSubmissionDateTime returns the value of SubmissionDateTime.
func (s *ListPortedNumbersOKPortedNumbersItem) GetSubmissionDateTime() OptString {
	return s.SubmissionDateTime
}

// SetNumbers sets the value of Numbers.
func (s *ListPortedNumbersOKPortedNumbersItem) SetNumbers(val []string) {
	s.Numbers = val
}

// SetOrderID sets the value of OrderID.
func (s *ListPortedNumbersOKPortedNumbersItem) SetOrderID(val OptString) {
	s.OrderID = val
}

// SetReplacingNumbers sets the value of ReplacingNumbers.
func (s *ListPortedNumbersOKPortedNumbersItem) SetReplacingNumbers(val []ListPortedNumbersOKPortedNumbersItemReplacingNumbersItem) {
	s.ReplacingNumbers = val
}

// SetStatus sets the value of Status.
func (s *ListPortedNumbersOKPortedNumbersItem) SetStatus(val OptString) {
	s.Status = val
}

// SetSubmissionDateTime sets the value of SubmissionDateTime.
func (s *ListPortedNumbersOKPortedNumbersItem) SetSubmissionDateTime(val OptString) {
	s.SubmissionDateTime = val
}

type ListPortedNumbersOKPortedNumbersItemReplacingNumbersItem struct {
	// The source number.
	SourceNumber OptString `json:"source_number"`
	// The replaced number.
	TargetNumber OptString `json:"target_number"`
}

// GetSourceNumber returns the value of SourceNumber.
func (s *ListPortedNumbersOKPortedNumbersItemReplacingNumbersItem) GetSourceNumber() OptString {
	return s.SourceNumber
}

// GetTargetNumber returns the value of TargetNumber.
func (s *ListPortedNumbersOKPortedNumbersItemReplacingNumbersItem) GetTargetNumber() OptString {
	return s.TargetNumber
}

// SetSourceNumber sets the value of SourceNumber.
func (s *ListPortedNumbersOKPortedNumbersItemReplacingNumbersItem) SetSourceNumber(val OptString) {
	s.SourceNumber = val
}

// SetTargetNumber sets the value of TargetNumber.
func (s *ListPortedNumbersOKPortedNumbersItemReplacingNumbersItem) SetTargetNumber(val OptString) {
	s.TargetNumber = val
}

type ListRoleMembersOK struct {
	// Member list.
	Members []ListRoleMembersOKMembersItem `json:"members"`
}

// GetMembers returns the value of Members.
func (s *ListRoleMembersOK) GetMembers() []ListRoleMembersOKMembersItem {
	return s.Members
}

// SetMembers sets the value of Members.
func (s *ListRoleMembersOK) SetMembers(val []ListRoleMembersOKMembersItem) {
	s.Members = val
}

type ListRoleMembersOKMembersItem struct {
	// The user ID.
	UserID OptString `json:"user_id"`
	// Display name.
	DisplayName OptString `json:"display_name"`
	// Email.
	Email OptString `json:"email"`
	// Extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// Site.
	Site OptListRoleMembersOKMembersItemSite `json:"site"`
}

// GetUserID returns the value of UserID.
func (s *ListRoleMembersOKMembersItem) GetUserID() OptString {
	return s.UserID
}

// GetDisplayName returns the value of DisplayName.
func (s *ListRoleMembersOKMembersItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetEmail returns the value of Email.
func (s *ListRoleMembersOKMembersItem) GetEmail() OptString {
	return s.Email
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListRoleMembersOKMembersItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetSite returns the value of Site.
func (s *ListRoleMembersOKMembersItem) GetSite() OptListRoleMembersOKMembersItemSite {
	return s.Site
}

// SetUserID sets the value of UserID.
func (s *ListRoleMembersOKMembersItem) SetUserID(val OptString) {
	s.UserID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ListRoleMembersOKMembersItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetEmail sets the value of Email.
func (s *ListRoleMembersOKMembersItem) SetEmail(val OptString) {
	s.Email = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListRoleMembersOKMembersItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetSite sets the value of Site.
func (s *ListRoleMembersOKMembersItem) SetSite(val OptListRoleMembersOKMembersItemSite) {
	s.Site = val
}

// Site.
type ListRoleMembersOKMembersItemSite struct {
	// Unique identifier of the site.
	ID OptString `json:"id"`
	// Site name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListRoleMembersOKMembersItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListRoleMembersOKMembersItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListRoleMembersOKMembersItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListRoleMembersOKMembersItemSite) SetName(val OptString) {
	s.Name = val
}

type ListRoutingRuleOKItem struct {
	// The routing rule name.
	Name OptString `json:"name"`
	// The Perl-compatible number_pattern expression.
	NumberPattern OptString `json:"number_pattern"`
	// The rule order to be applied: '1' being the highest.
	Order       OptInt                              `json:"order"`
	RoutingPath OptListRoutingRuleOKItemRoutingPath `json:"routing_path"`
	// The Unique identifier of the routing rule.
	RoutingRuleID OptString `json:"routing_rule_id"`
	// The unique identifier of the site: nullable if the routing rule is at an account level.
	SiteID OptString `json:"site_id"`
	// The optional replacement pattern: must be in E.164 format.
	Translation OptString `json:"translation"`
}

// GetName returns the value of Name.
func (s *ListRoutingRuleOKItem) GetName() OptString {
	return s.Name
}

// GetNumberPattern returns the value of NumberPattern.
func (s *ListRoutingRuleOKItem) GetNumberPattern() OptString {
	return s.NumberPattern
}

// GetOrder returns the value of Order.
func (s *ListRoutingRuleOKItem) GetOrder() OptInt {
	return s.Order
}

// GetRoutingPath returns the value of RoutingPath.
func (s *ListRoutingRuleOKItem) GetRoutingPath() OptListRoutingRuleOKItemRoutingPath {
	return s.RoutingPath
}

// GetRoutingRuleID returns the value of RoutingRuleID.
func (s *ListRoutingRuleOKItem) GetRoutingRuleID() OptString {
	return s.RoutingRuleID
}

// GetSiteID returns the value of SiteID.
func (s *ListRoutingRuleOKItem) GetSiteID() OptString {
	return s.SiteID
}

// GetTranslation returns the value of Translation.
func (s *ListRoutingRuleOKItem) GetTranslation() OptString {
	return s.Translation
}

// SetName sets the value of Name.
func (s *ListRoutingRuleOKItem) SetName(val OptString) {
	s.Name = val
}

// SetNumberPattern sets the value of NumberPattern.
func (s *ListRoutingRuleOKItem) SetNumberPattern(val OptString) {
	s.NumberPattern = val
}

// SetOrder sets the value of Order.
func (s *ListRoutingRuleOKItem) SetOrder(val OptInt) {
	s.Order = val
}

// SetRoutingPath sets the value of RoutingPath.
func (s *ListRoutingRuleOKItem) SetRoutingPath(val OptListRoutingRuleOKItemRoutingPath) {
	s.RoutingPath = val
}

// SetRoutingRuleID sets the value of RoutingRuleID.
func (s *ListRoutingRuleOKItem) SetRoutingRuleID(val OptString) {
	s.RoutingRuleID = val
}

// SetSiteID sets the value of SiteID.
func (s *ListRoutingRuleOKItem) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetTranslation sets the value of Translation.
func (s *ListRoutingRuleOKItem) SetTranslation(val OptString) {
	s.Translation = val
}

type ListRoutingRuleOKItemRoutingPath struct {
	// It cannot be null when 'type' = 'sip_group'.
	SipGroup OptListRoutingRuleOKItemRoutingPathSipGroup `json:"sip_group"`
	// The routing rule type.
	Type OptString `json:"type"`
}

// GetSipGroup returns the value of SipGroup.
func (s *ListRoutingRuleOKItemRoutingPath) GetSipGroup() OptListRoutingRuleOKItemRoutingPathSipGroup {
	return s.SipGroup
}

// GetType returns the value of Type.
func (s *ListRoutingRuleOKItemRoutingPath) GetType() OptString {
	return s.Type
}

// SetSipGroup sets the value of SipGroup.
func (s *ListRoutingRuleOKItemRoutingPath) SetSipGroup(val OptListRoutingRuleOKItemRoutingPathSipGroup) {
	s.SipGroup = val
}

// SetType sets the value of Type.
func (s *ListRoutingRuleOKItemRoutingPath) SetType(val OptString) {
	s.Type = val
}

// It cannot be null when 'type' = 'sip_group'.
type ListRoutingRuleOKItemRoutingPathSipGroup struct {
	// The unique identifier of the SIP group.
	ID OptString `json:"id"`
	// The SIP group name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListRoutingRuleOKItemRoutingPathSipGroup) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListRoutingRuleOKItemRoutingPathSipGroup) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListRoutingRuleOKItemRoutingPathSipGroup) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListRoutingRuleOKItemRoutingPathSipGroup) SetName(val OptString) {
	s.Name = val
}

type ListSettingTemplatesOK struct {
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single API call. The default is **30** and the maximum is
	// **300**.
	PageSize  OptInt                                `json:"page_size"`
	Templates []ListSettingTemplatesOKTemplatesItem `json:"templates"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListSettingTemplatesOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListSettingTemplatesOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTemplates returns the value of Templates.
func (s *ListSettingTemplatesOK) GetTemplates() []ListSettingTemplatesOKTemplatesItem {
	return s.Templates
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListSettingTemplatesOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListSettingTemplatesOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListSettingTemplatesOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTemplates sets the value of Templates.
func (s *ListSettingTemplatesOK) SetTemplates(val []ListSettingTemplatesOKTemplatesItem) {
	s.Templates = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListSettingTemplatesOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListSettingTemplatesOKTemplatesItem struct {
	// Template description.
	Description OptString `json:"description"`
	// Unique identifier of the template.
	ID OptString `json:"id"`
	// Template name.
	Name OptString `json:"name"`
	// Template type.
	// The value of this field can be one of the following:
	// * `user`
	// * `group`
	// * `autReceptionist`
	// * `commonArea`
	// * `zr`
	// * `interop`.
	Type OptString `json:"type"`
}

// GetDescription returns the value of Description.
func (s *ListSettingTemplatesOKTemplatesItem) GetDescription() OptString {
	return s.Description
}

// GetID returns the value of ID.
func (s *ListSettingTemplatesOKTemplatesItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListSettingTemplatesOKTemplatesItem) GetName() OptString {
	return s.Name
}

// GetType returns the value of Type.
func (s *ListSettingTemplatesOKTemplatesItem) GetType() OptString {
	return s.Type
}

// SetDescription sets the value of Description.
func (s *ListSettingTemplatesOKTemplatesItem) SetDescription(val OptString) {
	s.Description = val
}

// SetID sets the value of ID.
func (s *ListSettingTemplatesOKTemplatesItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListSettingTemplatesOKTemplatesItem) SetName(val OptString) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *ListSettingTemplatesOKTemplatesItem) SetType(val OptString) {
	s.Type = val
}

type ListSharedLineAppearancesOK struct {
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single API call.
	PageSize              OptInt                                                 `json:"page_size"`
	SharedLineAppearances []ListSharedLineAppearancesOKSharedLineAppearancesItem `json:"shared_line_appearances"`
	// Total records found in the response for this request.
	TotalRecords OptInt `json:"total_records"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListSharedLineAppearancesOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListSharedLineAppearancesOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetSharedLineAppearances returns the value of SharedLineAppearances.
func (s *ListSharedLineAppearancesOK) GetSharedLineAppearances() []ListSharedLineAppearancesOKSharedLineAppearancesItem {
	return s.SharedLineAppearances
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListSharedLineAppearancesOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListSharedLineAppearancesOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListSharedLineAppearancesOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetSharedLineAppearances sets the value of SharedLineAppearances.
func (s *ListSharedLineAppearancesOK) SetSharedLineAppearances(val []ListSharedLineAppearancesOKSharedLineAppearancesItem) {
	s.SharedLineAppearances = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListSharedLineAppearancesOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListSharedLineAppearancesOKSharedLineAppearancesItem struct {
	Executive  OptListSharedLineAppearancesOKSharedLineAppearancesItemExecutive     `json:"executive"`
	Assistants []ListSharedLineAppearancesOKSharedLineAppearancesItemAssistantsItem `json:"assistants"`
	Privileges []string                                                             `json:"privileges"`
}

// GetExecutive returns the value of Executive.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItem) GetExecutive() OptListSharedLineAppearancesOKSharedLineAppearancesItemExecutive {
	return s.Executive
}

// GetAssistants returns the value of Assistants.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItem) GetAssistants() []ListSharedLineAppearancesOKSharedLineAppearancesItemAssistantsItem {
	return s.Assistants
}

// GetPrivileges returns the value of Privileges.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItem) GetPrivileges() []string {
	return s.Privileges
}

// SetExecutive sets the value of Executive.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItem) SetExecutive(val OptListSharedLineAppearancesOKSharedLineAppearancesItemExecutive) {
	s.Executive = val
}

// SetAssistants sets the value of Assistants.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItem) SetAssistants(val []ListSharedLineAppearancesOKSharedLineAppearancesItemAssistantsItem) {
	s.Assistants = val
}

// SetPrivileges sets the value of Privileges.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItem) SetPrivileges(val []string) {
	s.Privileges = val
}

type ListSharedLineAppearancesOKSharedLineAppearancesItemAssistantsItem struct {
	// The user ID.
	ID OptString `json:"id"`
	// The assistant name.
	Name OptString `json:"name"`
	// The extension number assigned to the assistant.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The extension type.
	ExtensionType OptString `json:"extension_type"`
}

// GetID returns the value of ID.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItemAssistantsItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItemAssistantsItem) GetName() OptString {
	return s.Name
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItemAssistantsItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItemAssistantsItem) GetExtensionType() OptString {
	return s.ExtensionType
}

// SetID sets the value of ID.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItemAssistantsItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItemAssistantsItem) SetName(val OptString) {
	s.Name = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItemAssistantsItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItemAssistantsItem) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

type ListSharedLineAppearancesOKSharedLineAppearancesItemExecutive struct {
	// The name of the executive in this shared line appearance.
	Name OptString `json:"name"`
	// The extension number assigned to the executive.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The extension type.
	ExtensionType OptString `json:"extension_type"`
}

// GetName returns the value of Name.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItemExecutive) GetName() OptString {
	return s.Name
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItemExecutive) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItemExecutive) GetExtensionType() OptString {
	return s.ExtensionType
}

// SetName sets the value of Name.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItemExecutive) SetName(val OptString) {
	s.Name = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItemExecutive) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *ListSharedLineAppearancesOKSharedLineAppearancesItemExecutive) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

type ListSharedLineGroupsOK struct {
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single API call.
	PageSize         OptInt                                       `json:"page_size"`
	SharedLineGroups []ListSharedLineGroupsOKSharedLineGroupsItem `json:"shared_line_groups"`
	// The total records found in the response for this request.
	TotalRecords OptInt `json:"total_records"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListSharedLineGroupsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListSharedLineGroupsOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetSharedLineGroups returns the value of SharedLineGroups.
func (s *ListSharedLineGroupsOK) GetSharedLineGroups() []ListSharedLineGroupsOKSharedLineGroupsItem {
	return s.SharedLineGroups
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListSharedLineGroupsOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListSharedLineGroupsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListSharedLineGroupsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetSharedLineGroups sets the value of SharedLineGroups.
func (s *ListSharedLineGroupsOK) SetSharedLineGroups(val []ListSharedLineGroupsOKSharedLineGroupsItem) {
	s.SharedLineGroups = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListSharedLineGroupsOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListSharedLineGroupsOKSharedLineGroupsItem struct {
	// The display name of the shared line group.
	DisplayName OptString `json:"display_name"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number assigned to the Shared Line Group.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The unique identifier of the Shared Line Group.
	ID OptString `json:"id"`
	// The phone numbers assigned to the shared line group.
	PhoneNumbers []ListSharedLineGroupsOKSharedLineGroupsItemPhoneNumbersItem `json:"phone_numbers"`
	Site         OptListSharedLineGroupsOKSharedLineGroupsItemSite            `json:"site"`
	// The status of the shared line group.
	Status OptString `json:"status"`
}

// GetDisplayName returns the value of DisplayName.
func (s *ListSharedLineGroupsOKSharedLineGroupsItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListSharedLineGroupsOKSharedLineGroupsItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListSharedLineGroupsOKSharedLineGroupsItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *ListSharedLineGroupsOKSharedLineGroupsItem) GetID() OptString {
	return s.ID
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *ListSharedLineGroupsOKSharedLineGroupsItem) GetPhoneNumbers() []ListSharedLineGroupsOKSharedLineGroupsItemPhoneNumbersItem {
	return s.PhoneNumbers
}

// GetSite returns the value of Site.
func (s *ListSharedLineGroupsOKSharedLineGroupsItem) GetSite() OptListSharedLineGroupsOKSharedLineGroupsItemSite {
	return s.Site
}

// GetStatus returns the value of Status.
func (s *ListSharedLineGroupsOKSharedLineGroupsItem) GetStatus() OptString {
	return s.Status
}

// SetDisplayName sets the value of DisplayName.
func (s *ListSharedLineGroupsOKSharedLineGroupsItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListSharedLineGroupsOKSharedLineGroupsItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListSharedLineGroupsOKSharedLineGroupsItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *ListSharedLineGroupsOKSharedLineGroupsItem) SetID(val OptString) {
	s.ID = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *ListSharedLineGroupsOKSharedLineGroupsItem) SetPhoneNumbers(val []ListSharedLineGroupsOKSharedLineGroupsItemPhoneNumbersItem) {
	s.PhoneNumbers = val
}

// SetSite sets the value of Site.
func (s *ListSharedLineGroupsOKSharedLineGroupsItem) SetSite(val OptListSharedLineGroupsOKSharedLineGroupsItemSite) {
	s.Site = val
}

// SetStatus sets the value of Status.
func (s *ListSharedLineGroupsOKSharedLineGroupsItem) SetStatus(val OptString) {
	s.Status = val
}

type ListSharedLineGroupsOKSharedLineGroupsItemPhoneNumbersItem struct {
	// The unique identifier of the phone number.
	ID OptString `json:"id"`
	// The phone number in E164 format.
	Number OptString `json:"number"`
	// The status of the number.
	Status OptString `json:"status"`
}

// GetID returns the value of ID.
func (s *ListSharedLineGroupsOKSharedLineGroupsItemPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *ListSharedLineGroupsOKSharedLineGroupsItemPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// GetStatus returns the value of Status.
func (s *ListSharedLineGroupsOKSharedLineGroupsItemPhoneNumbersItem) GetStatus() OptString {
	return s.Status
}

// SetID sets the value of ID.
func (s *ListSharedLineGroupsOKSharedLineGroupsItemPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *ListSharedLineGroupsOKSharedLineGroupsItemPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

// SetStatus sets the value of Status.
func (s *ListSharedLineGroupsOKSharedLineGroupsItemPhoneNumbersItem) SetStatus(val OptString) {
	s.Status = val
}

type ListSharedLineGroupsOKSharedLineGroupsItemSite struct {
	// The unique identifier of the [site](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/getASite).
	ID OptString `json:"id"`
	// The name of the site.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListSharedLineGroupsOKSharedLineGroupsItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListSharedLineGroupsOKSharedLineGroupsItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListSharedLineGroupsOKSharedLineGroupsItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListSharedLineGroupsOKSharedLineGroupsItemSite) SetName(val OptString) {
	s.Name = val
}

type ListSipGroupsOK struct {
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned with a single API call.
	PageSize OptInt `json:"page_size"`
	// SIP group information.
	SipGroups []ListSipGroupsOKSipGroupsItem `json:"sip_groups"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListSipGroupsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListSipGroupsOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetSipGroups returns the value of SipGroups.
func (s *ListSipGroupsOK) GetSipGroups() []ListSipGroupsOKSipGroupsItem {
	return s.SipGroups
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListSipGroupsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListSipGroupsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetSipGroups sets the value of SipGroups.
func (s *ListSipGroupsOK) SetSipGroups(val []ListSipGroupsOKSipGroupsItem) {
	s.SipGroups = val
}

type ListSipGroupsOKSipGroupsItem struct {
	// The SIP group's description.
	Description OptString `json:"description"`
	// The SIP group's display name.
	DisplayName OptString `json:"display_name"`
	// The SIP group's ID.
	ID OptString `json:"id"`
	// Whether the SIP group's name is sent in the SIP header.
	SendSipGroupName OptBool `json:"send_sip_group_name"`
	// The SIP trunk group.
	SipTrunk OptListSipGroupsOKSipGroupsItemSipTrunk `json:"sip_trunk"`
}

// GetDescription returns the value of Description.
func (s *ListSipGroupsOKSipGroupsItem) GetDescription() OptString {
	return s.Description
}

// GetDisplayName returns the value of DisplayName.
func (s *ListSipGroupsOKSipGroupsItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetID returns the value of ID.
func (s *ListSipGroupsOKSipGroupsItem) GetID() OptString {
	return s.ID
}

// GetSendSipGroupName returns the value of SendSipGroupName.
func (s *ListSipGroupsOKSipGroupsItem) GetSendSipGroupName() OptBool {
	return s.SendSipGroupName
}

// GetSipTrunk returns the value of SipTrunk.
func (s *ListSipGroupsOKSipGroupsItem) GetSipTrunk() OptListSipGroupsOKSipGroupsItemSipTrunk {
	return s.SipTrunk
}

// SetDescription sets the value of Description.
func (s *ListSipGroupsOKSipGroupsItem) SetDescription(val OptString) {
	s.Description = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ListSipGroupsOKSipGroupsItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetID sets the value of ID.
func (s *ListSipGroupsOKSipGroupsItem) SetID(val OptString) {
	s.ID = val
}

// SetSendSipGroupName sets the value of SendSipGroupName.
func (s *ListSipGroupsOKSipGroupsItem) SetSendSipGroupName(val OptBool) {
	s.SendSipGroupName = val
}

// SetSipTrunk sets the value of SipTrunk.
func (s *ListSipGroupsOKSipGroupsItem) SetSipTrunk(val OptListSipGroupsOKSipGroupsItemSipTrunk) {
	s.SipTrunk = val
}

// The SIP trunk group.
type ListSipGroupsOKSipGroupsItemSipTrunk struct {
	// The SIP trunk group's ID.
	ID OptString `json:"id"`
	// The SIP trunk group's name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListSipGroupsOKSipGroupsItemSipTrunk) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListSipGroupsOKSipGroupsItemSipTrunk) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListSipGroupsOKSipGroupsItemSipTrunk) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListSipGroupsOKSipGroupsItemSipTrunk) SetName(val OptString) {
	s.Name = val
}

type ListSiteCustomizeOutboundCallerNumbersOK struct {
	CustomizeNumbers []ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem `json:"customize_numbers"`
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single API call for each page.
	PageSize OptInt `json:"page_size"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
}

// GetCustomizeNumbers returns the value of CustomizeNumbers.
func (s *ListSiteCustomizeOutboundCallerNumbersOK) GetCustomizeNumbers() []ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem {
	return s.CustomizeNumbers
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListSiteCustomizeOutboundCallerNumbersOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListSiteCustomizeOutboundCallerNumbersOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListSiteCustomizeOutboundCallerNumbersOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetCustomizeNumbers sets the value of CustomizeNumbers.
func (s *ListSiteCustomizeOutboundCallerNumbersOK) SetCustomizeNumbers(val []ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) {
	s.CustomizeNumbers = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListSiteCustomizeOutboundCallerNumbersOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListSiteCustomizeOutboundCallerNumbersOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListSiteCustomizeOutboundCallerNumbersOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem struct {
	// The customization ID.
	CustomizeID OptString `json:"customize_id"`
	// ID of the phone number.
	PhoneNumberID OptString `json:"phone_number_id"`
	// The phone number in E164 format.
	PhoneNumber OptString `json:"phone_number"`
	// Name of the phone number.
	DisplayName OptString `json:"display_name"`
	// Whether the incoming policy is enabled for the phone number.
	Incoming OptBool `json:"incoming"`
	// Whether the outgoing policy is enabled for the phone number.
	Outgoing OptBool `json:"outgoing"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension type.
	ExtensionType OptString `json:"extension_type"`
	// The extension number.
	ExtensionNumber OptString `json:"extension_number"`
	// The extension name.
	ExtensionName OptString                                                           `json:"extension_name"`
	Site          OptListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite `json:"site"`
}

// GetCustomizeID returns the value of CustomizeID.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetCustomizeID() OptString {
	return s.CustomizeID
}

// GetPhoneNumberID returns the value of PhoneNumberID.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetPhoneNumberID() OptString {
	return s.PhoneNumberID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetDisplayName returns the value of DisplayName.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetIncoming returns the value of Incoming.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetIncoming() OptBool {
	return s.Incoming
}

// GetOutgoing returns the value of Outgoing.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetOutgoing() OptBool {
	return s.Outgoing
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionType returns the value of ExtensionType.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetExtensionName returns the value of ExtensionName.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetExtensionName() OptString {
	return s.ExtensionName
}

// GetSite returns the value of Site.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetSite() OptListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite {
	return s.Site
}

// SetCustomizeID sets the value of CustomizeID.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetCustomizeID(val OptString) {
	s.CustomizeID = val
}

// SetPhoneNumberID sets the value of PhoneNumberID.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetPhoneNumberID(val OptString) {
	s.PhoneNumberID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetIncoming sets the value of Incoming.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetIncoming(val OptBool) {
	s.Incoming = val
}

// SetOutgoing sets the value of Outgoing.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetOutgoing(val OptBool) {
	s.Outgoing = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetExtensionName sets the value of ExtensionName.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetExtensionName(val OptString) {
	s.ExtensionName = val
}

// SetSite sets the value of Site.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetSite(val OptListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) {
	s.Site = val
}

type ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite struct {
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
	ID OptString `json:"id"`
	// Name of the site.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) SetName(val OptString) {
	s.Name = val
}

type ListSiteOutboundCallingExceptionRuleOK struct {
	ExceptionRules []ListSiteOutboundCallingExceptionRuleOKExceptionRulesItem `json:"exception_rules"`
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The total number of records in single API call.
	PageSize OptInt `json:"page_size"`
}

// GetExceptionRules returns the value of ExceptionRules.
func (s *ListSiteOutboundCallingExceptionRuleOK) GetExceptionRules() []ListSiteOutboundCallingExceptionRuleOKExceptionRulesItem {
	return s.ExceptionRules
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListSiteOutboundCallingExceptionRuleOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListSiteOutboundCallingExceptionRuleOK) GetPageSize() OptInt {
	return s.PageSize
}

// SetExceptionRules sets the value of ExceptionRules.
func (s *ListSiteOutboundCallingExceptionRuleOK) SetExceptionRules(val []ListSiteOutboundCallingExceptionRuleOKExceptionRulesItem) {
	s.ExceptionRules = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListSiteOutboundCallingExceptionRuleOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListSiteOutboundCallingExceptionRuleOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

type ListSiteOutboundCallingExceptionRuleOKExceptionRulesItem struct {
	// The exception rule ID.
	ID OptString `json:"id"`
	// The match type for the exception rule:
	// `phoneNumber`and `prefix`.
	MatchType OptString `json:"match_type"`
	// The exception rule phone number prefix or phone number without country code.
	PrefixNumber OptString `json:"prefix_number"`
	// The exception rule type `1` - allowed, `2` - blocked, `3` - require local number, caller ID or
	// plan, `4` - require to enter the extension number and PIN code.
	Rule OptInt `json:"rule"`
	// A comment to help you identify the exception rule number or prefix.
	Comment OptString `json:"comment"`
	// Whether the exception rule is active or inactive.
	// `active`: The exception rule is active.
	// `inactive`: The exception rule is inactive.
	Status OptString `json:"status"`
}

// GetID returns the value of ID.
func (s *ListSiteOutboundCallingExceptionRuleOKExceptionRulesItem) GetID() OptString {
	return s.ID
}

// GetMatchType returns the value of MatchType.
func (s *ListSiteOutboundCallingExceptionRuleOKExceptionRulesItem) GetMatchType() OptString {
	return s.MatchType
}

// GetPrefixNumber returns the value of PrefixNumber.
func (s *ListSiteOutboundCallingExceptionRuleOKExceptionRulesItem) GetPrefixNumber() OptString {
	return s.PrefixNumber
}

// GetRule returns the value of Rule.
func (s *ListSiteOutboundCallingExceptionRuleOKExceptionRulesItem) GetRule() OptInt {
	return s.Rule
}

// GetComment returns the value of Comment.
func (s *ListSiteOutboundCallingExceptionRuleOKExceptionRulesItem) GetComment() OptString {
	return s.Comment
}

// GetStatus returns the value of Status.
func (s *ListSiteOutboundCallingExceptionRuleOKExceptionRulesItem) GetStatus() OptString {
	return s.Status
}

// SetID sets the value of ID.
func (s *ListSiteOutboundCallingExceptionRuleOKExceptionRulesItem) SetID(val OptString) {
	s.ID = val
}

// SetMatchType sets the value of MatchType.
func (s *ListSiteOutboundCallingExceptionRuleOKExceptionRulesItem) SetMatchType(val OptString) {
	s.MatchType = val
}

// SetPrefixNumber sets the value of PrefixNumber.
func (s *ListSiteOutboundCallingExceptionRuleOKExceptionRulesItem) SetPrefixNumber(val OptString) {
	s.PrefixNumber = val
}

// SetRule sets the value of Rule.
func (s *ListSiteOutboundCallingExceptionRuleOKExceptionRulesItem) SetRule(val OptInt) {
	s.Rule = val
}

// SetComment sets the value of Comment.
func (s *ListSiteOutboundCallingExceptionRuleOKExceptionRulesItem) SetComment(val OptString) {
	s.Comment = val
}

// SetStatus sets the value of Status.
func (s *ListSiteOutboundCallingExceptionRuleOKExceptionRulesItem) SetStatus(val OptString) {
	s.Status = val
}

type ListTrackedLocationsOK struct {
	LocationTracking []ListTrackedLocationsOKLocationTrackingItem `json:"location_tracking"`
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The total number of records returned from a single API call.
	PageSize OptInt `json:"page_size"`
	// The total number of records found for this query.
	TotalRecords OptInt `json:"total_records"`
}

// GetLocationTracking returns the value of LocationTracking.
func (s *ListTrackedLocationsOK) GetLocationTracking() []ListTrackedLocationsOKLocationTrackingItem {
	return s.LocationTracking
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListTrackedLocationsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListTrackedLocationsOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListTrackedLocationsOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetLocationTracking sets the value of LocationTracking.
func (s *ListTrackedLocationsOK) SetLocationTracking(val []ListTrackedLocationsOKLocationTrackingItem) {
	s.LocationTracking = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListTrackedLocationsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListTrackedLocationsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListTrackedLocationsOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListTrackedLocationsOKLocationTrackingItem struct {
	Assignees []ListTrackedLocationsOKLocationTrackingItemAssigneesItem `json:"assignees"`
	// The city of the location.
	City OptString `json:"city"`
	// The two-lettered country code (Aplha-2 code in ISO-3166 format) standard of the location.
	Country OptString                                           `json:"country"`
	Device  OptListTrackedLocationsOKLocationTrackingItemDevice `json:"device"`
	// The emergency location's address.
	EmergencyAddress OptString `json:"emergency_address"`
	// The location's name.
	Name          OptString                                                  `json:"name"`
	NetworkSwitch OptListTrackedLocationsOKLocationTrackingItemNetworkSwitch `json:"network_switch"`
	Site          OptListTrackedLocationsOKLocationTrackingItemSite          `json:"site"`
	// The type of location.
	Type OptString `json:"type"`
	// The zip code of the location.
	Zip OptString `json:"zip"`
}

// GetAssignees returns the value of Assignees.
func (s *ListTrackedLocationsOKLocationTrackingItem) GetAssignees() []ListTrackedLocationsOKLocationTrackingItemAssigneesItem {
	return s.Assignees
}

// GetCity returns the value of City.
func (s *ListTrackedLocationsOKLocationTrackingItem) GetCity() OptString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *ListTrackedLocationsOKLocationTrackingItem) GetCountry() OptString {
	return s.Country
}

// GetDevice returns the value of Device.
func (s *ListTrackedLocationsOKLocationTrackingItem) GetDevice() OptListTrackedLocationsOKLocationTrackingItemDevice {
	return s.Device
}

// GetEmergencyAddress returns the value of EmergencyAddress.
func (s *ListTrackedLocationsOKLocationTrackingItem) GetEmergencyAddress() OptString {
	return s.EmergencyAddress
}

// GetName returns the value of Name.
func (s *ListTrackedLocationsOKLocationTrackingItem) GetName() OptString {
	return s.Name
}

// GetNetworkSwitch returns the value of NetworkSwitch.
func (s *ListTrackedLocationsOKLocationTrackingItem) GetNetworkSwitch() OptListTrackedLocationsOKLocationTrackingItemNetworkSwitch {
	return s.NetworkSwitch
}

// GetSite returns the value of Site.
func (s *ListTrackedLocationsOKLocationTrackingItem) GetSite() OptListTrackedLocationsOKLocationTrackingItemSite {
	return s.Site
}

// GetType returns the value of Type.
func (s *ListTrackedLocationsOKLocationTrackingItem) GetType() OptString {
	return s.Type
}

// GetZip returns the value of Zip.
func (s *ListTrackedLocationsOKLocationTrackingItem) GetZip() OptString {
	return s.Zip
}

// SetAssignees sets the value of Assignees.
func (s *ListTrackedLocationsOKLocationTrackingItem) SetAssignees(val []ListTrackedLocationsOKLocationTrackingItemAssigneesItem) {
	s.Assignees = val
}

// SetCity sets the value of City.
func (s *ListTrackedLocationsOKLocationTrackingItem) SetCity(val OptString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *ListTrackedLocationsOKLocationTrackingItem) SetCountry(val OptString) {
	s.Country = val
}

// SetDevice sets the value of Device.
func (s *ListTrackedLocationsOKLocationTrackingItem) SetDevice(val OptListTrackedLocationsOKLocationTrackingItemDevice) {
	s.Device = val
}

// SetEmergencyAddress sets the value of EmergencyAddress.
func (s *ListTrackedLocationsOKLocationTrackingItem) SetEmergencyAddress(val OptString) {
	s.EmergencyAddress = val
}

// SetName sets the value of Name.
func (s *ListTrackedLocationsOKLocationTrackingItem) SetName(val OptString) {
	s.Name = val
}

// SetNetworkSwitch sets the value of NetworkSwitch.
func (s *ListTrackedLocationsOKLocationTrackingItem) SetNetworkSwitch(val OptListTrackedLocationsOKLocationTrackingItemNetworkSwitch) {
	s.NetworkSwitch = val
}

// SetSite sets the value of Site.
func (s *ListTrackedLocationsOKLocationTrackingItem) SetSite(val OptListTrackedLocationsOKLocationTrackingItemSite) {
	s.Site = val
}

// SetType sets the value of Type.
func (s *ListTrackedLocationsOKLocationTrackingItem) SetType(val OptString) {
	s.Type = val
}

// SetZip sets the value of Zip.
func (s *ListTrackedLocationsOKLocationTrackingItem) SetZip(val OptString) {
	s.Zip = val
}

type ListTrackedLocationsOKLocationTrackingItemAssigneesItem struct {
	// The extension number of the user's Zoom Phone.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The user ID of the user with the assigned device.
	ID OptString `json:"id"`
	// The name of the user.
	Name OptString `json:"name"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListTrackedLocationsOKLocationTrackingItemAssigneesItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *ListTrackedLocationsOKLocationTrackingItemAssigneesItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListTrackedLocationsOKLocationTrackingItemAssigneesItem) GetName() OptString {
	return s.Name
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListTrackedLocationsOKLocationTrackingItemAssigneesItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *ListTrackedLocationsOKLocationTrackingItemAssigneesItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListTrackedLocationsOKLocationTrackingItemAssigneesItem) SetName(val OptString) {
	s.Name = val
}

type ListTrackedLocationsOKLocationTrackingItemDevice struct {
	// The device's BSSIDs (Basic Service Set Identifiers).
	Bssid OptString `json:"bssid"`
	// The device ID.
	ID OptString `json:"id"`
	// The MAC address or serial number of the device.
	MACAddress OptString `json:"mac_address"`
	// The device name.
	Name OptString `json:"name"`
	// The device's subnet or private IP address.
	PrivateIP OptString `json:"private_ip"`
	// The device's public IP address.
	PublicIP OptString `json:"public_ip"`
}

// GetBssid returns the value of Bssid.
func (s *ListTrackedLocationsOKLocationTrackingItemDevice) GetBssid() OptString {
	return s.Bssid
}

// GetID returns the value of ID.
func (s *ListTrackedLocationsOKLocationTrackingItemDevice) GetID() OptString {
	return s.ID
}

// GetMACAddress returns the value of MACAddress.
func (s *ListTrackedLocationsOKLocationTrackingItemDevice) GetMACAddress() OptString {
	return s.MACAddress
}

// GetName returns the value of Name.
func (s *ListTrackedLocationsOKLocationTrackingItemDevice) GetName() OptString {
	return s.Name
}

// GetPrivateIP returns the value of PrivateIP.
func (s *ListTrackedLocationsOKLocationTrackingItemDevice) GetPrivateIP() OptString {
	return s.PrivateIP
}

// GetPublicIP returns the value of PublicIP.
func (s *ListTrackedLocationsOKLocationTrackingItemDevice) GetPublicIP() OptString {
	return s.PublicIP
}

// SetBssid sets the value of Bssid.
func (s *ListTrackedLocationsOKLocationTrackingItemDevice) SetBssid(val OptString) {
	s.Bssid = val
}

// SetID sets the value of ID.
func (s *ListTrackedLocationsOKLocationTrackingItemDevice) SetID(val OptString) {
	s.ID = val
}

// SetMACAddress sets the value of MACAddress.
func (s *ListTrackedLocationsOKLocationTrackingItemDevice) SetMACAddress(val OptString) {
	s.MACAddress = val
}

// SetName sets the value of Name.
func (s *ListTrackedLocationsOKLocationTrackingItemDevice) SetName(val OptString) {
	s.Name = val
}

// SetPrivateIP sets the value of PrivateIP.
func (s *ListTrackedLocationsOKLocationTrackingItemDevice) SetPrivateIP(val OptString) {
	s.PrivateIP = val
}

// SetPublicIP sets the value of PublicIP.
func (s *ListTrackedLocationsOKLocationTrackingItemDevice) SetPublicIP(val OptString) {
	s.PublicIP = val
}

type ListTrackedLocationsOKLocationTrackingItemNetworkSwitch struct {
	// The MAC address or serial number of network switch.
	MACAddress OptString `json:"mac_address"`
	// The port of the network switch.
	Port OptString `json:"port"`
}

// GetMACAddress returns the value of MACAddress.
func (s *ListTrackedLocationsOKLocationTrackingItemNetworkSwitch) GetMACAddress() OptString {
	return s.MACAddress
}

// GetPort returns the value of Port.
func (s *ListTrackedLocationsOKLocationTrackingItemNetworkSwitch) GetPort() OptString {
	return s.Port
}

// SetMACAddress sets the value of MACAddress.
func (s *ListTrackedLocationsOKLocationTrackingItemNetworkSwitch) SetMACAddress(val OptString) {
	s.MACAddress = val
}

// SetPort sets the value of Port.
func (s *ListTrackedLocationsOKLocationTrackingItemNetworkSwitch) SetPort(val OptString) {
	s.Port = val
}

type ListTrackedLocationsOKLocationTrackingItemSite struct {
	// The unique identifier of the site.
	ID OptString `json:"id"`
	// The site name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListTrackedLocationsOKLocationTrackingItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListTrackedLocationsOKLocationTrackingItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListTrackedLocationsOKLocationTrackingItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListTrackedLocationsOKLocationTrackingItemSite) SetName(val OptString) {
	s.Name = val
}

type ListUnassignedZoomRoomsOK struct {
	Rooms []ListUnassignedZoomRoomsOKRoomsItem `json:"rooms"`
}

// GetRooms returns the value of Rooms.
func (s *ListUnassignedZoomRoomsOK) GetRooms() []ListUnassignedZoomRoomsOKRoomsItem {
	return s.Rooms
}

// SetRooms sets the value of Rooms.
func (s *ListUnassignedZoomRoomsOK) SetRooms(val []ListUnassignedZoomRoomsOKRoomsItem) {
	s.Rooms = val
}

type ListUnassignedZoomRoomsOKRoomsItem struct {
	// The Zoom Room ID.
	ID OptString `json:"id"`
	// Name of the Zoom Room.
	DisplayName OptString `json:"display_name"`
	// The Zoom Room location ID.
	LocationID OptString `json:"location_id"`
	// The Zoom Room location information.
	LocationInfo OptString `json:"location_info"`
	// The department the Zoom Room belongs to.
	Department OptString `json:"department"`
	// The cost center the Zoom Room belongs to.
	CostCenter OptString `json:"cost_center"`
}

// GetID returns the value of ID.
func (s *ListUnassignedZoomRoomsOKRoomsItem) GetID() OptString {
	return s.ID
}

// GetDisplayName returns the value of DisplayName.
func (s *ListUnassignedZoomRoomsOKRoomsItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetLocationID returns the value of LocationID.
func (s *ListUnassignedZoomRoomsOKRoomsItem) GetLocationID() OptString {
	return s.LocationID
}

// GetLocationInfo returns the value of LocationInfo.
func (s *ListUnassignedZoomRoomsOKRoomsItem) GetLocationInfo() OptString {
	return s.LocationInfo
}

// GetDepartment returns the value of Department.
func (s *ListUnassignedZoomRoomsOKRoomsItem) GetDepartment() OptString {
	return s.Department
}

// GetCostCenter returns the value of CostCenter.
func (s *ListUnassignedZoomRoomsOKRoomsItem) GetCostCenter() OptString {
	return s.CostCenter
}

// SetID sets the value of ID.
func (s *ListUnassignedZoomRoomsOKRoomsItem) SetID(val OptString) {
	s.ID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ListUnassignedZoomRoomsOKRoomsItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetLocationID sets the value of LocationID.
func (s *ListUnassignedZoomRoomsOKRoomsItem) SetLocationID(val OptString) {
	s.LocationID = val
}

// SetLocationInfo sets the value of LocationInfo.
func (s *ListUnassignedZoomRoomsOKRoomsItem) SetLocationInfo(val OptString) {
	s.LocationInfo = val
}

// SetDepartment sets the value of Department.
func (s *ListUnassignedZoomRoomsOKRoomsItem) SetDepartment(val OptString) {
	s.Department = val
}

// SetCostCenter sets the value of CostCenter.
func (s *ListUnassignedZoomRoomsOKRoomsItem) SetCostCenter(val OptString) {
	s.CostCenter = val
}

type ListUserCustomizeOutboundCallerNumbersOK struct {
	CustomizeNumbers []ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem `json:"customize_numbers"`
	// The next page token paginates through a large set of results. A next page token will be returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned within a single API call for each page.
	PageSize OptInt `json:"page_size"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
}

// GetCustomizeNumbers returns the value of CustomizeNumbers.
func (s *ListUserCustomizeOutboundCallerNumbersOK) GetCustomizeNumbers() []ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem {
	return s.CustomizeNumbers
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListUserCustomizeOutboundCallerNumbersOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListUserCustomizeOutboundCallerNumbersOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListUserCustomizeOutboundCallerNumbersOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetCustomizeNumbers sets the value of CustomizeNumbers.
func (s *ListUserCustomizeOutboundCallerNumbersOK) SetCustomizeNumbers(val []ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) {
	s.CustomizeNumbers = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListUserCustomizeOutboundCallerNumbersOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListUserCustomizeOutboundCallerNumbersOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListUserCustomizeOutboundCallerNumbersOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem struct {
	// The customization ID.
	CustomizeID OptString `json:"customize_id"`
	// The ID of the phone number.
	PhoneNumberID OptString `json:"phone_number_id"`
	// The phone number in E164 format.
	PhoneNumber OptString `json:"phone_number"`
	// The name of the phone number.
	DisplayName OptString `json:"display_name"`
	// Whether the incoming policy is enabled for the phone number.
	Incoming OptBool `json:"incoming"`
	// Whether the outgoing policy is enabled for the phone number.
	Outgoing OptBool `json:"outgoing"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension type.
	ExtensionType OptString `json:"extension_type"`
	// The extension number.
	ExtensionNumber OptString `json:"extension_number"`
	// The extension name.
	ExtensionName OptString                                                           `json:"extension_name"`
	Site          OptListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite `json:"site"`
}

// GetCustomizeID returns the value of CustomizeID.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetCustomizeID() OptString {
	return s.CustomizeID
}

// GetPhoneNumberID returns the value of PhoneNumberID.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetPhoneNumberID() OptString {
	return s.PhoneNumberID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetDisplayName returns the value of DisplayName.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetIncoming returns the value of Incoming.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetIncoming() OptBool {
	return s.Incoming
}

// GetOutgoing returns the value of Outgoing.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetOutgoing() OptBool {
	return s.Outgoing
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionType returns the value of ExtensionType.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetExtensionName returns the value of ExtensionName.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetExtensionName() OptString {
	return s.ExtensionName
}

// GetSite returns the value of Site.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) GetSite() OptListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite {
	return s.Site
}

// SetCustomizeID sets the value of CustomizeID.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetCustomizeID(val OptString) {
	s.CustomizeID = val
}

// SetPhoneNumberID sets the value of PhoneNumberID.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetPhoneNumberID(val OptString) {
	s.PhoneNumberID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetIncoming sets the value of Incoming.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetIncoming(val OptBool) {
	s.Incoming = val
}

// SetOutgoing sets the value of Outgoing.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetOutgoing(val OptBool) {
	s.Outgoing = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetExtensionName sets the value of ExtensionName.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetExtensionName(val OptString) {
	s.ExtensionName = val
}

// SetSite sets the value of Site.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItem) SetSite(val OptListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) {
	s.Site = val
}

type ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite struct {
	// The unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
	ID OptString `json:"id"`
	// The name of the site.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) SetName(val OptString) {
	s.Name = val
}

type ListUserOutboundCallingExceptionRuleOK struct {
	ExceptionRules []ListUserOutboundCallingExceptionRuleOKExceptionRulesItem `json:"exception_rules"`
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The total number of records returned from a single API call.
	PageSize OptInt `json:"page_size"`
}

// GetExceptionRules returns the value of ExceptionRules.
func (s *ListUserOutboundCallingExceptionRuleOK) GetExceptionRules() []ListUserOutboundCallingExceptionRuleOKExceptionRulesItem {
	return s.ExceptionRules
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListUserOutboundCallingExceptionRuleOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListUserOutboundCallingExceptionRuleOK) GetPageSize() OptInt {
	return s.PageSize
}

// SetExceptionRules sets the value of ExceptionRules.
func (s *ListUserOutboundCallingExceptionRuleOK) SetExceptionRules(val []ListUserOutboundCallingExceptionRuleOKExceptionRulesItem) {
	s.ExceptionRules = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListUserOutboundCallingExceptionRuleOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListUserOutboundCallingExceptionRuleOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

type ListUserOutboundCallingExceptionRuleOKExceptionRulesItem struct {
	// The exception rule ID.
	ID OptString `json:"id"`
	// The match type for the exception rule:
	// `phoneNumber`and `prefix`.
	MatchType OptString `json:"match_type"`
	// The exception rule phone number prefix or phone number without country code.
	PrefixNumber OptString `json:"prefix_number"`
	// The exception rule type `1` - allowed, `2` - blocked, `3` - require local number, caller ID or
	// plan, `4` - require to enter the extension number and PIN code.
	Rule OptInt `json:"rule"`
	// A comment to identify the exception rule number or prefix.
	Comment OptString `json:"comment"`
	// Whether the exception rule is active or inactive.
	// `active`: The exception rule is active.
	// `inactive`: The exception rule is inactive.
	Status OptString `json:"status"`
}

// GetID returns the value of ID.
func (s *ListUserOutboundCallingExceptionRuleOKExceptionRulesItem) GetID() OptString {
	return s.ID
}

// GetMatchType returns the value of MatchType.
func (s *ListUserOutboundCallingExceptionRuleOKExceptionRulesItem) GetMatchType() OptString {
	return s.MatchType
}

// GetPrefixNumber returns the value of PrefixNumber.
func (s *ListUserOutboundCallingExceptionRuleOKExceptionRulesItem) GetPrefixNumber() OptString {
	return s.PrefixNumber
}

// GetRule returns the value of Rule.
func (s *ListUserOutboundCallingExceptionRuleOKExceptionRulesItem) GetRule() OptInt {
	return s.Rule
}

// GetComment returns the value of Comment.
func (s *ListUserOutboundCallingExceptionRuleOKExceptionRulesItem) GetComment() OptString {
	return s.Comment
}

// GetStatus returns the value of Status.
func (s *ListUserOutboundCallingExceptionRuleOKExceptionRulesItem) GetStatus() OptString {
	return s.Status
}

// SetID sets the value of ID.
func (s *ListUserOutboundCallingExceptionRuleOKExceptionRulesItem) SetID(val OptString) {
	s.ID = val
}

// SetMatchType sets the value of MatchType.
func (s *ListUserOutboundCallingExceptionRuleOKExceptionRulesItem) SetMatchType(val OptString) {
	s.MatchType = val
}

// SetPrefixNumber sets the value of PrefixNumber.
func (s *ListUserOutboundCallingExceptionRuleOKExceptionRulesItem) SetPrefixNumber(val OptString) {
	s.PrefixNumber = val
}

// SetRule sets the value of Rule.
func (s *ListUserOutboundCallingExceptionRuleOKExceptionRulesItem) SetRule(val OptInt) {
	s.Rule = val
}

// SetComment sets the value of Comment.
func (s *ListUserOutboundCallingExceptionRuleOKExceptionRulesItem) SetComment(val OptString) {
	s.Comment = val
}

// SetStatus sets the value of Status.
func (s *ListUserOutboundCallingExceptionRuleOKExceptionRulesItem) SetStatus(val OptString) {
	s.Status = val
}

type ListUsersFromDirectoryBySiteOK struct {
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of the available result list exceeds the page size.
	NextPageToken OptString `json:"next_page_token"`
	// The size of the page.
	PageSize OptInt `json:"page_size"`
	// User list.
	Result []ListUsersFromDirectoryBySiteOKResultItem `json:"result"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListUsersFromDirectoryBySiteOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListUsersFromDirectoryBySiteOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetResult returns the value of Result.
func (s *ListUsersFromDirectoryBySiteOK) GetResult() []ListUsersFromDirectoryBySiteOKResultItem {
	return s.Result
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListUsersFromDirectoryBySiteOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListUsersFromDirectoryBySiteOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetResult sets the value of Result.
func (s *ListUsersFromDirectoryBySiteOK) SetResult(val []ListUsersFromDirectoryBySiteOKResultItem) {
	s.Result = val
}

type ListUsersFromDirectoryBySiteOKResultItem struct {
	// Extension ID.
	ExtensionID OptString `json:"extension_id"`
	// Display name.
	DisplayName OptString `json:"display_name"`
	// Email.
	Email OptString `json:"email"`
	// Extension number.
	ExtensionNumber OptString `json:"extension_number"`
	// Site.
	Site OptListUsersFromDirectoryBySiteOKResultItemSite `json:"site"`
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListUsersFromDirectoryBySiteOKResultItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetDisplayName returns the value of DisplayName.
func (s *ListUsersFromDirectoryBySiteOKResultItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetEmail returns the value of Email.
func (s *ListUsersFromDirectoryBySiteOKResultItem) GetEmail() OptString {
	return s.Email
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListUsersFromDirectoryBySiteOKResultItem) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetSite returns the value of Site.
func (s *ListUsersFromDirectoryBySiteOKResultItem) GetSite() OptListUsersFromDirectoryBySiteOKResultItemSite {
	return s.Site
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListUsersFromDirectoryBySiteOKResultItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ListUsersFromDirectoryBySiteOKResultItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetEmail sets the value of Email.
func (s *ListUsersFromDirectoryBySiteOKResultItem) SetEmail(val OptString) {
	s.Email = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListUsersFromDirectoryBySiteOKResultItem) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetSite sets the value of Site.
func (s *ListUsersFromDirectoryBySiteOKResultItem) SetSite(val OptListUsersFromDirectoryBySiteOKResultItemSite) {
	s.Site = val
}

// Site.
type ListUsersFromDirectoryBySiteOKResultItemSite struct {
	// Unique identifier of the site.
	ID OptString `json:"id"`
	// Site Name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListUsersFromDirectoryBySiteOKResultItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListUsersFromDirectoryBySiteOKResultItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListUsersFromDirectoryBySiteOKResultItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListUsersFromDirectoryBySiteOKResultItemSite) SetName(val OptString) {
	s.Name = val
}

type ListUsersFromDirectoryOK struct {
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of the available result list exceeds the page size.
	NextPageToken OptString `json:"next_page_token"`
	// The size of the page.
	PageSize OptInt `json:"page_size"`
	// User list.
	Result []ListUsersFromDirectoryOKResultItem `json:"result"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListUsersFromDirectoryOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListUsersFromDirectoryOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetResult returns the value of Result.
func (s *ListUsersFromDirectoryOK) GetResult() []ListUsersFromDirectoryOKResultItem {
	return s.Result
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListUsersFromDirectoryOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListUsersFromDirectoryOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetResult sets the value of Result.
func (s *ListUsersFromDirectoryOK) SetResult(val []ListUsersFromDirectoryOKResultItem) {
	s.Result = val
}

type ListUsersFromDirectoryOKResultItem struct {
	// Extension ID.
	ExtensionID OptString `json:"extension_id"`
	// Display name.
	DisplayName OptString `json:"display_name"`
	// Email.
	Email OptString `json:"email"`
	// Extension number.
	ExtensionNumber OptString `json:"extension_number"`
	// Site.
	Site OptListUsersFromDirectoryOKResultItemSite `json:"site"`
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListUsersFromDirectoryOKResultItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetDisplayName returns the value of DisplayName.
func (s *ListUsersFromDirectoryOKResultItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetEmail returns the value of Email.
func (s *ListUsersFromDirectoryOKResultItem) GetEmail() OptString {
	return s.Email
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListUsersFromDirectoryOKResultItem) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetSite returns the value of Site.
func (s *ListUsersFromDirectoryOKResultItem) GetSite() OptListUsersFromDirectoryOKResultItemSite {
	return s.Site
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListUsersFromDirectoryOKResultItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetDisplayName sets the value of DisplayName.
func (s *ListUsersFromDirectoryOKResultItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetEmail sets the value of Email.
func (s *ListUsersFromDirectoryOKResultItem) SetEmail(val OptString) {
	s.Email = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListUsersFromDirectoryOKResultItem) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetSite sets the value of Site.
func (s *ListUsersFromDirectoryOKResultItem) SetSite(val OptListUsersFromDirectoryOKResultItemSite) {
	s.Site = val
}

// Site.
type ListUsersFromDirectoryOKResultItemSite struct {
	// Unique identifier of the site.
	ID OptString `json:"id"`
	// Site Name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListUsersFromDirectoryOKResultItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListUsersFromDirectoryOKResultItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListUsersFromDirectoryOKResultItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListUsersFromDirectoryOKResultItemSite) SetName(val OptString) {
	s.Name = val
}

type ListZoomPhoneAccountSettingsOK struct {
	// Whether to let users turn on live transcriptions for a call.
	CallLiveTranscription OptListZoomPhoneAccountSettingsOKCallLiveTranscription `json:"call_live_transcription"`
	// Whether to allow user or extension to have core phone services in the event of an outage.
	LocalSurvivabilityMode OptListZoomPhoneAccountSettingsOKLocalSurvivabilityMode `json:"local_survivability_mode"`
	// Whether to allow Zoom Rooms to call external phone numbers based on the calling plans and other
	// Zoom Phone policies.
	ExternalCallingOnZoomRoomCommonArea OptListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea `json:"external_calling_on_zoom_room_common_area"`
	// Whether to allow extensions to change outbound caller ID when placing calls.
	SelectOutboundCallerID OptListZoomPhoneAccountSettingsOKSelectOutboundCallerID `json:"select_outbound_caller_id"`
	PersonalAudioLibrary   OptListZoomPhoneAccountSettingsOKPersonalAudioLibrary   `json:"personal_audio_library"`
	Voicemail              OptListZoomPhoneAccountSettingsOKVoicemail              `json:"voicemail"`
	// Whether to enable voicemail/videomail transcription feature for User, Auto Receptionist, Call
	// Queue, and Shared Line Groups.
	VoicemailTranscription OptListZoomPhoneAccountSettingsOKVoicemailTranscription `json:"voicemail_transcription"`
	// Whether to enable voicemail or videomail transcription feature for User, Auto Receptionist, Call
	// Queue, and Shared Line Groups.
	VoicemailNotificationByEmail OptListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail `json:"voicemail_notification_by_email"`
	// Once enabled, users receive email notification when there is a new shared voicemail or videomail.
	// If the extension that shares the voicemail or videomail has disabled the voicemail or videomail
	// notification by email policy, then users do not receive notifications. It only displays when the
	// voicemail policy is using the new policy framework.
	SharedVoicemailNotificationByEmail OptListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail `json:"shared_voicemail_notification_by_email"`
	// Once enabled, define when the extension or user cannot make or accept calls and send SMS.
	RestrictedCallHours OptListZoomPhoneAccountSettingsOKRestrictedCallHours `json:"restricted_call_hours"`
	// Once enabled, it defines where the extension or user can make and accept calls and send SMS.
	AllowedCallLocations OptListZoomPhoneAccountSettingsOKAllowedCallLocations `json:"allowed_call_locations"`
	// Whether to allow extension owners or members of a shared line group to check voicemails for
	// extension numbers over the phone using a PIN code.
	CheckVoicemailsOverPhone OptListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone `json:"check_voicemails_over_phone"`
	// Whether to allow automatic recording of all inbound and outbound calls.
	AutoCallRecording OptListZoomPhoneAccountSettingsOKAutoCallRecording `json:"auto_call_recording"`
	// Whether to allow extensions to record and save calls in the cloud.
	AdHocCallRecording OptListZoomPhoneAccountSettingsOKAdHocCallRecording `json:"ad_hoc_call_recording"`
	// Whether to allow extensions to place international calls outside of the calling plan.
	InternationalCalling OptListZoomPhoneAccountSettingsOKInternationalCalling `json:"international_calling"`
	// Whether to define calling rules to restrict the user or extension from calling specific countries,
	// cities, or numbers.
	// Note: Only for use by customers who opted for OP flag `Enable New Version Outbound Blocked List`.
	OutboundCalling OptListZoomPhoneAccountSettingsOKOutboundCalling `json:"outbound_calling"`
	// Whether to allow users to send and receive messages. You must assign a valid calling plan and
	// phone number to each user for them to send and receive messages.
	// Note: Only for use by customers who opted for OP flag `Enable New Version Outbound Blocked List`.
	OutboundSMS OptListZoomPhoneAccountSettingsOKOutboundSMS `json:"outbound_sms"`
	// Whether to allow users to send and receive messages. You must assign a valid calling plan and
	// phone number to each user for them to send and receive messages.
	SMS OptListZoomPhoneAccountSettingsOKSMS `json:"sms"`
	// This field identifies defined keywords and text patterns over SMS and prevents users from sharing
	// unwanted messages.
	SMSEtiquetteTool OptListZoomPhoneAccountSettingsOKSMSEtiquetteTool `json:"sms_etiquette_tool"`
	// Whether to allow user to use Zoom Phone on mobile clients (iOS, iPad OS and Android).
	ZoomPhoneOnMobile OptListZoomPhoneAccountSettingsOKZoomPhoneOnMobile `json:"zoom_phone_on_mobile"`
	// Whether to allow users to use Zoom Phone on Zoom Progressive Web App.
	ZoomPhoneOnPwa OptListZoomPhoneAccountSettingsOKZoomPhoneOnPwa `json:"zoom_phone_on_pwa"`
	// Whether to allow users to switch their calls to End-to-End Encryption. If users have **Automatic
	// Call Recording** turned on, they can't use End-to-End Encryption.
	E2eEncryption OptListZoomPhoneAccountSettingsOKE2eEncryption `json:"e2e_encryption"`
	// Whether to allow users to forward their calls to other numbers.
	CallHandlingForwardingToOtherUsers OptListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers `json:"call_handling_forwarding_to_other_users"`
	// Whether to allow users to forward their calls to other numbers when a call is not answered.
	CallOverflow OptListZoomPhoneAccountSettingsOKCallOverflow `json:"call_overflow"`
	// This field allows users to warm or blind transfer their calls. This does not apply to warm
	// transfer on IP Phones except for Yealink. Voicemail is transferable only to internal extensions.
	CallTransferring OptListZoomPhoneAccountSettingsOKCallTransferring `json:"call_transferring"`
	// Whether to allow users to elevate their phone calls to a meeting.
	ElevateToMeeting OptListZoomPhoneAccountSettingsOKElevateToMeeting `json:"elevate_to_meeting"`
	// Whether to allow calls placed on hold to resume from another location using a retrieval code.
	CallPark OptListZoomPhoneAccountSettingsOKCallPark `json:"call_park"`
	// Whethet to allow users to send a call to a Zoom Room.
	HandOffToRoom OptListZoomPhoneAccountSettingsOKHandOffToRoom `json:"hand_off_to_room"`
	// Whether to allow the user to switch from a Zoom Phone to their native carrier.
	MobileSwitchToCarrier OptListZoomPhoneAccountSettingsOKMobileSwitchToCarrier `json:"mobile_switch_to_carrier"`
	// Whether the user can use [call delegation](https://support.zoom.
	// us/hc/en-us/articles/360032881731-Setting-up-call-delegation-shared-lines-appearance-).
	Delegation OptListZoomPhoneAccountSettingsOKDelegation `json:"delegation"`
	// Whether to allow hands-free peer-to-peer conversations. When an intercom call is received, the
	// phone beeps to notify the user of the incoming intercom call, and the user's phone automatically
	// answers the intercom call.
	AudioIntercom OptListZoomPhoneAccountSettingsOKAudioIntercom `json:"audio_intercom"`
	// Whether calls without caller ID are blocked.
	BlockCallsWithoutCallerID OptListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID `json:"block_calls_without_caller_id"`
	// This field allows you to set rules for blocking external calls during business, closed, and
	// holiday hours. This feature is only available for user, Zoom Room, and common areas.
	BlockExternalCalls OptListZoomPhoneAccountSettingsOKBlockExternalCalls `json:"block_external_calls"`
	// This field sets the opt-out reasons for call queues. When enabled, call queue members should
	// select an opt-out reason when they turn off the `receive queue call` feature.
	CallQueueOptOutReason OptListZoomPhoneAccountSettingsOKCallQueueOptOutReason `json:"call_queue_opt_out_reason"`
	// This field allows Zoom to automatically delete data after the retention duration has lapsed.
	AutoDeleteDataAfterRetentionDuration OptListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration `json:"auto_delete_data_after_retention_duration"`
	// This field allows the user to perform call control actions from authorized Zoom Marketplace apps.
	AutoCallFromThirdPartyApps OptListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps `json:"auto_call_from_third_party_apps"`
	// This field sets a range for port assignment. Zoom desktop, mobile clients, Zoom Rooms, and Zoom
	// Phone Appliances use ports during a call. The range should be between 9,000 and 9,999. At least 50
	// ports need to be configured to ensure the functionality is not affected.
	OverrideDefaultPort OptListZoomPhoneAccountSettingsOKOverrideDefaultPort `json:"override_default_port"`
	// Whether to allow Zoom clients to send media directly to each other. Users or devices that have
	// certain features enabled, such as recording or monitoring, might not be able to use peer to peer
	// media.
	PeerToPeerMedia OptListZoomPhoneAccountSettingsOKPeerToPeerMedia `json:"peer_to_peer_media"`
	// Whether to allow voicemail to be encrypted with keys that are not accessible to Zoom servers.
	// These Voicemail can be decrypted only by the intended user recipient. Shared Line Appearance,
	// Shared Line Group, Call Queue, or Auto Receptionist Voicemail is encrypted, but can still be
	// played. Email to Voicemail, transcriptions, checking Voicemails by dialing into the Voicemail
	// system, or web is not available when this feature is enabled. This policy requires a Power Pack
	// license to be enabled. If the user does who inherits this policy does not have a Power Pack
	// license, the policy is not applied. Settings is only available with client version 5.12 or later.
	AdvancedEncryption OptListZoomPhoneAccountSettingsOKAdvancedEncryption `json:"advanced_encryption"`
	// Whether to display a thumbs up or down survey at the end of each call. If participants respond
	// with thumbs down, they can provide additional information about what went wrong.
	DisplayCallFeedbackSurvey OptListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey `json:"display_call_feedback_survey"`
	// Whether to allow users and administrators to block inbound calls and SMS/MMS from phone numbers or
	// prefixes.
	// Note: Only for use by customers who opted for OP flag `Enable New Version Inbound Blocked List`.
	BlockListForInboundCallsAndMessaging OptListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging `json:"block_list_for_inbound_calls_and_messaging"`
	// Whether to allow users to block and classify calls as threat.
	// Inbound calls from these phones numbers can be configured with custom handling options.
	// **Note**: Only customers who opted for OP flag `Enable New Version Inbound Blocked List` can use
	// this feature.
	BlockCallsAsThreat OptListZoomPhoneAccountSettingsOKBlockCallsAsThreat `json:"block_calls_as_threat"`
}

// GetCallLiveTranscription returns the value of CallLiveTranscription.
func (s *ListZoomPhoneAccountSettingsOK) GetCallLiveTranscription() OptListZoomPhoneAccountSettingsOKCallLiveTranscription {
	return s.CallLiveTranscription
}

// GetLocalSurvivabilityMode returns the value of LocalSurvivabilityMode.
func (s *ListZoomPhoneAccountSettingsOK) GetLocalSurvivabilityMode() OptListZoomPhoneAccountSettingsOKLocalSurvivabilityMode {
	return s.LocalSurvivabilityMode
}

// GetExternalCallingOnZoomRoomCommonArea returns the value of ExternalCallingOnZoomRoomCommonArea.
func (s *ListZoomPhoneAccountSettingsOK) GetExternalCallingOnZoomRoomCommonArea() OptListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea {
	return s.ExternalCallingOnZoomRoomCommonArea
}

// GetSelectOutboundCallerID returns the value of SelectOutboundCallerID.
func (s *ListZoomPhoneAccountSettingsOK) GetSelectOutboundCallerID() OptListZoomPhoneAccountSettingsOKSelectOutboundCallerID {
	return s.SelectOutboundCallerID
}

// GetPersonalAudioLibrary returns the value of PersonalAudioLibrary.
func (s *ListZoomPhoneAccountSettingsOK) GetPersonalAudioLibrary() OptListZoomPhoneAccountSettingsOKPersonalAudioLibrary {
	return s.PersonalAudioLibrary
}

// GetVoicemail returns the value of Voicemail.
func (s *ListZoomPhoneAccountSettingsOK) GetVoicemail() OptListZoomPhoneAccountSettingsOKVoicemail {
	return s.Voicemail
}

// GetVoicemailTranscription returns the value of VoicemailTranscription.
func (s *ListZoomPhoneAccountSettingsOK) GetVoicemailTranscription() OptListZoomPhoneAccountSettingsOKVoicemailTranscription {
	return s.VoicemailTranscription
}

// GetVoicemailNotificationByEmail returns the value of VoicemailNotificationByEmail.
func (s *ListZoomPhoneAccountSettingsOK) GetVoicemailNotificationByEmail() OptListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail {
	return s.VoicemailNotificationByEmail
}

// GetSharedVoicemailNotificationByEmail returns the value of SharedVoicemailNotificationByEmail.
func (s *ListZoomPhoneAccountSettingsOK) GetSharedVoicemailNotificationByEmail() OptListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail {
	return s.SharedVoicemailNotificationByEmail
}

// GetRestrictedCallHours returns the value of RestrictedCallHours.
func (s *ListZoomPhoneAccountSettingsOK) GetRestrictedCallHours() OptListZoomPhoneAccountSettingsOKRestrictedCallHours {
	return s.RestrictedCallHours
}

// GetAllowedCallLocations returns the value of AllowedCallLocations.
func (s *ListZoomPhoneAccountSettingsOK) GetAllowedCallLocations() OptListZoomPhoneAccountSettingsOKAllowedCallLocations {
	return s.AllowedCallLocations
}

// GetCheckVoicemailsOverPhone returns the value of CheckVoicemailsOverPhone.
func (s *ListZoomPhoneAccountSettingsOK) GetCheckVoicemailsOverPhone() OptListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone {
	return s.CheckVoicemailsOverPhone
}

// GetAutoCallRecording returns the value of AutoCallRecording.
func (s *ListZoomPhoneAccountSettingsOK) GetAutoCallRecording() OptListZoomPhoneAccountSettingsOKAutoCallRecording {
	return s.AutoCallRecording
}

// GetAdHocCallRecording returns the value of AdHocCallRecording.
func (s *ListZoomPhoneAccountSettingsOK) GetAdHocCallRecording() OptListZoomPhoneAccountSettingsOKAdHocCallRecording {
	return s.AdHocCallRecording
}

// GetInternationalCalling returns the value of InternationalCalling.
func (s *ListZoomPhoneAccountSettingsOK) GetInternationalCalling() OptListZoomPhoneAccountSettingsOKInternationalCalling {
	return s.InternationalCalling
}

// GetOutboundCalling returns the value of OutboundCalling.
func (s *ListZoomPhoneAccountSettingsOK) GetOutboundCalling() OptListZoomPhoneAccountSettingsOKOutboundCalling {
	return s.OutboundCalling
}

// GetOutboundSMS returns the value of OutboundSMS.
func (s *ListZoomPhoneAccountSettingsOK) GetOutboundSMS() OptListZoomPhoneAccountSettingsOKOutboundSMS {
	return s.OutboundSMS
}

// GetSMS returns the value of SMS.
func (s *ListZoomPhoneAccountSettingsOK) GetSMS() OptListZoomPhoneAccountSettingsOKSMS {
	return s.SMS
}

// GetSMSEtiquetteTool returns the value of SMSEtiquetteTool.
func (s *ListZoomPhoneAccountSettingsOK) GetSMSEtiquetteTool() OptListZoomPhoneAccountSettingsOKSMSEtiquetteTool {
	return s.SMSEtiquetteTool
}

// GetZoomPhoneOnMobile returns the value of ZoomPhoneOnMobile.
func (s *ListZoomPhoneAccountSettingsOK) GetZoomPhoneOnMobile() OptListZoomPhoneAccountSettingsOKZoomPhoneOnMobile {
	return s.ZoomPhoneOnMobile
}

// GetZoomPhoneOnPwa returns the value of ZoomPhoneOnPwa.
func (s *ListZoomPhoneAccountSettingsOK) GetZoomPhoneOnPwa() OptListZoomPhoneAccountSettingsOKZoomPhoneOnPwa {
	return s.ZoomPhoneOnPwa
}

// GetE2eEncryption returns the value of E2eEncryption.
func (s *ListZoomPhoneAccountSettingsOK) GetE2eEncryption() OptListZoomPhoneAccountSettingsOKE2eEncryption {
	return s.E2eEncryption
}

// GetCallHandlingForwardingToOtherUsers returns the value of CallHandlingForwardingToOtherUsers.
func (s *ListZoomPhoneAccountSettingsOK) GetCallHandlingForwardingToOtherUsers() OptListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers {
	return s.CallHandlingForwardingToOtherUsers
}

// GetCallOverflow returns the value of CallOverflow.
func (s *ListZoomPhoneAccountSettingsOK) GetCallOverflow() OptListZoomPhoneAccountSettingsOKCallOverflow {
	return s.CallOverflow
}

// GetCallTransferring returns the value of CallTransferring.
func (s *ListZoomPhoneAccountSettingsOK) GetCallTransferring() OptListZoomPhoneAccountSettingsOKCallTransferring {
	return s.CallTransferring
}

// GetElevateToMeeting returns the value of ElevateToMeeting.
func (s *ListZoomPhoneAccountSettingsOK) GetElevateToMeeting() OptListZoomPhoneAccountSettingsOKElevateToMeeting {
	return s.ElevateToMeeting
}

// GetCallPark returns the value of CallPark.
func (s *ListZoomPhoneAccountSettingsOK) GetCallPark() OptListZoomPhoneAccountSettingsOKCallPark {
	return s.CallPark
}

// GetHandOffToRoom returns the value of HandOffToRoom.
func (s *ListZoomPhoneAccountSettingsOK) GetHandOffToRoom() OptListZoomPhoneAccountSettingsOKHandOffToRoom {
	return s.HandOffToRoom
}

// GetMobileSwitchToCarrier returns the value of MobileSwitchToCarrier.
func (s *ListZoomPhoneAccountSettingsOK) GetMobileSwitchToCarrier() OptListZoomPhoneAccountSettingsOKMobileSwitchToCarrier {
	return s.MobileSwitchToCarrier
}

// GetDelegation returns the value of Delegation.
func (s *ListZoomPhoneAccountSettingsOK) GetDelegation() OptListZoomPhoneAccountSettingsOKDelegation {
	return s.Delegation
}

// GetAudioIntercom returns the value of AudioIntercom.
func (s *ListZoomPhoneAccountSettingsOK) GetAudioIntercom() OptListZoomPhoneAccountSettingsOKAudioIntercom {
	return s.AudioIntercom
}

// GetBlockCallsWithoutCallerID returns the value of BlockCallsWithoutCallerID.
func (s *ListZoomPhoneAccountSettingsOK) GetBlockCallsWithoutCallerID() OptListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID {
	return s.BlockCallsWithoutCallerID
}

// GetBlockExternalCalls returns the value of BlockExternalCalls.
func (s *ListZoomPhoneAccountSettingsOK) GetBlockExternalCalls() OptListZoomPhoneAccountSettingsOKBlockExternalCalls {
	return s.BlockExternalCalls
}

// GetCallQueueOptOutReason returns the value of CallQueueOptOutReason.
func (s *ListZoomPhoneAccountSettingsOK) GetCallQueueOptOutReason() OptListZoomPhoneAccountSettingsOKCallQueueOptOutReason {
	return s.CallQueueOptOutReason
}

// GetAutoDeleteDataAfterRetentionDuration returns the value of AutoDeleteDataAfterRetentionDuration.
func (s *ListZoomPhoneAccountSettingsOK) GetAutoDeleteDataAfterRetentionDuration() OptListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration {
	return s.AutoDeleteDataAfterRetentionDuration
}

// GetAutoCallFromThirdPartyApps returns the value of AutoCallFromThirdPartyApps.
func (s *ListZoomPhoneAccountSettingsOK) GetAutoCallFromThirdPartyApps() OptListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps {
	return s.AutoCallFromThirdPartyApps
}

// GetOverrideDefaultPort returns the value of OverrideDefaultPort.
func (s *ListZoomPhoneAccountSettingsOK) GetOverrideDefaultPort() OptListZoomPhoneAccountSettingsOKOverrideDefaultPort {
	return s.OverrideDefaultPort
}

// GetPeerToPeerMedia returns the value of PeerToPeerMedia.
func (s *ListZoomPhoneAccountSettingsOK) GetPeerToPeerMedia() OptListZoomPhoneAccountSettingsOKPeerToPeerMedia {
	return s.PeerToPeerMedia
}

// GetAdvancedEncryption returns the value of AdvancedEncryption.
func (s *ListZoomPhoneAccountSettingsOK) GetAdvancedEncryption() OptListZoomPhoneAccountSettingsOKAdvancedEncryption {
	return s.AdvancedEncryption
}

// GetDisplayCallFeedbackSurvey returns the value of DisplayCallFeedbackSurvey.
func (s *ListZoomPhoneAccountSettingsOK) GetDisplayCallFeedbackSurvey() OptListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey {
	return s.DisplayCallFeedbackSurvey
}

// GetBlockListForInboundCallsAndMessaging returns the value of BlockListForInboundCallsAndMessaging.
func (s *ListZoomPhoneAccountSettingsOK) GetBlockListForInboundCallsAndMessaging() OptListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging {
	return s.BlockListForInboundCallsAndMessaging
}

// GetBlockCallsAsThreat returns the value of BlockCallsAsThreat.
func (s *ListZoomPhoneAccountSettingsOK) GetBlockCallsAsThreat() OptListZoomPhoneAccountSettingsOKBlockCallsAsThreat {
	return s.BlockCallsAsThreat
}

// SetCallLiveTranscription sets the value of CallLiveTranscription.
func (s *ListZoomPhoneAccountSettingsOK) SetCallLiveTranscription(val OptListZoomPhoneAccountSettingsOKCallLiveTranscription) {
	s.CallLiveTranscription = val
}

// SetLocalSurvivabilityMode sets the value of LocalSurvivabilityMode.
func (s *ListZoomPhoneAccountSettingsOK) SetLocalSurvivabilityMode(val OptListZoomPhoneAccountSettingsOKLocalSurvivabilityMode) {
	s.LocalSurvivabilityMode = val
}

// SetExternalCallingOnZoomRoomCommonArea sets the value of ExternalCallingOnZoomRoomCommonArea.
func (s *ListZoomPhoneAccountSettingsOK) SetExternalCallingOnZoomRoomCommonArea(val OptListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea) {
	s.ExternalCallingOnZoomRoomCommonArea = val
}

// SetSelectOutboundCallerID sets the value of SelectOutboundCallerID.
func (s *ListZoomPhoneAccountSettingsOK) SetSelectOutboundCallerID(val OptListZoomPhoneAccountSettingsOKSelectOutboundCallerID) {
	s.SelectOutboundCallerID = val
}

// SetPersonalAudioLibrary sets the value of PersonalAudioLibrary.
func (s *ListZoomPhoneAccountSettingsOK) SetPersonalAudioLibrary(val OptListZoomPhoneAccountSettingsOKPersonalAudioLibrary) {
	s.PersonalAudioLibrary = val
}

// SetVoicemail sets the value of Voicemail.
func (s *ListZoomPhoneAccountSettingsOK) SetVoicemail(val OptListZoomPhoneAccountSettingsOKVoicemail) {
	s.Voicemail = val
}

// SetVoicemailTranscription sets the value of VoicemailTranscription.
func (s *ListZoomPhoneAccountSettingsOK) SetVoicemailTranscription(val OptListZoomPhoneAccountSettingsOKVoicemailTranscription) {
	s.VoicemailTranscription = val
}

// SetVoicemailNotificationByEmail sets the value of VoicemailNotificationByEmail.
func (s *ListZoomPhoneAccountSettingsOK) SetVoicemailNotificationByEmail(val OptListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) {
	s.VoicemailNotificationByEmail = val
}

// SetSharedVoicemailNotificationByEmail sets the value of SharedVoicemailNotificationByEmail.
func (s *ListZoomPhoneAccountSettingsOK) SetSharedVoicemailNotificationByEmail(val OptListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail) {
	s.SharedVoicemailNotificationByEmail = val
}

// SetRestrictedCallHours sets the value of RestrictedCallHours.
func (s *ListZoomPhoneAccountSettingsOK) SetRestrictedCallHours(val OptListZoomPhoneAccountSettingsOKRestrictedCallHours) {
	s.RestrictedCallHours = val
}

// SetAllowedCallLocations sets the value of AllowedCallLocations.
func (s *ListZoomPhoneAccountSettingsOK) SetAllowedCallLocations(val OptListZoomPhoneAccountSettingsOKAllowedCallLocations) {
	s.AllowedCallLocations = val
}

// SetCheckVoicemailsOverPhone sets the value of CheckVoicemailsOverPhone.
func (s *ListZoomPhoneAccountSettingsOK) SetCheckVoicemailsOverPhone(val OptListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone) {
	s.CheckVoicemailsOverPhone = val
}

// SetAutoCallRecording sets the value of AutoCallRecording.
func (s *ListZoomPhoneAccountSettingsOK) SetAutoCallRecording(val OptListZoomPhoneAccountSettingsOKAutoCallRecording) {
	s.AutoCallRecording = val
}

// SetAdHocCallRecording sets the value of AdHocCallRecording.
func (s *ListZoomPhoneAccountSettingsOK) SetAdHocCallRecording(val OptListZoomPhoneAccountSettingsOKAdHocCallRecording) {
	s.AdHocCallRecording = val
}

// SetInternationalCalling sets the value of InternationalCalling.
func (s *ListZoomPhoneAccountSettingsOK) SetInternationalCalling(val OptListZoomPhoneAccountSettingsOKInternationalCalling) {
	s.InternationalCalling = val
}

// SetOutboundCalling sets the value of OutboundCalling.
func (s *ListZoomPhoneAccountSettingsOK) SetOutboundCalling(val OptListZoomPhoneAccountSettingsOKOutboundCalling) {
	s.OutboundCalling = val
}

// SetOutboundSMS sets the value of OutboundSMS.
func (s *ListZoomPhoneAccountSettingsOK) SetOutboundSMS(val OptListZoomPhoneAccountSettingsOKOutboundSMS) {
	s.OutboundSMS = val
}

// SetSMS sets the value of SMS.
func (s *ListZoomPhoneAccountSettingsOK) SetSMS(val OptListZoomPhoneAccountSettingsOKSMS) {
	s.SMS = val
}

// SetSMSEtiquetteTool sets the value of SMSEtiquetteTool.
func (s *ListZoomPhoneAccountSettingsOK) SetSMSEtiquetteTool(val OptListZoomPhoneAccountSettingsOKSMSEtiquetteTool) {
	s.SMSEtiquetteTool = val
}

// SetZoomPhoneOnMobile sets the value of ZoomPhoneOnMobile.
func (s *ListZoomPhoneAccountSettingsOK) SetZoomPhoneOnMobile(val OptListZoomPhoneAccountSettingsOKZoomPhoneOnMobile) {
	s.ZoomPhoneOnMobile = val
}

// SetZoomPhoneOnPwa sets the value of ZoomPhoneOnPwa.
func (s *ListZoomPhoneAccountSettingsOK) SetZoomPhoneOnPwa(val OptListZoomPhoneAccountSettingsOKZoomPhoneOnPwa) {
	s.ZoomPhoneOnPwa = val
}

// SetE2eEncryption sets the value of E2eEncryption.
func (s *ListZoomPhoneAccountSettingsOK) SetE2eEncryption(val OptListZoomPhoneAccountSettingsOKE2eEncryption) {
	s.E2eEncryption = val
}

// SetCallHandlingForwardingToOtherUsers sets the value of CallHandlingForwardingToOtherUsers.
func (s *ListZoomPhoneAccountSettingsOK) SetCallHandlingForwardingToOtherUsers(val OptListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers) {
	s.CallHandlingForwardingToOtherUsers = val
}

// SetCallOverflow sets the value of CallOverflow.
func (s *ListZoomPhoneAccountSettingsOK) SetCallOverflow(val OptListZoomPhoneAccountSettingsOKCallOverflow) {
	s.CallOverflow = val
}

// SetCallTransferring sets the value of CallTransferring.
func (s *ListZoomPhoneAccountSettingsOK) SetCallTransferring(val OptListZoomPhoneAccountSettingsOKCallTransferring) {
	s.CallTransferring = val
}

// SetElevateToMeeting sets the value of ElevateToMeeting.
func (s *ListZoomPhoneAccountSettingsOK) SetElevateToMeeting(val OptListZoomPhoneAccountSettingsOKElevateToMeeting) {
	s.ElevateToMeeting = val
}

// SetCallPark sets the value of CallPark.
func (s *ListZoomPhoneAccountSettingsOK) SetCallPark(val OptListZoomPhoneAccountSettingsOKCallPark) {
	s.CallPark = val
}

// SetHandOffToRoom sets the value of HandOffToRoom.
func (s *ListZoomPhoneAccountSettingsOK) SetHandOffToRoom(val OptListZoomPhoneAccountSettingsOKHandOffToRoom) {
	s.HandOffToRoom = val
}

// SetMobileSwitchToCarrier sets the value of MobileSwitchToCarrier.
func (s *ListZoomPhoneAccountSettingsOK) SetMobileSwitchToCarrier(val OptListZoomPhoneAccountSettingsOKMobileSwitchToCarrier) {
	s.MobileSwitchToCarrier = val
}

// SetDelegation sets the value of Delegation.
func (s *ListZoomPhoneAccountSettingsOK) SetDelegation(val OptListZoomPhoneAccountSettingsOKDelegation) {
	s.Delegation = val
}

// SetAudioIntercom sets the value of AudioIntercom.
func (s *ListZoomPhoneAccountSettingsOK) SetAudioIntercom(val OptListZoomPhoneAccountSettingsOKAudioIntercom) {
	s.AudioIntercom = val
}

// SetBlockCallsWithoutCallerID sets the value of BlockCallsWithoutCallerID.
func (s *ListZoomPhoneAccountSettingsOK) SetBlockCallsWithoutCallerID(val OptListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID) {
	s.BlockCallsWithoutCallerID = val
}

// SetBlockExternalCalls sets the value of BlockExternalCalls.
func (s *ListZoomPhoneAccountSettingsOK) SetBlockExternalCalls(val OptListZoomPhoneAccountSettingsOKBlockExternalCalls) {
	s.BlockExternalCalls = val
}

// SetCallQueueOptOutReason sets the value of CallQueueOptOutReason.
func (s *ListZoomPhoneAccountSettingsOK) SetCallQueueOptOutReason(val OptListZoomPhoneAccountSettingsOKCallQueueOptOutReason) {
	s.CallQueueOptOutReason = val
}

// SetAutoDeleteDataAfterRetentionDuration sets the value of AutoDeleteDataAfterRetentionDuration.
func (s *ListZoomPhoneAccountSettingsOK) SetAutoDeleteDataAfterRetentionDuration(val OptListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration) {
	s.AutoDeleteDataAfterRetentionDuration = val
}

// SetAutoCallFromThirdPartyApps sets the value of AutoCallFromThirdPartyApps.
func (s *ListZoomPhoneAccountSettingsOK) SetAutoCallFromThirdPartyApps(val OptListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps) {
	s.AutoCallFromThirdPartyApps = val
}

// SetOverrideDefaultPort sets the value of OverrideDefaultPort.
func (s *ListZoomPhoneAccountSettingsOK) SetOverrideDefaultPort(val OptListZoomPhoneAccountSettingsOKOverrideDefaultPort) {
	s.OverrideDefaultPort = val
}

// SetPeerToPeerMedia sets the value of PeerToPeerMedia.
func (s *ListZoomPhoneAccountSettingsOK) SetPeerToPeerMedia(val OptListZoomPhoneAccountSettingsOKPeerToPeerMedia) {
	s.PeerToPeerMedia = val
}

// SetAdvancedEncryption sets the value of AdvancedEncryption.
func (s *ListZoomPhoneAccountSettingsOK) SetAdvancedEncryption(val OptListZoomPhoneAccountSettingsOKAdvancedEncryption) {
	s.AdvancedEncryption = val
}

// SetDisplayCallFeedbackSurvey sets the value of DisplayCallFeedbackSurvey.
func (s *ListZoomPhoneAccountSettingsOK) SetDisplayCallFeedbackSurvey(val OptListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey) {
	s.DisplayCallFeedbackSurvey = val
}

// SetBlockListForInboundCallsAndMessaging sets the value of BlockListForInboundCallsAndMessaging.
func (s *ListZoomPhoneAccountSettingsOK) SetBlockListForInboundCallsAndMessaging(val OptListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging) {
	s.BlockListForInboundCallsAndMessaging = val
}

// SetBlockCallsAsThreat sets the value of BlockCallsAsThreat.
func (s *ListZoomPhoneAccountSettingsOK) SetBlockCallsAsThreat(val OptListZoomPhoneAccountSettingsOKBlockCallsAsThreat) {
	s.BlockCallsAsThreat = val
}

type ListZoomPhoneAccountSettingsOKAdHocCallRecording struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKAdHocCallRecording) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKAdHocCallRecording) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKAdHocCallRecording) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKAdHocCallRecording) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKAdHocCallRecording) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKAdHocCallRecording) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKAdvancedEncryption struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKAdvancedEncryption) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKAdvancedEncryption) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKAdvancedEncryption) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKAdvancedEncryption) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKAdvancedEncryption) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKAdvancedEncryption) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// Merged schema.
type ListZoomPhoneAccountSettingsOKAllowedCallLocations struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether locations have been applied.
	LocationsApplied OptBool `json:"locations_applied"`
	// Whether to allow internal calls when outside of the allowed locations.
	AllowInternalCalls OptBool `json:"allow_internal_calls"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKAllowedCallLocations) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKAllowedCallLocations) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKAllowedCallLocations) GetLockedBy() OptString {
	return s.LockedBy
}

// GetLocationsApplied returns the value of LocationsApplied.
func (s *ListZoomPhoneAccountSettingsOKAllowedCallLocations) GetLocationsApplied() OptBool {
	return s.LocationsApplied
}

// GetAllowInternalCalls returns the value of AllowInternalCalls.
func (s *ListZoomPhoneAccountSettingsOKAllowedCallLocations) GetAllowInternalCalls() OptBool {
	return s.AllowInternalCalls
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKAllowedCallLocations) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKAllowedCallLocations) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKAllowedCallLocations) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetLocationsApplied sets the value of LocationsApplied.
func (s *ListZoomPhoneAccountSettingsOKAllowedCallLocations) SetLocationsApplied(val OptBool) {
	s.LocationsApplied = val
}

// SetAllowInternalCalls sets the value of AllowInternalCalls.
func (s *ListZoomPhoneAccountSettingsOKAllowedCallLocations) SetAllowInternalCalls(val OptBool) {
	s.AllowInternalCalls = val
}

type ListZoomPhoneAccountSettingsOKAudioIntercom struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKAudioIntercom) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKAudioIntercom) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKAudioIntercom) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKAudioIntercom) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKAudioIntercom) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKAudioIntercom) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// Merged schema.
type ListZoomPhoneAccountSettingsOKAutoCallRecording struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// The type of calls automatically recorded:
	// * `inbound`
	// * `outbound`
	// * `both`.
	RecordingCalls OptString `json:"recording_calls"`
	// Whether the call recording transcription is enabled.
	RecordingTranscription OptBool `json:"recording_transcription"`
	// Whether a prompt plays to call participants when the recording has started.
	RecordingStartPrompt OptBool `json:"recording_start_prompt"`
	// The audio that plays when the recording has started. You can use this audio ID to get the audio
	// information using [Get an audio item](https://developer.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	RecordingStartPromptAudioID OptString `json:"recording_start_prompt_audio_id"`
	// Whether the **Press 1** option that provides recording consent is enabled.
	RecordingExplicitConsent OptBool `json:"recording_explicit_consent"`
	// Whether the stop and resume of automatic call recording is enabled.
	AllowStopResumeRecording OptBool `json:"allow_stop_resume_recording"`
	// Whether a call disconnects when there is an issue with the automatic call recording, and the call
	// cannot reconnect after five seconds. This does **not** include emergency calls.
	DisconnectOnRecordingFailure OptBool                                                                 `json:"disconnect_on_recording_failure"`
	PlayRecordingBeepTone        OptListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone `json:"play_recording_beep_tone"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) GetLockedBy() OptString {
	return s.LockedBy
}

// GetRecordingCalls returns the value of RecordingCalls.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) GetRecordingCalls() OptString {
	return s.RecordingCalls
}

// GetRecordingTranscription returns the value of RecordingTranscription.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) GetRecordingTranscription() OptBool {
	return s.RecordingTranscription
}

// GetRecordingStartPrompt returns the value of RecordingStartPrompt.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) GetRecordingStartPrompt() OptBool {
	return s.RecordingStartPrompt
}

// GetRecordingStartPromptAudioID returns the value of RecordingStartPromptAudioID.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) GetRecordingStartPromptAudioID() OptString {
	return s.RecordingStartPromptAudioID
}

// GetRecordingExplicitConsent returns the value of RecordingExplicitConsent.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) GetRecordingExplicitConsent() OptBool {
	return s.RecordingExplicitConsent
}

// GetAllowStopResumeRecording returns the value of AllowStopResumeRecording.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) GetAllowStopResumeRecording() OptBool {
	return s.AllowStopResumeRecording
}

// GetDisconnectOnRecordingFailure returns the value of DisconnectOnRecordingFailure.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) GetDisconnectOnRecordingFailure() OptBool {
	return s.DisconnectOnRecordingFailure
}

// GetPlayRecordingBeepTone returns the value of PlayRecordingBeepTone.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) GetPlayRecordingBeepTone() OptListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone {
	return s.PlayRecordingBeepTone
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetRecordingCalls sets the value of RecordingCalls.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) SetRecordingCalls(val OptString) {
	s.RecordingCalls = val
}

// SetRecordingTranscription sets the value of RecordingTranscription.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) SetRecordingTranscription(val OptBool) {
	s.RecordingTranscription = val
}

// SetRecordingStartPrompt sets the value of RecordingStartPrompt.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) SetRecordingStartPrompt(val OptBool) {
	s.RecordingStartPrompt = val
}

// SetRecordingStartPromptAudioID sets the value of RecordingStartPromptAudioID.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) SetRecordingStartPromptAudioID(val OptString) {
	s.RecordingStartPromptAudioID = val
}

// SetRecordingExplicitConsent sets the value of RecordingExplicitConsent.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) SetRecordingExplicitConsent(val OptBool) {
	s.RecordingExplicitConsent = val
}

// SetAllowStopResumeRecording sets the value of AllowStopResumeRecording.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) SetAllowStopResumeRecording(val OptBool) {
	s.AllowStopResumeRecording = val
}

// SetDisconnectOnRecordingFailure sets the value of DisconnectOnRecordingFailure.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) SetDisconnectOnRecordingFailure(val OptBool) {
	s.DisconnectOnRecordingFailure = val
}

// SetPlayRecordingBeepTone sets the value of PlayRecordingBeepTone.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecording) SetPlayRecordingBeepTone(val OptListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone) {
	s.PlayRecordingBeepTone = val
}

type ListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone struct {
	// Whether to play a side tone beep for recorded users while recording.
	Enable OptBool `json:"enable"`
	// Whether to  play the recording beep tone for all participants in the call or only the recording
	// user. It displays only when `enable` is true.
	PlayBeepMember OptString `json:"play_beep_member"`
	// The volume of the side tone beep. It displays only when `enable` is set to `true`.
	PlayBeepVolume OptInt `json:"play_beep_volume"`
	// The beep time interval in seconds. It displays only when `enable` is true.
	PlayBeepTimeInterval OptInt `json:"play_beep_time_interval"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone) GetEnable() OptBool {
	return s.Enable
}

// GetPlayBeepMember returns the value of PlayBeepMember.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone) GetPlayBeepMember() OptString {
	return s.PlayBeepMember
}

// GetPlayBeepVolume returns the value of PlayBeepVolume.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone) GetPlayBeepVolume() OptInt {
	return s.PlayBeepVolume
}

// GetPlayBeepTimeInterval returns the value of PlayBeepTimeInterval.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone) GetPlayBeepTimeInterval() OptInt {
	return s.PlayBeepTimeInterval
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone) SetEnable(val OptBool) {
	s.Enable = val
}

// SetPlayBeepMember sets the value of PlayBeepMember.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone) SetPlayBeepMember(val OptString) {
	s.PlayBeepMember = val
}

// SetPlayBeepVolume sets the value of PlayBeepVolume.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone) SetPlayBeepVolume(val OptInt) {
	s.PlayBeepVolume = val
}

// SetPlayBeepTimeInterval sets the value of PlayBeepTimeInterval.
func (s *ListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone) SetPlayBeepTimeInterval(val OptInt) {
	s.PlayBeepTimeInterval = val
}

type ListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKBlockCallsAsThreat struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKBlockCallsAsThreat) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKBlockCallsAsThreat) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKBlockCallsAsThreat) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKBlockCallsAsThreat) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKBlockCallsAsThreat) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKBlockCallsAsThreat) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKBlockExternalCalls struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKBlockExternalCalls) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKBlockExternalCalls) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKBlockExternalCalls) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKBlockExternalCalls) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKBlockExternalCalls) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKBlockExternalCalls) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// Merged schema.
type ListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// `1` - Low restriction (external numbers not allowed)
	// `2` - Medium restriction (external numbers and external contacts not allowed)
	// `3` - High restriction (external numbers, external contacts and internal extensions without
	// inbound automatic call recording not allowed)
	// `4` - No restriction.
	CallForwardingType OptInt `json:"call_forwarding_type"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers) GetLockedBy() OptString {
	return s.LockedBy
}

// GetCallForwardingType returns the value of CallForwardingType.
func (s *ListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers) GetCallForwardingType() OptInt {
	return s.CallForwardingType
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetCallForwardingType sets the value of CallForwardingType.
func (s *ListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers) SetCallForwardingType(val OptInt) {
	s.CallForwardingType = val
}

// Merged schema.
type ListZoomPhoneAccountSettingsOKCallLiveTranscription struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether to play a prompt to call participants when the transcription has started.
	TranscriptionStartPrompt OptListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt `json:"transcription_start_prompt"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKCallLiveTranscription) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKCallLiveTranscription) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKCallLiveTranscription) GetLockedBy() OptString {
	return s.LockedBy
}

// GetTranscriptionStartPrompt returns the value of TranscriptionStartPrompt.
func (s *ListZoomPhoneAccountSettingsOKCallLiveTranscription) GetTranscriptionStartPrompt() OptListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt {
	return s.TranscriptionStartPrompt
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKCallLiveTranscription) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKCallLiveTranscription) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKCallLiveTranscription) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetTranscriptionStartPrompt sets the value of TranscriptionStartPrompt.
func (s *ListZoomPhoneAccountSettingsOKCallLiveTranscription) SetTranscriptionStartPrompt(val OptListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) {
	s.TranscriptionStartPrompt = val
}

// Whether to play a prompt to call participants when the transcription has started.
type ListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt struct {
	Enable OptBool `json:"enable"`
	// The audio prompt file ID. If the audio was removed from the user's audio library, it is marked
	// with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to
	// get the audio information in [Get an audio item](https://developers.zoom.
	// us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.
	AudioID OptString `json:"audio_id"`
	// The audio prompt file name.
	AudioName OptString `json:"audio_name"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) GetEnable() OptBool {
	return s.Enable
}

// GetAudioID returns the value of AudioID.
func (s *ListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) GetAudioID() OptString {
	return s.AudioID
}

// GetAudioName returns the value of AudioName.
func (s *ListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) GetAudioName() OptString {
	return s.AudioName
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) SetEnable(val OptBool) {
	s.Enable = val
}

// SetAudioID sets the value of AudioID.
func (s *ListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) SetAudioID(val OptString) {
	s.AudioID = val
}

// SetAudioName sets the value of AudioName.
func (s *ListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) SetAudioName(val OptString) {
	s.AudioName = val
}

// Merged schema.
type ListZoomPhoneAccountSettingsOKCallOverflow struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// `1` - Low restriction (external numbers not allowed)
	// `2` - Medium restriction (external numbers and external contacts not allowed)
	// `3` - High restriction (external numbers, external contacts and internal extensions without
	// inbound automatic call recording not allowed)
	// `4` - No restriction.
	CallOverflowType OptInt `json:"call_overflow_type"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKCallOverflow) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKCallOverflow) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKCallOverflow) GetLockedBy() OptString {
	return s.LockedBy
}

// GetCallOverflowType returns the value of CallOverflowType.
func (s *ListZoomPhoneAccountSettingsOKCallOverflow) GetCallOverflowType() OptInt {
	return s.CallOverflowType
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKCallOverflow) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKCallOverflow) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKCallOverflow) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetCallOverflowType sets the value of CallOverflowType.
func (s *ListZoomPhoneAccountSettingsOKCallOverflow) SetCallOverflowType(val OptInt) {
	s.CallOverflowType = val
}

type ListZoomPhoneAccountSettingsOKCallPark struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKCallPark) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKCallPark) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKCallPark) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKCallPark) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKCallPark) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKCallPark) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKCallQueueOptOutReason struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKCallQueueOptOutReason) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKCallQueueOptOutReason) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKCallQueueOptOutReason) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKCallQueueOptOutReason) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKCallQueueOptOutReason) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKCallQueueOptOutReason) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// Merged schema.
type ListZoomPhoneAccountSettingsOKCallTransferring struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// 1-No restriction.
	// 2-Medium restriction (external numbers and external contacts not allowed).
	// 3-High restriction (external numbers, unrecorded external contacts, and internal extensions
	// without inbound automatic recording not allowed).
	// 4-Low restriction (external numbers not allowed).
	CallTransferringType OptInt `json:"call_transferring_type"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKCallTransferring) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKCallTransferring) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKCallTransferring) GetLockedBy() OptString {
	return s.LockedBy
}

// GetCallTransferringType returns the value of CallTransferringType.
func (s *ListZoomPhoneAccountSettingsOKCallTransferring) GetCallTransferringType() OptInt {
	return s.CallTransferringType
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKCallTransferring) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKCallTransferring) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKCallTransferring) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetCallTransferringType sets the value of CallTransferringType.
func (s *ListZoomPhoneAccountSettingsOKCallTransferring) SetCallTransferringType(val OptInt) {
	s.CallTransferringType = val
}

type ListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKDelegation struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKDelegation) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKDelegation) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKDelegation) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKDelegation) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKDelegation) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKDelegation) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKE2eEncryption struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKE2eEncryption) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKE2eEncryption) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKE2eEncryption) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKE2eEncryption) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKE2eEncryption) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKE2eEncryption) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKElevateToMeeting struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKElevateToMeeting) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKElevateToMeeting) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKElevateToMeeting) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKElevateToMeeting) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKElevateToMeeting) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKElevateToMeeting) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKHandOffToRoom struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKHandOffToRoom) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKHandOffToRoom) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKHandOffToRoom) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKHandOffToRoom) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKHandOffToRoom) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKHandOffToRoom) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKInternationalCalling struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKInternationalCalling) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKInternationalCalling) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKInternationalCalling) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKInternationalCalling) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKInternationalCalling) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKInternationalCalling) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKLocalSurvivabilityMode struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKLocalSurvivabilityMode) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKLocalSurvivabilityMode) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKLocalSurvivabilityMode) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKLocalSurvivabilityMode) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKLocalSurvivabilityMode) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKLocalSurvivabilityMode) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKMobileSwitchToCarrier struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKMobileSwitchToCarrier) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKMobileSwitchToCarrier) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKMobileSwitchToCarrier) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKMobileSwitchToCarrier) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKMobileSwitchToCarrier) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKMobileSwitchToCarrier) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKOutboundCalling struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKOutboundCalling) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKOutboundCalling) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKOutboundCalling) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKOutboundCalling) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKOutboundCalling) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKOutboundCalling) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKOutboundSMS struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKOutboundSMS) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKOutboundSMS) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKOutboundSMS) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKOutboundSMS) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKOutboundSMS) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKOutboundSMS) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKOverrideDefaultPort struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKOverrideDefaultPort) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKOverrideDefaultPort) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKOverrideDefaultPort) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKOverrideDefaultPort) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKOverrideDefaultPort) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKOverrideDefaultPort) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomPhoneAccountSettingsOKPeerToPeerMedia struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKPeerToPeerMedia) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKPeerToPeerMedia) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKPeerToPeerMedia) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKPeerToPeerMedia) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKPeerToPeerMedia) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKPeerToPeerMedia) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// Merged schema.
type ListZoomPhoneAccountSettingsOKPersonalAudioLibrary struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether to allow music on hold customization.
	AllowMusicOnHoldCustomization OptBool `json:"allow_music_on_hold_customization"`
	// Whether to allow voicemail and message greeting customization.
	AllowVoicemailAndMessageGreetingCustomization OptBool `json:"allow_voicemail_and_message_greeting_customization"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKPersonalAudioLibrary) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKPersonalAudioLibrary) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKPersonalAudioLibrary) GetLockedBy() OptString {
	return s.LockedBy
}

// GetAllowMusicOnHoldCustomization returns the value of AllowMusicOnHoldCustomization.
func (s *ListZoomPhoneAccountSettingsOKPersonalAudioLibrary) GetAllowMusicOnHoldCustomization() OptBool {
	return s.AllowMusicOnHoldCustomization
}

// GetAllowVoicemailAndMessageGreetingCustomization returns the value of AllowVoicemailAndMessageGreetingCustomization.
func (s *ListZoomPhoneAccountSettingsOKPersonalAudioLibrary) GetAllowVoicemailAndMessageGreetingCustomization() OptBool {
	return s.AllowVoicemailAndMessageGreetingCustomization
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKPersonalAudioLibrary) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKPersonalAudioLibrary) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKPersonalAudioLibrary) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetAllowMusicOnHoldCustomization sets the value of AllowMusicOnHoldCustomization.
func (s *ListZoomPhoneAccountSettingsOKPersonalAudioLibrary) SetAllowMusicOnHoldCustomization(val OptBool) {
	s.AllowMusicOnHoldCustomization = val
}

// SetAllowVoicemailAndMessageGreetingCustomization sets the value of AllowVoicemailAndMessageGreetingCustomization.
func (s *ListZoomPhoneAccountSettingsOKPersonalAudioLibrary) SetAllowVoicemailAndMessageGreetingCustomization(val OptBool) {
	s.AllowVoicemailAndMessageGreetingCustomization = val
}

// Merged schema.
type ListZoomPhoneAccountSettingsOKRestrictedCallHours struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// This field sets either time zone `id` or `set_by_extension`.
	TimeZone OptListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone `json:"time_zone"`
	// Whether restricted hours have been applied.
	RestrictedHoursApplied OptBool `json:"restricted_hours_applied"`
	// Whether restricted holiday hours have been applied.
	RestrictedHolidayHoursApplied OptBool `json:"restricted_holiday_hours_applied"`
	// Whether to allow internal calls or SMS during restricted hours.
	AllowInternalCalls OptBool `json:"allow_internal_calls"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKRestrictedCallHours) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKRestrictedCallHours) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKRestrictedCallHours) GetLockedBy() OptString {
	return s.LockedBy
}

// GetTimeZone returns the value of TimeZone.
func (s *ListZoomPhoneAccountSettingsOKRestrictedCallHours) GetTimeZone() OptListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone {
	return s.TimeZone
}

// GetRestrictedHoursApplied returns the value of RestrictedHoursApplied.
func (s *ListZoomPhoneAccountSettingsOKRestrictedCallHours) GetRestrictedHoursApplied() OptBool {
	return s.RestrictedHoursApplied
}

// GetRestrictedHolidayHoursApplied returns the value of RestrictedHolidayHoursApplied.
func (s *ListZoomPhoneAccountSettingsOKRestrictedCallHours) GetRestrictedHolidayHoursApplied() OptBool {
	return s.RestrictedHolidayHoursApplied
}

// GetAllowInternalCalls returns the value of AllowInternalCalls.
func (s *ListZoomPhoneAccountSettingsOKRestrictedCallHours) GetAllowInternalCalls() OptBool {
	return s.AllowInternalCalls
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKRestrictedCallHours) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKRestrictedCallHours) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKRestrictedCallHours) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetTimeZone sets the value of TimeZone.
func (s *ListZoomPhoneAccountSettingsOKRestrictedCallHours) SetTimeZone(val OptListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone) {
	s.TimeZone = val
}

// SetRestrictedHoursApplied sets the value of RestrictedHoursApplied.
func (s *ListZoomPhoneAccountSettingsOKRestrictedCallHours) SetRestrictedHoursApplied(val OptBool) {
	s.RestrictedHoursApplied = val
}

// SetRestrictedHolidayHoursApplied sets the value of RestrictedHolidayHoursApplied.
func (s *ListZoomPhoneAccountSettingsOKRestrictedCallHours) SetRestrictedHolidayHoursApplied(val OptBool) {
	s.RestrictedHolidayHoursApplied = val
}

// SetAllowInternalCalls sets the value of AllowInternalCalls.
func (s *ListZoomPhoneAccountSettingsOKRestrictedCallHours) SetAllowInternalCalls(val OptBool) {
	s.AllowInternalCalls = val
}

// This field sets either time zone `id` or `set_by_extension`.
type ListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone struct {
	// The [time zone list](https://developer.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists/#timezones) for supported time zones and
	// their formats.
	ID OptString `json:"id"`
	// The time zone name. If time zone id is empty, it shows as `setByExtension`.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone) SetName(val OptString) {
	s.Name = val
}

// Merged schema.
type ListZoomPhoneAccountSettingsOKSMS struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the user can send and receive international messages. You can set this field only if `sms`
	// is enabled.
	InternationalSMS OptBool `json:"international_sms"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKSMS) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKSMS) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKSMS) GetLockedBy() OptString {
	return s.LockedBy
}

// GetInternationalSMS returns the value of InternationalSMS.
func (s *ListZoomPhoneAccountSettingsOKSMS) GetInternationalSMS() OptBool {
	return s.InternationalSMS
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKSMS) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKSMS) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKSMS) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetInternationalSMS sets the value of InternationalSMS.
func (s *ListZoomPhoneAccountSettingsOKSMS) SetInternationalSMS(val OptBool) {
	s.InternationalSMS = val
}

type ListZoomPhoneAccountSettingsOKSMSEtiquetteTool struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKSMSEtiquetteTool) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKSMSEtiquetteTool) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKSMSEtiquetteTool) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKSMSEtiquetteTool) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKSMSEtiquetteTool) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKSMSEtiquetteTool) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// Merged schema.
type ListZoomPhoneAccountSettingsOKSelectOutboundCallerID struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether to allow extensions to hide outbound caller ID.
	AllowHideOutboundCallerID OptBool `json:"allow_hide_outbound_caller_id"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKSelectOutboundCallerID) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKSelectOutboundCallerID) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKSelectOutboundCallerID) GetLockedBy() OptString {
	return s.LockedBy
}

// GetAllowHideOutboundCallerID returns the value of AllowHideOutboundCallerID.
func (s *ListZoomPhoneAccountSettingsOKSelectOutboundCallerID) GetAllowHideOutboundCallerID() OptBool {
	return s.AllowHideOutboundCallerID
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKSelectOutboundCallerID) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKSelectOutboundCallerID) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKSelectOutboundCallerID) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetAllowHideOutboundCallerID sets the value of AllowHideOutboundCallerID.
func (s *ListZoomPhoneAccountSettingsOKSelectOutboundCallerID) SetAllowHideOutboundCallerID(val OptBool) {
	s.AllowHideOutboundCallerID = val
}

type ListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// Merged schema.
type ListZoomPhoneAccountSettingsOKVoicemail struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// This field allows videomail.
	AllowVideomail OptBool `json:"allow_videomail"`
	// This field allows users to download their own voicemail or videomail.
	AllowDownload OptBool `json:"allow_download"`
	// This field allows users to delete their own voicemail or videomail.
	AllowDelete OptBool `json:"allow_delete"`
	// This field allows users to share their own voicemail.
	AllowShare OptBool `json:"allow_share"`
	// This field allows virtual background for voicemail or videomail greeting.
	AllowVirtualBackground OptBool `json:"allow_virtual_background"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKVoicemail) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKVoicemail) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKVoicemail) GetLockedBy() OptString {
	return s.LockedBy
}

// GetAllowVideomail returns the value of AllowVideomail.
func (s *ListZoomPhoneAccountSettingsOKVoicemail) GetAllowVideomail() OptBool {
	return s.AllowVideomail
}

// GetAllowDownload returns the value of AllowDownload.
func (s *ListZoomPhoneAccountSettingsOKVoicemail) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowDelete returns the value of AllowDelete.
func (s *ListZoomPhoneAccountSettingsOKVoicemail) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowShare returns the value of AllowShare.
func (s *ListZoomPhoneAccountSettingsOKVoicemail) GetAllowShare() OptBool {
	return s.AllowShare
}

// GetAllowVirtualBackground returns the value of AllowVirtualBackground.
func (s *ListZoomPhoneAccountSettingsOKVoicemail) GetAllowVirtualBackground() OptBool {
	return s.AllowVirtualBackground
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKVoicemail) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKVoicemail) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKVoicemail) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetAllowVideomail sets the value of AllowVideomail.
func (s *ListZoomPhoneAccountSettingsOKVoicemail) SetAllowVideomail(val OptBool) {
	s.AllowVideomail = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *ListZoomPhoneAccountSettingsOKVoicemail) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *ListZoomPhoneAccountSettingsOKVoicemail) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowShare sets the value of AllowShare.
func (s *ListZoomPhoneAccountSettingsOKVoicemail) SetAllowShare(val OptBool) {
	s.AllowShare = val
}

// SetAllowVirtualBackground sets the value of AllowVirtualBackground.
func (s *ListZoomPhoneAccountSettingsOKVoicemail) SetAllowVirtualBackground(val OptBool) {
	s.AllowVirtualBackground = val
}

// Merged schema.
type ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether to include the voicemail file.
	IncludeVoicemailFile OptBool `json:"include_voicemail_file"`
	// Whether to include the voicemail transcription.
	IncludeVoicemailTranscription OptBool `json:"include_voicemail_transcription"`
	// Whether to forward the voicemail to email.
	ForwardVoicemailToEmail OptBool `json:"forward_voicemail_to_email"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) GetLockedBy() OptString {
	return s.LockedBy
}

// GetIncludeVoicemailFile returns the value of IncludeVoicemailFile.
func (s *ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) GetIncludeVoicemailFile() OptBool {
	return s.IncludeVoicemailFile
}

// GetIncludeVoicemailTranscription returns the value of IncludeVoicemailTranscription.
func (s *ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) GetIncludeVoicemailTranscription() OptBool {
	return s.IncludeVoicemailTranscription
}

// GetForwardVoicemailToEmail returns the value of ForwardVoicemailToEmail.
func (s *ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) GetForwardVoicemailToEmail() OptBool {
	return s.ForwardVoicemailToEmail
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetIncludeVoicemailFile sets the value of IncludeVoicemailFile.
func (s *ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) SetIncludeVoicemailFile(val OptBool) {
	s.IncludeVoicemailFile = val
}

// SetIncludeVoicemailTranscription sets the value of IncludeVoicemailTranscription.
func (s *ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) SetIncludeVoicemailTranscription(val OptBool) {
	s.IncludeVoicemailTranscription = val
}

// SetForwardVoicemailToEmail sets the value of ForwardVoicemailToEmail.
func (s *ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) SetForwardVoicemailToEmail(val OptBool) {
	s.ForwardVoicemailToEmail = val
}

type ListZoomPhoneAccountSettingsOKVoicemailTranscription struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKVoicemailTranscription) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKVoicemailTranscription) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKVoicemailTranscription) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKVoicemailTranscription) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKVoicemailTranscription) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKVoicemailTranscription) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// Merged schema.
type ListZoomPhoneAccountSettingsOKZoomPhoneOnMobile struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// This field allows calling and SMS or MMS functions on mobile.
	AllowCallingSMSMms OptBool `json:"allow_calling_sms_mms"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKZoomPhoneOnMobile) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKZoomPhoneOnMobile) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKZoomPhoneOnMobile) GetLockedBy() OptString {
	return s.LockedBy
}

// GetAllowCallingSMSMms returns the value of AllowCallingSMSMms.
func (s *ListZoomPhoneAccountSettingsOKZoomPhoneOnMobile) GetAllowCallingSMSMms() OptBool {
	return s.AllowCallingSMSMms
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKZoomPhoneOnMobile) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKZoomPhoneOnMobile) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKZoomPhoneOnMobile) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetAllowCallingSMSMms sets the value of AllowCallingSMSMms.
func (s *ListZoomPhoneAccountSettingsOKZoomPhoneOnMobile) SetAllowCallingSMSMms(val OptBool) {
	s.AllowCallingSMSMms = val
}

type ListZoomPhoneAccountSettingsOKZoomPhoneOnPwa struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKZoomPhoneOnPwa) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKZoomPhoneOnPwa) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKZoomPhoneOnPwa) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *ListZoomPhoneAccountSettingsOKZoomPhoneOnPwa) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *ListZoomPhoneAccountSettingsOKZoomPhoneOnPwa) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *ListZoomPhoneAccountSettingsOKZoomPhoneOnPwa) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type ListZoomRoomsOK struct {
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The number of records returned from a single API call.
	PageSize OptInt                     `json:"page_size"`
	Rooms    []ListZoomRoomsOKRoomsItem `json:"rooms"`
	// The total records found for this query.
	TotalRecords OptInt `json:"total_records"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListZoomRoomsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *ListZoomRoomsOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetRooms returns the value of Rooms.
func (s *ListZoomRoomsOK) GetRooms() []ListZoomRoomsOKRoomsItem {
	return s.Rooms
}

// GetTotalRecords returns the value of TotalRecords.
func (s *ListZoomRoomsOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListZoomRoomsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *ListZoomRoomsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetRooms sets the value of Rooms.
func (s *ListZoomRoomsOK) SetRooms(val []ListZoomRoomsOKRoomsItem) {
	s.Rooms = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *ListZoomRoomsOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type ListZoomRoomsOKRoomsItem struct {
	CallingPlans []ListZoomRoomsOKRoomsItemCallingPlansItem `json:"calling_plans"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number assigned to the Zoom Room's Zoom phone number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The unique Identifier of the Zoom Room.
	ID OptString `json:"id"`
	// The name of the Zoom Room.
	Name         OptString                                  `json:"name"`
	PhoneNumbers []ListZoomRoomsOKRoomsItemPhoneNumbersItem `json:"phone_numbers"`
	Site         OptListZoomRoomsOKRoomsItemSite            `json:"site"`
}

// GetCallingPlans returns the value of CallingPlans.
func (s *ListZoomRoomsOKRoomsItem) GetCallingPlans() []ListZoomRoomsOKRoomsItemCallingPlansItem {
	return s.CallingPlans
}

// GetExtensionID returns the value of ExtensionID.
func (s *ListZoomRoomsOKRoomsItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *ListZoomRoomsOKRoomsItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *ListZoomRoomsOKRoomsItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListZoomRoomsOKRoomsItem) GetName() OptString {
	return s.Name
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *ListZoomRoomsOKRoomsItem) GetPhoneNumbers() []ListZoomRoomsOKRoomsItemPhoneNumbersItem {
	return s.PhoneNumbers
}

// GetSite returns the value of Site.
func (s *ListZoomRoomsOKRoomsItem) GetSite() OptListZoomRoomsOKRoomsItemSite {
	return s.Site
}

// SetCallingPlans sets the value of CallingPlans.
func (s *ListZoomRoomsOKRoomsItem) SetCallingPlans(val []ListZoomRoomsOKRoomsItemCallingPlansItem) {
	s.CallingPlans = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *ListZoomRoomsOKRoomsItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *ListZoomRoomsOKRoomsItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *ListZoomRoomsOKRoomsItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListZoomRoomsOKRoomsItem) SetName(val OptString) {
	s.Name = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *ListZoomRoomsOKRoomsItem) SetPhoneNumbers(val []ListZoomRoomsOKRoomsItemPhoneNumbersItem) {
	s.PhoneNumbers = val
}

// SetSite sets the value of Site.
func (s *ListZoomRoomsOKRoomsItem) SetSite(val OptListZoomRoomsOKRoomsItemSite) {
	s.Site = val
}

type ListZoomRoomsOKRoomsItemCallingPlansItem struct {
	// Name of the calling plan that Zoom Room is enrolled in.
	Name OptString `json:"name"`
	// The type of calling plan of which the Zoom Room is enrolled.
	Type OptInt `json:"type"`
	// The billing account ID. it's displayed when the zoom room is located in India.
	BillingAccountID OptString `json:"billing_account_id"`
	// The billing account name. It's displayed when the Zoom Room is located in India.
	BillingAccountName OptString `json:"billing_account_name"`
}

// GetName returns the value of Name.
func (s *ListZoomRoomsOKRoomsItemCallingPlansItem) GetName() OptString {
	return s.Name
}

// GetType returns the value of Type.
func (s *ListZoomRoomsOKRoomsItemCallingPlansItem) GetType() OptInt {
	return s.Type
}

// GetBillingAccountID returns the value of BillingAccountID.
func (s *ListZoomRoomsOKRoomsItemCallingPlansItem) GetBillingAccountID() OptString {
	return s.BillingAccountID
}

// GetBillingAccountName returns the value of BillingAccountName.
func (s *ListZoomRoomsOKRoomsItemCallingPlansItem) GetBillingAccountName() OptString {
	return s.BillingAccountName
}

// SetName sets the value of Name.
func (s *ListZoomRoomsOKRoomsItemCallingPlansItem) SetName(val OptString) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *ListZoomRoomsOKRoomsItemCallingPlansItem) SetType(val OptInt) {
	s.Type = val
}

// SetBillingAccountID sets the value of BillingAccountID.
func (s *ListZoomRoomsOKRoomsItemCallingPlansItem) SetBillingAccountID(val OptString) {
	s.BillingAccountID = val
}

// SetBillingAccountName sets the value of BillingAccountName.
func (s *ListZoomRoomsOKRoomsItemCallingPlansItem) SetBillingAccountName(val OptString) {
	s.BillingAccountName = val
}

type ListZoomRoomsOKRoomsItemPhoneNumbersItem struct {
	// The ID for phone number.
	ID OptString `json:"id"`
	// The phone number in E164 format.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *ListZoomRoomsOKRoomsItemPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *ListZoomRoomsOKRoomsItemPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *ListZoomRoomsOKRoomsItemPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *ListZoomRoomsOKRoomsItemPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

type ListZoomRoomsOKRoomsItemSite struct {
	// The [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) ID.
	ID OptString `json:"id"`
	// The name of the site.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *ListZoomRoomsOKRoomsItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *ListZoomRoomsOKRoomsItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *ListZoomRoomsOKRoomsItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ListZoomRoomsOKRoomsItemSite) SetName(val OptString) {
	s.Name = val
}

// MarkPhoneNumberAsBlockedForAllExtensionsNoContent is response for MarkPhoneNumberAsBlockedForAllExtensions operation.
type MarkPhoneNumberAsBlockedForAllExtensionsNoContent struct{}

type MarkPhoneNumberAsBlockedForAllExtensionsReq struct {
	// The unique identifier of the blocked statistic.
	BlockedStatisticID string `json:"blocked_statistic_id"`
}

// GetBlockedStatisticID returns the value of BlockedStatisticID.
func (s *MarkPhoneNumberAsBlockedForAllExtensionsReq) GetBlockedStatisticID() string {
	return s.BlockedStatisticID
}

// SetBlockedStatisticID sets the value of BlockedStatisticID.
func (s *MarkPhoneNumberAsBlockedForAllExtensionsReq) SetBlockedStatisticID(val string) {
	s.BlockedStatisticID = val
}

type OpenapiAuthorization struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *OpenapiAuthorization) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *OpenapiAuthorization) SetAPIKey(val string) {
	s.APIKey = val
}

type OpenapiOAuth struct {
	Token  string
	Scopes []string
}

// GetToken returns the value of Token.
func (s *OpenapiOAuth) GetToken() string {
	return s.Token
}

// GetScopes returns the value of Scopes.
func (s *OpenapiOAuth) GetScopes() []string {
	return s.Scopes
}

// SetToken sets the value of Token.
func (s *OpenapiOAuth) SetToken(val string) {
	s.Token = val
}

// SetScopes sets the value of Scopes.
func (s *OpenapiOAuth) SetScopes(val []string) {
	s.Scopes = val
}

// NewOptAccountCallLogsOKCallLogsItemOwner returns new OptAccountCallLogsOKCallLogsItemOwner with value set to v.
func NewOptAccountCallLogsOKCallLogsItemOwner(v AccountCallLogsOKCallLogsItemOwner) OptAccountCallLogsOKCallLogsItemOwner {
	return OptAccountCallLogsOKCallLogsItemOwner{
		Value: v,
		Set:   true,
	}
}

// OptAccountCallLogsOKCallLogsItemOwner is optional AccountCallLogsOKCallLogsItemOwner.
type OptAccountCallLogsOKCallLogsItemOwner struct {
	Value AccountCallLogsOKCallLogsItemOwner
	Set   bool
}

// IsSet returns true if OptAccountCallLogsOKCallLogsItemOwner was set.
func (o OptAccountCallLogsOKCallLogsItemOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAccountCallLogsOKCallLogsItemOwner) Reset() {
	var v AccountCallLogsOKCallLogsItemOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAccountCallLogsOKCallLogsItemOwner) SetTo(v AccountCallLogsOKCallLogsItemOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAccountCallLogsOKCallLogsItemOwner) Get() (v AccountCallLogsOKCallLogsItemOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAccountCallLogsOKCallLogsItemOwner) Or(d AccountCallLogsOKCallLogsItemOwner) AccountCallLogsOKCallLogsItemOwner {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAccountCallLogsOKCallLogsItemSite returns new OptAccountCallLogsOKCallLogsItemSite with value set to v.
func NewOptAccountCallLogsOKCallLogsItemSite(v AccountCallLogsOKCallLogsItemSite) OptAccountCallLogsOKCallLogsItemSite {
	return OptAccountCallLogsOKCallLogsItemSite{
		Value: v,
		Set:   true,
	}
}

// OptAccountCallLogsOKCallLogsItemSite is optional AccountCallLogsOKCallLogsItemSite.
type OptAccountCallLogsOKCallLogsItemSite struct {
	Value AccountCallLogsOKCallLogsItemSite
	Set   bool
}

// IsSet returns true if OptAccountCallLogsOKCallLogsItemSite was set.
func (o OptAccountCallLogsOKCallLogsItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAccountCallLogsOKCallLogsItemSite) Reset() {
	var v AccountCallLogsOKCallLogsItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAccountCallLogsOKCallLogsItemSite) SetTo(v AccountCallLogsOKCallLogsItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAccountCallLogsOKCallLogsItemSite) Get() (v AccountCallLogsOKCallLogsItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAccountCallLogsOKCallLogsItemSite) Or(d AccountCallLogsOKCallLogsItemSite) AccountCallLogsOKCallLogsItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAccountSmsSessionOKSMSSessionsItemParticipantsItemOwner returns new OptAccountSmsSessionOKSMSSessionsItemParticipantsItemOwner with value set to v.
func NewOptAccountSmsSessionOKSMSSessionsItemParticipantsItemOwner(v AccountSmsSessionOKSMSSessionsItemParticipantsItemOwner) OptAccountSmsSessionOKSMSSessionsItemParticipantsItemOwner {
	return OptAccountSmsSessionOKSMSSessionsItemParticipantsItemOwner{
		Value: v,
		Set:   true,
	}
}

// OptAccountSmsSessionOKSMSSessionsItemParticipantsItemOwner is optional AccountSmsSessionOKSMSSessionsItemParticipantsItemOwner.
type OptAccountSmsSessionOKSMSSessionsItemParticipantsItemOwner struct {
	Value AccountSmsSessionOKSMSSessionsItemParticipantsItemOwner
	Set   bool
}

// IsSet returns true if OptAccountSmsSessionOKSMSSessionsItemParticipantsItemOwner was set.
func (o OptAccountSmsSessionOKSMSSessionsItemParticipantsItemOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAccountSmsSessionOKSMSSessionsItemParticipantsItemOwner) Reset() {
	var v AccountSmsSessionOKSMSSessionsItemParticipantsItemOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAccountSmsSessionOKSMSSessionsItemParticipantsItemOwner) SetTo(v AccountSmsSessionOKSMSSessionsItemParticipantsItemOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAccountSmsSessionOKSMSSessionsItemParticipantsItemOwner) Get() (v AccountSmsSessionOKSMSSessionsItemParticipantsItemOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAccountSmsSessionOKSMSSessionsItemParticipantsItemOwner) Or(d AccountSmsSessionOKSMSSessionsItemParticipantsItemOwner) AccountSmsSessionOKSMSSessionsItemParticipantsItemOwner {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddAccountLevelInboundBlockRulesReq returns new OptAddAccountLevelInboundBlockRulesReq with value set to v.
func NewOptAddAccountLevelInboundBlockRulesReq(v AddAccountLevelInboundBlockRulesReq) OptAddAccountLevelInboundBlockRulesReq {
	return OptAddAccountLevelInboundBlockRulesReq{
		Value: v,
		Set:   true,
	}
}

// OptAddAccountLevelInboundBlockRulesReq is optional AddAccountLevelInboundBlockRulesReq.
type OptAddAccountLevelInboundBlockRulesReq struct {
	Value AddAccountLevelInboundBlockRulesReq
	Set   bool
}

// IsSet returns true if OptAddAccountLevelInboundBlockRulesReq was set.
func (o OptAddAccountLevelInboundBlockRulesReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddAccountLevelInboundBlockRulesReq) Reset() {
	var v AddAccountLevelInboundBlockRulesReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddAccountLevelInboundBlockRulesReq) SetTo(v AddAccountLevelInboundBlockRulesReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddAccountLevelInboundBlockRulesReq) Get() (v AddAccountLevelInboundBlockRulesReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddAccountLevelInboundBlockRulesReq) Or(d AddAccountLevelInboundBlockRulesReq) AddAccountLevelInboundBlockRulesReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddAccountOutboundCallingExceptionRuleReq returns new OptAddAccountOutboundCallingExceptionRuleReq with value set to v.
func NewOptAddAccountOutboundCallingExceptionRuleReq(v AddAccountOutboundCallingExceptionRuleReq) OptAddAccountOutboundCallingExceptionRuleReq {
	return OptAddAccountOutboundCallingExceptionRuleReq{
		Value: v,
		Set:   true,
	}
}

// OptAddAccountOutboundCallingExceptionRuleReq is optional AddAccountOutboundCallingExceptionRuleReq.
type OptAddAccountOutboundCallingExceptionRuleReq struct {
	Value AddAccountOutboundCallingExceptionRuleReq
	Set   bool
}

// IsSet returns true if OptAddAccountOutboundCallingExceptionRuleReq was set.
func (o OptAddAccountOutboundCallingExceptionRuleReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddAccountOutboundCallingExceptionRuleReq) Reset() {
	var v AddAccountOutboundCallingExceptionRuleReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddAccountOutboundCallingExceptionRuleReq) SetTo(v AddAccountOutboundCallingExceptionRuleReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddAccountOutboundCallingExceptionRuleReq) Get() (v AddAccountOutboundCallingExceptionRuleReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddAccountOutboundCallingExceptionRuleReq) Or(d AddAccountOutboundCallingExceptionRuleReq) AddAccountOutboundCallingExceptionRuleReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddAccountOutboundCallingExceptionRuleReqExceptionRule returns new OptAddAccountOutboundCallingExceptionRuleReqExceptionRule with value set to v.
func NewOptAddAccountOutboundCallingExceptionRuleReqExceptionRule(v AddAccountOutboundCallingExceptionRuleReqExceptionRule) OptAddAccountOutboundCallingExceptionRuleReqExceptionRule {
	return OptAddAccountOutboundCallingExceptionRuleReqExceptionRule{
		Value: v,
		Set:   true,
	}
}

// OptAddAccountOutboundCallingExceptionRuleReqExceptionRule is optional AddAccountOutboundCallingExceptionRuleReqExceptionRule.
type OptAddAccountOutboundCallingExceptionRuleReqExceptionRule struct {
	Value AddAccountOutboundCallingExceptionRuleReqExceptionRule
	Set   bool
}

// IsSet returns true if OptAddAccountOutboundCallingExceptionRuleReqExceptionRule was set.
func (o OptAddAccountOutboundCallingExceptionRuleReqExceptionRule) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddAccountOutboundCallingExceptionRuleReqExceptionRule) Reset() {
	var v AddAccountOutboundCallingExceptionRuleReqExceptionRule
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddAccountOutboundCallingExceptionRuleReqExceptionRule) SetTo(v AddAccountOutboundCallingExceptionRuleReqExceptionRule) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddAccountOutboundCallingExceptionRuleReqExceptionRule) Get() (v AddAccountOutboundCallingExceptionRuleReqExceptionRule, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddAccountOutboundCallingExceptionRuleReqExceptionRule) Or(d AddAccountOutboundCallingExceptionRuleReqExceptionRule) AddAccountOutboundCallingExceptionRuleReqExceptionRule {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddAnAlertSettingReq returns new OptAddAnAlertSettingReq with value set to v.
func NewOptAddAnAlertSettingReq(v AddAnAlertSettingReq) OptAddAnAlertSettingReq {
	return OptAddAnAlertSettingReq{
		Value: v,
		Set:   true,
	}
}

// OptAddAnAlertSettingReq is optional AddAnAlertSettingReq.
type OptAddAnAlertSettingReq struct {
	Value AddAnAlertSettingReq
	Set   bool
}

// IsSet returns true if OptAddAnAlertSettingReq was set.
func (o OptAddAnAlertSettingReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddAnAlertSettingReq) Reset() {
	var v AddAnAlertSettingReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddAnAlertSettingReq) SetTo(v AddAnAlertSettingReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddAnAlertSettingReq) Get() (v AddAnAlertSettingReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddAnAlertSettingReq) Or(d AddAnAlertSettingReq) AddAnAlertSettingReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddAnAudioReq returns new OptAddAnAudioReq with value set to v.
func NewOptAddAnAudioReq(v AddAnAudioReq) OptAddAnAudioReq {
	return OptAddAnAudioReq{
		Value: v,
		Set:   true,
	}
}

// OptAddAnAudioReq is optional AddAnAudioReq.
type OptAddAnAudioReq struct {
	Value AddAnAudioReq
	Set   bool
}

// IsSet returns true if OptAddAnAudioReq was set.
func (o OptAddAnAudioReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddAnAudioReq) Reset() {
	var v AddAnAudioReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddAnAudioReq) SetTo(v AddAnAudioReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddAnAudioReq) Get() (v AddAnAudioReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddAnAudioReq) Or(d AddAnAudioReq) AddAnAudioReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddAnumberToBlockedListReq returns new OptAddAnumberToBlockedListReq with value set to v.
func NewOptAddAnumberToBlockedListReq(v AddAnumberToBlockedListReq) OptAddAnumberToBlockedListReq {
	return OptAddAnumberToBlockedListReq{
		Value: v,
		Set:   true,
	}
}

// OptAddAnumberToBlockedListReq is optional AddAnumberToBlockedListReq.
type OptAddAnumberToBlockedListReq struct {
	Value AddAnumberToBlockedListReq
	Set   bool
}

// IsSet returns true if OptAddAnumberToBlockedListReq was set.
func (o OptAddAnumberToBlockedListReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddAnumberToBlockedListReq) Reset() {
	var v AddAnumberToBlockedListReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddAnumberToBlockedListReq) SetTo(v AddAnumberToBlockedListReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddAnumberToBlockedListReq) Get() (v AddAnumberToBlockedListReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddAnumberToBlockedListReq) Or(d AddAnumberToBlockedListReq) AddAnumberToBlockedListReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddAudioItemReq returns new OptAddAudioItemReq with value set to v.
func NewOptAddAudioItemReq(v AddAudioItemReq) OptAddAudioItemReq {
	return OptAddAudioItemReq{
		Value: v,
		Set:   true,
	}
}

// OptAddAudioItemReq is optional AddAudioItemReq.
type OptAddAudioItemReq struct {
	Value AddAudioItemReq
	Set   bool
}

// IsSet returns true if OptAddAudioItemReq was set.
func (o OptAddAudioItemReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddAudioItemReq) Reset() {
	var v AddAudioItemReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddAudioItemReq) SetTo(v AddAudioItemReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddAudioItemReq) Get() (v AddAudioItemReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddAudioItemReq) Or(d AddAudioItemReq) AddAudioItemReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddAutoReceptionistReq returns new OptAddAutoReceptionistReq with value set to v.
func NewOptAddAutoReceptionistReq(v AddAutoReceptionistReq) OptAddAutoReceptionistReq {
	return OptAddAutoReceptionistReq{
		Value: v,
		Set:   true,
	}
}

// OptAddAutoReceptionistReq is optional AddAutoReceptionistReq.
type OptAddAutoReceptionistReq struct {
	Value AddAutoReceptionistReq
	Set   bool
}

// IsSet returns true if OptAddAutoReceptionistReq was set.
func (o OptAddAutoReceptionistReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddAutoReceptionistReq) Reset() {
	var v AddAutoReceptionistReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddAutoReceptionistReq) SetTo(v AddAutoReceptionistReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddAutoReceptionistReq) Get() (v AddAutoReceptionistReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddAutoReceptionistReq) Or(d AddAutoReceptionistReq) AddAutoReceptionistReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddBYOCNumberReq returns new OptAddBYOCNumberReq with value set to v.
func NewOptAddBYOCNumberReq(v AddBYOCNumberReq) OptAddBYOCNumberReq {
	return OptAddBYOCNumberReq{
		Value: v,
		Set:   true,
	}
}

// OptAddBYOCNumberReq is optional AddBYOCNumberReq.
type OptAddBYOCNumberReq struct {
	Value AddBYOCNumberReq
	Set   bool
}

// IsSet returns true if OptAddBYOCNumberReq was set.
func (o OptAddBYOCNumberReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddBYOCNumberReq) Reset() {
	var v AddBYOCNumberReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddBYOCNumberReq) SetTo(v AddBYOCNumberReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddBYOCNumberReq) Get() (v AddBYOCNumberReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddBYOCNumberReq) Or(d AddBYOCNumberReq) AddBYOCNumberReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddCQPolicySubSettingReq returns new OptAddCQPolicySubSettingReq with value set to v.
func NewOptAddCQPolicySubSettingReq(v AddCQPolicySubSettingReq) OptAddCQPolicySubSettingReq {
	return OptAddCQPolicySubSettingReq{
		Value: v,
		Set:   true,
	}
}

// OptAddCQPolicySubSettingReq is optional AddCQPolicySubSettingReq.
type OptAddCQPolicySubSettingReq struct {
	Value AddCQPolicySubSettingReq
	Set   bool
}

// IsSet returns true if OptAddCQPolicySubSettingReq was set.
func (o OptAddCQPolicySubSettingReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddCQPolicySubSettingReq) Reset() {
	var v AddCQPolicySubSettingReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddCQPolicySubSettingReq) SetTo(v AddCQPolicySubSettingReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddCQPolicySubSettingReq) Get() (v AddCQPolicySubSettingReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddCQPolicySubSettingReq) Or(d AddCQPolicySubSettingReq) AddCQPolicySubSettingReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddCallHandlingReq returns new OptAddCallHandlingReq with value set to v.
func NewOptAddCallHandlingReq(v AddCallHandlingReq) OptAddCallHandlingReq {
	return OptAddCallHandlingReq{
		Value: v,
		Set:   true,
	}
}

// OptAddCallHandlingReq is optional AddCallHandlingReq.
type OptAddCallHandlingReq struct {
	Value AddCallHandlingReq
	Set   bool
}

// IsSet returns true if OptAddCallHandlingReq was set.
func (o OptAddCallHandlingReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddCallHandlingReq) Reset() {
	var v AddCallHandlingReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddCallHandlingReq) SetTo(v AddCallHandlingReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddCallHandlingReq) Get() (v AddCallHandlingReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddCallHandlingReq) Or(d AddCallHandlingReq) AddCallHandlingReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddClientCodeToCallLogReq returns new OptAddClientCodeToCallLogReq with value set to v.
func NewOptAddClientCodeToCallLogReq(v AddClientCodeToCallLogReq) OptAddClientCodeToCallLogReq {
	return OptAddClientCodeToCallLogReq{
		Value: v,
		Set:   true,
	}
}

// OptAddClientCodeToCallLogReq is optional AddClientCodeToCallLogReq.
type OptAddClientCodeToCallLogReq struct {
	Value AddClientCodeToCallLogReq
	Set   bool
}

// IsSet returns true if OptAddClientCodeToCallLogReq was set.
func (o OptAddClientCodeToCallLogReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddClientCodeToCallLogReq) Reset() {
	var v AddClientCodeToCallLogReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddClientCodeToCallLogReq) SetTo(v AddClientCodeToCallLogReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddClientCodeToCallLogReq) Get() (v AddClientCodeToCallLogReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddClientCodeToCallLogReq) Or(d AddClientCodeToCallLogReq) AddClientCodeToCallLogReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddCommonAreaOutboundCallingExceptionRuleReq returns new OptAddCommonAreaOutboundCallingExceptionRuleReq with value set to v.
func NewOptAddCommonAreaOutboundCallingExceptionRuleReq(v AddCommonAreaOutboundCallingExceptionRuleReq) OptAddCommonAreaOutboundCallingExceptionRuleReq {
	return OptAddCommonAreaOutboundCallingExceptionRuleReq{
		Value: v,
		Set:   true,
	}
}

// OptAddCommonAreaOutboundCallingExceptionRuleReq is optional AddCommonAreaOutboundCallingExceptionRuleReq.
type OptAddCommonAreaOutboundCallingExceptionRuleReq struct {
	Value AddCommonAreaOutboundCallingExceptionRuleReq
	Set   bool
}

// IsSet returns true if OptAddCommonAreaOutboundCallingExceptionRuleReq was set.
func (o OptAddCommonAreaOutboundCallingExceptionRuleReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddCommonAreaOutboundCallingExceptionRuleReq) Reset() {
	var v AddCommonAreaOutboundCallingExceptionRuleReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddCommonAreaOutboundCallingExceptionRuleReq) SetTo(v AddCommonAreaOutboundCallingExceptionRuleReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddCommonAreaOutboundCallingExceptionRuleReq) Get() (v AddCommonAreaOutboundCallingExceptionRuleReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddCommonAreaOutboundCallingExceptionRuleReq) Or(d AddCommonAreaOutboundCallingExceptionRuleReq) AddCommonAreaOutboundCallingExceptionRuleReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddCommonAreaOutboundCallingExceptionRuleReqExceptionRule returns new OptAddCommonAreaOutboundCallingExceptionRuleReqExceptionRule with value set to v.
func NewOptAddCommonAreaOutboundCallingExceptionRuleReqExceptionRule(v AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) OptAddCommonAreaOutboundCallingExceptionRuleReqExceptionRule {
	return OptAddCommonAreaOutboundCallingExceptionRuleReqExceptionRule{
		Value: v,
		Set:   true,
	}
}

// OptAddCommonAreaOutboundCallingExceptionRuleReqExceptionRule is optional AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule.
type OptAddCommonAreaOutboundCallingExceptionRuleReqExceptionRule struct {
	Value AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule
	Set   bool
}

// IsSet returns true if OptAddCommonAreaOutboundCallingExceptionRuleReqExceptionRule was set.
func (o OptAddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) Reset() {
	var v AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) SetTo(v AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) Get() (v AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) Or(d AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule) AddCommonAreaOutboundCallingExceptionRuleReqExceptionRule {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddCommonAreaReq returns new OptAddCommonAreaReq with value set to v.
func NewOptAddCommonAreaReq(v AddCommonAreaReq) OptAddCommonAreaReq {
	return OptAddCommonAreaReq{
		Value: v,
		Set:   true,
	}
}

// OptAddCommonAreaReq is optional AddCommonAreaReq.
type OptAddCommonAreaReq struct {
	Value AddCommonAreaReq
	Set   bool
}

// IsSet returns true if OptAddCommonAreaReq was set.
func (o OptAddCommonAreaReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddCommonAreaReq) Reset() {
	var v AddCommonAreaReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddCommonAreaReq) SetTo(v AddCommonAreaReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddCommonAreaReq) Get() (v AddCommonAreaReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddCommonAreaReq) Or(d AddCommonAreaReq) AddCommonAreaReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddCommonAreaSettingReq returns new OptAddCommonAreaSettingReq with value set to v.
func NewOptAddCommonAreaSettingReq(v AddCommonAreaSettingReq) OptAddCommonAreaSettingReq {
	return OptAddCommonAreaSettingReq{
		Value: v,
		Set:   true,
	}
}

// OptAddCommonAreaSettingReq is optional AddCommonAreaSettingReq.
type OptAddCommonAreaSettingReq struct {
	Value AddCommonAreaSettingReq
	Set   bool
}

// IsSet returns true if OptAddCommonAreaSettingReq was set.
func (o OptAddCommonAreaSettingReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddCommonAreaSettingReq) Reset() {
	var v AddCommonAreaSettingReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddCommonAreaSettingReq) SetTo(v AddCommonAreaSettingReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddCommonAreaSettingReq) Get() (v AddCommonAreaSettingReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddCommonAreaSettingReq) Or(d AddCommonAreaSettingReq) AddCommonAreaSettingReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddEmergencyAddressCreatedOwner returns new OptAddEmergencyAddressCreatedOwner with value set to v.
func NewOptAddEmergencyAddressCreatedOwner(v AddEmergencyAddressCreatedOwner) OptAddEmergencyAddressCreatedOwner {
	return OptAddEmergencyAddressCreatedOwner{
		Value: v,
		Set:   true,
	}
}

// OptAddEmergencyAddressCreatedOwner is optional AddEmergencyAddressCreatedOwner.
type OptAddEmergencyAddressCreatedOwner struct {
	Value AddEmergencyAddressCreatedOwner
	Set   bool
}

// IsSet returns true if OptAddEmergencyAddressCreatedOwner was set.
func (o OptAddEmergencyAddressCreatedOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddEmergencyAddressCreatedOwner) Reset() {
	var v AddEmergencyAddressCreatedOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddEmergencyAddressCreatedOwner) SetTo(v AddEmergencyAddressCreatedOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddEmergencyAddressCreatedOwner) Get() (v AddEmergencyAddressCreatedOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddEmergencyAddressCreatedOwner) Or(d AddEmergencyAddressCreatedOwner) AddEmergencyAddressCreatedOwner {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddEmergencyAddressCreatedSite returns new OptAddEmergencyAddressCreatedSite with value set to v.
func NewOptAddEmergencyAddressCreatedSite(v AddEmergencyAddressCreatedSite) OptAddEmergencyAddressCreatedSite {
	return OptAddEmergencyAddressCreatedSite{
		Value: v,
		Set:   true,
	}
}

// OptAddEmergencyAddressCreatedSite is optional AddEmergencyAddressCreatedSite.
type OptAddEmergencyAddressCreatedSite struct {
	Value AddEmergencyAddressCreatedSite
	Set   bool
}

// IsSet returns true if OptAddEmergencyAddressCreatedSite was set.
func (o OptAddEmergencyAddressCreatedSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddEmergencyAddressCreatedSite) Reset() {
	var v AddEmergencyAddressCreatedSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddEmergencyAddressCreatedSite) SetTo(v AddEmergencyAddressCreatedSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddEmergencyAddressCreatedSite) Get() (v AddEmergencyAddressCreatedSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddEmergencyAddressCreatedSite) Or(d AddEmergencyAddressCreatedSite) AddEmergencyAddressCreatedSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddEmergencyAddressReq returns new OptAddEmergencyAddressReq with value set to v.
func NewOptAddEmergencyAddressReq(v AddEmergencyAddressReq) OptAddEmergencyAddressReq {
	return OptAddEmergencyAddressReq{
		Value: v,
		Set:   true,
	}
}

// OptAddEmergencyAddressReq is optional AddEmergencyAddressReq.
type OptAddEmergencyAddressReq struct {
	Value AddEmergencyAddressReq
	Set   bool
}

// IsSet returns true if OptAddEmergencyAddressReq was set.
func (o OptAddEmergencyAddressReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddEmergencyAddressReq) Reset() {
	var v AddEmergencyAddressReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddEmergencyAddressReq) SetTo(v AddEmergencyAddressReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddEmergencyAddressReq) Get() (v AddEmergencyAddressReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddEmergencyAddressReq) Or(d AddEmergencyAddressReq) AddEmergencyAddressReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddExtensionsToADeviceReq returns new OptAddExtensionsToADeviceReq with value set to v.
func NewOptAddExtensionsToADeviceReq(v AddExtensionsToADeviceReq) OptAddExtensionsToADeviceReq {
	return OptAddExtensionsToADeviceReq{
		Value: v,
		Set:   true,
	}
}

// OptAddExtensionsToADeviceReq is optional AddExtensionsToADeviceReq.
type OptAddExtensionsToADeviceReq struct {
	Value AddExtensionsToADeviceReq
	Set   bool
}

// IsSet returns true if OptAddExtensionsToADeviceReq was set.
func (o OptAddExtensionsToADeviceReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddExtensionsToADeviceReq) Reset() {
	var v AddExtensionsToADeviceReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddExtensionsToADeviceReq) SetTo(v AddExtensionsToADeviceReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddExtensionsToADeviceReq) Get() (v AddExtensionsToADeviceReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddExtensionsToADeviceReq) Or(d AddExtensionsToADeviceReq) AddExtensionsToADeviceReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddExtensiontLevelInboundBlockRulesReq returns new OptAddExtensiontLevelInboundBlockRulesReq with value set to v.
func NewOptAddExtensiontLevelInboundBlockRulesReq(v AddExtensiontLevelInboundBlockRulesReq) OptAddExtensiontLevelInboundBlockRulesReq {
	return OptAddExtensiontLevelInboundBlockRulesReq{
		Value: v,
		Set:   true,
	}
}

// OptAddExtensiontLevelInboundBlockRulesReq is optional AddExtensiontLevelInboundBlockRulesReq.
type OptAddExtensiontLevelInboundBlockRulesReq struct {
	Value AddExtensiontLevelInboundBlockRulesReq
	Set   bool
}

// IsSet returns true if OptAddExtensiontLevelInboundBlockRulesReq was set.
func (o OptAddExtensiontLevelInboundBlockRulesReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddExtensiontLevelInboundBlockRulesReq) Reset() {
	var v AddExtensiontLevelInboundBlockRulesReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddExtensiontLevelInboundBlockRulesReq) SetTo(v AddExtensiontLevelInboundBlockRulesReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddExtensiontLevelInboundBlockRulesReq) Get() (v AddExtensiontLevelInboundBlockRulesReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddExtensiontLevelInboundBlockRulesReq) Or(d AddExtensiontLevelInboundBlockRulesReq) AddExtensiontLevelInboundBlockRulesReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddExternalContactReq returns new OptAddExternalContactReq with value set to v.
func NewOptAddExternalContactReq(v AddExternalContactReq) OptAddExternalContactReq {
	return OptAddExternalContactReq{
		Value: v,
		Set:   true,
	}
}

// OptAddExternalContactReq is optional AddExternalContactReq.
type OptAddExternalContactReq struct {
	Value AddExternalContactReq
	Set   bool
}

// IsSet returns true if OptAddExternalContactReq was set.
func (o OptAddExternalContactReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddExternalContactReq) Reset() {
	var v AddExternalContactReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddExternalContactReq) SetTo(v AddExternalContactReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddExternalContactReq) Get() (v AddExternalContactReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddExternalContactReq) Or(d AddExternalContactReq) AddExternalContactReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddFirmwareRuleReq returns new OptAddFirmwareRuleReq with value set to v.
func NewOptAddFirmwareRuleReq(v AddFirmwareRuleReq) OptAddFirmwareRuleReq {
	return OptAddFirmwareRuleReq{
		Value: v,
		Set:   true,
	}
}

// OptAddFirmwareRuleReq is optional AddFirmwareRuleReq.
type OptAddFirmwareRuleReq struct {
	Value AddFirmwareRuleReq
	Set   bool
}

// IsSet returns true if OptAddFirmwareRuleReq was set.
func (o OptAddFirmwareRuleReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddFirmwareRuleReq) Reset() {
	var v AddFirmwareRuleReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddFirmwareRuleReq) SetTo(v AddFirmwareRuleReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddFirmwareRuleReq) Get() (v AddFirmwareRuleReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddFirmwareRuleReq) Or(d AddFirmwareRuleReq) AddFirmwareRuleReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddGCPMembersReq returns new OptAddGCPMembersReq with value set to v.
func NewOptAddGCPMembersReq(v AddGCPMembersReq) OptAddGCPMembersReq {
	return OptAddGCPMembersReq{
		Value: v,
		Set:   true,
	}
}

// OptAddGCPMembersReq is optional AddGCPMembersReq.
type OptAddGCPMembersReq struct {
	Value AddGCPMembersReq
	Set   bool
}

// IsSet returns true if OptAddGCPMembersReq was set.
func (o OptAddGCPMembersReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddGCPMembersReq) Reset() {
	var v AddGCPMembersReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddGCPMembersReq) SetTo(v AddGCPMembersReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddGCPMembersReq) Get() (v AddGCPMembersReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddGCPMembersReq) Or(d AddGCPMembersReq) AddGCPMembersReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddGCPReq returns new OptAddGCPReq with value set to v.
func NewOptAddGCPReq(v AddGCPReq) OptAddGCPReq {
	return OptAddGCPReq{
		Value: v,
		Set:   true,
	}
}

// OptAddGCPReq is optional AddGCPReq.
type OptAddGCPReq struct {
	Value AddGCPReq
	Set   bool
}

// IsSet returns true if OptAddGCPReq was set.
func (o OptAddGCPReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddGCPReq) Reset() {
	var v AddGCPReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddGCPReq) SetTo(v AddGCPReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddGCPReq) Get() (v AddGCPReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddGCPReq) Or(d AddGCPReq) AddGCPReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddGCPReqPlayIncomingCallsSound returns new OptAddGCPReqPlayIncomingCallsSound with value set to v.
func NewOptAddGCPReqPlayIncomingCallsSound(v AddGCPReqPlayIncomingCallsSound) OptAddGCPReqPlayIncomingCallsSound {
	return OptAddGCPReqPlayIncomingCallsSound{
		Value: v,
		Set:   true,
	}
}

// OptAddGCPReqPlayIncomingCallsSound is optional AddGCPReqPlayIncomingCallsSound.
type OptAddGCPReqPlayIncomingCallsSound struct {
	Value AddGCPReqPlayIncomingCallsSound
	Set   bool
}

// IsSet returns true if OptAddGCPReqPlayIncomingCallsSound was set.
func (o OptAddGCPReqPlayIncomingCallsSound) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddGCPReqPlayIncomingCallsSound) Reset() {
	var v AddGCPReqPlayIncomingCallsSound
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddGCPReqPlayIncomingCallsSound) SetTo(v AddGCPReqPlayIncomingCallsSound) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddGCPReqPlayIncomingCallsSound) Get() (v AddGCPReqPlayIncomingCallsSound, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddGCPReqPlayIncomingCallsSound) Or(d AddGCPReqPlayIncomingCallsSound) AddGCPReqPlayIncomingCallsSound {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddLocationReq returns new OptAddLocationReq with value set to v.
func NewOptAddLocationReq(v AddLocationReq) OptAddLocationReq {
	return OptAddLocationReq{
		Value: v,
		Set:   true,
	}
}

// OptAddLocationReq is optional AddLocationReq.
type OptAddLocationReq struct {
	Value AddLocationReq
	Set   bool
}

// IsSet returns true if OptAddLocationReq was set.
func (o OptAddLocationReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddLocationReq) Reset() {
	var v AddLocationReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddLocationReq) SetTo(v AddLocationReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddLocationReq) Get() (v AddLocationReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddLocationReq) Or(d AddLocationReq) AddLocationReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddMembersToCallQueueReq returns new OptAddMembersToCallQueueReq with value set to v.
func NewOptAddMembersToCallQueueReq(v AddMembersToCallQueueReq) OptAddMembersToCallQueueReq {
	return OptAddMembersToCallQueueReq{
		Value: v,
		Set:   true,
	}
}

// OptAddMembersToCallQueueReq is optional AddMembersToCallQueueReq.
type OptAddMembersToCallQueueReq struct {
	Value AddMembersToCallQueueReq
	Set   bool
}

// IsSet returns true if OptAddMembersToCallQueueReq was set.
func (o OptAddMembersToCallQueueReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddMembersToCallQueueReq) Reset() {
	var v AddMembersToCallQueueReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddMembersToCallQueueReq) SetTo(v AddMembersToCallQueueReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddMembersToCallQueueReq) Get() (v AddMembersToCallQueueReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddMembersToCallQueueReq) Or(d AddMembersToCallQueueReq) AddMembersToCallQueueReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddMembersToCallQueueReqMembers returns new OptAddMembersToCallQueueReqMembers with value set to v.
func NewOptAddMembersToCallQueueReqMembers(v AddMembersToCallQueueReqMembers) OptAddMembersToCallQueueReqMembers {
	return OptAddMembersToCallQueueReqMembers{
		Value: v,
		Set:   true,
	}
}

// OptAddMembersToCallQueueReqMembers is optional AddMembersToCallQueueReqMembers.
type OptAddMembersToCallQueueReqMembers struct {
	Value AddMembersToCallQueueReqMembers
	Set   bool
}

// IsSet returns true if OptAddMembersToCallQueueReqMembers was set.
func (o OptAddMembersToCallQueueReqMembers) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddMembersToCallQueueReqMembers) Reset() {
	var v AddMembersToCallQueueReqMembers
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddMembersToCallQueueReqMembers) SetTo(v AddMembersToCallQueueReqMembers) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddMembersToCallQueueReqMembers) Get() (v AddMembersToCallQueueReqMembers, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddMembersToCallQueueReqMembers) Or(d AddMembersToCallQueueReqMembers) AddMembersToCallQueueReqMembers {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddMembersToSharedLineGroupReq returns new OptAddMembersToSharedLineGroupReq with value set to v.
func NewOptAddMembersToSharedLineGroupReq(v AddMembersToSharedLineGroupReq) OptAddMembersToSharedLineGroupReq {
	return OptAddMembersToSharedLineGroupReq{
		Value: v,
		Set:   true,
	}
}

// OptAddMembersToSharedLineGroupReq is optional AddMembersToSharedLineGroupReq.
type OptAddMembersToSharedLineGroupReq struct {
	Value AddMembersToSharedLineGroupReq
	Set   bool
}

// IsSet returns true if OptAddMembersToSharedLineGroupReq was set.
func (o OptAddMembersToSharedLineGroupReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddMembersToSharedLineGroupReq) Reset() {
	var v AddMembersToSharedLineGroupReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddMembersToSharedLineGroupReq) SetTo(v AddMembersToSharedLineGroupReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddMembersToSharedLineGroupReq) Get() (v AddMembersToSharedLineGroupReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddMembersToSharedLineGroupReq) Or(d AddMembersToSharedLineGroupReq) AddMembersToSharedLineGroupReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddMembersToSharedLineGroupReqMembers returns new OptAddMembersToSharedLineGroupReqMembers with value set to v.
func NewOptAddMembersToSharedLineGroupReqMembers(v AddMembersToSharedLineGroupReqMembers) OptAddMembersToSharedLineGroupReqMembers {
	return OptAddMembersToSharedLineGroupReqMembers{
		Value: v,
		Set:   true,
	}
}

// OptAddMembersToSharedLineGroupReqMembers is optional AddMembersToSharedLineGroupReqMembers.
type OptAddMembersToSharedLineGroupReqMembers struct {
	Value AddMembersToSharedLineGroupReqMembers
	Set   bool
}

// IsSet returns true if OptAddMembersToSharedLineGroupReqMembers was set.
func (o OptAddMembersToSharedLineGroupReqMembers) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddMembersToSharedLineGroupReqMembers) Reset() {
	var v AddMembersToSharedLineGroupReqMembers
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddMembersToSharedLineGroupReqMembers) SetTo(v AddMembersToSharedLineGroupReqMembers) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddMembersToSharedLineGroupReqMembers) Get() (v AddMembersToSharedLineGroupReqMembers, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddMembersToSharedLineGroupReqMembers) Or(d AddMembersToSharedLineGroupReqMembers) AddMembersToSharedLineGroupReqMembers {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddOutboundCallerNumbersReq returns new OptAddOutboundCallerNumbersReq with value set to v.
func NewOptAddOutboundCallerNumbersReq(v AddOutboundCallerNumbersReq) OptAddOutboundCallerNumbersReq {
	return OptAddOutboundCallerNumbersReq{
		Value: v,
		Set:   true,
	}
}

// OptAddOutboundCallerNumbersReq is optional AddOutboundCallerNumbersReq.
type OptAddOutboundCallerNumbersReq struct {
	Value AddOutboundCallerNumbersReq
	Set   bool
}

// IsSet returns true if OptAddOutboundCallerNumbersReq was set.
func (o OptAddOutboundCallerNumbersReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddOutboundCallerNumbersReq) Reset() {
	var v AddOutboundCallerNumbersReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddOutboundCallerNumbersReq) SetTo(v AddOutboundCallerNumbersReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddOutboundCallerNumbersReq) Get() (v AddOutboundCallerNumbersReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddOutboundCallerNumbersReq) Or(d AddOutboundCallerNumbersReq) AddOutboundCallerNumbersReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddPeeringPhoneNumbersReq returns new OptAddPeeringPhoneNumbersReq with value set to v.
func NewOptAddPeeringPhoneNumbersReq(v AddPeeringPhoneNumbersReq) OptAddPeeringPhoneNumbersReq {
	return OptAddPeeringPhoneNumbersReq{
		Value: v,
		Set:   true,
	}
}

// OptAddPeeringPhoneNumbersReq is optional AddPeeringPhoneNumbersReq.
type OptAddPeeringPhoneNumbersReq struct {
	Value AddPeeringPhoneNumbersReq
	Set   bool
}

// IsSet returns true if OptAddPeeringPhoneNumbersReq was set.
func (o OptAddPeeringPhoneNumbersReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddPeeringPhoneNumbersReq) Reset() {
	var v AddPeeringPhoneNumbersReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddPeeringPhoneNumbersReq) SetTo(v AddPeeringPhoneNumbersReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddPeeringPhoneNumbersReq) Get() (v AddPeeringPhoneNumbersReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddPeeringPhoneNumbersReq) Or(d AddPeeringPhoneNumbersReq) AddPeeringPhoneNumbersReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddPhoneDeviceReq returns new OptAddPhoneDeviceReq with value set to v.
func NewOptAddPhoneDeviceReq(v AddPhoneDeviceReq) OptAddPhoneDeviceReq {
	return OptAddPhoneDeviceReq{
		Value: v,
		Set:   true,
	}
}

// OptAddPhoneDeviceReq is optional AddPhoneDeviceReq.
type OptAddPhoneDeviceReq struct {
	Value AddPhoneDeviceReq
	Set   bool
}

// IsSet returns true if OptAddPhoneDeviceReq was set.
func (o OptAddPhoneDeviceReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddPhoneDeviceReq) Reset() {
	var v AddPhoneDeviceReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddPhoneDeviceReq) SetTo(v AddPhoneDeviceReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddPhoneDeviceReq) Get() (v AddPhoneDeviceReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddPhoneDeviceReq) Or(d AddPhoneDeviceReq) AddPhoneDeviceReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddPolicyCreatedVoicemailAccessMember returns new OptAddPolicyCreatedVoicemailAccessMember with value set to v.
func NewOptAddPolicyCreatedVoicemailAccessMember(v AddPolicyCreatedVoicemailAccessMember) OptAddPolicyCreatedVoicemailAccessMember {
	return OptAddPolicyCreatedVoicemailAccessMember{
		Value: v,
		Set:   true,
	}
}

// OptAddPolicyCreatedVoicemailAccessMember is optional AddPolicyCreatedVoicemailAccessMember.
type OptAddPolicyCreatedVoicemailAccessMember struct {
	Value AddPolicyCreatedVoicemailAccessMember
	Set   bool
}

// IsSet returns true if OptAddPolicyCreatedVoicemailAccessMember was set.
func (o OptAddPolicyCreatedVoicemailAccessMember) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddPolicyCreatedVoicemailAccessMember) Reset() {
	var v AddPolicyCreatedVoicemailAccessMember
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddPolicyCreatedVoicemailAccessMember) SetTo(v AddPolicyCreatedVoicemailAccessMember) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddPolicyCreatedVoicemailAccessMember) Get() (v AddPolicyCreatedVoicemailAccessMember, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddPolicyCreatedVoicemailAccessMember) Or(d AddPolicyCreatedVoicemailAccessMember) AddPolicyCreatedVoicemailAccessMember {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddPolicyReq returns new OptAddPolicyReq with value set to v.
func NewOptAddPolicyReq(v AddPolicyReq) OptAddPolicyReq {
	return OptAddPolicyReq{
		Value: v,
		Set:   true,
	}
}

// OptAddPolicyReq is optional AddPolicyReq.
type OptAddPolicyReq struct {
	Value AddPolicyReq
	Set   bool
}

// IsSet returns true if OptAddPolicyReq was set.
func (o OptAddPolicyReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddPolicyReq) Reset() {
	var v AddPolicyReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddPolicyReq) SetTo(v AddPolicyReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddPolicyReq) Get() (v AddPolicyReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddPolicyReq) Or(d AddPolicyReq) AddPolicyReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddPolicyReqVoicemailAccessMember returns new OptAddPolicyReqVoicemailAccessMember with value set to v.
func NewOptAddPolicyReqVoicemailAccessMember(v AddPolicyReqVoicemailAccessMember) OptAddPolicyReqVoicemailAccessMember {
	return OptAddPolicyReqVoicemailAccessMember{
		Value: v,
		Set:   true,
	}
}

// OptAddPolicyReqVoicemailAccessMember is optional AddPolicyReqVoicemailAccessMember.
type OptAddPolicyReqVoicemailAccessMember struct {
	Value AddPolicyReqVoicemailAccessMember
	Set   bool
}

// IsSet returns true if OptAddPolicyReqVoicemailAccessMember was set.
func (o OptAddPolicyReqVoicemailAccessMember) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddPolicyReqVoicemailAccessMember) Reset() {
	var v AddPolicyReqVoicemailAccessMember
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddPolicyReqVoicemailAccessMember) SetTo(v AddPolicyReqVoicemailAccessMember) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddPolicyReqVoicemailAccessMember) Get() (v AddPolicyReqVoicemailAccessMember, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddPolicyReqVoicemailAccessMember) Or(d AddPolicyReqVoicemailAccessMember) AddPolicyReqVoicemailAccessMember {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddProvisionTemplateReq returns new OptAddProvisionTemplateReq with value set to v.
func NewOptAddProvisionTemplateReq(v AddProvisionTemplateReq) OptAddProvisionTemplateReq {
	return OptAddProvisionTemplateReq{
		Value: v,
		Set:   true,
	}
}

// OptAddProvisionTemplateReq is optional AddProvisionTemplateReq.
type OptAddProvisionTemplateReq struct {
	Value AddProvisionTemplateReq
	Set   bool
}

// IsSet returns true if OptAddProvisionTemplateReq was set.
func (o OptAddProvisionTemplateReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddProvisionTemplateReq) Reset() {
	var v AddProvisionTemplateReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddProvisionTemplateReq) SetTo(v AddProvisionTemplateReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddProvisionTemplateReq) Get() (v AddProvisionTemplateReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddProvisionTemplateReq) Or(d AddProvisionTemplateReq) AddProvisionTemplateReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddRoleMembersReq returns new OptAddRoleMembersReq with value set to v.
func NewOptAddRoleMembersReq(v AddRoleMembersReq) OptAddRoleMembersReq {
	return OptAddRoleMembersReq{
		Value: v,
		Set:   true,
	}
}

// OptAddRoleMembersReq is optional AddRoleMembersReq.
type OptAddRoleMembersReq struct {
	Value AddRoleMembersReq
	Set   bool
}

// IsSet returns true if OptAddRoleMembersReq was set.
func (o OptAddRoleMembersReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddRoleMembersReq) Reset() {
	var v AddRoleMembersReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddRoleMembersReq) SetTo(v AddRoleMembersReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddRoleMembersReq) Get() (v AddRoleMembersReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddRoleMembersReq) Or(d AddRoleMembersReq) AddRoleMembersReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddRoutingRuleReq returns new OptAddRoutingRuleReq with value set to v.
func NewOptAddRoutingRuleReq(v AddRoutingRuleReq) OptAddRoutingRuleReq {
	return OptAddRoutingRuleReq{
		Value: v,
		Set:   true,
	}
}

// OptAddRoutingRuleReq is optional AddRoutingRuleReq.
type OptAddRoutingRuleReq struct {
	Value AddRoutingRuleReq
	Set   bool
}

// IsSet returns true if OptAddRoutingRuleReq was set.
func (o OptAddRoutingRuleReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddRoutingRuleReq) Reset() {
	var v AddRoutingRuleReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddRoutingRuleReq) SetTo(v AddRoutingRuleReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddRoutingRuleReq) Get() (v AddRoutingRuleReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddRoutingRuleReq) Or(d AddRoutingRuleReq) AddRoutingRuleReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddSLGPolicySubSettingReq returns new OptAddSLGPolicySubSettingReq with value set to v.
func NewOptAddSLGPolicySubSettingReq(v AddSLGPolicySubSettingReq) OptAddSLGPolicySubSettingReq {
	return OptAddSLGPolicySubSettingReq{
		Value: v,
		Set:   true,
	}
}

// OptAddSLGPolicySubSettingReq is optional AddSLGPolicySubSettingReq.
type OptAddSLGPolicySubSettingReq struct {
	Value AddSLGPolicySubSettingReq
	Set   bool
}

// IsSet returns true if OptAddSLGPolicySubSettingReq was set.
func (o OptAddSLGPolicySubSettingReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddSLGPolicySubSettingReq) Reset() {
	var v AddSLGPolicySubSettingReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddSLGPolicySubSettingReq) SetTo(v AddSLGPolicySubSettingReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddSLGPolicySubSettingReq) Get() (v AddSLGPolicySubSettingReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddSLGPolicySubSettingReq) Or(d AddSLGPolicySubSettingReq) AddSLGPolicySubSettingReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddSettingTemplateReq returns new OptAddSettingTemplateReq with value set to v.
func NewOptAddSettingTemplateReq(v AddSettingTemplateReq) OptAddSettingTemplateReq {
	return OptAddSettingTemplateReq{
		Value: v,
		Set:   true,
	}
}

// OptAddSettingTemplateReq is optional AddSettingTemplateReq.
type OptAddSettingTemplateReq struct {
	Value AddSettingTemplateReq
	Set   bool
}

// IsSet returns true if OptAddSettingTemplateReq was set.
func (o OptAddSettingTemplateReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddSettingTemplateReq) Reset() {
	var v AddSettingTemplateReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddSettingTemplateReq) SetTo(v AddSettingTemplateReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddSettingTemplateReq) Get() (v AddSettingTemplateReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddSettingTemplateReq) Or(d AddSettingTemplateReq) AddSettingTemplateReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddSiteOutboundCallerNumbersReq returns new OptAddSiteOutboundCallerNumbersReq with value set to v.
func NewOptAddSiteOutboundCallerNumbersReq(v AddSiteOutboundCallerNumbersReq) OptAddSiteOutboundCallerNumbersReq {
	return OptAddSiteOutboundCallerNumbersReq{
		Value: v,
		Set:   true,
	}
}

// OptAddSiteOutboundCallerNumbersReq is optional AddSiteOutboundCallerNumbersReq.
type OptAddSiteOutboundCallerNumbersReq struct {
	Value AddSiteOutboundCallerNumbersReq
	Set   bool
}

// IsSet returns true if OptAddSiteOutboundCallerNumbersReq was set.
func (o OptAddSiteOutboundCallerNumbersReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddSiteOutboundCallerNumbersReq) Reset() {
	var v AddSiteOutboundCallerNumbersReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddSiteOutboundCallerNumbersReq) SetTo(v AddSiteOutboundCallerNumbersReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddSiteOutboundCallerNumbersReq) Get() (v AddSiteOutboundCallerNumbersReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddSiteOutboundCallerNumbersReq) Or(d AddSiteOutboundCallerNumbersReq) AddSiteOutboundCallerNumbersReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddSiteOutboundCallingExceptionRuleReq returns new OptAddSiteOutboundCallingExceptionRuleReq with value set to v.
func NewOptAddSiteOutboundCallingExceptionRuleReq(v AddSiteOutboundCallingExceptionRuleReq) OptAddSiteOutboundCallingExceptionRuleReq {
	return OptAddSiteOutboundCallingExceptionRuleReq{
		Value: v,
		Set:   true,
	}
}

// OptAddSiteOutboundCallingExceptionRuleReq is optional AddSiteOutboundCallingExceptionRuleReq.
type OptAddSiteOutboundCallingExceptionRuleReq struct {
	Value AddSiteOutboundCallingExceptionRuleReq
	Set   bool
}

// IsSet returns true if OptAddSiteOutboundCallingExceptionRuleReq was set.
func (o OptAddSiteOutboundCallingExceptionRuleReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddSiteOutboundCallingExceptionRuleReq) Reset() {
	var v AddSiteOutboundCallingExceptionRuleReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddSiteOutboundCallingExceptionRuleReq) SetTo(v AddSiteOutboundCallingExceptionRuleReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddSiteOutboundCallingExceptionRuleReq) Get() (v AddSiteOutboundCallingExceptionRuleReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddSiteOutboundCallingExceptionRuleReq) Or(d AddSiteOutboundCallingExceptionRuleReq) AddSiteOutboundCallingExceptionRuleReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddSiteOutboundCallingExceptionRuleReqExceptionRule returns new OptAddSiteOutboundCallingExceptionRuleReqExceptionRule with value set to v.
func NewOptAddSiteOutboundCallingExceptionRuleReqExceptionRule(v AddSiteOutboundCallingExceptionRuleReqExceptionRule) OptAddSiteOutboundCallingExceptionRuleReqExceptionRule {
	return OptAddSiteOutboundCallingExceptionRuleReqExceptionRule{
		Value: v,
		Set:   true,
	}
}

// OptAddSiteOutboundCallingExceptionRuleReqExceptionRule is optional AddSiteOutboundCallingExceptionRuleReqExceptionRule.
type OptAddSiteOutboundCallingExceptionRuleReqExceptionRule struct {
	Value AddSiteOutboundCallingExceptionRuleReqExceptionRule
	Set   bool
}

// IsSet returns true if OptAddSiteOutboundCallingExceptionRuleReqExceptionRule was set.
func (o OptAddSiteOutboundCallingExceptionRuleReqExceptionRule) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddSiteOutboundCallingExceptionRuleReqExceptionRule) Reset() {
	var v AddSiteOutboundCallingExceptionRuleReqExceptionRule
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddSiteOutboundCallingExceptionRuleReqExceptionRule) SetTo(v AddSiteOutboundCallingExceptionRuleReqExceptionRule) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddSiteOutboundCallingExceptionRuleReqExceptionRule) Get() (v AddSiteOutboundCallingExceptionRuleReqExceptionRule, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddSiteOutboundCallingExceptionRuleReqExceptionRule) Or(d AddSiteOutboundCallingExceptionRuleReqExceptionRule) AddSiteOutboundCallingExceptionRuleReqExceptionRule {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddSiteSettingReq returns new OptAddSiteSettingReq with value set to v.
func NewOptAddSiteSettingReq(v AddSiteSettingReq) OptAddSiteSettingReq {
	return OptAddSiteSettingReq{
		Value: v,
		Set:   true,
	}
}

// OptAddSiteSettingReq is optional AddSiteSettingReq.
type OptAddSiteSettingReq struct {
	Value AddSiteSettingReq
	Set   bool
}

// IsSet returns true if OptAddSiteSettingReq was set.
func (o OptAddSiteSettingReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddSiteSettingReq) Reset() {
	var v AddSiteSettingReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddSiteSettingReq) SetTo(v AddSiteSettingReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddSiteSettingReq) Get() (v AddSiteSettingReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddSiteSettingReq) Or(d AddSiteSettingReq) AddSiteSettingReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddUserOutboundCallerNumbersReq returns new OptAddUserOutboundCallerNumbersReq with value set to v.
func NewOptAddUserOutboundCallerNumbersReq(v AddUserOutboundCallerNumbersReq) OptAddUserOutboundCallerNumbersReq {
	return OptAddUserOutboundCallerNumbersReq{
		Value: v,
		Set:   true,
	}
}

// OptAddUserOutboundCallerNumbersReq is optional AddUserOutboundCallerNumbersReq.
type OptAddUserOutboundCallerNumbersReq struct {
	Value AddUserOutboundCallerNumbersReq
	Set   bool
}

// IsSet returns true if OptAddUserOutboundCallerNumbersReq was set.
func (o OptAddUserOutboundCallerNumbersReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddUserOutboundCallerNumbersReq) Reset() {
	var v AddUserOutboundCallerNumbersReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddUserOutboundCallerNumbersReq) SetTo(v AddUserOutboundCallerNumbersReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddUserOutboundCallerNumbersReq) Get() (v AddUserOutboundCallerNumbersReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddUserOutboundCallerNumbersReq) Or(d AddUserOutboundCallerNumbersReq) AddUserOutboundCallerNumbersReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddUserOutboundCallingExceptionRuleReq returns new OptAddUserOutboundCallingExceptionRuleReq with value set to v.
func NewOptAddUserOutboundCallingExceptionRuleReq(v AddUserOutboundCallingExceptionRuleReq) OptAddUserOutboundCallingExceptionRuleReq {
	return OptAddUserOutboundCallingExceptionRuleReq{
		Value: v,
		Set:   true,
	}
}

// OptAddUserOutboundCallingExceptionRuleReq is optional AddUserOutboundCallingExceptionRuleReq.
type OptAddUserOutboundCallingExceptionRuleReq struct {
	Value AddUserOutboundCallingExceptionRuleReq
	Set   bool
}

// IsSet returns true if OptAddUserOutboundCallingExceptionRuleReq was set.
func (o OptAddUserOutboundCallingExceptionRuleReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddUserOutboundCallingExceptionRuleReq) Reset() {
	var v AddUserOutboundCallingExceptionRuleReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddUserOutboundCallingExceptionRuleReq) SetTo(v AddUserOutboundCallingExceptionRuleReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddUserOutboundCallingExceptionRuleReq) Get() (v AddUserOutboundCallingExceptionRuleReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddUserOutboundCallingExceptionRuleReq) Or(d AddUserOutboundCallingExceptionRuleReq) AddUserOutboundCallingExceptionRuleReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddUserOutboundCallingExceptionRuleReqExceptionRule returns new OptAddUserOutboundCallingExceptionRuleReqExceptionRule with value set to v.
func NewOptAddUserOutboundCallingExceptionRuleReqExceptionRule(v AddUserOutboundCallingExceptionRuleReqExceptionRule) OptAddUserOutboundCallingExceptionRuleReqExceptionRule {
	return OptAddUserOutboundCallingExceptionRuleReqExceptionRule{
		Value: v,
		Set:   true,
	}
}

// OptAddUserOutboundCallingExceptionRuleReqExceptionRule is optional AddUserOutboundCallingExceptionRuleReqExceptionRule.
type OptAddUserOutboundCallingExceptionRuleReqExceptionRule struct {
	Value AddUserOutboundCallingExceptionRuleReqExceptionRule
	Set   bool
}

// IsSet returns true if OptAddUserOutboundCallingExceptionRuleReqExceptionRule was set.
func (o OptAddUserOutboundCallingExceptionRuleReqExceptionRule) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddUserOutboundCallingExceptionRuleReqExceptionRule) Reset() {
	var v AddUserOutboundCallingExceptionRuleReqExceptionRule
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddUserOutboundCallingExceptionRuleReqExceptionRule) SetTo(v AddUserOutboundCallingExceptionRuleReqExceptionRule) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddUserOutboundCallingExceptionRuleReqExceptionRule) Get() (v AddUserOutboundCallingExceptionRuleReqExceptionRule, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddUserOutboundCallingExceptionRuleReqExceptionRule) Or(d AddUserOutboundCallingExceptionRuleReqExceptionRule) AddUserOutboundCallingExceptionRuleReqExceptionRule {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddUserSettingCreatedDelegation returns new OptAddUserSettingCreatedDelegation with value set to v.
func NewOptAddUserSettingCreatedDelegation(v AddUserSettingCreatedDelegation) OptAddUserSettingCreatedDelegation {
	return OptAddUserSettingCreatedDelegation{
		Value: v,
		Set:   true,
	}
}

// OptAddUserSettingCreatedDelegation is optional AddUserSettingCreatedDelegation.
type OptAddUserSettingCreatedDelegation struct {
	Value AddUserSettingCreatedDelegation
	Set   bool
}

// IsSet returns true if OptAddUserSettingCreatedDelegation was set.
func (o OptAddUserSettingCreatedDelegation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddUserSettingCreatedDelegation) Reset() {
	var v AddUserSettingCreatedDelegation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddUserSettingCreatedDelegation) SetTo(v AddUserSettingCreatedDelegation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddUserSettingCreatedDelegation) Get() (v AddUserSettingCreatedDelegation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddUserSettingCreatedDelegation) Or(d AddUserSettingCreatedDelegation) AddUserSettingCreatedDelegation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddUserSettingCreatedVoiceMail returns new OptAddUserSettingCreatedVoiceMail with value set to v.
func NewOptAddUserSettingCreatedVoiceMail(v AddUserSettingCreatedVoiceMail) OptAddUserSettingCreatedVoiceMail {
	return OptAddUserSettingCreatedVoiceMail{
		Value: v,
		Set:   true,
	}
}

// OptAddUserSettingCreatedVoiceMail is optional AddUserSettingCreatedVoiceMail.
type OptAddUserSettingCreatedVoiceMail struct {
	Value AddUserSettingCreatedVoiceMail
	Set   bool
}

// IsSet returns true if OptAddUserSettingCreatedVoiceMail was set.
func (o OptAddUserSettingCreatedVoiceMail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddUserSettingCreatedVoiceMail) Reset() {
	var v AddUserSettingCreatedVoiceMail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddUserSettingCreatedVoiceMail) SetTo(v AddUserSettingCreatedVoiceMail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddUserSettingCreatedVoiceMail) Get() (v AddUserSettingCreatedVoiceMail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddUserSettingCreatedVoiceMail) Or(d AddUserSettingCreatedVoiceMail) AddUserSettingCreatedVoiceMail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddUserSettingReq returns new OptAddUserSettingReq with value set to v.
func NewOptAddUserSettingReq(v AddUserSettingReq) OptAddUserSettingReq {
	return OptAddUserSettingReq{
		Value: v,
		Set:   true,
	}
}

// OptAddUserSettingReq is optional AddUserSettingReq.
type OptAddUserSettingReq struct {
	Value AddUserSettingReq
	Set   bool
}

// IsSet returns true if OptAddUserSettingReq was set.
func (o OptAddUserSettingReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddUserSettingReq) Reset() {
	var v AddUserSettingReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddUserSettingReq) SetTo(v AddUserSettingReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddUserSettingReq) Get() (v AddUserSettingReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddUserSettingReq) Or(d AddUserSettingReq) AddUserSettingReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddUserSettingReqVoiceMail returns new OptAddUserSettingReqVoiceMail with value set to v.
func NewOptAddUserSettingReqVoiceMail(v AddUserSettingReqVoiceMail) OptAddUserSettingReqVoiceMail {
	return OptAddUserSettingReqVoiceMail{
		Value: v,
		Set:   true,
	}
}

// OptAddUserSettingReqVoiceMail is optional AddUserSettingReqVoiceMail.
type OptAddUserSettingReqVoiceMail struct {
	Value AddUserSettingReqVoiceMail
	Set   bool
}

// IsSet returns true if OptAddUserSettingReqVoiceMail was set.
func (o OptAddUserSettingReqVoiceMail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddUserSettingReqVoiceMail) Reset() {
	var v AddUserSettingReqVoiceMail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddUserSettingReqVoiceMail) SetTo(v AddUserSettingReqVoiceMail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddUserSettingReqVoiceMail) Get() (v AddUserSettingReqVoiceMail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddUserSettingReqVoiceMail) Or(d AddUserSettingReqVoiceMail) AddUserSettingReqVoiceMail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddUsersToDirectoryBySiteReq returns new OptAddUsersToDirectoryBySiteReq with value set to v.
func NewOptAddUsersToDirectoryBySiteReq(v AddUsersToDirectoryBySiteReq) OptAddUsersToDirectoryBySiteReq {
	return OptAddUsersToDirectoryBySiteReq{
		Value: v,
		Set:   true,
	}
}

// OptAddUsersToDirectoryBySiteReq is optional AddUsersToDirectoryBySiteReq.
type OptAddUsersToDirectoryBySiteReq struct {
	Value AddUsersToDirectoryBySiteReq
	Set   bool
}

// IsSet returns true if OptAddUsersToDirectoryBySiteReq was set.
func (o OptAddUsersToDirectoryBySiteReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddUsersToDirectoryBySiteReq) Reset() {
	var v AddUsersToDirectoryBySiteReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddUsersToDirectoryBySiteReq) SetTo(v AddUsersToDirectoryBySiteReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddUsersToDirectoryBySiteReq) Get() (v AddUsersToDirectoryBySiteReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddUsersToDirectoryBySiteReq) Or(d AddUsersToDirectoryBySiteReq) AddUsersToDirectoryBySiteReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddUsersToDirectoryReq returns new OptAddUsersToDirectoryReq with value set to v.
func NewOptAddUsersToDirectoryReq(v AddUsersToDirectoryReq) OptAddUsersToDirectoryReq {
	return OptAddUsersToDirectoryReq{
		Value: v,
		Set:   true,
	}
}

// OptAddUsersToDirectoryReq is optional AddUsersToDirectoryReq.
type OptAddUsersToDirectoryReq struct {
	Value AddUsersToDirectoryReq
	Set   bool
}

// IsSet returns true if OptAddUsersToDirectoryReq was set.
func (o OptAddUsersToDirectoryReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddUsersToDirectoryReq) Reset() {
	var v AddUsersToDirectoryReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddUsersToDirectoryReq) SetTo(v AddUsersToDirectoryReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddUsersToDirectoryReq) Get() (v AddUsersToDirectoryReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddUsersToDirectoryReq) Or(d AddUsersToDirectoryReq) AddUsersToDirectoryReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAddZoomRoomReq returns new OptAddZoomRoomReq with value set to v.
func NewOptAddZoomRoomReq(v AddZoomRoomReq) OptAddZoomRoomReq {
	return OptAddZoomRoomReq{
		Value: v,
		Set:   true,
	}
}

// OptAddZoomRoomReq is optional AddZoomRoomReq.
type OptAddZoomRoomReq struct {
	Value AddZoomRoomReq
	Set   bool
}

// IsSet returns true if OptAddZoomRoomReq was set.
func (o OptAddZoomRoomReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAddZoomRoomReq) Reset() {
	var v AddZoomRoomReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAddZoomRoomReq) SetTo(v AddZoomRoomReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAddZoomRoomReq) Get() (v AddZoomRoomReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAddZoomRoomReq) Or(d AddZoomRoomReq) AddZoomRoomReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAssignCallingPlanReq returns new OptAssignCallingPlanReq with value set to v.
func NewOptAssignCallingPlanReq(v AssignCallingPlanReq) OptAssignCallingPlanReq {
	return OptAssignCallingPlanReq{
		Value: v,
		Set:   true,
	}
}

// OptAssignCallingPlanReq is optional AssignCallingPlanReq.
type OptAssignCallingPlanReq struct {
	Value AssignCallingPlanReq
	Set   bool
}

// IsSet returns true if OptAssignCallingPlanReq was set.
func (o OptAssignCallingPlanReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAssignCallingPlanReq) Reset() {
	var v AssignCallingPlanReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAssignCallingPlanReq) SetTo(v AssignCallingPlanReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAssignCallingPlanReq) Get() (v AssignCallingPlanReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAssignCallingPlanReq) Or(d AssignCallingPlanReq) AssignCallingPlanReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAssignCallingPlanToRoomReq returns new OptAssignCallingPlanToRoomReq with value set to v.
func NewOptAssignCallingPlanToRoomReq(v AssignCallingPlanToRoomReq) OptAssignCallingPlanToRoomReq {
	return OptAssignCallingPlanToRoomReq{
		Value: v,
		Set:   true,
	}
}

// OptAssignCallingPlanToRoomReq is optional AssignCallingPlanToRoomReq.
type OptAssignCallingPlanToRoomReq struct {
	Value AssignCallingPlanToRoomReq
	Set   bool
}

// IsSet returns true if OptAssignCallingPlanToRoomReq was set.
func (o OptAssignCallingPlanToRoomReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAssignCallingPlanToRoomReq) Reset() {
	var v AssignCallingPlanToRoomReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAssignCallingPlanToRoomReq) SetTo(v AssignCallingPlanToRoomReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAssignCallingPlanToRoomReq) Get() (v AssignCallingPlanToRoomReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAssignCallingPlanToRoomReq) Or(d AssignCallingPlanToRoomReq) AssignCallingPlanToRoomReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAssignCallingPlansToCommonAreaReq returns new OptAssignCallingPlansToCommonAreaReq with value set to v.
func NewOptAssignCallingPlansToCommonAreaReq(v AssignCallingPlansToCommonAreaReq) OptAssignCallingPlansToCommonAreaReq {
	return OptAssignCallingPlansToCommonAreaReq{
		Value: v,
		Set:   true,
	}
}

// OptAssignCallingPlansToCommonAreaReq is optional AssignCallingPlansToCommonAreaReq.
type OptAssignCallingPlansToCommonAreaReq struct {
	Value AssignCallingPlansToCommonAreaReq
	Set   bool
}

// IsSet returns true if OptAssignCallingPlansToCommonAreaReq was set.
func (o OptAssignCallingPlansToCommonAreaReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAssignCallingPlansToCommonAreaReq) Reset() {
	var v AssignCallingPlansToCommonAreaReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAssignCallingPlansToCommonAreaReq) SetTo(v AssignCallingPlansToCommonAreaReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAssignCallingPlansToCommonAreaReq) Get() (v AssignCallingPlansToCommonAreaReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAssignCallingPlansToCommonAreaReq) Or(d AssignCallingPlansToCommonAreaReq) AssignCallingPlansToCommonAreaReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAssignCampaignPhoneNumbersReq returns new OptAssignCampaignPhoneNumbersReq with value set to v.
func NewOptAssignCampaignPhoneNumbersReq(v AssignCampaignPhoneNumbersReq) OptAssignCampaignPhoneNumbersReq {
	return OptAssignCampaignPhoneNumbersReq{
		Value: v,
		Set:   true,
	}
}

// OptAssignCampaignPhoneNumbersReq is optional AssignCampaignPhoneNumbersReq.
type OptAssignCampaignPhoneNumbersReq struct {
	Value AssignCampaignPhoneNumbersReq
	Set   bool
}

// IsSet returns true if OptAssignCampaignPhoneNumbersReq was set.
func (o OptAssignCampaignPhoneNumbersReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAssignCampaignPhoneNumbersReq) Reset() {
	var v AssignCampaignPhoneNumbersReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAssignCampaignPhoneNumbersReq) SetTo(v AssignCampaignPhoneNumbersReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAssignCampaignPhoneNumbersReq) Get() (v AssignCampaignPhoneNumbersReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAssignCampaignPhoneNumbersReq) Or(d AssignCampaignPhoneNumbersReq) AssignCampaignPhoneNumbersReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAssignPhoneNumberReq returns new OptAssignPhoneNumberReq with value set to v.
func NewOptAssignPhoneNumberReq(v AssignPhoneNumberReq) OptAssignPhoneNumberReq {
	return OptAssignPhoneNumberReq{
		Value: v,
		Set:   true,
	}
}

// OptAssignPhoneNumberReq is optional AssignPhoneNumberReq.
type OptAssignPhoneNumberReq struct {
	Value AssignPhoneNumberReq
	Set   bool
}

// IsSet returns true if OptAssignPhoneNumberReq was set.
func (o OptAssignPhoneNumberReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAssignPhoneNumberReq) Reset() {
	var v AssignPhoneNumberReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAssignPhoneNumberReq) SetTo(v AssignPhoneNumberReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAssignPhoneNumberReq) Get() (v AssignPhoneNumberReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAssignPhoneNumberReq) Or(d AssignPhoneNumberReq) AssignPhoneNumberReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAssignPhoneNumberToZoomRoomReq returns new OptAssignPhoneNumberToZoomRoomReq with value set to v.
func NewOptAssignPhoneNumberToZoomRoomReq(v AssignPhoneNumberToZoomRoomReq) OptAssignPhoneNumberToZoomRoomReq {
	return OptAssignPhoneNumberToZoomRoomReq{
		Value: v,
		Set:   true,
	}
}

// OptAssignPhoneNumberToZoomRoomReq is optional AssignPhoneNumberToZoomRoomReq.
type OptAssignPhoneNumberToZoomRoomReq struct {
	Value AssignPhoneNumberToZoomRoomReq
	Set   bool
}

// IsSet returns true if OptAssignPhoneNumberToZoomRoomReq was set.
func (o OptAssignPhoneNumberToZoomRoomReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAssignPhoneNumberToZoomRoomReq) Reset() {
	var v AssignPhoneNumberToZoomRoomReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAssignPhoneNumberToZoomRoomReq) SetTo(v AssignPhoneNumberToZoomRoomReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAssignPhoneNumberToZoomRoomReq) Get() (v AssignPhoneNumberToZoomRoomReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAssignPhoneNumberToZoomRoomReq) Or(d AssignPhoneNumberToZoomRoomReq) AssignPhoneNumberToZoomRoomReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAssignPhoneNumbersAutoReceptionistReq returns new OptAssignPhoneNumbersAutoReceptionistReq with value set to v.
func NewOptAssignPhoneNumbersAutoReceptionistReq(v AssignPhoneNumbersAutoReceptionistReq) OptAssignPhoneNumbersAutoReceptionistReq {
	return OptAssignPhoneNumbersAutoReceptionistReq{
		Value: v,
		Set:   true,
	}
}

// OptAssignPhoneNumbersAutoReceptionistReq is optional AssignPhoneNumbersAutoReceptionistReq.
type OptAssignPhoneNumbersAutoReceptionistReq struct {
	Value AssignPhoneNumbersAutoReceptionistReq
	Set   bool
}

// IsSet returns true if OptAssignPhoneNumbersAutoReceptionistReq was set.
func (o OptAssignPhoneNumbersAutoReceptionistReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAssignPhoneNumbersAutoReceptionistReq) Reset() {
	var v AssignPhoneNumbersAutoReceptionistReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAssignPhoneNumbersAutoReceptionistReq) SetTo(v AssignPhoneNumbersAutoReceptionistReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAssignPhoneNumbersAutoReceptionistReq) Get() (v AssignPhoneNumbersAutoReceptionistReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAssignPhoneNumbersAutoReceptionistReq) Or(d AssignPhoneNumbersAutoReceptionistReq) AssignPhoneNumbersAutoReceptionistReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAssignPhoneNumbersSLGReq returns new OptAssignPhoneNumbersSLGReq with value set to v.
func NewOptAssignPhoneNumbersSLGReq(v AssignPhoneNumbersSLGReq) OptAssignPhoneNumbersSLGReq {
	return OptAssignPhoneNumbersSLGReq{
		Value: v,
		Set:   true,
	}
}

// OptAssignPhoneNumbersSLGReq is optional AssignPhoneNumbersSLGReq.
type OptAssignPhoneNumbersSLGReq struct {
	Value AssignPhoneNumbersSLGReq
	Set   bool
}

// IsSet returns true if OptAssignPhoneNumbersSLGReq was set.
func (o OptAssignPhoneNumbersSLGReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAssignPhoneNumbersSLGReq) Reset() {
	var v AssignPhoneNumbersSLGReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAssignPhoneNumbersSLGReq) SetTo(v AssignPhoneNumbersSLGReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAssignPhoneNumbersSLGReq) Get() (v AssignPhoneNumbersSLGReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAssignPhoneNumbersSLGReq) Or(d AssignPhoneNumbersSLGReq) AssignPhoneNumbersSLGReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAssignPhoneNumbersToCommonAreaReq returns new OptAssignPhoneNumbersToCommonAreaReq with value set to v.
func NewOptAssignPhoneNumbersToCommonAreaReq(v AssignPhoneNumbersToCommonAreaReq) OptAssignPhoneNumbersToCommonAreaReq {
	return OptAssignPhoneNumbersToCommonAreaReq{
		Value: v,
		Set:   true,
	}
}

// OptAssignPhoneNumbersToCommonAreaReq is optional AssignPhoneNumbersToCommonAreaReq.
type OptAssignPhoneNumbersToCommonAreaReq struct {
	Value AssignPhoneNumbersToCommonAreaReq
	Set   bool
}

// IsSet returns true if OptAssignPhoneNumbersToCommonAreaReq was set.
func (o OptAssignPhoneNumbersToCommonAreaReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAssignPhoneNumbersToCommonAreaReq) Reset() {
	var v AssignPhoneNumbersToCommonAreaReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAssignPhoneNumbersToCommonAreaReq) SetTo(v AssignPhoneNumbersToCommonAreaReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAssignPhoneNumbersToCommonAreaReq) Get() (v AssignPhoneNumbersToCommonAreaReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAssignPhoneNumbersToCommonAreaReq) Or(d AssignPhoneNumbersToCommonAreaReq) AssignPhoneNumbersToCommonAreaReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAssignPhoneToCallQueueReq returns new OptAssignPhoneToCallQueueReq with value set to v.
func NewOptAssignPhoneToCallQueueReq(v AssignPhoneToCallQueueReq) OptAssignPhoneToCallQueueReq {
	return OptAssignPhoneToCallQueueReq{
		Value: v,
		Set:   true,
	}
}

// OptAssignPhoneToCallQueueReq is optional AssignPhoneToCallQueueReq.
type OptAssignPhoneToCallQueueReq struct {
	Value AssignPhoneToCallQueueReq
	Set   bool
}

// IsSet returns true if OptAssignPhoneToCallQueueReq was set.
func (o OptAssignPhoneToCallQueueReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAssignPhoneToCallQueueReq) Reset() {
	var v AssignPhoneToCallQueueReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAssignPhoneToCallQueueReq) SetTo(v AssignPhoneToCallQueueReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAssignPhoneToCallQueueReq) Get() (v AssignPhoneToCallQueueReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAssignPhoneToCallQueueReq) Or(d AssignPhoneToCallQueueReq) AssignPhoneToCallQueueReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBatchAddLocationsReq returns new OptBatchAddLocationsReq with value set to v.
func NewOptBatchAddLocationsReq(v BatchAddLocationsReq) OptBatchAddLocationsReq {
	return OptBatchAddLocationsReq{
		Value: v,
		Set:   true,
	}
}

// OptBatchAddLocationsReq is optional BatchAddLocationsReq.
type OptBatchAddLocationsReq struct {
	Value BatchAddLocationsReq
	Set   bool
}

// IsSet returns true if OptBatchAddLocationsReq was set.
func (o OptBatchAddLocationsReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBatchAddLocationsReq) Reset() {
	var v BatchAddLocationsReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBatchAddLocationsReq) SetTo(v BatchAddLocationsReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBatchAddLocationsReq) Get() (v BatchAddLocationsReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBatchAddLocationsReq) Or(d BatchAddLocationsReq) BatchAddLocationsReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBatchAddUsersReq returns new OptBatchAddUsersReq with value set to v.
func NewOptBatchAddUsersReq(v BatchAddUsersReq) OptBatchAddUsersReq {
	return OptBatchAddUsersReq{
		Value: v,
		Set:   true,
	}
}

// OptBatchAddUsersReq is optional BatchAddUsersReq.
type OptBatchAddUsersReq struct {
	Value BatchAddUsersReq
	Set   bool
}

// IsSet returns true if OptBatchAddUsersReq was set.
func (o OptBatchAddUsersReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBatchAddUsersReq) Reset() {
	var v BatchAddUsersReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBatchAddUsersReq) SetTo(v BatchAddUsersReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBatchAddUsersReq) Get() (v BatchAddUsersReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBatchAddUsersReq) Or(d BatchAddUsersReq) BatchAddUsersReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBatchUpdateDeviceLineKeySettingReq returns new OptBatchUpdateDeviceLineKeySettingReq with value set to v.
func NewOptBatchUpdateDeviceLineKeySettingReq(v BatchUpdateDeviceLineKeySettingReq) OptBatchUpdateDeviceLineKeySettingReq {
	return OptBatchUpdateDeviceLineKeySettingReq{
		Value: v,
		Set:   true,
	}
}

// OptBatchUpdateDeviceLineKeySettingReq is optional BatchUpdateDeviceLineKeySettingReq.
type OptBatchUpdateDeviceLineKeySettingReq struct {
	Value BatchUpdateDeviceLineKeySettingReq
	Set   bool
}

// IsSet returns true if OptBatchUpdateDeviceLineKeySettingReq was set.
func (o OptBatchUpdateDeviceLineKeySettingReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBatchUpdateDeviceLineKeySettingReq) Reset() {
	var v BatchUpdateDeviceLineKeySettingReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBatchUpdateDeviceLineKeySettingReq) SetTo(v BatchUpdateDeviceLineKeySettingReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBatchUpdateDeviceLineKeySettingReq) Get() (v BatchUpdateDeviceLineKeySettingReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBatchUpdateDeviceLineKeySettingReq) Or(d BatchUpdateDeviceLineKeySettingReq) BatchUpdateDeviceLineKeySettingReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBatchUpdateLineKeySettingReq returns new OptBatchUpdateLineKeySettingReq with value set to v.
func NewOptBatchUpdateLineKeySettingReq(v BatchUpdateLineKeySettingReq) OptBatchUpdateLineKeySettingReq {
	return OptBatchUpdateLineKeySettingReq{
		Value: v,
		Set:   true,
	}
}

// OptBatchUpdateLineKeySettingReq is optional BatchUpdateLineKeySettingReq.
type OptBatchUpdateLineKeySettingReq struct {
	Value BatchUpdateLineKeySettingReq
	Set   bool
}

// IsSet returns true if OptBatchUpdateLineKeySettingReq was set.
func (o OptBatchUpdateLineKeySettingReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBatchUpdateLineKeySettingReq) Reset() {
	var v BatchUpdateLineKeySettingReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBatchUpdateLineKeySettingReq) SetTo(v BatchUpdateLineKeySettingReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBatchUpdateLineKeySettingReq) Get() (v BatchUpdateLineKeySettingReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBatchUpdateLineKeySettingReq) Or(d BatchUpdateLineKeySettingReq) BatchUpdateLineKeySettingReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBatchUpdateLineKeySettingReqLineKeysItemKeyAssignment returns new OptBatchUpdateLineKeySettingReqLineKeysItemKeyAssignment with value set to v.
func NewOptBatchUpdateLineKeySettingReqLineKeysItemKeyAssignment(v BatchUpdateLineKeySettingReqLineKeysItemKeyAssignment) OptBatchUpdateLineKeySettingReqLineKeysItemKeyAssignment {
	return OptBatchUpdateLineKeySettingReqLineKeysItemKeyAssignment{
		Value: v,
		Set:   true,
	}
}

// OptBatchUpdateLineKeySettingReqLineKeysItemKeyAssignment is optional BatchUpdateLineKeySettingReqLineKeysItemKeyAssignment.
type OptBatchUpdateLineKeySettingReqLineKeysItemKeyAssignment struct {
	Value BatchUpdateLineKeySettingReqLineKeysItemKeyAssignment
	Set   bool
}

// IsSet returns true if OptBatchUpdateLineKeySettingReqLineKeysItemKeyAssignment was set.
func (o OptBatchUpdateLineKeySettingReqLineKeysItemKeyAssignment) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBatchUpdateLineKeySettingReqLineKeysItemKeyAssignment) Reset() {
	var v BatchUpdateLineKeySettingReqLineKeysItemKeyAssignment
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBatchUpdateLineKeySettingReqLineKeysItemKeyAssignment) SetTo(v BatchUpdateLineKeySettingReqLineKeysItemKeyAssignment) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBatchUpdateLineKeySettingReqLineKeysItemKeyAssignment) Get() (v BatchUpdateLineKeySettingReqLineKeysItemKeyAssignment, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBatchUpdateLineKeySettingReqLineKeysItemKeyAssignment) Or(d BatchUpdateLineKeySettingReqLineKeysItemKeyAssignment) BatchUpdateLineKeySettingReqLineKeysItemKeyAssignment {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateASharedLineGroupReq returns new OptCreateASharedLineGroupReq with value set to v.
func NewOptCreateASharedLineGroupReq(v CreateASharedLineGroupReq) OptCreateASharedLineGroupReq {
	return OptCreateASharedLineGroupReq{
		Value: v,
		Set:   true,
	}
}

// OptCreateASharedLineGroupReq is optional CreateASharedLineGroupReq.
type OptCreateASharedLineGroupReq struct {
	Value CreateASharedLineGroupReq
	Set   bool
}

// IsSet returns true if OptCreateASharedLineGroupReq was set.
func (o OptCreateASharedLineGroupReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateASharedLineGroupReq) Reset() {
	var v CreateASharedLineGroupReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateASharedLineGroupReq) SetTo(v CreateASharedLineGroupReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateASharedLineGroupReq) Get() (v CreateASharedLineGroupReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateASharedLineGroupReq) Or(d CreateASharedLineGroupReq) CreateASharedLineGroupReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateCallQueueReq returns new OptCreateCallQueueReq with value set to v.
func NewOptCreateCallQueueReq(v CreateCallQueueReq) OptCreateCallQueueReq {
	return OptCreateCallQueueReq{
		Value: v,
		Set:   true,
	}
}

// OptCreateCallQueueReq is optional CreateCallQueueReq.
type OptCreateCallQueueReq struct {
	Value CreateCallQueueReq
	Set   bool
}

// IsSet returns true if OptCreateCallQueueReq was set.
func (o OptCreateCallQueueReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateCallQueueReq) Reset() {
	var v CreateCallQueueReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateCallQueueReq) SetTo(v CreateCallQueueReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateCallQueueReq) Get() (v CreateCallQueueReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateCallQueueReq) Or(d CreateCallQueueReq) CreateCallQueueReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateCallQueueReqMembers returns new OptCreateCallQueueReqMembers with value set to v.
func NewOptCreateCallQueueReqMembers(v CreateCallQueueReqMembers) OptCreateCallQueueReqMembers {
	return OptCreateCallQueueReqMembers{
		Value: v,
		Set:   true,
	}
}

// OptCreateCallQueueReqMembers is optional CreateCallQueueReqMembers.
type OptCreateCallQueueReqMembers struct {
	Value CreateCallQueueReqMembers
	Set   bool
}

// IsSet returns true if OptCreateCallQueueReqMembers was set.
func (o OptCreateCallQueueReqMembers) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateCallQueueReqMembers) Reset() {
	var v CreateCallQueueReqMembers
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateCallQueueReqMembers) SetTo(v CreateCallQueueReqMembers) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateCallQueueReqMembers) Get() (v CreateCallQueueReqMembers, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateCallQueueReqMembers) Or(d CreateCallQueueReqMembers) CreateCallQueueReqMembers {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreateMonitoringGroupReq returns new OptCreateMonitoringGroupReq with value set to v.
func NewOptCreateMonitoringGroupReq(v CreateMonitoringGroupReq) OptCreateMonitoringGroupReq {
	return OptCreateMonitoringGroupReq{
		Value: v,
		Set:   true,
	}
}

// OptCreateMonitoringGroupReq is optional CreateMonitoringGroupReq.
type OptCreateMonitoringGroupReq struct {
	Value CreateMonitoringGroupReq
	Set   bool
}

// IsSet returns true if OptCreateMonitoringGroupReq was set.
func (o OptCreateMonitoringGroupReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreateMonitoringGroupReq) Reset() {
	var v CreateMonitoringGroupReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreateMonitoringGroupReq) SetTo(v CreateMonitoringGroupReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreateMonitoringGroupReq) Get() (v CreateMonitoringGroupReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreateMonitoringGroupReq) Or(d CreateMonitoringGroupReq) CreateMonitoringGroupReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreatePhoneSiteReq returns new OptCreatePhoneSiteReq with value set to v.
func NewOptCreatePhoneSiteReq(v CreatePhoneSiteReq) OptCreatePhoneSiteReq {
	return OptCreatePhoneSiteReq{
		Value: v,
		Set:   true,
	}
}

// OptCreatePhoneSiteReq is optional CreatePhoneSiteReq.
type OptCreatePhoneSiteReq struct {
	Value CreatePhoneSiteReq
	Set   bool
}

// IsSet returns true if OptCreatePhoneSiteReq was set.
func (o OptCreatePhoneSiteReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreatePhoneSiteReq) Reset() {
	var v CreatePhoneSiteReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreatePhoneSiteReq) SetTo(v CreatePhoneSiteReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreatePhoneSiteReq) Get() (v CreatePhoneSiteReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreatePhoneSiteReq) Or(d CreatePhoneSiteReq) CreatePhoneSiteReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreatePhoneSiteReqForceOffNet returns new OptCreatePhoneSiteReqForceOffNet with value set to v.
func NewOptCreatePhoneSiteReqForceOffNet(v CreatePhoneSiteReqForceOffNet) OptCreatePhoneSiteReqForceOffNet {
	return OptCreatePhoneSiteReqForceOffNet{
		Value: v,
		Set:   true,
	}
}

// OptCreatePhoneSiteReqForceOffNet is optional CreatePhoneSiteReqForceOffNet.
type OptCreatePhoneSiteReqForceOffNet struct {
	Value CreatePhoneSiteReqForceOffNet
	Set   bool
}

// IsSet returns true if OptCreatePhoneSiteReqForceOffNet was set.
func (o OptCreatePhoneSiteReqForceOffNet) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreatePhoneSiteReqForceOffNet) Reset() {
	var v CreatePhoneSiteReqForceOffNet
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreatePhoneSiteReqForceOffNet) SetTo(v CreatePhoneSiteReqForceOffNet) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreatePhoneSiteReqForceOffNet) Get() (v CreatePhoneSiteReqForceOffNet, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreatePhoneSiteReqForceOffNet) Or(d CreatePhoneSiteReqForceOffNet) CreatePhoneSiteReqForceOffNet {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreatePhoneSiteReqShortExtension returns new OptCreatePhoneSiteReqShortExtension with value set to v.
func NewOptCreatePhoneSiteReqShortExtension(v CreatePhoneSiteReqShortExtension) OptCreatePhoneSiteReqShortExtension {
	return OptCreatePhoneSiteReqShortExtension{
		Value: v,
		Set:   true,
	}
}

// OptCreatePhoneSiteReqShortExtension is optional CreatePhoneSiteReqShortExtension.
type OptCreatePhoneSiteReqShortExtension struct {
	Value CreatePhoneSiteReqShortExtension
	Set   bool
}

// IsSet returns true if OptCreatePhoneSiteReqShortExtension was set.
func (o OptCreatePhoneSiteReqShortExtension) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreatePhoneSiteReqShortExtension) Reset() {
	var v CreatePhoneSiteReqShortExtension
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreatePhoneSiteReqShortExtension) SetTo(v CreatePhoneSiteReqShortExtension) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreatePhoneSiteReqShortExtension) Get() (v CreatePhoneSiteReqShortExtension, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreatePhoneSiteReqShortExtension) Or(d CreatePhoneSiteReqShortExtension) CreatePhoneSiteReqShortExtension {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCreatePhoneSiteReqSipZone returns new OptCreatePhoneSiteReqSipZone with value set to v.
func NewOptCreatePhoneSiteReqSipZone(v CreatePhoneSiteReqSipZone) OptCreatePhoneSiteReqSipZone {
	return OptCreatePhoneSiteReqSipZone{
		Value: v,
		Set:   true,
	}
}

// OptCreatePhoneSiteReqSipZone is optional CreatePhoneSiteReqSipZone.
type OptCreatePhoneSiteReqSipZone struct {
	Value CreatePhoneSiteReqSipZone
	Set   bool
}

// IsSet returns true if OptCreatePhoneSiteReqSipZone was set.
func (o OptCreatePhoneSiteReqSipZone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCreatePhoneSiteReqSipZone) Reset() {
	var v CreatePhoneSiteReqSipZone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCreatePhoneSiteReqSipZone) SetTo(v CreatePhoneSiteReqSipZone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCreatePhoneSiteReqSipZone) Get() (v CreatePhoneSiteReqSipZone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCreatePhoneSiteReqSipZone) Or(d CreatePhoneSiteReqSipZone) CreatePhoneSiteReqSipZone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDate returns new OptDate with value set to v.
func NewOptDate(v time.Time) OptDate {
	return OptDate{
		Value: v,
		Set:   true,
	}
}

// OptDate is optional time.Time.
type OptDate struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDate was set.
func (o OptDate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDate) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDate) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDate) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDate) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDeletePeeringPhoneNumbersReq returns new OptDeletePeeringPhoneNumbersReq with value set to v.
func NewOptDeletePeeringPhoneNumbersReq(v DeletePeeringPhoneNumbersReq) OptDeletePeeringPhoneNumbersReq {
	return OptDeletePeeringPhoneNumbersReq{
		Value: v,
		Set:   true,
	}
}

// OptDeletePeeringPhoneNumbersReq is optional DeletePeeringPhoneNumbersReq.
type OptDeletePeeringPhoneNumbersReq struct {
	Value DeletePeeringPhoneNumbersReq
	Set   bool
}

// IsSet returns true if OptDeletePeeringPhoneNumbersReq was set.
func (o OptDeletePeeringPhoneNumbersReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDeletePeeringPhoneNumbersReq) Reset() {
	var v DeletePeeringPhoneNumbersReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDeletePeeringPhoneNumbersReq) SetTo(v DeletePeeringPhoneNumbersReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDeletePeeringPhoneNumbersReq) Get() (v DeletePeeringPhoneNumbersReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDeletePeeringPhoneNumbersReq) Or(d DeletePeeringPhoneNumbersReq) DeletePeeringPhoneNumbersReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDuplicatePhoneRoleReq returns new OptDuplicatePhoneRoleReq with value set to v.
func NewOptDuplicatePhoneRoleReq(v DuplicatePhoneRoleReq) OptDuplicatePhoneRoleReq {
	return OptDuplicatePhoneRoleReq{
		Value: v,
		Set:   true,
	}
}

// OptDuplicatePhoneRoleReq is optional DuplicatePhoneRoleReq.
type OptDuplicatePhoneRoleReq struct {
	Value DuplicatePhoneRoleReq
	Set   bool
}

// IsSet returns true if OptDuplicatePhoneRoleReq was set.
func (o OptDuplicatePhoneRoleReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDuplicatePhoneRoleReq) Reset() {
	var v DuplicatePhoneRoleReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDuplicatePhoneRoleReq) SetTo(v DuplicatePhoneRoleReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDuplicatePhoneRoleReq) Get() (v DuplicatePhoneRoleReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDuplicatePhoneRoleReq) Or(d DuplicatePhoneRoleReq) DuplicatePhoneRoleReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetACallQueueOKMembers returns new OptGetACallQueueOKMembers with value set to v.
func NewOptGetACallQueueOKMembers(v GetACallQueueOKMembers) OptGetACallQueueOKMembers {
	return OptGetACallQueueOKMembers{
		Value: v,
		Set:   true,
	}
}

// OptGetACallQueueOKMembers is optional GetACallQueueOKMembers.
type OptGetACallQueueOKMembers struct {
	Value GetACallQueueOKMembers
	Set   bool
}

// IsSet returns true if OptGetACallQueueOKMembers was set.
func (o OptGetACallQueueOKMembers) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetACallQueueOKMembers) Reset() {
	var v GetACallQueueOKMembers
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetACallQueueOKMembers) SetTo(v GetACallQueueOKMembers) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetACallQueueOKMembers) Get() (v GetACallQueueOKMembers, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetACallQueueOKMembers) Or(d GetACallQueueOKMembers) GetACallQueueOKMembers {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetACallQueueOKSite returns new OptGetACallQueueOKSite with value set to v.
func NewOptGetACallQueueOKSite(v GetACallQueueOKSite) OptGetACallQueueOKSite {
	return OptGetACallQueueOKSite{
		Value: v,
		Set:   true,
	}
}

// OptGetACallQueueOKSite is optional GetACallQueueOKSite.
type OptGetACallQueueOKSite struct {
	Value GetACallQueueOKSite
	Set   bool
}

// IsSet returns true if OptGetACallQueueOKSite was set.
func (o OptGetACallQueueOKSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetACallQueueOKSite) Reset() {
	var v GetACallQueueOKSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetACallQueueOKSite) SetTo(v GetACallQueueOKSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetACallQueueOKSite) Get() (v GetACallQueueOKSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetACallQueueOKSite) Or(d GetACallQueueOKSite) GetACallQueueOKSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetACommonAreaOKCountry returns new OptGetACommonAreaOKCountry with value set to v.
func NewOptGetACommonAreaOKCountry(v GetACommonAreaOKCountry) OptGetACommonAreaOKCountry {
	return OptGetACommonAreaOKCountry{
		Value: v,
		Set:   true,
	}
}

// OptGetACommonAreaOKCountry is optional GetACommonAreaOKCountry.
type OptGetACommonAreaOKCountry struct {
	Value GetACommonAreaOKCountry
	Set   bool
}

// IsSet returns true if OptGetACommonAreaOKCountry was set.
func (o OptGetACommonAreaOKCountry) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetACommonAreaOKCountry) Reset() {
	var v GetACommonAreaOKCountry
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetACommonAreaOKCountry) SetTo(v GetACommonAreaOKCountry) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetACommonAreaOKCountry) Get() (v GetACommonAreaOKCountry, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetACommonAreaOKCountry) Or(d GetACommonAreaOKCountry) GetACommonAreaOKCountry {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetACommonAreaOKEmergencyAddress returns new OptGetACommonAreaOKEmergencyAddress with value set to v.
func NewOptGetACommonAreaOKEmergencyAddress(v GetACommonAreaOKEmergencyAddress) OptGetACommonAreaOKEmergencyAddress {
	return OptGetACommonAreaOKEmergencyAddress{
		Value: v,
		Set:   true,
	}
}

// OptGetACommonAreaOKEmergencyAddress is optional GetACommonAreaOKEmergencyAddress.
type OptGetACommonAreaOKEmergencyAddress struct {
	Value GetACommonAreaOKEmergencyAddress
	Set   bool
}

// IsSet returns true if OptGetACommonAreaOKEmergencyAddress was set.
func (o OptGetACommonAreaOKEmergencyAddress) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetACommonAreaOKEmergencyAddress) Reset() {
	var v GetACommonAreaOKEmergencyAddress
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetACommonAreaOKEmergencyAddress) SetTo(v GetACommonAreaOKEmergencyAddress) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetACommonAreaOKEmergencyAddress) Get() (v GetACommonAreaOKEmergencyAddress, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetACommonAreaOKEmergencyAddress) Or(d GetACommonAreaOKEmergencyAddress) GetACommonAreaOKEmergencyAddress {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetACommonAreaOKPolicy returns new OptGetACommonAreaOKPolicy with value set to v.
func NewOptGetACommonAreaOKPolicy(v GetACommonAreaOKPolicy) OptGetACommonAreaOKPolicy {
	return OptGetACommonAreaOKPolicy{
		Value: v,
		Set:   true,
	}
}

// OptGetACommonAreaOKPolicy is optional GetACommonAreaOKPolicy.
type OptGetACommonAreaOKPolicy struct {
	Value GetACommonAreaOKPolicy
	Set   bool
}

// IsSet returns true if OptGetACommonAreaOKPolicy was set.
func (o OptGetACommonAreaOKPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetACommonAreaOKPolicy) Reset() {
	var v GetACommonAreaOKPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetACommonAreaOKPolicy) SetTo(v GetACommonAreaOKPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetACommonAreaOKPolicy) Get() (v GetACommonAreaOKPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetACommonAreaOKPolicy) Or(d GetACommonAreaOKPolicy) GetACommonAreaOKPolicy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetACommonAreaOKPolicyInternationalCalling returns new OptGetACommonAreaOKPolicyInternationalCalling with value set to v.
func NewOptGetACommonAreaOKPolicyInternationalCalling(v GetACommonAreaOKPolicyInternationalCalling) OptGetACommonAreaOKPolicyInternationalCalling {
	return OptGetACommonAreaOKPolicyInternationalCalling{
		Value: v,
		Set:   true,
	}
}

// OptGetACommonAreaOKPolicyInternationalCalling is optional GetACommonAreaOKPolicyInternationalCalling.
type OptGetACommonAreaOKPolicyInternationalCalling struct {
	Value GetACommonAreaOKPolicyInternationalCalling
	Set   bool
}

// IsSet returns true if OptGetACommonAreaOKPolicyInternationalCalling was set.
func (o OptGetACommonAreaOKPolicyInternationalCalling) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetACommonAreaOKPolicyInternationalCalling) Reset() {
	var v GetACommonAreaOKPolicyInternationalCalling
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetACommonAreaOKPolicyInternationalCalling) SetTo(v GetACommonAreaOKPolicyInternationalCalling) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetACommonAreaOKPolicyInternationalCalling) Get() (v GetACommonAreaOKPolicyInternationalCalling, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetACommonAreaOKPolicyInternationalCalling) Or(d GetACommonAreaOKPolicyInternationalCalling) GetACommonAreaOKPolicyInternationalCalling {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetACommonAreaOKPolicyOutboundCalling returns new OptGetACommonAreaOKPolicyOutboundCalling with value set to v.
func NewOptGetACommonAreaOKPolicyOutboundCalling(v GetACommonAreaOKPolicyOutboundCalling) OptGetACommonAreaOKPolicyOutboundCalling {
	return OptGetACommonAreaOKPolicyOutboundCalling{
		Value: v,
		Set:   true,
	}
}

// OptGetACommonAreaOKPolicyOutboundCalling is optional GetACommonAreaOKPolicyOutboundCalling.
type OptGetACommonAreaOKPolicyOutboundCalling struct {
	Value GetACommonAreaOKPolicyOutboundCalling
	Set   bool
}

// IsSet returns true if OptGetACommonAreaOKPolicyOutboundCalling was set.
func (o OptGetACommonAreaOKPolicyOutboundCalling) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetACommonAreaOKPolicyOutboundCalling) Reset() {
	var v GetACommonAreaOKPolicyOutboundCalling
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetACommonAreaOKPolicyOutboundCalling) SetTo(v GetACommonAreaOKPolicyOutboundCalling) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetACommonAreaOKPolicyOutboundCalling) Get() (v GetACommonAreaOKPolicyOutboundCalling, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetACommonAreaOKPolicyOutboundCalling) Or(d GetACommonAreaOKPolicyOutboundCalling) GetACommonAreaOKPolicyOutboundCalling {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetACommonAreaOKSite returns new OptGetACommonAreaOKSite with value set to v.
func NewOptGetACommonAreaOKSite(v GetACommonAreaOKSite) OptGetACommonAreaOKSite {
	return OptGetACommonAreaOKSite{
		Value: v,
		Set:   true,
	}
}

// OptGetACommonAreaOKSite is optional GetACommonAreaOKSite.
type OptGetACommonAreaOKSite struct {
	Value GetACommonAreaOKSite
	Set   bool
}

// IsSet returns true if OptGetACommonAreaOKSite was set.
func (o OptGetACommonAreaOKSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetACommonAreaOKSite) Reset() {
	var v GetACommonAreaOKSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetACommonAreaOKSite) SetTo(v GetACommonAreaOKSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetACommonAreaOKSite) Get() (v GetACommonAreaOKSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetACommonAreaOKSite) Or(d GetACommonAreaOKSite) GetACommonAreaOKSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetADeviceOKAssignee returns new OptGetADeviceOKAssignee with value set to v.
func NewOptGetADeviceOKAssignee(v GetADeviceOKAssignee) OptGetADeviceOKAssignee {
	return OptGetADeviceOKAssignee{
		Value: v,
		Set:   true,
	}
}

// OptGetADeviceOKAssignee is optional GetADeviceOKAssignee.
type OptGetADeviceOKAssignee struct {
	Value GetADeviceOKAssignee
	Set   bool
}

// IsSet returns true if OptGetADeviceOKAssignee was set.
func (o OptGetADeviceOKAssignee) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetADeviceOKAssignee) Reset() {
	var v GetADeviceOKAssignee
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetADeviceOKAssignee) SetTo(v GetADeviceOKAssignee) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetADeviceOKAssignee) Get() (v GetADeviceOKAssignee, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetADeviceOKAssignee) Or(d GetADeviceOKAssignee) GetADeviceOKAssignee {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetADeviceOKProvision returns new OptGetADeviceOKProvision with value set to v.
func NewOptGetADeviceOKProvision(v GetADeviceOKProvision) OptGetADeviceOKProvision {
	return OptGetADeviceOKProvision{
		Value: v,
		Set:   true,
	}
}

// OptGetADeviceOKProvision is optional GetADeviceOKProvision.
type OptGetADeviceOKProvision struct {
	Value GetADeviceOKProvision
	Set   bool
}

// IsSet returns true if OptGetADeviceOKProvision was set.
func (o OptGetADeviceOKProvision) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetADeviceOKProvision) Reset() {
	var v GetADeviceOKProvision
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetADeviceOKProvision) SetTo(v GetADeviceOKProvision) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetADeviceOKProvision) Get() (v GetADeviceOKProvision, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetADeviceOKProvision) Or(d GetADeviceOKProvision) GetADeviceOKProvision {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetADeviceOKProvisionSipAccountsItemSharedLine returns new OptGetADeviceOKProvisionSipAccountsItemSharedLine with value set to v.
func NewOptGetADeviceOKProvisionSipAccountsItemSharedLine(v GetADeviceOKProvisionSipAccountsItemSharedLine) OptGetADeviceOKProvisionSipAccountsItemSharedLine {
	return OptGetADeviceOKProvisionSipAccountsItemSharedLine{
		Value: v,
		Set:   true,
	}
}

// OptGetADeviceOKProvisionSipAccountsItemSharedLine is optional GetADeviceOKProvisionSipAccountsItemSharedLine.
type OptGetADeviceOKProvisionSipAccountsItemSharedLine struct {
	Value GetADeviceOKProvisionSipAccountsItemSharedLine
	Set   bool
}

// IsSet returns true if OptGetADeviceOKProvisionSipAccountsItemSharedLine was set.
func (o OptGetADeviceOKProvisionSipAccountsItemSharedLine) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetADeviceOKProvisionSipAccountsItemSharedLine) Reset() {
	var v GetADeviceOKProvisionSipAccountsItemSharedLine
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetADeviceOKProvisionSipAccountsItemSharedLine) SetTo(v GetADeviceOKProvisionSipAccountsItemSharedLine) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetADeviceOKProvisionSipAccountsItemSharedLine) Get() (v GetADeviceOKProvisionSipAccountsItemSharedLine, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetADeviceOKProvisionSipAccountsItemSharedLine) Or(d GetADeviceOKProvisionSipAccountsItemSharedLine) GetADeviceOKProvisionSipAccountsItemSharedLine {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription returns new OptGetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription with value set to v.
func NewOptGetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription(v GetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription) OptGetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription {
	return OptGetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription{
		Value: v,
		Set:   true,
	}
}

// OptGetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription is optional GetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription.
type OptGetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription struct {
	Value GetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription
	Set   bool
}

// IsSet returns true if OptGetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription was set.
func (o OptGetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription) Reset() {
	var v GetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription) SetTo(v GetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription) Get() (v GetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription) Or(d GetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription) GetADeviceOKProvisionSipAccountsItemSharedLineLineSubscription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetADeviceOKSite returns new OptGetADeviceOKSite with value set to v.
func NewOptGetADeviceOKSite(v GetADeviceOKSite) OptGetADeviceOKSite {
	return OptGetADeviceOKSite{
		Value: v,
		Set:   true,
	}
}

// OptGetADeviceOKSite is optional GetADeviceOKSite.
type OptGetADeviceOKSite struct {
	Value GetADeviceOKSite
	Set   bool
}

// IsSet returns true if OptGetADeviceOKSite was set.
func (o OptGetADeviceOKSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetADeviceOKSite) Reset() {
	var v GetADeviceOKSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetADeviceOKSite) SetTo(v GetADeviceOKSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetADeviceOKSite) Get() (v GetADeviceOKSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetADeviceOKSite) Or(d GetADeviceOKSite) GetADeviceOKSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASharedLineGroupOKMembers returns new OptGetASharedLineGroupOKMembers with value set to v.
func NewOptGetASharedLineGroupOKMembers(v GetASharedLineGroupOKMembers) OptGetASharedLineGroupOKMembers {
	return OptGetASharedLineGroupOKMembers{
		Value: v,
		Set:   true,
	}
}

// OptGetASharedLineGroupOKMembers is optional GetASharedLineGroupOKMembers.
type OptGetASharedLineGroupOKMembers struct {
	Value GetASharedLineGroupOKMembers
	Set   bool
}

// IsSet returns true if OptGetASharedLineGroupOKMembers was set.
func (o OptGetASharedLineGroupOKMembers) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASharedLineGroupOKMembers) Reset() {
	var v GetASharedLineGroupOKMembers
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASharedLineGroupOKMembers) SetTo(v GetASharedLineGroupOKMembers) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASharedLineGroupOKMembers) Get() (v GetASharedLineGroupOKMembers, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASharedLineGroupOKMembers) Or(d GetASharedLineGroupOKMembers) GetASharedLineGroupOKMembers {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASharedLineGroupOKPolicy returns new OptGetASharedLineGroupOKPolicy with value set to v.
func NewOptGetASharedLineGroupOKPolicy(v GetASharedLineGroupOKPolicy) OptGetASharedLineGroupOKPolicy {
	return OptGetASharedLineGroupOKPolicy{
		Value: v,
		Set:   true,
	}
}

// OptGetASharedLineGroupOKPolicy is optional GetASharedLineGroupOKPolicy.
type OptGetASharedLineGroupOKPolicy struct {
	Value GetASharedLineGroupOKPolicy
	Set   bool
}

// IsSet returns true if OptGetASharedLineGroupOKPolicy was set.
func (o OptGetASharedLineGroupOKPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASharedLineGroupOKPolicy) Reset() {
	var v GetASharedLineGroupOKPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASharedLineGroupOKPolicy) SetTo(v GetASharedLineGroupOKPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASharedLineGroupOKPolicy) Get() (v GetASharedLineGroupOKPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASharedLineGroupOKPolicy) Or(d GetASharedLineGroupOKPolicy) GetASharedLineGroupOKPolicy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASharedLineGroupOKSite returns new OptGetASharedLineGroupOKSite with value set to v.
func NewOptGetASharedLineGroupOKSite(v GetASharedLineGroupOKSite) OptGetASharedLineGroupOKSite {
	return OptGetASharedLineGroupOKSite{
		Value: v,
		Set:   true,
	}
}

// OptGetASharedLineGroupOKSite is optional GetASharedLineGroupOKSite.
type OptGetASharedLineGroupOKSite struct {
	Value GetASharedLineGroupOKSite
	Set   bool
}

// IsSet returns true if OptGetASharedLineGroupOKSite was set.
func (o OptGetASharedLineGroupOKSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASharedLineGroupOKSite) Reset() {
	var v GetASharedLineGroupOKSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASharedLineGroupOKSite) SetTo(v GetASharedLineGroupOKSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASharedLineGroupOKSite) Get() (v GetASharedLineGroupOKSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASharedLineGroupOKSite) Or(d GetASharedLineGroupOKSite) GetASharedLineGroupOKSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKCountry returns new OptGetASiteOKCountry with value set to v.
func NewOptGetASiteOKCountry(v GetASiteOKCountry) OptGetASiteOKCountry {
	return OptGetASiteOKCountry{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKCountry is optional GetASiteOKCountry.
type OptGetASiteOKCountry struct {
	Value GetASiteOKCountry
	Set   bool
}

// IsSet returns true if OptGetASiteOKCountry was set.
func (o OptGetASiteOKCountry) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKCountry) Reset() {
	var v GetASiteOKCountry
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKCountry) SetTo(v GetASiteOKCountry) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKCountry) Get() (v GetASiteOKCountry, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKCountry) Or(d GetASiteOKCountry) GetASiteOKCountry {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKMainAutoReceptionist returns new OptGetASiteOKMainAutoReceptionist with value set to v.
func NewOptGetASiteOKMainAutoReceptionist(v GetASiteOKMainAutoReceptionist) OptGetASiteOKMainAutoReceptionist {
	return OptGetASiteOKMainAutoReceptionist{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKMainAutoReceptionist is optional GetASiteOKMainAutoReceptionist.
type OptGetASiteOKMainAutoReceptionist struct {
	Value GetASiteOKMainAutoReceptionist
	Set   bool
}

// IsSet returns true if OptGetASiteOKMainAutoReceptionist was set.
func (o OptGetASiteOKMainAutoReceptionist) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKMainAutoReceptionist) Reset() {
	var v GetASiteOKMainAutoReceptionist
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKMainAutoReceptionist) SetTo(v GetASiteOKMainAutoReceptionist) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKMainAutoReceptionist) Get() (v GetASiteOKMainAutoReceptionist, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKMainAutoReceptionist) Or(d GetASiteOKMainAutoReceptionist) GetASiteOKMainAutoReceptionist {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicy returns new OptGetASiteOKPolicy with value set to v.
func NewOptGetASiteOKPolicy(v GetASiteOKPolicy) OptGetASiteOKPolicy {
	return OptGetASiteOKPolicy{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicy is optional GetASiteOKPolicy.
type OptGetASiteOKPolicy struct {
	Value GetASiteOKPolicy
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicy was set.
func (o OptGetASiteOKPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicy) Reset() {
	var v GetASiteOKPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicy) SetTo(v GetASiteOKPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicy) Get() (v GetASiteOKPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicy) Or(d GetASiteOKPolicy) GetASiteOKPolicy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyAdHocCallRecording returns new OptGetASiteOKPolicyAdHocCallRecording with value set to v.
func NewOptGetASiteOKPolicyAdHocCallRecording(v GetASiteOKPolicyAdHocCallRecording) OptGetASiteOKPolicyAdHocCallRecording {
	return OptGetASiteOKPolicyAdHocCallRecording{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyAdHocCallRecording is optional GetASiteOKPolicyAdHocCallRecording.
type OptGetASiteOKPolicyAdHocCallRecording struct {
	Value GetASiteOKPolicyAdHocCallRecording
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyAdHocCallRecording was set.
func (o OptGetASiteOKPolicyAdHocCallRecording) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyAdHocCallRecording) Reset() {
	var v GetASiteOKPolicyAdHocCallRecording
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyAdHocCallRecording) SetTo(v GetASiteOKPolicyAdHocCallRecording) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyAdHocCallRecording) Get() (v GetASiteOKPolicyAdHocCallRecording, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyAdHocCallRecording) Or(d GetASiteOKPolicyAdHocCallRecording) GetASiteOKPolicyAdHocCallRecording {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone returns new OptGetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone with value set to v.
func NewOptGetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone(v GetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone) OptGetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone {
	return OptGetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone is optional GetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone.
type OptGetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone struct {
	Value GetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone was set.
func (o OptGetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone) Reset() {
	var v GetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone) SetTo(v GetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone) Get() (v GetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone) Or(d GetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone) GetASiteOKPolicyAdHocCallRecordingPlayRecordingBeepTone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyAudioIntercom returns new OptGetASiteOKPolicyAudioIntercom with value set to v.
func NewOptGetASiteOKPolicyAudioIntercom(v GetASiteOKPolicyAudioIntercom) OptGetASiteOKPolicyAudioIntercom {
	return OptGetASiteOKPolicyAudioIntercom{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyAudioIntercom is optional GetASiteOKPolicyAudioIntercom.
type OptGetASiteOKPolicyAudioIntercom struct {
	Value GetASiteOKPolicyAudioIntercom
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyAudioIntercom was set.
func (o OptGetASiteOKPolicyAudioIntercom) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyAudioIntercom) Reset() {
	var v GetASiteOKPolicyAudioIntercom
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyAudioIntercom) SetTo(v GetASiteOKPolicyAudioIntercom) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyAudioIntercom) Get() (v GetASiteOKPolicyAudioIntercom, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyAudioIntercom) Or(d GetASiteOKPolicyAudioIntercom) GetASiteOKPolicyAudioIntercom {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyAutoCallRecording returns new OptGetASiteOKPolicyAutoCallRecording with value set to v.
func NewOptGetASiteOKPolicyAutoCallRecording(v GetASiteOKPolicyAutoCallRecording) OptGetASiteOKPolicyAutoCallRecording {
	return OptGetASiteOKPolicyAutoCallRecording{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyAutoCallRecording is optional GetASiteOKPolicyAutoCallRecording.
type OptGetASiteOKPolicyAutoCallRecording struct {
	Value GetASiteOKPolicyAutoCallRecording
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyAutoCallRecording was set.
func (o OptGetASiteOKPolicyAutoCallRecording) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyAutoCallRecording) Reset() {
	var v GetASiteOKPolicyAutoCallRecording
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyAutoCallRecording) SetTo(v GetASiteOKPolicyAutoCallRecording) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyAutoCallRecording) Get() (v GetASiteOKPolicyAutoCallRecording, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyAutoCallRecording) Or(d GetASiteOKPolicyAutoCallRecording) GetASiteOKPolicyAutoCallRecording {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone returns new OptGetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone with value set to v.
func NewOptGetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone(v GetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone) OptGetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone {
	return OptGetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone is optional GetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone.
type OptGetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone struct {
	Value GetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone was set.
func (o OptGetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone) Reset() {
	var v GetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone) SetTo(v GetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone) Get() (v GetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone) Or(d GetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone) GetASiteOKPolicyAutoCallRecordingPlayRecordingBeepTone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyAutoDeleteDataAfterRetentionDuration returns new OptGetASiteOKPolicyAutoDeleteDataAfterRetentionDuration with value set to v.
func NewOptGetASiteOKPolicyAutoDeleteDataAfterRetentionDuration(v GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) OptGetASiteOKPolicyAutoDeleteDataAfterRetentionDuration {
	return OptGetASiteOKPolicyAutoDeleteDataAfterRetentionDuration{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyAutoDeleteDataAfterRetentionDuration is optional GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration.
type OptGetASiteOKPolicyAutoDeleteDataAfterRetentionDuration struct {
	Value GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyAutoDeleteDataAfterRetentionDuration was set.
func (o OptGetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) Reset() {
	var v GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) SetTo(v GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) Get() (v GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) Or(d GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration) GetASiteOKPolicyAutoDeleteDataAfterRetentionDuration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyBlockCallsWithoutCallerID returns new OptGetASiteOKPolicyBlockCallsWithoutCallerID with value set to v.
func NewOptGetASiteOKPolicyBlockCallsWithoutCallerID(v GetASiteOKPolicyBlockCallsWithoutCallerID) OptGetASiteOKPolicyBlockCallsWithoutCallerID {
	return OptGetASiteOKPolicyBlockCallsWithoutCallerID{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyBlockCallsWithoutCallerID is optional GetASiteOKPolicyBlockCallsWithoutCallerID.
type OptGetASiteOKPolicyBlockCallsWithoutCallerID struct {
	Value GetASiteOKPolicyBlockCallsWithoutCallerID
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyBlockCallsWithoutCallerID was set.
func (o OptGetASiteOKPolicyBlockCallsWithoutCallerID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyBlockCallsWithoutCallerID) Reset() {
	var v GetASiteOKPolicyBlockCallsWithoutCallerID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyBlockCallsWithoutCallerID) SetTo(v GetASiteOKPolicyBlockCallsWithoutCallerID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyBlockCallsWithoutCallerID) Get() (v GetASiteOKPolicyBlockCallsWithoutCallerID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyBlockCallsWithoutCallerID) Or(d GetASiteOKPolicyBlockCallsWithoutCallerID) GetASiteOKPolicyBlockCallsWithoutCallerID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyBlockExternalCalls returns new OptGetASiteOKPolicyBlockExternalCalls with value set to v.
func NewOptGetASiteOKPolicyBlockExternalCalls(v GetASiteOKPolicyBlockExternalCalls) OptGetASiteOKPolicyBlockExternalCalls {
	return OptGetASiteOKPolicyBlockExternalCalls{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyBlockExternalCalls is optional GetASiteOKPolicyBlockExternalCalls.
type OptGetASiteOKPolicyBlockExternalCalls struct {
	Value GetASiteOKPolicyBlockExternalCalls
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyBlockExternalCalls was set.
func (o OptGetASiteOKPolicyBlockExternalCalls) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyBlockExternalCalls) Reset() {
	var v GetASiteOKPolicyBlockExternalCalls
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyBlockExternalCalls) SetTo(v GetASiteOKPolicyBlockExternalCalls) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyBlockExternalCalls) Get() (v GetASiteOKPolicyBlockExternalCalls, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyBlockExternalCalls) Or(d GetASiteOKPolicyBlockExternalCalls) GetASiteOKPolicyBlockExternalCalls {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyBlockExternalCallsE2eEncryption returns new OptGetASiteOKPolicyBlockExternalCallsE2eEncryption with value set to v.
func NewOptGetASiteOKPolicyBlockExternalCallsE2eEncryption(v GetASiteOKPolicyBlockExternalCallsE2eEncryption) OptGetASiteOKPolicyBlockExternalCallsE2eEncryption {
	return OptGetASiteOKPolicyBlockExternalCallsE2eEncryption{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyBlockExternalCallsE2eEncryption is optional GetASiteOKPolicyBlockExternalCallsE2eEncryption.
type OptGetASiteOKPolicyBlockExternalCallsE2eEncryption struct {
	Value GetASiteOKPolicyBlockExternalCallsE2eEncryption
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyBlockExternalCallsE2eEncryption was set.
func (o OptGetASiteOKPolicyBlockExternalCallsE2eEncryption) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyBlockExternalCallsE2eEncryption) Reset() {
	var v GetASiteOKPolicyBlockExternalCallsE2eEncryption
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyBlockExternalCallsE2eEncryption) SetTo(v GetASiteOKPolicyBlockExternalCallsE2eEncryption) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyBlockExternalCallsE2eEncryption) Get() (v GetASiteOKPolicyBlockExternalCallsE2eEncryption, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyBlockExternalCallsE2eEncryption) Or(d GetASiteOKPolicyBlockExternalCallsE2eEncryption) GetASiteOKPolicyBlockExternalCallsE2eEncryption {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyCallHandlingForwardingToOtherUsers returns new OptGetASiteOKPolicyCallHandlingForwardingToOtherUsers with value set to v.
func NewOptGetASiteOKPolicyCallHandlingForwardingToOtherUsers(v GetASiteOKPolicyCallHandlingForwardingToOtherUsers) OptGetASiteOKPolicyCallHandlingForwardingToOtherUsers {
	return OptGetASiteOKPolicyCallHandlingForwardingToOtherUsers{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyCallHandlingForwardingToOtherUsers is optional GetASiteOKPolicyCallHandlingForwardingToOtherUsers.
type OptGetASiteOKPolicyCallHandlingForwardingToOtherUsers struct {
	Value GetASiteOKPolicyCallHandlingForwardingToOtherUsers
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyCallHandlingForwardingToOtherUsers was set.
func (o OptGetASiteOKPolicyCallHandlingForwardingToOtherUsers) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyCallHandlingForwardingToOtherUsers) Reset() {
	var v GetASiteOKPolicyCallHandlingForwardingToOtherUsers
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyCallHandlingForwardingToOtherUsers) SetTo(v GetASiteOKPolicyCallHandlingForwardingToOtherUsers) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyCallHandlingForwardingToOtherUsers) Get() (v GetASiteOKPolicyCallHandlingForwardingToOtherUsers, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyCallHandlingForwardingToOtherUsers) Or(d GetASiteOKPolicyCallHandlingForwardingToOtherUsers) GetASiteOKPolicyCallHandlingForwardingToOtherUsers {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyCallOverflow returns new OptGetASiteOKPolicyCallOverflow with value set to v.
func NewOptGetASiteOKPolicyCallOverflow(v GetASiteOKPolicyCallOverflow) OptGetASiteOKPolicyCallOverflow {
	return OptGetASiteOKPolicyCallOverflow{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyCallOverflow is optional GetASiteOKPolicyCallOverflow.
type OptGetASiteOKPolicyCallOverflow struct {
	Value GetASiteOKPolicyCallOverflow
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyCallOverflow was set.
func (o OptGetASiteOKPolicyCallOverflow) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyCallOverflow) Reset() {
	var v GetASiteOKPolicyCallOverflow
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyCallOverflow) SetTo(v GetASiteOKPolicyCallOverflow) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyCallOverflow) Get() (v GetASiteOKPolicyCallOverflow, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyCallOverflow) Or(d GetASiteOKPolicyCallOverflow) GetASiteOKPolicyCallOverflow {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyCallPark returns new OptGetASiteOKPolicyCallPark with value set to v.
func NewOptGetASiteOKPolicyCallPark(v GetASiteOKPolicyCallPark) OptGetASiteOKPolicyCallPark {
	return OptGetASiteOKPolicyCallPark{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyCallPark is optional GetASiteOKPolicyCallPark.
type OptGetASiteOKPolicyCallPark struct {
	Value GetASiteOKPolicyCallPark
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyCallPark was set.
func (o OptGetASiteOKPolicyCallPark) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyCallPark) Reset() {
	var v GetASiteOKPolicyCallPark
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyCallPark) SetTo(v GetASiteOKPolicyCallPark) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyCallPark) Get() (v GetASiteOKPolicyCallPark, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyCallPark) Or(d GetASiteOKPolicyCallPark) GetASiteOKPolicyCallPark {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyCallParkForwardTo returns new OptGetASiteOKPolicyCallParkForwardTo with value set to v.
func NewOptGetASiteOKPolicyCallParkForwardTo(v GetASiteOKPolicyCallParkForwardTo) OptGetASiteOKPolicyCallParkForwardTo {
	return OptGetASiteOKPolicyCallParkForwardTo{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyCallParkForwardTo is optional GetASiteOKPolicyCallParkForwardTo.
type OptGetASiteOKPolicyCallParkForwardTo struct {
	Value GetASiteOKPolicyCallParkForwardTo
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyCallParkForwardTo was set.
func (o OptGetASiteOKPolicyCallParkForwardTo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyCallParkForwardTo) Reset() {
	var v GetASiteOKPolicyCallParkForwardTo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyCallParkForwardTo) SetTo(v GetASiteOKPolicyCallParkForwardTo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyCallParkForwardTo) Get() (v GetASiteOKPolicyCallParkForwardTo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyCallParkForwardTo) Or(d GetASiteOKPolicyCallParkForwardTo) GetASiteOKPolicyCallParkForwardTo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyCallQueueOptOutReason returns new OptGetASiteOKPolicyCallQueueOptOutReason with value set to v.
func NewOptGetASiteOKPolicyCallQueueOptOutReason(v GetASiteOKPolicyCallQueueOptOutReason) OptGetASiteOKPolicyCallQueueOptOutReason {
	return OptGetASiteOKPolicyCallQueueOptOutReason{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyCallQueueOptOutReason is optional GetASiteOKPolicyCallQueueOptOutReason.
type OptGetASiteOKPolicyCallQueueOptOutReason struct {
	Value GetASiteOKPolicyCallQueueOptOutReason
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyCallQueueOptOutReason was set.
func (o OptGetASiteOKPolicyCallQueueOptOutReason) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyCallQueueOptOutReason) Reset() {
	var v GetASiteOKPolicyCallQueueOptOutReason
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyCallQueueOptOutReason) SetTo(v GetASiteOKPolicyCallQueueOptOutReason) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyCallQueueOptOutReason) Get() (v GetASiteOKPolicyCallQueueOptOutReason, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyCallQueueOptOutReason) Or(d GetASiteOKPolicyCallQueueOptOutReason) GetASiteOKPolicyCallQueueOptOutReason {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyCallQueuePickupCode returns new OptGetASiteOKPolicyCallQueuePickupCode with value set to v.
func NewOptGetASiteOKPolicyCallQueuePickupCode(v GetASiteOKPolicyCallQueuePickupCode) OptGetASiteOKPolicyCallQueuePickupCode {
	return OptGetASiteOKPolicyCallQueuePickupCode{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyCallQueuePickupCode is optional GetASiteOKPolicyCallQueuePickupCode.
type OptGetASiteOKPolicyCallQueuePickupCode struct {
	Value GetASiteOKPolicyCallQueuePickupCode
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyCallQueuePickupCode was set.
func (o OptGetASiteOKPolicyCallQueuePickupCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyCallQueuePickupCode) Reset() {
	var v GetASiteOKPolicyCallQueuePickupCode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyCallQueuePickupCode) SetTo(v GetASiteOKPolicyCallQueuePickupCode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyCallQueuePickupCode) Get() (v GetASiteOKPolicyCallQueuePickupCode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyCallQueuePickupCode) Or(d GetASiteOKPolicyCallQueuePickupCode) GetASiteOKPolicyCallQueuePickupCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyCallTransferring returns new OptGetASiteOKPolicyCallTransferring with value set to v.
func NewOptGetASiteOKPolicyCallTransferring(v GetASiteOKPolicyCallTransferring) OptGetASiteOKPolicyCallTransferring {
	return OptGetASiteOKPolicyCallTransferring{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyCallTransferring is optional GetASiteOKPolicyCallTransferring.
type OptGetASiteOKPolicyCallTransferring struct {
	Value GetASiteOKPolicyCallTransferring
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyCallTransferring was set.
func (o OptGetASiteOKPolicyCallTransferring) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyCallTransferring) Reset() {
	var v GetASiteOKPolicyCallTransferring
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyCallTransferring) SetTo(v GetASiteOKPolicyCallTransferring) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyCallTransferring) Get() (v GetASiteOKPolicyCallTransferring, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyCallTransferring) Or(d GetASiteOKPolicyCallTransferring) GetASiteOKPolicyCallTransferring {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyCheckVoicemailsOverPhone returns new OptGetASiteOKPolicyCheckVoicemailsOverPhone with value set to v.
func NewOptGetASiteOKPolicyCheckVoicemailsOverPhone(v GetASiteOKPolicyCheckVoicemailsOverPhone) OptGetASiteOKPolicyCheckVoicemailsOverPhone {
	return OptGetASiteOKPolicyCheckVoicemailsOverPhone{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyCheckVoicemailsOverPhone is optional GetASiteOKPolicyCheckVoicemailsOverPhone.
type OptGetASiteOKPolicyCheckVoicemailsOverPhone struct {
	Value GetASiteOKPolicyCheckVoicemailsOverPhone
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyCheckVoicemailsOverPhone was set.
func (o OptGetASiteOKPolicyCheckVoicemailsOverPhone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyCheckVoicemailsOverPhone) Reset() {
	var v GetASiteOKPolicyCheckVoicemailsOverPhone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyCheckVoicemailsOverPhone) SetTo(v GetASiteOKPolicyCheckVoicemailsOverPhone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyCheckVoicemailsOverPhone) Get() (v GetASiteOKPolicyCheckVoicemailsOverPhone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyCheckVoicemailsOverPhone) Or(d GetASiteOKPolicyCheckVoicemailsOverPhone) GetASiteOKPolicyCheckVoicemailsOverPhone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyDelegation returns new OptGetASiteOKPolicyDelegation with value set to v.
func NewOptGetASiteOKPolicyDelegation(v GetASiteOKPolicyDelegation) OptGetASiteOKPolicyDelegation {
	return OptGetASiteOKPolicyDelegation{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyDelegation is optional GetASiteOKPolicyDelegation.
type OptGetASiteOKPolicyDelegation struct {
	Value GetASiteOKPolicyDelegation
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyDelegation was set.
func (o OptGetASiteOKPolicyDelegation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyDelegation) Reset() {
	var v GetASiteOKPolicyDelegation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyDelegation) SetTo(v GetASiteOKPolicyDelegation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyDelegation) Get() (v GetASiteOKPolicyDelegation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyDelegation) Or(d GetASiteOKPolicyDelegation) GetASiteOKPolicyDelegation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyElevateToMeeting returns new OptGetASiteOKPolicyElevateToMeeting with value set to v.
func NewOptGetASiteOKPolicyElevateToMeeting(v GetASiteOKPolicyElevateToMeeting) OptGetASiteOKPolicyElevateToMeeting {
	return OptGetASiteOKPolicyElevateToMeeting{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyElevateToMeeting is optional GetASiteOKPolicyElevateToMeeting.
type OptGetASiteOKPolicyElevateToMeeting struct {
	Value GetASiteOKPolicyElevateToMeeting
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyElevateToMeeting was set.
func (o OptGetASiteOKPolicyElevateToMeeting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyElevateToMeeting) Reset() {
	var v GetASiteOKPolicyElevateToMeeting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyElevateToMeeting) SetTo(v GetASiteOKPolicyElevateToMeeting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyElevateToMeeting) Get() (v GetASiteOKPolicyElevateToMeeting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyElevateToMeeting) Or(d GetASiteOKPolicyElevateToMeeting) GetASiteOKPolicyElevateToMeeting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyForceOffNet returns new OptGetASiteOKPolicyForceOffNet with value set to v.
func NewOptGetASiteOKPolicyForceOffNet(v GetASiteOKPolicyForceOffNet) OptGetASiteOKPolicyForceOffNet {
	return OptGetASiteOKPolicyForceOffNet{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyForceOffNet is optional GetASiteOKPolicyForceOffNet.
type OptGetASiteOKPolicyForceOffNet struct {
	Value GetASiteOKPolicyForceOffNet
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyForceOffNet was set.
func (o OptGetASiteOKPolicyForceOffNet) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyForceOffNet) Reset() {
	var v GetASiteOKPolicyForceOffNet
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyForceOffNet) SetTo(v GetASiteOKPolicyForceOffNet) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyForceOffNet) Get() (v GetASiteOKPolicyForceOffNet, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyForceOffNet) Or(d GetASiteOKPolicyForceOffNet) GetASiteOKPolicyForceOffNet {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyHandOffToRoom returns new OptGetASiteOKPolicyHandOffToRoom with value set to v.
func NewOptGetASiteOKPolicyHandOffToRoom(v GetASiteOKPolicyHandOffToRoom) OptGetASiteOKPolicyHandOffToRoom {
	return OptGetASiteOKPolicyHandOffToRoom{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyHandOffToRoom is optional GetASiteOKPolicyHandOffToRoom.
type OptGetASiteOKPolicyHandOffToRoom struct {
	Value GetASiteOKPolicyHandOffToRoom
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyHandOffToRoom was set.
func (o OptGetASiteOKPolicyHandOffToRoom) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyHandOffToRoom) Reset() {
	var v GetASiteOKPolicyHandOffToRoom
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyHandOffToRoom) SetTo(v GetASiteOKPolicyHandOffToRoom) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyHandOffToRoom) Get() (v GetASiteOKPolicyHandOffToRoom, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyHandOffToRoom) Or(d GetASiteOKPolicyHandOffToRoom) GetASiteOKPolicyHandOffToRoom {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyInternationalCalling returns new OptGetASiteOKPolicyInternationalCalling with value set to v.
func NewOptGetASiteOKPolicyInternationalCalling(v GetASiteOKPolicyInternationalCalling) OptGetASiteOKPolicyInternationalCalling {
	return OptGetASiteOKPolicyInternationalCalling{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyInternationalCalling is optional GetASiteOKPolicyInternationalCalling.
type OptGetASiteOKPolicyInternationalCalling struct {
	Value GetASiteOKPolicyInternationalCalling
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyInternationalCalling was set.
func (o OptGetASiteOKPolicyInternationalCalling) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyInternationalCalling) Reset() {
	var v GetASiteOKPolicyInternationalCalling
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyInternationalCalling) SetTo(v GetASiteOKPolicyInternationalCalling) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyInternationalCalling) Get() (v GetASiteOKPolicyInternationalCalling, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyInternationalCalling) Or(d GetASiteOKPolicyInternationalCalling) GetASiteOKPolicyInternationalCalling {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyMobileSwitchToCarrier returns new OptGetASiteOKPolicyMobileSwitchToCarrier with value set to v.
func NewOptGetASiteOKPolicyMobileSwitchToCarrier(v GetASiteOKPolicyMobileSwitchToCarrier) OptGetASiteOKPolicyMobileSwitchToCarrier {
	return OptGetASiteOKPolicyMobileSwitchToCarrier{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyMobileSwitchToCarrier is optional GetASiteOKPolicyMobileSwitchToCarrier.
type OptGetASiteOKPolicyMobileSwitchToCarrier struct {
	Value GetASiteOKPolicyMobileSwitchToCarrier
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyMobileSwitchToCarrier was set.
func (o OptGetASiteOKPolicyMobileSwitchToCarrier) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyMobileSwitchToCarrier) Reset() {
	var v GetASiteOKPolicyMobileSwitchToCarrier
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyMobileSwitchToCarrier) SetTo(v GetASiteOKPolicyMobileSwitchToCarrier) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyMobileSwitchToCarrier) Get() (v GetASiteOKPolicyMobileSwitchToCarrier, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyMobileSwitchToCarrier) Or(d GetASiteOKPolicyMobileSwitchToCarrier) GetASiteOKPolicyMobileSwitchToCarrier {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyPersonalAudioLibrary returns new OptGetASiteOKPolicyPersonalAudioLibrary with value set to v.
func NewOptGetASiteOKPolicyPersonalAudioLibrary(v GetASiteOKPolicyPersonalAudioLibrary) OptGetASiteOKPolicyPersonalAudioLibrary {
	return OptGetASiteOKPolicyPersonalAudioLibrary{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyPersonalAudioLibrary is optional GetASiteOKPolicyPersonalAudioLibrary.
type OptGetASiteOKPolicyPersonalAudioLibrary struct {
	Value GetASiteOKPolicyPersonalAudioLibrary
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyPersonalAudioLibrary was set.
func (o OptGetASiteOKPolicyPersonalAudioLibrary) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyPersonalAudioLibrary) Reset() {
	var v GetASiteOKPolicyPersonalAudioLibrary
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyPersonalAudioLibrary) SetTo(v GetASiteOKPolicyPersonalAudioLibrary) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyPersonalAudioLibrary) Get() (v GetASiteOKPolicyPersonalAudioLibrary, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyPersonalAudioLibrary) Or(d GetASiteOKPolicyPersonalAudioLibrary) GetASiteOKPolicyPersonalAudioLibrary {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicySMS returns new OptGetASiteOKPolicySMS with value set to v.
func NewOptGetASiteOKPolicySMS(v GetASiteOKPolicySMS) OptGetASiteOKPolicySMS {
	return OptGetASiteOKPolicySMS{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicySMS is optional GetASiteOKPolicySMS.
type OptGetASiteOKPolicySMS struct {
	Value GetASiteOKPolicySMS
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicySMS was set.
func (o OptGetASiteOKPolicySMS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicySMS) Reset() {
	var v GetASiteOKPolicySMS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicySMS) SetTo(v GetASiteOKPolicySMS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicySMS) Get() (v GetASiteOKPolicySMS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicySMS) Or(d GetASiteOKPolicySMS) GetASiteOKPolicySMS {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicySelectOutboundCallerID returns new OptGetASiteOKPolicySelectOutboundCallerID with value set to v.
func NewOptGetASiteOKPolicySelectOutboundCallerID(v GetASiteOKPolicySelectOutboundCallerID) OptGetASiteOKPolicySelectOutboundCallerID {
	return OptGetASiteOKPolicySelectOutboundCallerID{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicySelectOutboundCallerID is optional GetASiteOKPolicySelectOutboundCallerID.
type OptGetASiteOKPolicySelectOutboundCallerID struct {
	Value GetASiteOKPolicySelectOutboundCallerID
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicySelectOutboundCallerID was set.
func (o OptGetASiteOKPolicySelectOutboundCallerID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicySelectOutboundCallerID) Reset() {
	var v GetASiteOKPolicySelectOutboundCallerID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicySelectOutboundCallerID) SetTo(v GetASiteOKPolicySelectOutboundCallerID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicySelectOutboundCallerID) Get() (v GetASiteOKPolicySelectOutboundCallerID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicySelectOutboundCallerID) Or(d GetASiteOKPolicySelectOutboundCallerID) GetASiteOKPolicySelectOutboundCallerID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicySharedVoicemailNotificationByEmail returns new OptGetASiteOKPolicySharedVoicemailNotificationByEmail with value set to v.
func NewOptGetASiteOKPolicySharedVoicemailNotificationByEmail(v GetASiteOKPolicySharedVoicemailNotificationByEmail) OptGetASiteOKPolicySharedVoicemailNotificationByEmail {
	return OptGetASiteOKPolicySharedVoicemailNotificationByEmail{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicySharedVoicemailNotificationByEmail is optional GetASiteOKPolicySharedVoicemailNotificationByEmail.
type OptGetASiteOKPolicySharedVoicemailNotificationByEmail struct {
	Value GetASiteOKPolicySharedVoicemailNotificationByEmail
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicySharedVoicemailNotificationByEmail was set.
func (o OptGetASiteOKPolicySharedVoicemailNotificationByEmail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicySharedVoicemailNotificationByEmail) Reset() {
	var v GetASiteOKPolicySharedVoicemailNotificationByEmail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicySharedVoicemailNotificationByEmail) SetTo(v GetASiteOKPolicySharedVoicemailNotificationByEmail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicySharedVoicemailNotificationByEmail) Get() (v GetASiteOKPolicySharedVoicemailNotificationByEmail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicySharedVoicemailNotificationByEmail) Or(d GetASiteOKPolicySharedVoicemailNotificationByEmail) GetASiteOKPolicySharedVoicemailNotificationByEmail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyVoicemail returns new OptGetASiteOKPolicyVoicemail with value set to v.
func NewOptGetASiteOKPolicyVoicemail(v GetASiteOKPolicyVoicemail) OptGetASiteOKPolicyVoicemail {
	return OptGetASiteOKPolicyVoicemail{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyVoicemail is optional GetASiteOKPolicyVoicemail.
type OptGetASiteOKPolicyVoicemail struct {
	Value GetASiteOKPolicyVoicemail
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyVoicemail was set.
func (o OptGetASiteOKPolicyVoicemail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyVoicemail) Reset() {
	var v GetASiteOKPolicyVoicemail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyVoicemail) SetTo(v GetASiteOKPolicyVoicemail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyVoicemail) Get() (v GetASiteOKPolicyVoicemail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyVoicemail) Or(d GetASiteOKPolicyVoicemail) GetASiteOKPolicyVoicemail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyVoicemailNotificationByEmail returns new OptGetASiteOKPolicyVoicemailNotificationByEmail with value set to v.
func NewOptGetASiteOKPolicyVoicemailNotificationByEmail(v GetASiteOKPolicyVoicemailNotificationByEmail) OptGetASiteOKPolicyVoicemailNotificationByEmail {
	return OptGetASiteOKPolicyVoicemailNotificationByEmail{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyVoicemailNotificationByEmail is optional GetASiteOKPolicyVoicemailNotificationByEmail.
type OptGetASiteOKPolicyVoicemailNotificationByEmail struct {
	Value GetASiteOKPolicyVoicemailNotificationByEmail
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyVoicemailNotificationByEmail was set.
func (o OptGetASiteOKPolicyVoicemailNotificationByEmail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyVoicemailNotificationByEmail) Reset() {
	var v GetASiteOKPolicyVoicemailNotificationByEmail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyVoicemailNotificationByEmail) SetTo(v GetASiteOKPolicyVoicemailNotificationByEmail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyVoicemailNotificationByEmail) Get() (v GetASiteOKPolicyVoicemailNotificationByEmail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyVoicemailNotificationByEmail) Or(d GetASiteOKPolicyVoicemailNotificationByEmail) GetASiteOKPolicyVoicemailNotificationByEmail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyVoicemailTranscription returns new OptGetASiteOKPolicyVoicemailTranscription with value set to v.
func NewOptGetASiteOKPolicyVoicemailTranscription(v GetASiteOKPolicyVoicemailTranscription) OptGetASiteOKPolicyVoicemailTranscription {
	return OptGetASiteOKPolicyVoicemailTranscription{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyVoicemailTranscription is optional GetASiteOKPolicyVoicemailTranscription.
type OptGetASiteOKPolicyVoicemailTranscription struct {
	Value GetASiteOKPolicyVoicemailTranscription
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyVoicemailTranscription was set.
func (o OptGetASiteOKPolicyVoicemailTranscription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyVoicemailTranscription) Reset() {
	var v GetASiteOKPolicyVoicemailTranscription
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyVoicemailTranscription) SetTo(v GetASiteOKPolicyVoicemailTranscription) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyVoicemailTranscription) Get() (v GetASiteOKPolicyVoicemailTranscription, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyVoicemailTranscription) Or(d GetASiteOKPolicyVoicemailTranscription) GetASiteOKPolicyVoicemailTranscription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKPolicyZoomPhoneOnMobile returns new OptGetASiteOKPolicyZoomPhoneOnMobile with value set to v.
func NewOptGetASiteOKPolicyZoomPhoneOnMobile(v GetASiteOKPolicyZoomPhoneOnMobile) OptGetASiteOKPolicyZoomPhoneOnMobile {
	return OptGetASiteOKPolicyZoomPhoneOnMobile{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKPolicyZoomPhoneOnMobile is optional GetASiteOKPolicyZoomPhoneOnMobile.
type OptGetASiteOKPolicyZoomPhoneOnMobile struct {
	Value GetASiteOKPolicyZoomPhoneOnMobile
	Set   bool
}

// IsSet returns true if OptGetASiteOKPolicyZoomPhoneOnMobile was set.
func (o OptGetASiteOKPolicyZoomPhoneOnMobile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKPolicyZoomPhoneOnMobile) Reset() {
	var v GetASiteOKPolicyZoomPhoneOnMobile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKPolicyZoomPhoneOnMobile) SetTo(v GetASiteOKPolicyZoomPhoneOnMobile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKPolicyZoomPhoneOnMobile) Get() (v GetASiteOKPolicyZoomPhoneOnMobile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKPolicyZoomPhoneOnMobile) Or(d GetASiteOKPolicyZoomPhoneOnMobile) GetASiteOKPolicyZoomPhoneOnMobile {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKShortExtension returns new OptGetASiteOKShortExtension with value set to v.
func NewOptGetASiteOKShortExtension(v GetASiteOKShortExtension) OptGetASiteOKShortExtension {
	return OptGetASiteOKShortExtension{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKShortExtension is optional GetASiteOKShortExtension.
type OptGetASiteOKShortExtension struct {
	Value GetASiteOKShortExtension
	Set   bool
}

// IsSet returns true if OptGetASiteOKShortExtension was set.
func (o OptGetASiteOKShortExtension) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKShortExtension) Reset() {
	var v GetASiteOKShortExtension
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKShortExtension) SetTo(v GetASiteOKShortExtension) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKShortExtension) Get() (v GetASiteOKShortExtension, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKShortExtension) Or(d GetASiteOKShortExtension) GetASiteOKShortExtension {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetASiteOKSipZone returns new OptGetASiteOKSipZone with value set to v.
func NewOptGetASiteOKSipZone(v GetASiteOKSipZone) OptGetASiteOKSipZone {
	return OptGetASiteOKSipZone{
		Value: v,
		Set:   true,
	}
}

// OptGetASiteOKSipZone is optional GetASiteOKSipZone.
type OptGetASiteOKSipZone struct {
	Value GetASiteOKSipZone
	Set   bool
}

// IsSet returns true if OptGetASiteOKSipZone was set.
func (o OptGetASiteOKSipZone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetASiteOKSipZone) Reset() {
	var v GetASiteOKSipZone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetASiteOKSipZone) SetTo(v GetASiteOKSipZone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetASiteOKSipZone) Get() (v GetASiteOKSipZone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetASiteOKSipZone) Or(d GetASiteOKSipZone) GetASiteOKSipZone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetAlertSettingDetailsOKTargetsItemSite returns new OptGetAlertSettingDetailsOKTargetsItemSite with value set to v.
func NewOptGetAlertSettingDetailsOKTargetsItemSite(v GetAlertSettingDetailsOKTargetsItemSite) OptGetAlertSettingDetailsOKTargetsItemSite {
	return OptGetAlertSettingDetailsOKTargetsItemSite{
		Value: v,
		Set:   true,
	}
}

// OptGetAlertSettingDetailsOKTargetsItemSite is optional GetAlertSettingDetailsOKTargetsItemSite.
type OptGetAlertSettingDetailsOKTargetsItemSite struct {
	Value GetAlertSettingDetailsOKTargetsItemSite
	Set   bool
}

// IsSet returns true if OptGetAlertSettingDetailsOKTargetsItemSite was set.
func (o OptGetAlertSettingDetailsOKTargetsItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetAlertSettingDetailsOKTargetsItemSite) Reset() {
	var v GetAlertSettingDetailsOKTargetsItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetAlertSettingDetailsOKTargetsItemSite) SetTo(v GetAlertSettingDetailsOKTargetsItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetAlertSettingDetailsOKTargetsItemSite) Get() (v GetAlertSettingDetailsOKTargetsItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetAlertSettingDetailsOKTargetsItemSite) Or(d GetAlertSettingDetailsOKTargetsItemSite) GetAlertSettingDetailsOKTargetsItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetAutoReceptionistDetailOKSite returns new OptGetAutoReceptionistDetailOKSite with value set to v.
func NewOptGetAutoReceptionistDetailOKSite(v GetAutoReceptionistDetailOKSite) OptGetAutoReceptionistDetailOKSite {
	return OptGetAutoReceptionistDetailOKSite{
		Value: v,
		Set:   true,
	}
}

// OptGetAutoReceptionistDetailOKSite is optional GetAutoReceptionistDetailOKSite.
type OptGetAutoReceptionistDetailOKSite struct {
	Value GetAutoReceptionistDetailOKSite
	Set   bool
}

// IsSet returns true if OptGetAutoReceptionistDetailOKSite was set.
func (o OptGetAutoReceptionistDetailOKSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetAutoReceptionistDetailOKSite) Reset() {
	var v GetAutoReceptionistDetailOKSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetAutoReceptionistDetailOKSite) SetTo(v GetAutoReceptionistDetailOKSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetAutoReceptionistDetailOKSite) Get() (v GetAutoReceptionistDetailOKSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetAutoReceptionistDetailOKSite) Or(d GetAutoReceptionistDetailOKSite) GetAutoReceptionistDetailOKSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetAutoReceptionistIVROKAudioPrompt returns new OptGetAutoReceptionistIVROKAudioPrompt with value set to v.
func NewOptGetAutoReceptionistIVROKAudioPrompt(v GetAutoReceptionistIVROKAudioPrompt) OptGetAutoReceptionistIVROKAudioPrompt {
	return OptGetAutoReceptionistIVROKAudioPrompt{
		Value: v,
		Set:   true,
	}
}

// OptGetAutoReceptionistIVROKAudioPrompt is optional GetAutoReceptionistIVROKAudioPrompt.
type OptGetAutoReceptionistIVROKAudioPrompt struct {
	Value GetAutoReceptionistIVROKAudioPrompt
	Set   bool
}

// IsSet returns true if OptGetAutoReceptionistIVROKAudioPrompt was set.
func (o OptGetAutoReceptionistIVROKAudioPrompt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetAutoReceptionistIVROKAudioPrompt) Reset() {
	var v GetAutoReceptionistIVROKAudioPrompt
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetAutoReceptionistIVROKAudioPrompt) SetTo(v GetAutoReceptionistIVROKAudioPrompt) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetAutoReceptionistIVROKAudioPrompt) Get() (v GetAutoReceptionistIVROKAudioPrompt, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetAutoReceptionistIVROKAudioPrompt) Or(d GetAutoReceptionistIVROKAudioPrompt) GetAutoReceptionistIVROKAudioPrompt {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetAutoReceptionistIVROKCallerEntersNoAction returns new OptGetAutoReceptionistIVROKCallerEntersNoAction with value set to v.
func NewOptGetAutoReceptionistIVROKCallerEntersNoAction(v GetAutoReceptionistIVROKCallerEntersNoAction) OptGetAutoReceptionistIVROKCallerEntersNoAction {
	return OptGetAutoReceptionistIVROKCallerEntersNoAction{
		Value: v,
		Set:   true,
	}
}

// OptGetAutoReceptionistIVROKCallerEntersNoAction is optional GetAutoReceptionistIVROKCallerEntersNoAction.
type OptGetAutoReceptionistIVROKCallerEntersNoAction struct {
	Value GetAutoReceptionistIVROKCallerEntersNoAction
	Set   bool
}

// IsSet returns true if OptGetAutoReceptionistIVROKCallerEntersNoAction was set.
func (o OptGetAutoReceptionistIVROKCallerEntersNoAction) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetAutoReceptionistIVROKCallerEntersNoAction) Reset() {
	var v GetAutoReceptionistIVROKCallerEntersNoAction
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetAutoReceptionistIVROKCallerEntersNoAction) SetTo(v GetAutoReceptionistIVROKCallerEntersNoAction) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetAutoReceptionistIVROKCallerEntersNoAction) Get() (v GetAutoReceptionistIVROKCallerEntersNoAction, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetAutoReceptionistIVROKCallerEntersNoAction) Or(d GetAutoReceptionistIVROKCallerEntersNoAction) GetAutoReceptionistIVROKCallerEntersNoAction {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetAutoReceptionistIVROKCallerEntersNoActionForwardTo returns new OptGetAutoReceptionistIVROKCallerEntersNoActionForwardTo with value set to v.
func NewOptGetAutoReceptionistIVROKCallerEntersNoActionForwardTo(v GetAutoReceptionistIVROKCallerEntersNoActionForwardTo) OptGetAutoReceptionistIVROKCallerEntersNoActionForwardTo {
	return OptGetAutoReceptionistIVROKCallerEntersNoActionForwardTo{
		Value: v,
		Set:   true,
	}
}

// OptGetAutoReceptionistIVROKCallerEntersNoActionForwardTo is optional GetAutoReceptionistIVROKCallerEntersNoActionForwardTo.
type OptGetAutoReceptionistIVROKCallerEntersNoActionForwardTo struct {
	Value GetAutoReceptionistIVROKCallerEntersNoActionForwardTo
	Set   bool
}

// IsSet returns true if OptGetAutoReceptionistIVROKCallerEntersNoActionForwardTo was set.
func (o OptGetAutoReceptionistIVROKCallerEntersNoActionForwardTo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetAutoReceptionistIVROKCallerEntersNoActionForwardTo) Reset() {
	var v GetAutoReceptionistIVROKCallerEntersNoActionForwardTo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetAutoReceptionistIVROKCallerEntersNoActionForwardTo) SetTo(v GetAutoReceptionistIVROKCallerEntersNoActionForwardTo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetAutoReceptionistIVROKCallerEntersNoActionForwardTo) Get() (v GetAutoReceptionistIVROKCallerEntersNoActionForwardTo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetAutoReceptionistIVROKCallerEntersNoActionForwardTo) Or(d GetAutoReceptionistIVROKCallerEntersNoActionForwardTo) GetAutoReceptionistIVROKCallerEntersNoActionForwardTo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetAutoReceptionistIVROKKeyActionsItemTarget returns new OptGetAutoReceptionistIVROKKeyActionsItemTarget with value set to v.
func NewOptGetAutoReceptionistIVROKKeyActionsItemTarget(v GetAutoReceptionistIVROKKeyActionsItemTarget) OptGetAutoReceptionistIVROKKeyActionsItemTarget {
	return OptGetAutoReceptionistIVROKKeyActionsItemTarget{
		Value: v,
		Set:   true,
	}
}

// OptGetAutoReceptionistIVROKKeyActionsItemTarget is optional GetAutoReceptionistIVROKKeyActionsItemTarget.
type OptGetAutoReceptionistIVROKKeyActionsItemTarget struct {
	Value GetAutoReceptionistIVROKKeyActionsItemTarget
	Set   bool
}

// IsSet returns true if OptGetAutoReceptionistIVROKKeyActionsItemTarget was set.
func (o OptGetAutoReceptionistIVROKKeyActionsItemTarget) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetAutoReceptionistIVROKKeyActionsItemTarget) Reset() {
	var v GetAutoReceptionistIVROKKeyActionsItemTarget
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetAutoReceptionistIVROKKeyActionsItemTarget) SetTo(v GetAutoReceptionistIVROKKeyActionsItemTarget) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetAutoReceptionistIVROKKeyActionsItemTarget) Get() (v GetAutoReceptionistIVROKKeyActionsItemTarget, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetAutoReceptionistIVROKKeyActionsItemTarget) Or(d GetAutoReceptionistIVROKKeyActionsItemTarget) GetAutoReceptionistIVROKKeyActionsItemTarget {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting returns new OptGetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting with value set to v.
func NewOptGetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting(v GetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting) OptGetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting {
	return OptGetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting{
		Value: v,
		Set:   true,
	}
}

// OptGetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting is optional GetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting.
type OptGetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting struct {
	Value GetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting
	Set   bool
}

// IsSet returns true if OptGetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting was set.
func (o OptGetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting) Reset() {
	var v GetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting) SetTo(v GetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting) Get() (v GetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting) Or(d GetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting) GetAutoReceptionistIVROKKeyActionsItemVoicemailGreeting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetAutoReceptionistsPolicyOKSMS returns new OptGetAutoReceptionistsPolicyOKSMS with value set to v.
func NewOptGetAutoReceptionistsPolicyOKSMS(v GetAutoReceptionistsPolicyOKSMS) OptGetAutoReceptionistsPolicyOKSMS {
	return OptGetAutoReceptionistsPolicyOKSMS{
		Value: v,
		Set:   true,
	}
}

// OptGetAutoReceptionistsPolicyOKSMS is optional GetAutoReceptionistsPolicyOKSMS.
type OptGetAutoReceptionistsPolicyOKSMS struct {
	Value GetAutoReceptionistsPolicyOKSMS
	Set   bool
}

// IsSet returns true if OptGetAutoReceptionistsPolicyOKSMS was set.
func (o OptGetAutoReceptionistsPolicyOKSMS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetAutoReceptionistsPolicyOKSMS) Reset() {
	var v GetAutoReceptionistsPolicyOKSMS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetAutoReceptionistsPolicyOKSMS) SetTo(v GetAutoReceptionistsPolicyOKSMS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetAutoReceptionistsPolicyOKSMS) Get() (v GetAutoReceptionistsPolicyOKSMS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetAutoReceptionistsPolicyOKSMS) Or(d GetAutoReceptionistsPolicyOKSMS) GetAutoReceptionistsPolicyOKSMS {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetAutoReceptionistsPolicyOKVoicemailNotificationByEmail returns new OptGetAutoReceptionistsPolicyOKVoicemailNotificationByEmail with value set to v.
func NewOptGetAutoReceptionistsPolicyOKVoicemailNotificationByEmail(v GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) OptGetAutoReceptionistsPolicyOKVoicemailNotificationByEmail {
	return OptGetAutoReceptionistsPolicyOKVoicemailNotificationByEmail{
		Value: v,
		Set:   true,
	}
}

// OptGetAutoReceptionistsPolicyOKVoicemailNotificationByEmail is optional GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail.
type OptGetAutoReceptionistsPolicyOKVoicemailNotificationByEmail struct {
	Value GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail
	Set   bool
}

// IsSet returns true if OptGetAutoReceptionistsPolicyOKVoicemailNotificationByEmail was set.
func (o OptGetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) Reset() {
	var v GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) SetTo(v GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) Get() (v GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) Or(d GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail) GetAutoReceptionistsPolicyOKVoicemailNotificationByEmail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetAutoReceptionistsPolicyOKVoicemailTranscription returns new OptGetAutoReceptionistsPolicyOKVoicemailTranscription with value set to v.
func NewOptGetAutoReceptionistsPolicyOKVoicemailTranscription(v GetAutoReceptionistsPolicyOKVoicemailTranscription) OptGetAutoReceptionistsPolicyOKVoicemailTranscription {
	return OptGetAutoReceptionistsPolicyOKVoicemailTranscription{
		Value: v,
		Set:   true,
	}
}

// OptGetAutoReceptionistsPolicyOKVoicemailTranscription is optional GetAutoReceptionistsPolicyOKVoicemailTranscription.
type OptGetAutoReceptionistsPolicyOKVoicemailTranscription struct {
	Value GetAutoReceptionistsPolicyOKVoicemailTranscription
	Set   bool
}

// IsSet returns true if OptGetAutoReceptionistsPolicyOKVoicemailTranscription was set.
func (o OptGetAutoReceptionistsPolicyOKVoicemailTranscription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetAutoReceptionistsPolicyOKVoicemailTranscription) Reset() {
	var v GetAutoReceptionistsPolicyOKVoicemailTranscription
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetAutoReceptionistsPolicyOKVoicemailTranscription) SetTo(v GetAutoReceptionistsPolicyOKVoicemailTranscription) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetAutoReceptionistsPolicyOKVoicemailTranscription) Get() (v GetAutoReceptionistsPolicyOKVoicemailTranscription, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetAutoReceptionistsPolicyOKVoicemailTranscription) Or(d GetAutoReceptionistsPolicyOKVoicemailTranscription) GetAutoReceptionistsPolicyOKVoicemailTranscription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKBusinessHoursItemSettings returns new OptGetCallHandlingOKBusinessHoursItemSettings with value set to v.
func NewOptGetCallHandlingOKBusinessHoursItemSettings(v GetCallHandlingOKBusinessHoursItemSettings) OptGetCallHandlingOKBusinessHoursItemSettings {
	return OptGetCallHandlingOKBusinessHoursItemSettings{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKBusinessHoursItemSettings is optional GetCallHandlingOKBusinessHoursItemSettings.
type OptGetCallHandlingOKBusinessHoursItemSettings struct {
	Value GetCallHandlingOKBusinessHoursItemSettings
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKBusinessHoursItemSettings was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKBusinessHoursItemSettings) Reset() {
	var v GetCallHandlingOKBusinessHoursItemSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKBusinessHoursItemSettings) SetTo(v GetCallHandlingOKBusinessHoursItemSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettings) Get() (v GetCallHandlingOKBusinessHoursItemSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKBusinessHoursItemSettings) Or(d GetCallHandlingOKBusinessHoursItemSettings) GetCallHandlingOKBusinessHoursItemSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting returns new OptGetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting with value set to v.
func NewOptGetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting(v GetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting) OptGetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting {
	return OptGetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting is optional GetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting.
type OptGetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting struct {
	Value GetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting) Reset() {
	var v GetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting) SetTo(v GetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting) Get() (v GetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting) Or(d GetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting) GetCallHandlingOKBusinessHoursItemSettingsAudioWhileConnecting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKBusinessHoursItemSettingsBusyRouting returns new OptGetCallHandlingOKBusinessHoursItemSettingsBusyRouting with value set to v.
func NewOptGetCallHandlingOKBusinessHoursItemSettingsBusyRouting(v GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) OptGetCallHandlingOKBusinessHoursItemSettingsBusyRouting {
	return OptGetCallHandlingOKBusinessHoursItemSettingsBusyRouting{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKBusinessHoursItemSettingsBusyRouting is optional GetCallHandlingOKBusinessHoursItemSettingsBusyRouting.
type OptGetCallHandlingOKBusinessHoursItemSettingsBusyRouting struct {
	Value GetCallHandlingOKBusinessHoursItemSettingsBusyRouting
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKBusinessHoursItemSettingsBusyRouting was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsBusyRouting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsBusyRouting) Reset() {
	var v GetCallHandlingOKBusinessHoursItemSettingsBusyRouting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsBusyRouting) SetTo(v GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsBusyRouting) Get() (v GetCallHandlingOKBusinessHoursItemSettingsBusyRouting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsBusyRouting) Or(d GetCallHandlingOKBusinessHoursItemSettingsBusyRouting) GetCallHandlingOKBusinessHoursItemSettingsBusyRouting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo returns new OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo with value set to v.
func NewOptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo(v GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo {
	return OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo is optional GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo.
type OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo struct {
	Value GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) Reset() {
	var v GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) SetTo(v GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) Get() (v GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) Or(d GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo) GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingForwardTo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator returns new OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator with value set to v.
func NewOptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator(v GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator {
	return OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator is optional GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator.
type OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator struct {
	Value GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) Reset() {
	var v GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) SetTo(v GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) Get() (v GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) Or(d GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator) GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting returns new OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting with value set to v.
func NewOptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting(v GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting) OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting {
	return OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting is optional GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting.
type OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting struct {
	Value GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting) Reset() {
	var v GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting) SetTo(v GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting) Get() (v GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting) Or(d GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting) GetCallHandlingOKBusinessHoursItemSettingsBusyRoutingVoicemailGreeting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKBusinessHoursItemSettingsCallDistribution returns new OptGetCallHandlingOKBusinessHoursItemSettingsCallDistribution with value set to v.
func NewOptGetCallHandlingOKBusinessHoursItemSettingsCallDistribution(v GetCallHandlingOKBusinessHoursItemSettingsCallDistribution) OptGetCallHandlingOKBusinessHoursItemSettingsCallDistribution {
	return OptGetCallHandlingOKBusinessHoursItemSettingsCallDistribution{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKBusinessHoursItemSettingsCallDistribution is optional GetCallHandlingOKBusinessHoursItemSettingsCallDistribution.
type OptGetCallHandlingOKBusinessHoursItemSettingsCallDistribution struct {
	Value GetCallHandlingOKBusinessHoursItemSettingsCallDistribution
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKBusinessHoursItemSettingsCallDistribution was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsCallDistribution) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsCallDistribution) Reset() {
	var v GetCallHandlingOKBusinessHoursItemSettingsCallDistribution
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsCallDistribution) SetTo(v GetCallHandlingOKBusinessHoursItemSettingsCallDistribution) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsCallDistribution) Get() (v GetCallHandlingOKBusinessHoursItemSettingsCallDistribution, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsCallDistribution) Or(d GetCallHandlingOKBusinessHoursItemSettingsCallDistribution) GetCallHandlingOKBusinessHoursItemSettingsCallDistribution {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact returns new OptGetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact with value set to v.
func NewOptGetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact(v GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact) OptGetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact {
	return OptGetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact is optional GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact.
type OptGetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact struct {
	Value GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact) Reset() {
	var v GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact) SetTo(v GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact) Get() (v GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact) Or(d GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact) GetCallHandlingOKBusinessHoursItemSettingsCallForwardingSettingsItemExternalContact {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt returns new OptGetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt with value set to v.
func NewOptGetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt(v GetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt) OptGetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt {
	return OptGetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt is optional GetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt.
type OptGetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt struct {
	Value GetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt) Reset() {
	var v GetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt) SetTo(v GetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt) Get() (v GetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt) Or(d GetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt) GetCallHandlingOKBusinessHoursItemSettingsGreetingPrompt {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKBusinessHoursItemSettingsMusicOnHold returns new OptGetCallHandlingOKBusinessHoursItemSettingsMusicOnHold with value set to v.
func NewOptGetCallHandlingOKBusinessHoursItemSettingsMusicOnHold(v GetCallHandlingOKBusinessHoursItemSettingsMusicOnHold) OptGetCallHandlingOKBusinessHoursItemSettingsMusicOnHold {
	return OptGetCallHandlingOKBusinessHoursItemSettingsMusicOnHold{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKBusinessHoursItemSettingsMusicOnHold is optional GetCallHandlingOKBusinessHoursItemSettingsMusicOnHold.
type OptGetCallHandlingOKBusinessHoursItemSettingsMusicOnHold struct {
	Value GetCallHandlingOKBusinessHoursItemSettingsMusicOnHold
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKBusinessHoursItemSettingsMusicOnHold was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsMusicOnHold) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsMusicOnHold) Reset() {
	var v GetCallHandlingOKBusinessHoursItemSettingsMusicOnHold
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsMusicOnHold) SetTo(v GetCallHandlingOKBusinessHoursItemSettingsMusicOnHold) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsMusicOnHold) Get() (v GetCallHandlingOKBusinessHoursItemSettingsMusicOnHold, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsMusicOnHold) Or(d GetCallHandlingOKBusinessHoursItemSettingsMusicOnHold) GetCallHandlingOKBusinessHoursItemSettingsMusicOnHold {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKBusinessHoursItemSettingsRouting returns new OptGetCallHandlingOKBusinessHoursItemSettingsRouting with value set to v.
func NewOptGetCallHandlingOKBusinessHoursItemSettingsRouting(v GetCallHandlingOKBusinessHoursItemSettingsRouting) OptGetCallHandlingOKBusinessHoursItemSettingsRouting {
	return OptGetCallHandlingOKBusinessHoursItemSettingsRouting{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKBusinessHoursItemSettingsRouting is optional GetCallHandlingOKBusinessHoursItemSettingsRouting.
type OptGetCallHandlingOKBusinessHoursItemSettingsRouting struct {
	Value GetCallHandlingOKBusinessHoursItemSettingsRouting
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKBusinessHoursItemSettingsRouting was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsRouting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsRouting) Reset() {
	var v GetCallHandlingOKBusinessHoursItemSettingsRouting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsRouting) SetTo(v GetCallHandlingOKBusinessHoursItemSettingsRouting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsRouting) Get() (v GetCallHandlingOKBusinessHoursItemSettingsRouting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsRouting) Or(d GetCallHandlingOKBusinessHoursItemSettingsRouting) GetCallHandlingOKBusinessHoursItemSettingsRouting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo returns new OptGetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo with value set to v.
func NewOptGetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo(v GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) OptGetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo {
	return OptGetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo is optional GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo.
type OptGetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo struct {
	Value GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) Reset() {
	var v GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) SetTo(v GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) Get() (v GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) Or(d GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo) GetCallHandlingOKBusinessHoursItemSettingsRoutingForwardTo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKBusinessHoursItemSettingsRoutingOperator returns new OptGetCallHandlingOKBusinessHoursItemSettingsRoutingOperator with value set to v.
func NewOptGetCallHandlingOKBusinessHoursItemSettingsRoutingOperator(v GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) OptGetCallHandlingOKBusinessHoursItemSettingsRoutingOperator {
	return OptGetCallHandlingOKBusinessHoursItemSettingsRoutingOperator{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKBusinessHoursItemSettingsRoutingOperator is optional GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator.
type OptGetCallHandlingOKBusinessHoursItemSettingsRoutingOperator struct {
	Value GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKBusinessHoursItemSettingsRoutingOperator was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) Reset() {
	var v GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) SetTo(v GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) Get() (v GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) Or(d GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator) GetCallHandlingOKBusinessHoursItemSettingsRoutingOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting returns new OptGetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting with value set to v.
func NewOptGetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting(v GetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting) OptGetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting {
	return OptGetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting is optional GetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting.
type OptGetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting struct {
	Value GetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting) Reset() {
	var v GetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting) SetTo(v GetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting) Get() (v GetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting) Or(d GetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting) GetCallHandlingOKBusinessHoursItemSettingsRoutingVoicemailGreeting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKClosedHoursItemSettings returns new OptGetCallHandlingOKClosedHoursItemSettings with value set to v.
func NewOptGetCallHandlingOKClosedHoursItemSettings(v GetCallHandlingOKClosedHoursItemSettings) OptGetCallHandlingOKClosedHoursItemSettings {
	return OptGetCallHandlingOKClosedHoursItemSettings{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKClosedHoursItemSettings is optional GetCallHandlingOKClosedHoursItemSettings.
type OptGetCallHandlingOKClosedHoursItemSettings struct {
	Value GetCallHandlingOKClosedHoursItemSettings
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKClosedHoursItemSettings was set.
func (o OptGetCallHandlingOKClosedHoursItemSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKClosedHoursItemSettings) Reset() {
	var v GetCallHandlingOKClosedHoursItemSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKClosedHoursItemSettings) SetTo(v GetCallHandlingOKClosedHoursItemSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKClosedHoursItemSettings) Get() (v GetCallHandlingOKClosedHoursItemSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKClosedHoursItemSettings) Or(d GetCallHandlingOKClosedHoursItemSettings) GetCallHandlingOKClosedHoursItemSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKClosedHoursItemSettingsBusyRouting returns new OptGetCallHandlingOKClosedHoursItemSettingsBusyRouting with value set to v.
func NewOptGetCallHandlingOKClosedHoursItemSettingsBusyRouting(v GetCallHandlingOKClosedHoursItemSettingsBusyRouting) OptGetCallHandlingOKClosedHoursItemSettingsBusyRouting {
	return OptGetCallHandlingOKClosedHoursItemSettingsBusyRouting{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKClosedHoursItemSettingsBusyRouting is optional GetCallHandlingOKClosedHoursItemSettingsBusyRouting.
type OptGetCallHandlingOKClosedHoursItemSettingsBusyRouting struct {
	Value GetCallHandlingOKClosedHoursItemSettingsBusyRouting
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKClosedHoursItemSettingsBusyRouting was set.
func (o OptGetCallHandlingOKClosedHoursItemSettingsBusyRouting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKClosedHoursItemSettingsBusyRouting) Reset() {
	var v GetCallHandlingOKClosedHoursItemSettingsBusyRouting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKClosedHoursItemSettingsBusyRouting) SetTo(v GetCallHandlingOKClosedHoursItemSettingsBusyRouting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKClosedHoursItemSettingsBusyRouting) Get() (v GetCallHandlingOKClosedHoursItemSettingsBusyRouting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKClosedHoursItemSettingsBusyRouting) Or(d GetCallHandlingOKClosedHoursItemSettingsBusyRouting) GetCallHandlingOKClosedHoursItemSettingsBusyRouting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo returns new OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo with value set to v.
func NewOptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo(v GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo {
	return OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo is optional GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo.
type OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo struct {
	Value GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo was set.
func (o OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) Reset() {
	var v GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) SetTo(v GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) Get() (v GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) Or(d GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo) GetCallHandlingOKClosedHoursItemSettingsBusyRoutingForwardTo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator returns new OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator with value set to v.
func NewOptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator(v GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator {
	return OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator is optional GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator.
type OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator struct {
	Value GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator was set.
func (o OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) Reset() {
	var v GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) SetTo(v GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) Get() (v GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) Or(d GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator) GetCallHandlingOKClosedHoursItemSettingsBusyRoutingOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting returns new OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting with value set to v.
func NewOptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting(v GetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting) OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting {
	return OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting is optional GetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting.
type OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting struct {
	Value GetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting was set.
func (o OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting) Reset() {
	var v GetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting) SetTo(v GetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting) Get() (v GetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting) Or(d GetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting) GetCallHandlingOKClosedHoursItemSettingsBusyRoutingVoicemailGreeting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact returns new OptGetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact with value set to v.
func NewOptGetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact(v GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact) OptGetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact {
	return OptGetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact is optional GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact.
type OptGetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact struct {
	Value GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact was set.
func (o OptGetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact) Reset() {
	var v GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact) SetTo(v GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact) Get() (v GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact) Or(d GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact) GetCallHandlingOKClosedHoursItemSettingsCallForwardingSettingsItemExternalContact {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKClosedHoursItemSettingsRouting returns new OptGetCallHandlingOKClosedHoursItemSettingsRouting with value set to v.
func NewOptGetCallHandlingOKClosedHoursItemSettingsRouting(v GetCallHandlingOKClosedHoursItemSettingsRouting) OptGetCallHandlingOKClosedHoursItemSettingsRouting {
	return OptGetCallHandlingOKClosedHoursItemSettingsRouting{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKClosedHoursItemSettingsRouting is optional GetCallHandlingOKClosedHoursItemSettingsRouting.
type OptGetCallHandlingOKClosedHoursItemSettingsRouting struct {
	Value GetCallHandlingOKClosedHoursItemSettingsRouting
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKClosedHoursItemSettingsRouting was set.
func (o OptGetCallHandlingOKClosedHoursItemSettingsRouting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKClosedHoursItemSettingsRouting) Reset() {
	var v GetCallHandlingOKClosedHoursItemSettingsRouting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKClosedHoursItemSettingsRouting) SetTo(v GetCallHandlingOKClosedHoursItemSettingsRouting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKClosedHoursItemSettingsRouting) Get() (v GetCallHandlingOKClosedHoursItemSettingsRouting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKClosedHoursItemSettingsRouting) Or(d GetCallHandlingOKClosedHoursItemSettingsRouting) GetCallHandlingOKClosedHoursItemSettingsRouting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo returns new OptGetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo with value set to v.
func NewOptGetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo(v GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) OptGetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo {
	return OptGetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo is optional GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo.
type OptGetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo struct {
	Value GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo was set.
func (o OptGetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) Reset() {
	var v GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) SetTo(v GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) Get() (v GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) Or(d GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo) GetCallHandlingOKClosedHoursItemSettingsRoutingForwardTo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKClosedHoursItemSettingsRoutingOperator returns new OptGetCallHandlingOKClosedHoursItemSettingsRoutingOperator with value set to v.
func NewOptGetCallHandlingOKClosedHoursItemSettingsRoutingOperator(v GetCallHandlingOKClosedHoursItemSettingsRoutingOperator) OptGetCallHandlingOKClosedHoursItemSettingsRoutingOperator {
	return OptGetCallHandlingOKClosedHoursItemSettingsRoutingOperator{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKClosedHoursItemSettingsRoutingOperator is optional GetCallHandlingOKClosedHoursItemSettingsRoutingOperator.
type OptGetCallHandlingOKClosedHoursItemSettingsRoutingOperator struct {
	Value GetCallHandlingOKClosedHoursItemSettingsRoutingOperator
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKClosedHoursItemSettingsRoutingOperator was set.
func (o OptGetCallHandlingOKClosedHoursItemSettingsRoutingOperator) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKClosedHoursItemSettingsRoutingOperator) Reset() {
	var v GetCallHandlingOKClosedHoursItemSettingsRoutingOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKClosedHoursItemSettingsRoutingOperator) SetTo(v GetCallHandlingOKClosedHoursItemSettingsRoutingOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKClosedHoursItemSettingsRoutingOperator) Get() (v GetCallHandlingOKClosedHoursItemSettingsRoutingOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKClosedHoursItemSettingsRoutingOperator) Or(d GetCallHandlingOKClosedHoursItemSettingsRoutingOperator) GetCallHandlingOKClosedHoursItemSettingsRoutingOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting returns new OptGetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting with value set to v.
func NewOptGetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting(v GetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting) OptGetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting {
	return OptGetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting is optional GetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting.
type OptGetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting struct {
	Value GetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting was set.
func (o OptGetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting) Reset() {
	var v GetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting) SetTo(v GetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting) Get() (v GetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting) Or(d GetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting) GetCallHandlingOKClosedHoursItemSettingsRoutingVoicemailGreeting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKHolidayHoursItemDetailsItemSettings returns new OptGetCallHandlingOKHolidayHoursItemDetailsItemSettings with value set to v.
func NewOptGetCallHandlingOKHolidayHoursItemDetailsItemSettings(v GetCallHandlingOKHolidayHoursItemDetailsItemSettings) OptGetCallHandlingOKHolidayHoursItemDetailsItemSettings {
	return OptGetCallHandlingOKHolidayHoursItemDetailsItemSettings{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKHolidayHoursItemDetailsItemSettings is optional GetCallHandlingOKHolidayHoursItemDetailsItemSettings.
type OptGetCallHandlingOKHolidayHoursItemDetailsItemSettings struct {
	Value GetCallHandlingOKHolidayHoursItemDetailsItemSettings
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKHolidayHoursItemDetailsItemSettings was set.
func (o OptGetCallHandlingOKHolidayHoursItemDetailsItemSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKHolidayHoursItemDetailsItemSettings) Reset() {
	var v GetCallHandlingOKHolidayHoursItemDetailsItemSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKHolidayHoursItemDetailsItemSettings) SetTo(v GetCallHandlingOKHolidayHoursItemDetailsItemSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKHolidayHoursItemDetailsItemSettings) Get() (v GetCallHandlingOKHolidayHoursItemDetailsItemSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKHolidayHoursItemDetailsItemSettings) Or(d GetCallHandlingOKHolidayHoursItemDetailsItemSettings) GetCallHandlingOKHolidayHoursItemDetailsItemSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact returns new OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact with value set to v.
func NewOptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact(v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact) OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact {
	return OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact is optional GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact.
type OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact struct {
	Value GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact was set.
func (o OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact) Reset() {
	var v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact) SetTo(v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact) Get() (v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact) Or(d GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact) GetCallHandlingOKHolidayHoursItemDetailsItemSettingsCallForwardingSettingsItemExternalContact {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting returns new OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting with value set to v.
func NewOptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting(v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting {
	return OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting is optional GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting.
type OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting struct {
	Value GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting was set.
func (o OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) Reset() {
	var v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) SetTo(v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) Get() (v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) Or(d GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting) GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRouting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo returns new OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo with value set to v.
func NewOptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo(v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo {
	return OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo is optional GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo.
type OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo struct {
	Value GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo was set.
func (o OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) Reset() {
	var v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) SetTo(v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) Get() (v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) Or(d GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo) GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingForwardTo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator returns new OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator with value set to v.
func NewOptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator(v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator {
	return OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator is optional GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator.
type OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator struct {
	Value GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator was set.
func (o OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) Reset() {
	var v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) SetTo(v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) Get() (v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) Or(d GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator) GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting returns new OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting with value set to v.
func NewOptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting(v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting) OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting {
	return OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting{
		Value: v,
		Set:   true,
	}
}

// OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting is optional GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting.
type OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting struct {
	Value GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting
	Set   bool
}

// IsSet returns true if OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting was set.
func (o OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting) Reset() {
	var v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting) SetTo(v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting) Get() (v GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting) Or(d GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting) GetCallHandlingOKHolidayHoursItemDetailsItemSettingsRoutingVoicemailGreeting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallLogDetailsOKLogDetailsItemForwardTo returns new OptGetCallLogDetailsOKLogDetailsItemForwardTo with value set to v.
func NewOptGetCallLogDetailsOKLogDetailsItemForwardTo(v GetCallLogDetailsOKLogDetailsItemForwardTo) OptGetCallLogDetailsOKLogDetailsItemForwardTo {
	return OptGetCallLogDetailsOKLogDetailsItemForwardTo{
		Value: v,
		Set:   true,
	}
}

// OptGetCallLogDetailsOKLogDetailsItemForwardTo is optional GetCallLogDetailsOKLogDetailsItemForwardTo.
type OptGetCallLogDetailsOKLogDetailsItemForwardTo struct {
	Value GetCallLogDetailsOKLogDetailsItemForwardTo
	Set   bool
}

// IsSet returns true if OptGetCallLogDetailsOKLogDetailsItemForwardTo was set.
func (o OptGetCallLogDetailsOKLogDetailsItemForwardTo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallLogDetailsOKLogDetailsItemForwardTo) Reset() {
	var v GetCallLogDetailsOKLogDetailsItemForwardTo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallLogDetailsOKLogDetailsItemForwardTo) SetTo(v GetCallLogDetailsOKLogDetailsItemForwardTo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallLogDetailsOKLogDetailsItemForwardTo) Get() (v GetCallLogDetailsOKLogDetailsItemForwardTo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallLogDetailsOKLogDetailsItemForwardTo) Or(d GetCallLogDetailsOKLogDetailsItemForwardTo) GetCallLogDetailsOKLogDetailsItemForwardTo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallLogDetailsOKLogDetailsItemSite returns new OptGetCallLogDetailsOKLogDetailsItemSite with value set to v.
func NewOptGetCallLogDetailsOKLogDetailsItemSite(v GetCallLogDetailsOKLogDetailsItemSite) OptGetCallLogDetailsOKLogDetailsItemSite {
	return OptGetCallLogDetailsOKLogDetailsItemSite{
		Value: v,
		Set:   true,
	}
}

// OptGetCallLogDetailsOKLogDetailsItemSite is optional GetCallLogDetailsOKLogDetailsItemSite.
type OptGetCallLogDetailsOKLogDetailsItemSite struct {
	Value GetCallLogDetailsOKLogDetailsItemSite
	Set   bool
}

// IsSet returns true if OptGetCallLogDetailsOKLogDetailsItemSite was set.
func (o OptGetCallLogDetailsOKLogDetailsItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallLogDetailsOKLogDetailsItemSite) Reset() {
	var v GetCallLogDetailsOKLogDetailsItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallLogDetailsOKLogDetailsItemSite) SetTo(v GetCallLogDetailsOKLogDetailsItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallLogDetailsOKLogDetailsItemSite) Get() (v GetCallLogDetailsOKLogDetailsItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallLogDetailsOKLogDetailsItemSite) Or(d GetCallLogDetailsOKLogDetailsItemSite) GetCallLogDetailsOKLogDetailsItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallLogMetricsDetailsOKCallee returns new OptGetCallLogMetricsDetailsOKCallee with value set to v.
func NewOptGetCallLogMetricsDetailsOKCallee(v GetCallLogMetricsDetailsOKCallee) OptGetCallLogMetricsDetailsOKCallee {
	return OptGetCallLogMetricsDetailsOKCallee{
		Value: v,
		Set:   true,
	}
}

// OptGetCallLogMetricsDetailsOKCallee is optional GetCallLogMetricsDetailsOKCallee.
type OptGetCallLogMetricsDetailsOKCallee struct {
	Value GetCallLogMetricsDetailsOKCallee
	Set   bool
}

// IsSet returns true if OptGetCallLogMetricsDetailsOKCallee was set.
func (o OptGetCallLogMetricsDetailsOKCallee) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallLogMetricsDetailsOKCallee) Reset() {
	var v GetCallLogMetricsDetailsOKCallee
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallLogMetricsDetailsOKCallee) SetTo(v GetCallLogMetricsDetailsOKCallee) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallLogMetricsDetailsOKCallee) Get() (v GetCallLogMetricsDetailsOKCallee, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallLogMetricsDetailsOKCallee) Or(d GetCallLogMetricsDetailsOKCallee) GetCallLogMetricsDetailsOKCallee {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallLogMetricsDetailsOKCaller returns new OptGetCallLogMetricsDetailsOKCaller with value set to v.
func NewOptGetCallLogMetricsDetailsOKCaller(v GetCallLogMetricsDetailsOKCaller) OptGetCallLogMetricsDetailsOKCaller {
	return OptGetCallLogMetricsDetailsOKCaller{
		Value: v,
		Set:   true,
	}
}

// OptGetCallLogMetricsDetailsOKCaller is optional GetCallLogMetricsDetailsOKCaller.
type OptGetCallLogMetricsDetailsOKCaller struct {
	Value GetCallLogMetricsDetailsOKCaller
	Set   bool
}

// IsSet returns true if OptGetCallLogMetricsDetailsOKCaller was set.
func (o OptGetCallLogMetricsDetailsOKCaller) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallLogMetricsDetailsOKCaller) Reset() {
	var v GetCallLogMetricsDetailsOKCaller
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallLogMetricsDetailsOKCaller) SetTo(v GetCallLogMetricsDetailsOKCaller) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallLogMetricsDetailsOKCaller) Get() (v GetCallLogMetricsDetailsOKCaller, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallLogMetricsDetailsOKCaller) Or(d GetCallLogMetricsDetailsOKCaller) GetCallLogMetricsDetailsOKCaller {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallQoSOKCalleeQos returns new OptGetCallQoSOKCalleeQos with value set to v.
func NewOptGetCallQoSOKCalleeQos(v GetCallQoSOKCalleeQos) OptGetCallQoSOKCalleeQos {
	return OptGetCallQoSOKCalleeQos{
		Value: v,
		Set:   true,
	}
}

// OptGetCallQoSOKCalleeQos is optional GetCallQoSOKCalleeQos.
type OptGetCallQoSOKCalleeQos struct {
	Value GetCallQoSOKCalleeQos
	Set   bool
}

// IsSet returns true if OptGetCallQoSOKCalleeQos was set.
func (o OptGetCallQoSOKCalleeQos) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallQoSOKCalleeQos) Reset() {
	var v GetCallQoSOKCalleeQos
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallQoSOKCalleeQos) SetTo(v GetCallQoSOKCalleeQos) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallQoSOKCalleeQos) Get() (v GetCallQoSOKCalleeQos, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallQoSOKCalleeQos) Or(d GetCallQoSOKCalleeQos) GetCallQoSOKCalleeQos {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallQoSOKCalleeQosReceivingItemQos returns new OptGetCallQoSOKCalleeQosReceivingItemQos with value set to v.
func NewOptGetCallQoSOKCalleeQosReceivingItemQos(v GetCallQoSOKCalleeQosReceivingItemQos) OptGetCallQoSOKCalleeQosReceivingItemQos {
	return OptGetCallQoSOKCalleeQosReceivingItemQos{
		Value: v,
		Set:   true,
	}
}

// OptGetCallQoSOKCalleeQosReceivingItemQos is optional GetCallQoSOKCalleeQosReceivingItemQos.
type OptGetCallQoSOKCalleeQosReceivingItemQos struct {
	Value GetCallQoSOKCalleeQosReceivingItemQos
	Set   bool
}

// IsSet returns true if OptGetCallQoSOKCalleeQosReceivingItemQos was set.
func (o OptGetCallQoSOKCalleeQosReceivingItemQos) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallQoSOKCalleeQosReceivingItemQos) Reset() {
	var v GetCallQoSOKCalleeQosReceivingItemQos
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallQoSOKCalleeQosReceivingItemQos) SetTo(v GetCallQoSOKCalleeQosReceivingItemQos) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallQoSOKCalleeQosReceivingItemQos) Get() (v GetCallQoSOKCalleeQosReceivingItemQos, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallQoSOKCalleeQosReceivingItemQos) Or(d GetCallQoSOKCalleeQosReceivingItemQos) GetCallQoSOKCalleeQosReceivingItemQos {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallQoSOKCalleeQosSendingItemQos returns new OptGetCallQoSOKCalleeQosSendingItemQos with value set to v.
func NewOptGetCallQoSOKCalleeQosSendingItemQos(v GetCallQoSOKCalleeQosSendingItemQos) OptGetCallQoSOKCalleeQosSendingItemQos {
	return OptGetCallQoSOKCalleeQosSendingItemQos{
		Value: v,
		Set:   true,
	}
}

// OptGetCallQoSOKCalleeQosSendingItemQos is optional GetCallQoSOKCalleeQosSendingItemQos.
type OptGetCallQoSOKCalleeQosSendingItemQos struct {
	Value GetCallQoSOKCalleeQosSendingItemQos
	Set   bool
}

// IsSet returns true if OptGetCallQoSOKCalleeQosSendingItemQos was set.
func (o OptGetCallQoSOKCalleeQosSendingItemQos) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallQoSOKCalleeQosSendingItemQos) Reset() {
	var v GetCallQoSOKCalleeQosSendingItemQos
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallQoSOKCalleeQosSendingItemQos) SetTo(v GetCallQoSOKCalleeQosSendingItemQos) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallQoSOKCalleeQosSendingItemQos) Get() (v GetCallQoSOKCalleeQosSendingItemQos, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallQoSOKCalleeQosSendingItemQos) Or(d GetCallQoSOKCalleeQosSendingItemQos) GetCallQoSOKCalleeQosSendingItemQos {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallQoSOKCallerQos returns new OptGetCallQoSOKCallerQos with value set to v.
func NewOptGetCallQoSOKCallerQos(v GetCallQoSOKCallerQos) OptGetCallQoSOKCallerQos {
	return OptGetCallQoSOKCallerQos{
		Value: v,
		Set:   true,
	}
}

// OptGetCallQoSOKCallerQos is optional GetCallQoSOKCallerQos.
type OptGetCallQoSOKCallerQos struct {
	Value GetCallQoSOKCallerQos
	Set   bool
}

// IsSet returns true if OptGetCallQoSOKCallerQos was set.
func (o OptGetCallQoSOKCallerQos) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallQoSOKCallerQos) Reset() {
	var v GetCallQoSOKCallerQos
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallQoSOKCallerQos) SetTo(v GetCallQoSOKCallerQos) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallQoSOKCallerQos) Get() (v GetCallQoSOKCallerQos, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallQoSOKCallerQos) Or(d GetCallQoSOKCallerQos) GetCallQoSOKCallerQos {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallQoSOKCallerQosReceivingItemQos returns new OptGetCallQoSOKCallerQosReceivingItemQos with value set to v.
func NewOptGetCallQoSOKCallerQosReceivingItemQos(v GetCallQoSOKCallerQosReceivingItemQos) OptGetCallQoSOKCallerQosReceivingItemQos {
	return OptGetCallQoSOKCallerQosReceivingItemQos{
		Value: v,
		Set:   true,
	}
}

// OptGetCallQoSOKCallerQosReceivingItemQos is optional GetCallQoSOKCallerQosReceivingItemQos.
type OptGetCallQoSOKCallerQosReceivingItemQos struct {
	Value GetCallQoSOKCallerQosReceivingItemQos
	Set   bool
}

// IsSet returns true if OptGetCallQoSOKCallerQosReceivingItemQos was set.
func (o OptGetCallQoSOKCallerQosReceivingItemQos) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallQoSOKCallerQosReceivingItemQos) Reset() {
	var v GetCallQoSOKCallerQosReceivingItemQos
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallQoSOKCallerQosReceivingItemQos) SetTo(v GetCallQoSOKCallerQosReceivingItemQos) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallQoSOKCallerQosReceivingItemQos) Get() (v GetCallQoSOKCallerQosReceivingItemQos, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallQoSOKCallerQosReceivingItemQos) Or(d GetCallQoSOKCallerQosReceivingItemQos) GetCallQoSOKCallerQosReceivingItemQos {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCallQoSOKCallerQosSendingItemQos returns new OptGetCallQoSOKCallerQosSendingItemQos with value set to v.
func NewOptGetCallQoSOKCallerQosSendingItemQos(v GetCallQoSOKCallerQosSendingItemQos) OptGetCallQoSOKCallerQosSendingItemQos {
	return OptGetCallQoSOKCallerQosSendingItemQos{
		Value: v,
		Set:   true,
	}
}

// OptGetCallQoSOKCallerQosSendingItemQos is optional GetCallQoSOKCallerQosSendingItemQos.
type OptGetCallQoSOKCallerQosSendingItemQos struct {
	Value GetCallQoSOKCallerQosSendingItemQos
	Set   bool
}

// IsSet returns true if OptGetCallQoSOKCallerQosSendingItemQos was set.
func (o OptGetCallQoSOKCallerQosSendingItemQos) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCallQoSOKCallerQosSendingItemQos) Reset() {
	var v GetCallQoSOKCallerQosSendingItemQos
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCallQoSOKCallerQosSendingItemQos) SetTo(v GetCallQoSOKCallerQosSendingItemQos) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCallQoSOKCallerQosSendingItemQos) Get() (v GetCallQoSOKCallerQosSendingItemQos, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCallQoSOKCallerQosSendingItemQos) Or(d GetCallQoSOKCallerQosSendingItemQos) GetCallQoSOKCallerQosSendingItemQos {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetCommonAreaSettingsOKDeskPhonesItemHotDesking returns new OptGetCommonAreaSettingsOKDeskPhonesItemHotDesking with value set to v.
func NewOptGetCommonAreaSettingsOKDeskPhonesItemHotDesking(v GetCommonAreaSettingsOKDeskPhonesItemHotDesking) OptGetCommonAreaSettingsOKDeskPhonesItemHotDesking {
	return OptGetCommonAreaSettingsOKDeskPhonesItemHotDesking{
		Value: v,
		Set:   true,
	}
}

// OptGetCommonAreaSettingsOKDeskPhonesItemHotDesking is optional GetCommonAreaSettingsOKDeskPhonesItemHotDesking.
type OptGetCommonAreaSettingsOKDeskPhonesItemHotDesking struct {
	Value GetCommonAreaSettingsOKDeskPhonesItemHotDesking
	Set   bool
}

// IsSet returns true if OptGetCommonAreaSettingsOKDeskPhonesItemHotDesking was set.
func (o OptGetCommonAreaSettingsOKDeskPhonesItemHotDesking) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetCommonAreaSettingsOKDeskPhonesItemHotDesking) Reset() {
	var v GetCommonAreaSettingsOKDeskPhonesItemHotDesking
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetCommonAreaSettingsOKDeskPhonesItemHotDesking) SetTo(v GetCommonAreaSettingsOKDeskPhonesItemHotDesking) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetCommonAreaSettingsOKDeskPhonesItemHotDesking) Get() (v GetCommonAreaSettingsOKDeskPhonesItemHotDesking, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetCommonAreaSettingsOKDeskPhonesItemHotDesking) Or(d GetCommonAreaSettingsOKDeskPhonesItemHotDesking) GetCommonAreaSettingsOKDeskPhonesItemHotDesking {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetEmergencyAddressOKOwner returns new OptGetEmergencyAddressOKOwner with value set to v.
func NewOptGetEmergencyAddressOKOwner(v GetEmergencyAddressOKOwner) OptGetEmergencyAddressOKOwner {
	return OptGetEmergencyAddressOKOwner{
		Value: v,
		Set:   true,
	}
}

// OptGetEmergencyAddressOKOwner is optional GetEmergencyAddressOKOwner.
type OptGetEmergencyAddressOKOwner struct {
	Value GetEmergencyAddressOKOwner
	Set   bool
}

// IsSet returns true if OptGetEmergencyAddressOKOwner was set.
func (o OptGetEmergencyAddressOKOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetEmergencyAddressOKOwner) Reset() {
	var v GetEmergencyAddressOKOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetEmergencyAddressOKOwner) SetTo(v GetEmergencyAddressOKOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetEmergencyAddressOKOwner) Get() (v GetEmergencyAddressOKOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetEmergencyAddressOKOwner) Or(d GetEmergencyAddressOKOwner) GetEmergencyAddressOKOwner {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetEmergencyAddressOKSite returns new OptGetEmergencyAddressOKSite with value set to v.
func NewOptGetEmergencyAddressOKSite(v GetEmergencyAddressOKSite) OptGetEmergencyAddressOKSite {
	return OptGetEmergencyAddressOKSite{
		Value: v,
		Set:   true,
	}
}

// OptGetEmergencyAddressOKSite is optional GetEmergencyAddressOKSite.
type OptGetEmergencyAddressOKSite struct {
	Value GetEmergencyAddressOKSite
	Set   bool
}

// IsSet returns true if OptGetEmergencyAddressOKSite was set.
func (o OptGetEmergencyAddressOKSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetEmergencyAddressOKSite) Reset() {
	var v GetEmergencyAddressOKSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetEmergencyAddressOKSite) SetTo(v GetEmergencyAddressOKSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetEmergencyAddressOKSite) Get() (v GetEmergencyAddressOKSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetEmergencyAddressOKSite) Or(d GetEmergencyAddressOKSite) GetEmergencyAddressOKSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGCPOKPlayIncomingCallsSound returns new OptGetGCPOKPlayIncomingCallsSound with value set to v.
func NewOptGetGCPOKPlayIncomingCallsSound(v GetGCPOKPlayIncomingCallsSound) OptGetGCPOKPlayIncomingCallsSound {
	return OptGetGCPOKPlayIncomingCallsSound{
		Value: v,
		Set:   true,
	}
}

// OptGetGCPOKPlayIncomingCallsSound is optional GetGCPOKPlayIncomingCallsSound.
type OptGetGCPOKPlayIncomingCallsSound struct {
	Value GetGCPOKPlayIncomingCallsSound
	Set   bool
}

// IsSet returns true if OptGetGCPOKPlayIncomingCallsSound was set.
func (o OptGetGCPOKPlayIncomingCallsSound) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGCPOKPlayIncomingCallsSound) Reset() {
	var v GetGCPOKPlayIncomingCallsSound
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGCPOKPlayIncomingCallsSound) SetTo(v GetGCPOKPlayIncomingCallsSound) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGCPOKPlayIncomingCallsSound) Get() (v GetGCPOKPlayIncomingCallsSound, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGCPOKPlayIncomingCallsSound) Or(d GetGCPOKPlayIncomingCallsSound) GetGCPOKPlayIncomingCallsSound {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGCPOKSite returns new OptGetGCPOKSite with value set to v.
func NewOptGetGCPOKSite(v GetGCPOKSite) OptGetGCPOKSite {
	return OptGetGCPOKSite{
		Value: v,
		Set:   true,
	}
}

// OptGetGCPOKSite is optional GetGCPOKSite.
type OptGetGCPOKSite struct {
	Value GetGCPOKSite
	Set   bool
}

// IsSet returns true if OptGetGCPOKSite was set.
func (o OptGetGCPOKSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGCPOKSite) Reset() {
	var v GetGCPOKSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGCPOKSite) SetTo(v GetGCPOKSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGCPOKSite) Get() (v GetGCPOKSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGCPOKSite) Or(d GetGCPOKSite) GetGCPOKSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKAdHocCallRecording returns new OptGetGroupPhoneSettingsOKAdHocCallRecording with value set to v.
func NewOptGetGroupPhoneSettingsOKAdHocCallRecording(v GetGroupPhoneSettingsOKAdHocCallRecording) OptGetGroupPhoneSettingsOKAdHocCallRecording {
	return OptGetGroupPhoneSettingsOKAdHocCallRecording{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKAdHocCallRecording is optional GetGroupPhoneSettingsOKAdHocCallRecording.
type OptGetGroupPhoneSettingsOKAdHocCallRecording struct {
	Value GetGroupPhoneSettingsOKAdHocCallRecording
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKAdHocCallRecording was set.
func (o OptGetGroupPhoneSettingsOKAdHocCallRecording) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKAdHocCallRecording) Reset() {
	var v GetGroupPhoneSettingsOKAdHocCallRecording
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKAdHocCallRecording) SetTo(v GetGroupPhoneSettingsOKAdHocCallRecording) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKAdHocCallRecording) Get() (v GetGroupPhoneSettingsOKAdHocCallRecording, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKAdHocCallRecording) Or(d GetGroupPhoneSettingsOKAdHocCallRecording) GetGroupPhoneSettingsOKAdHocCallRecording {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone returns new OptGetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone with value set to v.
func NewOptGetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone(v GetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone) OptGetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone {
	return OptGetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone is optional GetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone.
type OptGetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone struct {
	Value GetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone was set.
func (o OptGetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone) Reset() {
	var v GetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone) SetTo(v GetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone) Get() (v GetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone) Or(d GetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone) GetGroupPhoneSettingsOKAdHocCallRecordingPlayRecordingBeepTone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKAdvancedEncryption returns new OptGetGroupPhoneSettingsOKAdvancedEncryption with value set to v.
func NewOptGetGroupPhoneSettingsOKAdvancedEncryption(v GetGroupPhoneSettingsOKAdvancedEncryption) OptGetGroupPhoneSettingsOKAdvancedEncryption {
	return OptGetGroupPhoneSettingsOKAdvancedEncryption{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKAdvancedEncryption is optional GetGroupPhoneSettingsOKAdvancedEncryption.
type OptGetGroupPhoneSettingsOKAdvancedEncryption struct {
	Value GetGroupPhoneSettingsOKAdvancedEncryption
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKAdvancedEncryption was set.
func (o OptGetGroupPhoneSettingsOKAdvancedEncryption) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKAdvancedEncryption) Reset() {
	var v GetGroupPhoneSettingsOKAdvancedEncryption
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKAdvancedEncryption) SetTo(v GetGroupPhoneSettingsOKAdvancedEncryption) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKAdvancedEncryption) Get() (v GetGroupPhoneSettingsOKAdvancedEncryption, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKAdvancedEncryption) Or(d GetGroupPhoneSettingsOKAdvancedEncryption) GetGroupPhoneSettingsOKAdvancedEncryption {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKAllowedCallLocations returns new OptGetGroupPhoneSettingsOKAllowedCallLocations with value set to v.
func NewOptGetGroupPhoneSettingsOKAllowedCallLocations(v GetGroupPhoneSettingsOKAllowedCallLocations) OptGetGroupPhoneSettingsOKAllowedCallLocations {
	return OptGetGroupPhoneSettingsOKAllowedCallLocations{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKAllowedCallLocations is optional GetGroupPhoneSettingsOKAllowedCallLocations.
type OptGetGroupPhoneSettingsOKAllowedCallLocations struct {
	Value GetGroupPhoneSettingsOKAllowedCallLocations
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKAllowedCallLocations was set.
func (o OptGetGroupPhoneSettingsOKAllowedCallLocations) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKAllowedCallLocations) Reset() {
	var v GetGroupPhoneSettingsOKAllowedCallLocations
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKAllowedCallLocations) SetTo(v GetGroupPhoneSettingsOKAllowedCallLocations) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKAllowedCallLocations) Get() (v GetGroupPhoneSettingsOKAllowedCallLocations, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKAllowedCallLocations) Or(d GetGroupPhoneSettingsOKAllowedCallLocations) GetGroupPhoneSettingsOKAllowedCallLocations {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKAudioIntercom returns new OptGetGroupPhoneSettingsOKAudioIntercom with value set to v.
func NewOptGetGroupPhoneSettingsOKAudioIntercom(v GetGroupPhoneSettingsOKAudioIntercom) OptGetGroupPhoneSettingsOKAudioIntercom {
	return OptGetGroupPhoneSettingsOKAudioIntercom{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKAudioIntercom is optional GetGroupPhoneSettingsOKAudioIntercom.
type OptGetGroupPhoneSettingsOKAudioIntercom struct {
	Value GetGroupPhoneSettingsOKAudioIntercom
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKAudioIntercom was set.
func (o OptGetGroupPhoneSettingsOKAudioIntercom) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKAudioIntercom) Reset() {
	var v GetGroupPhoneSettingsOKAudioIntercom
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKAudioIntercom) SetTo(v GetGroupPhoneSettingsOKAudioIntercom) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKAudioIntercom) Get() (v GetGroupPhoneSettingsOKAudioIntercom, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKAudioIntercom) Or(d GetGroupPhoneSettingsOKAudioIntercom) GetGroupPhoneSettingsOKAudioIntercom {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKAutoCallRecording returns new OptGetGroupPhoneSettingsOKAutoCallRecording with value set to v.
func NewOptGetGroupPhoneSettingsOKAutoCallRecording(v GetGroupPhoneSettingsOKAutoCallRecording) OptGetGroupPhoneSettingsOKAutoCallRecording {
	return OptGetGroupPhoneSettingsOKAutoCallRecording{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKAutoCallRecording is optional GetGroupPhoneSettingsOKAutoCallRecording.
type OptGetGroupPhoneSettingsOKAutoCallRecording struct {
	Value GetGroupPhoneSettingsOKAutoCallRecording
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKAutoCallRecording was set.
func (o OptGetGroupPhoneSettingsOKAutoCallRecording) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKAutoCallRecording) Reset() {
	var v GetGroupPhoneSettingsOKAutoCallRecording
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKAutoCallRecording) SetTo(v GetGroupPhoneSettingsOKAutoCallRecording) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKAutoCallRecording) Get() (v GetGroupPhoneSettingsOKAutoCallRecording, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKAutoCallRecording) Or(d GetGroupPhoneSettingsOKAutoCallRecording) GetGroupPhoneSettingsOKAutoCallRecording {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone returns new OptGetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone with value set to v.
func NewOptGetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone(v GetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone) OptGetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone {
	return OptGetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone is optional GetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone.
type OptGetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone struct {
	Value GetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone was set.
func (o OptGetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone) Reset() {
	var v GetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone) SetTo(v GetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone) Get() (v GetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone) Or(d GetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone) GetGroupPhoneSettingsOKAutoCallRecordingPlayRecordingBeepTone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKBlockCallsWithoutCallerID returns new OptGetGroupPhoneSettingsOKBlockCallsWithoutCallerID with value set to v.
func NewOptGetGroupPhoneSettingsOKBlockCallsWithoutCallerID(v GetGroupPhoneSettingsOKBlockCallsWithoutCallerID) OptGetGroupPhoneSettingsOKBlockCallsWithoutCallerID {
	return OptGetGroupPhoneSettingsOKBlockCallsWithoutCallerID{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKBlockCallsWithoutCallerID is optional GetGroupPhoneSettingsOKBlockCallsWithoutCallerID.
type OptGetGroupPhoneSettingsOKBlockCallsWithoutCallerID struct {
	Value GetGroupPhoneSettingsOKBlockCallsWithoutCallerID
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKBlockCallsWithoutCallerID was set.
func (o OptGetGroupPhoneSettingsOKBlockCallsWithoutCallerID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKBlockCallsWithoutCallerID) Reset() {
	var v GetGroupPhoneSettingsOKBlockCallsWithoutCallerID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKBlockCallsWithoutCallerID) SetTo(v GetGroupPhoneSettingsOKBlockCallsWithoutCallerID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKBlockCallsWithoutCallerID) Get() (v GetGroupPhoneSettingsOKBlockCallsWithoutCallerID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKBlockCallsWithoutCallerID) Or(d GetGroupPhoneSettingsOKBlockCallsWithoutCallerID) GetGroupPhoneSettingsOKBlockCallsWithoutCallerID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKBlockExternalCalls returns new OptGetGroupPhoneSettingsOKBlockExternalCalls with value set to v.
func NewOptGetGroupPhoneSettingsOKBlockExternalCalls(v GetGroupPhoneSettingsOKBlockExternalCalls) OptGetGroupPhoneSettingsOKBlockExternalCalls {
	return OptGetGroupPhoneSettingsOKBlockExternalCalls{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKBlockExternalCalls is optional GetGroupPhoneSettingsOKBlockExternalCalls.
type OptGetGroupPhoneSettingsOKBlockExternalCalls struct {
	Value GetGroupPhoneSettingsOKBlockExternalCalls
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKBlockExternalCalls was set.
func (o OptGetGroupPhoneSettingsOKBlockExternalCalls) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKBlockExternalCalls) Reset() {
	var v GetGroupPhoneSettingsOKBlockExternalCalls
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKBlockExternalCalls) SetTo(v GetGroupPhoneSettingsOKBlockExternalCalls) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKBlockExternalCalls) Get() (v GetGroupPhoneSettingsOKBlockExternalCalls, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKBlockExternalCalls) Or(d GetGroupPhoneSettingsOKBlockExternalCalls) GetGroupPhoneSettingsOKBlockExternalCalls {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging returns new OptGetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging with value set to v.
func NewOptGetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging(v GetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging) OptGetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging {
	return OptGetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging is optional GetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging.
type OptGetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging struct {
	Value GetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging was set.
func (o OptGetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging) Reset() {
	var v GetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging) SetTo(v GetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging) Get() (v GetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging) Or(d GetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging) GetGroupPhoneSettingsOKBlockListForInboundCallsAndMessaging {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKCallHandlingForwarding returns new OptGetGroupPhoneSettingsOKCallHandlingForwarding with value set to v.
func NewOptGetGroupPhoneSettingsOKCallHandlingForwarding(v GetGroupPhoneSettingsOKCallHandlingForwarding) OptGetGroupPhoneSettingsOKCallHandlingForwarding {
	return OptGetGroupPhoneSettingsOKCallHandlingForwarding{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKCallHandlingForwarding is optional GetGroupPhoneSettingsOKCallHandlingForwarding.
type OptGetGroupPhoneSettingsOKCallHandlingForwarding struct {
	Value GetGroupPhoneSettingsOKCallHandlingForwarding
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKCallHandlingForwarding was set.
func (o OptGetGroupPhoneSettingsOKCallHandlingForwarding) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKCallHandlingForwarding) Reset() {
	var v GetGroupPhoneSettingsOKCallHandlingForwarding
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKCallHandlingForwarding) SetTo(v GetGroupPhoneSettingsOKCallHandlingForwarding) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKCallHandlingForwarding) Get() (v GetGroupPhoneSettingsOKCallHandlingForwarding, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKCallHandlingForwarding) Or(d GetGroupPhoneSettingsOKCallHandlingForwarding) GetGroupPhoneSettingsOKCallHandlingForwarding {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKCallLiveTranscription returns new OptGetGroupPhoneSettingsOKCallLiveTranscription with value set to v.
func NewOptGetGroupPhoneSettingsOKCallLiveTranscription(v GetGroupPhoneSettingsOKCallLiveTranscription) OptGetGroupPhoneSettingsOKCallLiveTranscription {
	return OptGetGroupPhoneSettingsOKCallLiveTranscription{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKCallLiveTranscription is optional GetGroupPhoneSettingsOKCallLiveTranscription.
type OptGetGroupPhoneSettingsOKCallLiveTranscription struct {
	Value GetGroupPhoneSettingsOKCallLiveTranscription
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKCallLiveTranscription was set.
func (o OptGetGroupPhoneSettingsOKCallLiveTranscription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKCallLiveTranscription) Reset() {
	var v GetGroupPhoneSettingsOKCallLiveTranscription
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKCallLiveTranscription) SetTo(v GetGroupPhoneSettingsOKCallLiveTranscription) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKCallLiveTranscription) Get() (v GetGroupPhoneSettingsOKCallLiveTranscription, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKCallLiveTranscription) Or(d GetGroupPhoneSettingsOKCallLiveTranscription) GetGroupPhoneSettingsOKCallLiveTranscription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt returns new OptGetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt with value set to v.
func NewOptGetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt(v GetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) OptGetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt {
	return OptGetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt is optional GetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt.
type OptGetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt struct {
	Value GetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt was set.
func (o OptGetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) Reset() {
	var v GetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) SetTo(v GetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) Get() (v GetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) Or(d GetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) GetGroupPhoneSettingsOKCallLiveTranscriptionTranscriptionStartPrompt {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKCallOverflow returns new OptGetGroupPhoneSettingsOKCallOverflow with value set to v.
func NewOptGetGroupPhoneSettingsOKCallOverflow(v GetGroupPhoneSettingsOKCallOverflow) OptGetGroupPhoneSettingsOKCallOverflow {
	return OptGetGroupPhoneSettingsOKCallOverflow{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKCallOverflow is optional GetGroupPhoneSettingsOKCallOverflow.
type OptGetGroupPhoneSettingsOKCallOverflow struct {
	Value GetGroupPhoneSettingsOKCallOverflow
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKCallOverflow was set.
func (o OptGetGroupPhoneSettingsOKCallOverflow) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKCallOverflow) Reset() {
	var v GetGroupPhoneSettingsOKCallOverflow
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKCallOverflow) SetTo(v GetGroupPhoneSettingsOKCallOverflow) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKCallOverflow) Get() (v GetGroupPhoneSettingsOKCallOverflow, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKCallOverflow) Or(d GetGroupPhoneSettingsOKCallOverflow) GetGroupPhoneSettingsOKCallOverflow {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKCallPark returns new OptGetGroupPhoneSettingsOKCallPark with value set to v.
func NewOptGetGroupPhoneSettingsOKCallPark(v GetGroupPhoneSettingsOKCallPark) OptGetGroupPhoneSettingsOKCallPark {
	return OptGetGroupPhoneSettingsOKCallPark{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKCallPark is optional GetGroupPhoneSettingsOKCallPark.
type OptGetGroupPhoneSettingsOKCallPark struct {
	Value GetGroupPhoneSettingsOKCallPark
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKCallPark was set.
func (o OptGetGroupPhoneSettingsOKCallPark) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKCallPark) Reset() {
	var v GetGroupPhoneSettingsOKCallPark
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKCallPark) SetTo(v GetGroupPhoneSettingsOKCallPark) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKCallPark) Get() (v GetGroupPhoneSettingsOKCallPark, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKCallPark) Or(d GetGroupPhoneSettingsOKCallPark) GetGroupPhoneSettingsOKCallPark {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKCallParkForwardTo returns new OptGetGroupPhoneSettingsOKCallParkForwardTo with value set to v.
func NewOptGetGroupPhoneSettingsOKCallParkForwardTo(v GetGroupPhoneSettingsOKCallParkForwardTo) OptGetGroupPhoneSettingsOKCallParkForwardTo {
	return OptGetGroupPhoneSettingsOKCallParkForwardTo{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKCallParkForwardTo is optional GetGroupPhoneSettingsOKCallParkForwardTo.
type OptGetGroupPhoneSettingsOKCallParkForwardTo struct {
	Value GetGroupPhoneSettingsOKCallParkForwardTo
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKCallParkForwardTo was set.
func (o OptGetGroupPhoneSettingsOKCallParkForwardTo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKCallParkForwardTo) Reset() {
	var v GetGroupPhoneSettingsOKCallParkForwardTo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKCallParkForwardTo) SetTo(v GetGroupPhoneSettingsOKCallParkForwardTo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKCallParkForwardTo) Get() (v GetGroupPhoneSettingsOKCallParkForwardTo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKCallParkForwardTo) Or(d GetGroupPhoneSettingsOKCallParkForwardTo) GetGroupPhoneSettingsOKCallParkForwardTo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKCallTransferring returns new OptGetGroupPhoneSettingsOKCallTransferring with value set to v.
func NewOptGetGroupPhoneSettingsOKCallTransferring(v GetGroupPhoneSettingsOKCallTransferring) OptGetGroupPhoneSettingsOKCallTransferring {
	return OptGetGroupPhoneSettingsOKCallTransferring{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKCallTransferring is optional GetGroupPhoneSettingsOKCallTransferring.
type OptGetGroupPhoneSettingsOKCallTransferring struct {
	Value GetGroupPhoneSettingsOKCallTransferring
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKCallTransferring was set.
func (o OptGetGroupPhoneSettingsOKCallTransferring) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKCallTransferring) Reset() {
	var v GetGroupPhoneSettingsOKCallTransferring
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKCallTransferring) SetTo(v GetGroupPhoneSettingsOKCallTransferring) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKCallTransferring) Get() (v GetGroupPhoneSettingsOKCallTransferring, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKCallTransferring) Or(d GetGroupPhoneSettingsOKCallTransferring) GetGroupPhoneSettingsOKCallTransferring {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKCheckVoicemailsOverPhone returns new OptGetGroupPhoneSettingsOKCheckVoicemailsOverPhone with value set to v.
func NewOptGetGroupPhoneSettingsOKCheckVoicemailsOverPhone(v GetGroupPhoneSettingsOKCheckVoicemailsOverPhone) OptGetGroupPhoneSettingsOKCheckVoicemailsOverPhone {
	return OptGetGroupPhoneSettingsOKCheckVoicemailsOverPhone{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKCheckVoicemailsOverPhone is optional GetGroupPhoneSettingsOKCheckVoicemailsOverPhone.
type OptGetGroupPhoneSettingsOKCheckVoicemailsOverPhone struct {
	Value GetGroupPhoneSettingsOKCheckVoicemailsOverPhone
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKCheckVoicemailsOverPhone was set.
func (o OptGetGroupPhoneSettingsOKCheckVoicemailsOverPhone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKCheckVoicemailsOverPhone) Reset() {
	var v GetGroupPhoneSettingsOKCheckVoicemailsOverPhone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKCheckVoicemailsOverPhone) SetTo(v GetGroupPhoneSettingsOKCheckVoicemailsOverPhone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKCheckVoicemailsOverPhone) Get() (v GetGroupPhoneSettingsOKCheckVoicemailsOverPhone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKCheckVoicemailsOverPhone) Or(d GetGroupPhoneSettingsOKCheckVoicemailsOverPhone) GetGroupPhoneSettingsOKCheckVoicemailsOverPhone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKDelegation returns new OptGetGroupPhoneSettingsOKDelegation with value set to v.
func NewOptGetGroupPhoneSettingsOKDelegation(v GetGroupPhoneSettingsOKDelegation) OptGetGroupPhoneSettingsOKDelegation {
	return OptGetGroupPhoneSettingsOKDelegation{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKDelegation is optional GetGroupPhoneSettingsOKDelegation.
type OptGetGroupPhoneSettingsOKDelegation struct {
	Value GetGroupPhoneSettingsOKDelegation
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKDelegation was set.
func (o OptGetGroupPhoneSettingsOKDelegation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKDelegation) Reset() {
	var v GetGroupPhoneSettingsOKDelegation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKDelegation) SetTo(v GetGroupPhoneSettingsOKDelegation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKDelegation) Get() (v GetGroupPhoneSettingsOKDelegation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKDelegation) Or(d GetGroupPhoneSettingsOKDelegation) GetGroupPhoneSettingsOKDelegation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKDisplayCallFeedbackSurvey returns new OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurvey with value set to v.
func NewOptGetGroupPhoneSettingsOKDisplayCallFeedbackSurvey(v GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurvey {
	return OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurvey{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurvey is optional GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey.
type OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurvey struct {
	Value GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurvey was set.
func (o OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) Reset() {
	var v GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) SetTo(v GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) Get() (v GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) Or(d GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey) GetGroupPhoneSettingsOKDisplayCallFeedbackSurvey {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration returns new OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration with value set to v.
func NewOptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration(v GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration) OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration {
	return OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration is optional GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration.
type OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration struct {
	Value GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration was set.
func (o OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration) Reset() {
	var v GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration) SetTo(v GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration) Get() (v GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration) Or(d GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration) GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackDuration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos returns new OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos with value set to v.
func NewOptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos(v GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos) OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos {
	return OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos is optional GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos.
type OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos struct {
	Value GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos was set.
func (o OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos) Reset() {
	var v GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos) SetTo(v GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos) Get() (v GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos) Or(d GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos) GetGroupPhoneSettingsOKDisplayCallFeedbackSurveyFeedbackMos {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKE2eEncryption returns new OptGetGroupPhoneSettingsOKE2eEncryption with value set to v.
func NewOptGetGroupPhoneSettingsOKE2eEncryption(v GetGroupPhoneSettingsOKE2eEncryption) OptGetGroupPhoneSettingsOKE2eEncryption {
	return OptGetGroupPhoneSettingsOKE2eEncryption{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKE2eEncryption is optional GetGroupPhoneSettingsOKE2eEncryption.
type OptGetGroupPhoneSettingsOKE2eEncryption struct {
	Value GetGroupPhoneSettingsOKE2eEncryption
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKE2eEncryption was set.
func (o OptGetGroupPhoneSettingsOKE2eEncryption) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKE2eEncryption) Reset() {
	var v GetGroupPhoneSettingsOKE2eEncryption
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKE2eEncryption) SetTo(v GetGroupPhoneSettingsOKE2eEncryption) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKE2eEncryption) Get() (v GetGroupPhoneSettingsOKE2eEncryption, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKE2eEncryption) Or(d GetGroupPhoneSettingsOKE2eEncryption) GetGroupPhoneSettingsOKE2eEncryption {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKElevateToMeeting returns new OptGetGroupPhoneSettingsOKElevateToMeeting with value set to v.
func NewOptGetGroupPhoneSettingsOKElevateToMeeting(v GetGroupPhoneSettingsOKElevateToMeeting) OptGetGroupPhoneSettingsOKElevateToMeeting {
	return OptGetGroupPhoneSettingsOKElevateToMeeting{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKElevateToMeeting is optional GetGroupPhoneSettingsOKElevateToMeeting.
type OptGetGroupPhoneSettingsOKElevateToMeeting struct {
	Value GetGroupPhoneSettingsOKElevateToMeeting
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKElevateToMeeting was set.
func (o OptGetGroupPhoneSettingsOKElevateToMeeting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKElevateToMeeting) Reset() {
	var v GetGroupPhoneSettingsOKElevateToMeeting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKElevateToMeeting) SetTo(v GetGroupPhoneSettingsOKElevateToMeeting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKElevateToMeeting) Get() (v GetGroupPhoneSettingsOKElevateToMeeting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKElevateToMeeting) Or(d GetGroupPhoneSettingsOKElevateToMeeting) GetGroupPhoneSettingsOKElevateToMeeting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKHandOffToRoom returns new OptGetGroupPhoneSettingsOKHandOffToRoom with value set to v.
func NewOptGetGroupPhoneSettingsOKHandOffToRoom(v GetGroupPhoneSettingsOKHandOffToRoom) OptGetGroupPhoneSettingsOKHandOffToRoom {
	return OptGetGroupPhoneSettingsOKHandOffToRoom{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKHandOffToRoom is optional GetGroupPhoneSettingsOKHandOffToRoom.
type OptGetGroupPhoneSettingsOKHandOffToRoom struct {
	Value GetGroupPhoneSettingsOKHandOffToRoom
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKHandOffToRoom was set.
func (o OptGetGroupPhoneSettingsOKHandOffToRoom) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKHandOffToRoom) Reset() {
	var v GetGroupPhoneSettingsOKHandOffToRoom
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKHandOffToRoom) SetTo(v GetGroupPhoneSettingsOKHandOffToRoom) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKHandOffToRoom) Get() (v GetGroupPhoneSettingsOKHandOffToRoom, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKHandOffToRoom) Or(d GetGroupPhoneSettingsOKHandOffToRoom) GetGroupPhoneSettingsOKHandOffToRoom {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKInternationalCalling returns new OptGetGroupPhoneSettingsOKInternationalCalling with value set to v.
func NewOptGetGroupPhoneSettingsOKInternationalCalling(v GetGroupPhoneSettingsOKInternationalCalling) OptGetGroupPhoneSettingsOKInternationalCalling {
	return OptGetGroupPhoneSettingsOKInternationalCalling{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKInternationalCalling is optional GetGroupPhoneSettingsOKInternationalCalling.
type OptGetGroupPhoneSettingsOKInternationalCalling struct {
	Value GetGroupPhoneSettingsOKInternationalCalling
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKInternationalCalling was set.
func (o OptGetGroupPhoneSettingsOKInternationalCalling) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKInternationalCalling) Reset() {
	var v GetGroupPhoneSettingsOKInternationalCalling
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKInternationalCalling) SetTo(v GetGroupPhoneSettingsOKInternationalCalling) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKInternationalCalling) Get() (v GetGroupPhoneSettingsOKInternationalCalling, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKInternationalCalling) Or(d GetGroupPhoneSettingsOKInternationalCalling) GetGroupPhoneSettingsOKInternationalCalling {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKLocalSurvivabilityMode returns new OptGetGroupPhoneSettingsOKLocalSurvivabilityMode with value set to v.
func NewOptGetGroupPhoneSettingsOKLocalSurvivabilityMode(v GetGroupPhoneSettingsOKLocalSurvivabilityMode) OptGetGroupPhoneSettingsOKLocalSurvivabilityMode {
	return OptGetGroupPhoneSettingsOKLocalSurvivabilityMode{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKLocalSurvivabilityMode is optional GetGroupPhoneSettingsOKLocalSurvivabilityMode.
type OptGetGroupPhoneSettingsOKLocalSurvivabilityMode struct {
	Value GetGroupPhoneSettingsOKLocalSurvivabilityMode
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKLocalSurvivabilityMode was set.
func (o OptGetGroupPhoneSettingsOKLocalSurvivabilityMode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKLocalSurvivabilityMode) Reset() {
	var v GetGroupPhoneSettingsOKLocalSurvivabilityMode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKLocalSurvivabilityMode) SetTo(v GetGroupPhoneSettingsOKLocalSurvivabilityMode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKLocalSurvivabilityMode) Get() (v GetGroupPhoneSettingsOKLocalSurvivabilityMode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKLocalSurvivabilityMode) Or(d GetGroupPhoneSettingsOKLocalSurvivabilityMode) GetGroupPhoneSettingsOKLocalSurvivabilityMode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKMobileSwitchToCarrier returns new OptGetGroupPhoneSettingsOKMobileSwitchToCarrier with value set to v.
func NewOptGetGroupPhoneSettingsOKMobileSwitchToCarrier(v GetGroupPhoneSettingsOKMobileSwitchToCarrier) OptGetGroupPhoneSettingsOKMobileSwitchToCarrier {
	return OptGetGroupPhoneSettingsOKMobileSwitchToCarrier{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKMobileSwitchToCarrier is optional GetGroupPhoneSettingsOKMobileSwitchToCarrier.
type OptGetGroupPhoneSettingsOKMobileSwitchToCarrier struct {
	Value GetGroupPhoneSettingsOKMobileSwitchToCarrier
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKMobileSwitchToCarrier was set.
func (o OptGetGroupPhoneSettingsOKMobileSwitchToCarrier) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKMobileSwitchToCarrier) Reset() {
	var v GetGroupPhoneSettingsOKMobileSwitchToCarrier
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKMobileSwitchToCarrier) SetTo(v GetGroupPhoneSettingsOKMobileSwitchToCarrier) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKMobileSwitchToCarrier) Get() (v GetGroupPhoneSettingsOKMobileSwitchToCarrier, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKMobileSwitchToCarrier) Or(d GetGroupPhoneSettingsOKMobileSwitchToCarrier) GetGroupPhoneSettingsOKMobileSwitchToCarrier {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKOutboundCalling returns new OptGetGroupPhoneSettingsOKOutboundCalling with value set to v.
func NewOptGetGroupPhoneSettingsOKOutboundCalling(v GetGroupPhoneSettingsOKOutboundCalling) OptGetGroupPhoneSettingsOKOutboundCalling {
	return OptGetGroupPhoneSettingsOKOutboundCalling{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKOutboundCalling is optional GetGroupPhoneSettingsOKOutboundCalling.
type OptGetGroupPhoneSettingsOKOutboundCalling struct {
	Value GetGroupPhoneSettingsOKOutboundCalling
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKOutboundCalling was set.
func (o OptGetGroupPhoneSettingsOKOutboundCalling) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKOutboundCalling) Reset() {
	var v GetGroupPhoneSettingsOKOutboundCalling
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKOutboundCalling) SetTo(v GetGroupPhoneSettingsOKOutboundCalling) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKOutboundCalling) Get() (v GetGroupPhoneSettingsOKOutboundCalling, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKOutboundCalling) Or(d GetGroupPhoneSettingsOKOutboundCalling) GetGroupPhoneSettingsOKOutboundCalling {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKOutboundSMS returns new OptGetGroupPhoneSettingsOKOutboundSMS with value set to v.
func NewOptGetGroupPhoneSettingsOKOutboundSMS(v GetGroupPhoneSettingsOKOutboundSMS) OptGetGroupPhoneSettingsOKOutboundSMS {
	return OptGetGroupPhoneSettingsOKOutboundSMS{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKOutboundSMS is optional GetGroupPhoneSettingsOKOutboundSMS.
type OptGetGroupPhoneSettingsOKOutboundSMS struct {
	Value GetGroupPhoneSettingsOKOutboundSMS
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKOutboundSMS was set.
func (o OptGetGroupPhoneSettingsOKOutboundSMS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKOutboundSMS) Reset() {
	var v GetGroupPhoneSettingsOKOutboundSMS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKOutboundSMS) SetTo(v GetGroupPhoneSettingsOKOutboundSMS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKOutboundSMS) Get() (v GetGroupPhoneSettingsOKOutboundSMS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKOutboundSMS) Or(d GetGroupPhoneSettingsOKOutboundSMS) GetGroupPhoneSettingsOKOutboundSMS {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKPeerToPeerMedia returns new OptGetGroupPhoneSettingsOKPeerToPeerMedia with value set to v.
func NewOptGetGroupPhoneSettingsOKPeerToPeerMedia(v GetGroupPhoneSettingsOKPeerToPeerMedia) OptGetGroupPhoneSettingsOKPeerToPeerMedia {
	return OptGetGroupPhoneSettingsOKPeerToPeerMedia{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKPeerToPeerMedia is optional GetGroupPhoneSettingsOKPeerToPeerMedia.
type OptGetGroupPhoneSettingsOKPeerToPeerMedia struct {
	Value GetGroupPhoneSettingsOKPeerToPeerMedia
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKPeerToPeerMedia was set.
func (o OptGetGroupPhoneSettingsOKPeerToPeerMedia) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKPeerToPeerMedia) Reset() {
	var v GetGroupPhoneSettingsOKPeerToPeerMedia
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKPeerToPeerMedia) SetTo(v GetGroupPhoneSettingsOKPeerToPeerMedia) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKPeerToPeerMedia) Get() (v GetGroupPhoneSettingsOKPeerToPeerMedia, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKPeerToPeerMedia) Or(d GetGroupPhoneSettingsOKPeerToPeerMedia) GetGroupPhoneSettingsOKPeerToPeerMedia {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKPersonalAudioLibrary returns new OptGetGroupPhoneSettingsOKPersonalAudioLibrary with value set to v.
func NewOptGetGroupPhoneSettingsOKPersonalAudioLibrary(v GetGroupPhoneSettingsOKPersonalAudioLibrary) OptGetGroupPhoneSettingsOKPersonalAudioLibrary {
	return OptGetGroupPhoneSettingsOKPersonalAudioLibrary{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKPersonalAudioLibrary is optional GetGroupPhoneSettingsOKPersonalAudioLibrary.
type OptGetGroupPhoneSettingsOKPersonalAudioLibrary struct {
	Value GetGroupPhoneSettingsOKPersonalAudioLibrary
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKPersonalAudioLibrary was set.
func (o OptGetGroupPhoneSettingsOKPersonalAudioLibrary) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKPersonalAudioLibrary) Reset() {
	var v GetGroupPhoneSettingsOKPersonalAudioLibrary
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKPersonalAudioLibrary) SetTo(v GetGroupPhoneSettingsOKPersonalAudioLibrary) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKPersonalAudioLibrary) Get() (v GetGroupPhoneSettingsOKPersonalAudioLibrary, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKPersonalAudioLibrary) Or(d GetGroupPhoneSettingsOKPersonalAudioLibrary) GetGroupPhoneSettingsOKPersonalAudioLibrary {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKRestrictedCallHours returns new OptGetGroupPhoneSettingsOKRestrictedCallHours with value set to v.
func NewOptGetGroupPhoneSettingsOKRestrictedCallHours(v GetGroupPhoneSettingsOKRestrictedCallHours) OptGetGroupPhoneSettingsOKRestrictedCallHours {
	return OptGetGroupPhoneSettingsOKRestrictedCallHours{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKRestrictedCallHours is optional GetGroupPhoneSettingsOKRestrictedCallHours.
type OptGetGroupPhoneSettingsOKRestrictedCallHours struct {
	Value GetGroupPhoneSettingsOKRestrictedCallHours
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKRestrictedCallHours was set.
func (o OptGetGroupPhoneSettingsOKRestrictedCallHours) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKRestrictedCallHours) Reset() {
	var v GetGroupPhoneSettingsOKRestrictedCallHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKRestrictedCallHours) SetTo(v GetGroupPhoneSettingsOKRestrictedCallHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKRestrictedCallHours) Get() (v GetGroupPhoneSettingsOKRestrictedCallHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKRestrictedCallHours) Or(d GetGroupPhoneSettingsOKRestrictedCallHours) GetGroupPhoneSettingsOKRestrictedCallHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKRestrictedCallHoursTimeZone returns new OptGetGroupPhoneSettingsOKRestrictedCallHoursTimeZone with value set to v.
func NewOptGetGroupPhoneSettingsOKRestrictedCallHoursTimeZone(v GetGroupPhoneSettingsOKRestrictedCallHoursTimeZone) OptGetGroupPhoneSettingsOKRestrictedCallHoursTimeZone {
	return OptGetGroupPhoneSettingsOKRestrictedCallHoursTimeZone{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKRestrictedCallHoursTimeZone is optional GetGroupPhoneSettingsOKRestrictedCallHoursTimeZone.
type OptGetGroupPhoneSettingsOKRestrictedCallHoursTimeZone struct {
	Value GetGroupPhoneSettingsOKRestrictedCallHoursTimeZone
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKRestrictedCallHoursTimeZone was set.
func (o OptGetGroupPhoneSettingsOKRestrictedCallHoursTimeZone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKRestrictedCallHoursTimeZone) Reset() {
	var v GetGroupPhoneSettingsOKRestrictedCallHoursTimeZone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKRestrictedCallHoursTimeZone) SetTo(v GetGroupPhoneSettingsOKRestrictedCallHoursTimeZone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKRestrictedCallHoursTimeZone) Get() (v GetGroupPhoneSettingsOKRestrictedCallHoursTimeZone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKRestrictedCallHoursTimeZone) Or(d GetGroupPhoneSettingsOKRestrictedCallHoursTimeZone) GetGroupPhoneSettingsOKRestrictedCallHoursTimeZone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKSMS returns new OptGetGroupPhoneSettingsOKSMS with value set to v.
func NewOptGetGroupPhoneSettingsOKSMS(v GetGroupPhoneSettingsOKSMS) OptGetGroupPhoneSettingsOKSMS {
	return OptGetGroupPhoneSettingsOKSMS{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKSMS is optional GetGroupPhoneSettingsOKSMS.
type OptGetGroupPhoneSettingsOKSMS struct {
	Value GetGroupPhoneSettingsOKSMS
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKSMS was set.
func (o OptGetGroupPhoneSettingsOKSMS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKSMS) Reset() {
	var v GetGroupPhoneSettingsOKSMS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKSMS) SetTo(v GetGroupPhoneSettingsOKSMS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKSMS) Get() (v GetGroupPhoneSettingsOKSMS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKSMS) Or(d GetGroupPhoneSettingsOKSMS) GetGroupPhoneSettingsOKSMS {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKSMSEtiquetteTool returns new OptGetGroupPhoneSettingsOKSMSEtiquetteTool with value set to v.
func NewOptGetGroupPhoneSettingsOKSMSEtiquetteTool(v GetGroupPhoneSettingsOKSMSEtiquetteTool) OptGetGroupPhoneSettingsOKSMSEtiquetteTool {
	return OptGetGroupPhoneSettingsOKSMSEtiquetteTool{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKSMSEtiquetteTool is optional GetGroupPhoneSettingsOKSMSEtiquetteTool.
type OptGetGroupPhoneSettingsOKSMSEtiquetteTool struct {
	Value GetGroupPhoneSettingsOKSMSEtiquetteTool
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKSMSEtiquetteTool was set.
func (o OptGetGroupPhoneSettingsOKSMSEtiquetteTool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKSMSEtiquetteTool) Reset() {
	var v GetGroupPhoneSettingsOKSMSEtiquetteTool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKSMSEtiquetteTool) SetTo(v GetGroupPhoneSettingsOKSMSEtiquetteTool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKSMSEtiquetteTool) Get() (v GetGroupPhoneSettingsOKSMSEtiquetteTool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKSMSEtiquetteTool) Or(d GetGroupPhoneSettingsOKSMSEtiquetteTool) GetGroupPhoneSettingsOKSMSEtiquetteTool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKSelectOutboundCallerID returns new OptGetGroupPhoneSettingsOKSelectOutboundCallerID with value set to v.
func NewOptGetGroupPhoneSettingsOKSelectOutboundCallerID(v GetGroupPhoneSettingsOKSelectOutboundCallerID) OptGetGroupPhoneSettingsOKSelectOutboundCallerID {
	return OptGetGroupPhoneSettingsOKSelectOutboundCallerID{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKSelectOutboundCallerID is optional GetGroupPhoneSettingsOKSelectOutboundCallerID.
type OptGetGroupPhoneSettingsOKSelectOutboundCallerID struct {
	Value GetGroupPhoneSettingsOKSelectOutboundCallerID
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKSelectOutboundCallerID was set.
func (o OptGetGroupPhoneSettingsOKSelectOutboundCallerID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKSelectOutboundCallerID) Reset() {
	var v GetGroupPhoneSettingsOKSelectOutboundCallerID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKSelectOutboundCallerID) SetTo(v GetGroupPhoneSettingsOKSelectOutboundCallerID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKSelectOutboundCallerID) Get() (v GetGroupPhoneSettingsOKSelectOutboundCallerID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKSelectOutboundCallerID) Or(d GetGroupPhoneSettingsOKSelectOutboundCallerID) GetGroupPhoneSettingsOKSelectOutboundCallerID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail returns new OptGetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail with value set to v.
func NewOptGetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail(v GetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail) OptGetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail {
	return OptGetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail is optional GetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail.
type OptGetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail struct {
	Value GetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail was set.
func (o OptGetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail) Reset() {
	var v GetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail) SetTo(v GetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail) Get() (v GetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail) Or(d GetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail) GetGroupPhoneSettingsOKSharedVoicemailNotificationByEmail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKVoicemail returns new OptGetGroupPhoneSettingsOKVoicemail with value set to v.
func NewOptGetGroupPhoneSettingsOKVoicemail(v GetGroupPhoneSettingsOKVoicemail) OptGetGroupPhoneSettingsOKVoicemail {
	return OptGetGroupPhoneSettingsOKVoicemail{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKVoicemail is optional GetGroupPhoneSettingsOKVoicemail.
type OptGetGroupPhoneSettingsOKVoicemail struct {
	Value GetGroupPhoneSettingsOKVoicemail
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKVoicemail was set.
func (o OptGetGroupPhoneSettingsOKVoicemail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKVoicemail) Reset() {
	var v GetGroupPhoneSettingsOKVoicemail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKVoicemail) SetTo(v GetGroupPhoneSettingsOKVoicemail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKVoicemail) Get() (v GetGroupPhoneSettingsOKVoicemail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKVoicemail) Or(d GetGroupPhoneSettingsOKVoicemail) GetGroupPhoneSettingsOKVoicemail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKVoicemailNotificationByEmail returns new OptGetGroupPhoneSettingsOKVoicemailNotificationByEmail with value set to v.
func NewOptGetGroupPhoneSettingsOKVoicemailNotificationByEmail(v GetGroupPhoneSettingsOKVoicemailNotificationByEmail) OptGetGroupPhoneSettingsOKVoicemailNotificationByEmail {
	return OptGetGroupPhoneSettingsOKVoicemailNotificationByEmail{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKVoicemailNotificationByEmail is optional GetGroupPhoneSettingsOKVoicemailNotificationByEmail.
type OptGetGroupPhoneSettingsOKVoicemailNotificationByEmail struct {
	Value GetGroupPhoneSettingsOKVoicemailNotificationByEmail
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKVoicemailNotificationByEmail was set.
func (o OptGetGroupPhoneSettingsOKVoicemailNotificationByEmail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKVoicemailNotificationByEmail) Reset() {
	var v GetGroupPhoneSettingsOKVoicemailNotificationByEmail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKVoicemailNotificationByEmail) SetTo(v GetGroupPhoneSettingsOKVoicemailNotificationByEmail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKVoicemailNotificationByEmail) Get() (v GetGroupPhoneSettingsOKVoicemailNotificationByEmail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKVoicemailNotificationByEmail) Or(d GetGroupPhoneSettingsOKVoicemailNotificationByEmail) GetGroupPhoneSettingsOKVoicemailNotificationByEmail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKVoicemailTranscription returns new OptGetGroupPhoneSettingsOKVoicemailTranscription with value set to v.
func NewOptGetGroupPhoneSettingsOKVoicemailTranscription(v GetGroupPhoneSettingsOKVoicemailTranscription) OptGetGroupPhoneSettingsOKVoicemailTranscription {
	return OptGetGroupPhoneSettingsOKVoicemailTranscription{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKVoicemailTranscription is optional GetGroupPhoneSettingsOKVoicemailTranscription.
type OptGetGroupPhoneSettingsOKVoicemailTranscription struct {
	Value GetGroupPhoneSettingsOKVoicemailTranscription
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKVoicemailTranscription was set.
func (o OptGetGroupPhoneSettingsOKVoicemailTranscription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKVoicemailTranscription) Reset() {
	var v GetGroupPhoneSettingsOKVoicemailTranscription
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKVoicemailTranscription) SetTo(v GetGroupPhoneSettingsOKVoicemailTranscription) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKVoicemailTranscription) Get() (v GetGroupPhoneSettingsOKVoicemailTranscription, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKVoicemailTranscription) Or(d GetGroupPhoneSettingsOKVoicemailTranscription) GetGroupPhoneSettingsOKVoicemailTranscription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKZoomPhoneOnMobile returns new OptGetGroupPhoneSettingsOKZoomPhoneOnMobile with value set to v.
func NewOptGetGroupPhoneSettingsOKZoomPhoneOnMobile(v GetGroupPhoneSettingsOKZoomPhoneOnMobile) OptGetGroupPhoneSettingsOKZoomPhoneOnMobile {
	return OptGetGroupPhoneSettingsOKZoomPhoneOnMobile{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKZoomPhoneOnMobile is optional GetGroupPhoneSettingsOKZoomPhoneOnMobile.
type OptGetGroupPhoneSettingsOKZoomPhoneOnMobile struct {
	Value GetGroupPhoneSettingsOKZoomPhoneOnMobile
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKZoomPhoneOnMobile was set.
func (o OptGetGroupPhoneSettingsOKZoomPhoneOnMobile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKZoomPhoneOnMobile) Reset() {
	var v GetGroupPhoneSettingsOKZoomPhoneOnMobile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKZoomPhoneOnMobile) SetTo(v GetGroupPhoneSettingsOKZoomPhoneOnMobile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKZoomPhoneOnMobile) Get() (v GetGroupPhoneSettingsOKZoomPhoneOnMobile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKZoomPhoneOnMobile) Or(d GetGroupPhoneSettingsOKZoomPhoneOnMobile) GetGroupPhoneSettingsOKZoomPhoneOnMobile {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetGroupPhoneSettingsOKZoomPhoneOnPwa returns new OptGetGroupPhoneSettingsOKZoomPhoneOnPwa with value set to v.
func NewOptGetGroupPhoneSettingsOKZoomPhoneOnPwa(v GetGroupPhoneSettingsOKZoomPhoneOnPwa) OptGetGroupPhoneSettingsOKZoomPhoneOnPwa {
	return OptGetGroupPhoneSettingsOKZoomPhoneOnPwa{
		Value: v,
		Set:   true,
	}
}

// OptGetGroupPhoneSettingsOKZoomPhoneOnPwa is optional GetGroupPhoneSettingsOKZoomPhoneOnPwa.
type OptGetGroupPhoneSettingsOKZoomPhoneOnPwa struct {
	Value GetGroupPhoneSettingsOKZoomPhoneOnPwa
	Set   bool
}

// IsSet returns true if OptGetGroupPhoneSettingsOKZoomPhoneOnPwa was set.
func (o OptGetGroupPhoneSettingsOKZoomPhoneOnPwa) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetGroupPhoneSettingsOKZoomPhoneOnPwa) Reset() {
	var v GetGroupPhoneSettingsOKZoomPhoneOnPwa
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetGroupPhoneSettingsOKZoomPhoneOnPwa) SetTo(v GetGroupPhoneSettingsOKZoomPhoneOnPwa) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetGroupPhoneSettingsOKZoomPhoneOnPwa) Get() (v GetGroupPhoneSettingsOKZoomPhoneOnPwa, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetGroupPhoneSettingsOKZoomPhoneOnPwa) Or(d GetGroupPhoneSettingsOKZoomPhoneOnPwa) GetGroupPhoneSettingsOKZoomPhoneOnPwa {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetLocationOKElin returns new OptGetLocationOKElin with value set to v.
func NewOptGetLocationOKElin(v GetLocationOKElin) OptGetLocationOKElin {
	return OptGetLocationOKElin{
		Value: v,
		Set:   true,
	}
}

// OptGetLocationOKElin is optional GetLocationOKElin.
type OptGetLocationOKElin struct {
	Value GetLocationOKElin
	Set   bool
}

// IsSet returns true if OptGetLocationOKElin was set.
func (o OptGetLocationOKElin) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetLocationOKElin) Reset() {
	var v GetLocationOKElin
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetLocationOKElin) SetTo(v GetLocationOKElin) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetLocationOKElin) Get() (v GetLocationOKElin, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetLocationOKElin) Or(d GetLocationOKElin) GetLocationOKElin {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetLocationOKEmergencyAddress returns new OptGetLocationOKEmergencyAddress with value set to v.
func NewOptGetLocationOKEmergencyAddress(v GetLocationOKEmergencyAddress) OptGetLocationOKEmergencyAddress {
	return OptGetLocationOKEmergencyAddress{
		Value: v,
		Set:   true,
	}
}

// OptGetLocationOKEmergencyAddress is optional GetLocationOKEmergencyAddress.
type OptGetLocationOKEmergencyAddress struct {
	Value GetLocationOKEmergencyAddress
	Set   bool
}

// IsSet returns true if OptGetLocationOKEmergencyAddress was set.
func (o OptGetLocationOKEmergencyAddress) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetLocationOKEmergencyAddress) Reset() {
	var v GetLocationOKEmergencyAddress
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetLocationOKEmergencyAddress) SetTo(v GetLocationOKEmergencyAddress) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetLocationOKEmergencyAddress) Get() (v GetLocationOKEmergencyAddress, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetLocationOKEmergencyAddress) Or(d GetLocationOKEmergencyAddress) GetLocationOKEmergencyAddress {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetLocationOKSipGroup returns new OptGetLocationOKSipGroup with value set to v.
func NewOptGetLocationOKSipGroup(v GetLocationOKSipGroup) OptGetLocationOKSipGroup {
	return OptGetLocationOKSipGroup{
		Value: v,
		Set:   true,
	}
}

// OptGetLocationOKSipGroup is optional GetLocationOKSipGroup.
type OptGetLocationOKSipGroup struct {
	Value GetLocationOKSipGroup
	Set   bool
}

// IsSet returns true if OptGetLocationOKSipGroup was set.
func (o OptGetLocationOKSipGroup) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetLocationOKSipGroup) Reset() {
	var v GetLocationOKSipGroup
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetLocationOKSipGroup) SetTo(v GetLocationOKSipGroup) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetLocationOKSipGroup) Get() (v GetLocationOKSipGroup, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetLocationOKSipGroup) Or(d GetLocationOKSipGroup) GetLocationOKSipGroup {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetLocationOKSite returns new OptGetLocationOKSite with value set to v.
func NewOptGetLocationOKSite(v GetLocationOKSite) OptGetLocationOKSite {
	return OptGetLocationOKSite{
		Value: v,
		Set:   true,
	}
}

// OptGetLocationOKSite is optional GetLocationOKSite.
type OptGetLocationOKSite struct {
	Value GetLocationOKSite
	Set   bool
}

// IsSet returns true if OptGetLocationOKSite was set.
func (o OptGetLocationOKSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetLocationOKSite) Reset() {
	var v GetLocationOKSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetLocationOKSite) SetTo(v GetLocationOKSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetLocationOKSite) Get() (v GetLocationOKSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetLocationOKSite) Or(d GetLocationOKSite) GetLocationOKSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetMonitoringGroupByIdOKSite returns new OptGetMonitoringGroupByIdOKSite with value set to v.
func NewOptGetMonitoringGroupByIdOKSite(v GetMonitoringGroupByIdOKSite) OptGetMonitoringGroupByIdOKSite {
	return OptGetMonitoringGroupByIdOKSite{
		Value: v,
		Set:   true,
	}
}

// OptGetMonitoringGroupByIdOKSite is optional GetMonitoringGroupByIdOKSite.
type OptGetMonitoringGroupByIdOKSite struct {
	Value GetMonitoringGroupByIdOKSite
	Set   bool
}

// IsSet returns true if OptGetMonitoringGroupByIdOKSite was set.
func (o OptGetMonitoringGroupByIdOKSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetMonitoringGroupByIdOKSite) Reset() {
	var v GetMonitoringGroupByIdOKSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetMonitoringGroupByIdOKSite) SetTo(v GetMonitoringGroupByIdOKSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetMonitoringGroupByIdOKSite) Get() (v GetMonitoringGroupByIdOKSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetMonitoringGroupByIdOKSite) Or(d GetMonitoringGroupByIdOKSite) GetMonitoringGroupByIdOKSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetPhoneNumberDetailsOKAssignee returns new OptGetPhoneNumberDetailsOKAssignee with value set to v.
func NewOptGetPhoneNumberDetailsOKAssignee(v GetPhoneNumberDetailsOKAssignee) OptGetPhoneNumberDetailsOKAssignee {
	return OptGetPhoneNumberDetailsOKAssignee{
		Value: v,
		Set:   true,
	}
}

// OptGetPhoneNumberDetailsOKAssignee is optional GetPhoneNumberDetailsOKAssignee.
type OptGetPhoneNumberDetailsOKAssignee struct {
	Value GetPhoneNumberDetailsOKAssignee
	Set   bool
}

// IsSet returns true if OptGetPhoneNumberDetailsOKAssignee was set.
func (o OptGetPhoneNumberDetailsOKAssignee) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetPhoneNumberDetailsOKAssignee) Reset() {
	var v GetPhoneNumberDetailsOKAssignee
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetPhoneNumberDetailsOKAssignee) SetTo(v GetPhoneNumberDetailsOKAssignee) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetPhoneNumberDetailsOKAssignee) Get() (v GetPhoneNumberDetailsOKAssignee, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetPhoneNumberDetailsOKAssignee) Or(d GetPhoneNumberDetailsOKAssignee) GetPhoneNumberDetailsOKAssignee {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetPhoneNumberDetailsOKAssigneeGreeting returns new OptGetPhoneNumberDetailsOKAssigneeGreeting with value set to v.
func NewOptGetPhoneNumberDetailsOKAssigneeGreeting(v GetPhoneNumberDetailsOKAssigneeGreeting) OptGetPhoneNumberDetailsOKAssigneeGreeting {
	return OptGetPhoneNumberDetailsOKAssigneeGreeting{
		Value: v,
		Set:   true,
	}
}

// OptGetPhoneNumberDetailsOKAssigneeGreeting is optional GetPhoneNumberDetailsOKAssigneeGreeting.
type OptGetPhoneNumberDetailsOKAssigneeGreeting struct {
	Value GetPhoneNumberDetailsOKAssigneeGreeting
	Set   bool
}

// IsSet returns true if OptGetPhoneNumberDetailsOKAssigneeGreeting was set.
func (o OptGetPhoneNumberDetailsOKAssigneeGreeting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetPhoneNumberDetailsOKAssigneeGreeting) Reset() {
	var v GetPhoneNumberDetailsOKAssigneeGreeting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetPhoneNumberDetailsOKAssigneeGreeting) SetTo(v GetPhoneNumberDetailsOKAssigneeGreeting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetPhoneNumberDetailsOKAssigneeGreeting) Get() (v GetPhoneNumberDetailsOKAssigneeGreeting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetPhoneNumberDetailsOKAssigneeGreeting) Or(d GetPhoneNumberDetailsOKAssigneeGreeting) GetPhoneNumberDetailsOKAssigneeGreeting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetPhoneNumberDetailsOKAssigneeOnHoldMusic returns new OptGetPhoneNumberDetailsOKAssigneeOnHoldMusic with value set to v.
func NewOptGetPhoneNumberDetailsOKAssigneeOnHoldMusic(v GetPhoneNumberDetailsOKAssigneeOnHoldMusic) OptGetPhoneNumberDetailsOKAssigneeOnHoldMusic {
	return OptGetPhoneNumberDetailsOKAssigneeOnHoldMusic{
		Value: v,
		Set:   true,
	}
}

// OptGetPhoneNumberDetailsOKAssigneeOnHoldMusic is optional GetPhoneNumberDetailsOKAssigneeOnHoldMusic.
type OptGetPhoneNumberDetailsOKAssigneeOnHoldMusic struct {
	Value GetPhoneNumberDetailsOKAssigneeOnHoldMusic
	Set   bool
}

// IsSet returns true if OptGetPhoneNumberDetailsOKAssigneeOnHoldMusic was set.
func (o OptGetPhoneNumberDetailsOKAssigneeOnHoldMusic) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetPhoneNumberDetailsOKAssigneeOnHoldMusic) Reset() {
	var v GetPhoneNumberDetailsOKAssigneeOnHoldMusic
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetPhoneNumberDetailsOKAssigneeOnHoldMusic) SetTo(v GetPhoneNumberDetailsOKAssigneeOnHoldMusic) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetPhoneNumberDetailsOKAssigneeOnHoldMusic) Get() (v GetPhoneNumberDetailsOKAssigneeOnHoldMusic, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetPhoneNumberDetailsOKAssigneeOnHoldMusic) Or(d GetPhoneNumberDetailsOKAssigneeOnHoldMusic) GetPhoneNumberDetailsOKAssigneeOnHoldMusic {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetPhoneNumberDetailsOKCarrier returns new OptGetPhoneNumberDetailsOKCarrier with value set to v.
func NewOptGetPhoneNumberDetailsOKCarrier(v GetPhoneNumberDetailsOKCarrier) OptGetPhoneNumberDetailsOKCarrier {
	return OptGetPhoneNumberDetailsOKCarrier{
		Value: v,
		Set:   true,
	}
}

// OptGetPhoneNumberDetailsOKCarrier is optional GetPhoneNumberDetailsOKCarrier.
type OptGetPhoneNumberDetailsOKCarrier struct {
	Value GetPhoneNumberDetailsOKCarrier
	Set   bool
}

// IsSet returns true if OptGetPhoneNumberDetailsOKCarrier was set.
func (o OptGetPhoneNumberDetailsOKCarrier) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetPhoneNumberDetailsOKCarrier) Reset() {
	var v GetPhoneNumberDetailsOKCarrier
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetPhoneNumberDetailsOKCarrier) SetTo(v GetPhoneNumberDetailsOKCarrier) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetPhoneNumberDetailsOKCarrier) Get() (v GetPhoneNumberDetailsOKCarrier, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetPhoneNumberDetailsOKCarrier) Or(d GetPhoneNumberDetailsOKCarrier) GetPhoneNumberDetailsOKCarrier {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetPhoneNumberDetailsOKEmergencyAddress returns new OptGetPhoneNumberDetailsOKEmergencyAddress with value set to v.
func NewOptGetPhoneNumberDetailsOKEmergencyAddress(v GetPhoneNumberDetailsOKEmergencyAddress) OptGetPhoneNumberDetailsOKEmergencyAddress {
	return OptGetPhoneNumberDetailsOKEmergencyAddress{
		Value: v,
		Set:   true,
	}
}

// OptGetPhoneNumberDetailsOKEmergencyAddress is optional GetPhoneNumberDetailsOKEmergencyAddress.
type OptGetPhoneNumberDetailsOKEmergencyAddress struct {
	Value GetPhoneNumberDetailsOKEmergencyAddress
	Set   bool
}

// IsSet returns true if OptGetPhoneNumberDetailsOKEmergencyAddress was set.
func (o OptGetPhoneNumberDetailsOKEmergencyAddress) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetPhoneNumberDetailsOKEmergencyAddress) Reset() {
	var v GetPhoneNumberDetailsOKEmergencyAddress
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetPhoneNumberDetailsOKEmergencyAddress) SetTo(v GetPhoneNumberDetailsOKEmergencyAddress) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetPhoneNumberDetailsOKEmergencyAddress) Get() (v GetPhoneNumberDetailsOKEmergencyAddress, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetPhoneNumberDetailsOKEmergencyAddress) Or(d GetPhoneNumberDetailsOKEmergencyAddress) GetPhoneNumberDetailsOKEmergencyAddress {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetPhoneNumberDetailsOKSipGroup returns new OptGetPhoneNumberDetailsOKSipGroup with value set to v.
func NewOptGetPhoneNumberDetailsOKSipGroup(v GetPhoneNumberDetailsOKSipGroup) OptGetPhoneNumberDetailsOKSipGroup {
	return OptGetPhoneNumberDetailsOKSipGroup{
		Value: v,
		Set:   true,
	}
}

// OptGetPhoneNumberDetailsOKSipGroup is optional GetPhoneNumberDetailsOKSipGroup.
type OptGetPhoneNumberDetailsOKSipGroup struct {
	Value GetPhoneNumberDetailsOKSipGroup
	Set   bool
}

// IsSet returns true if OptGetPhoneNumberDetailsOKSipGroup was set.
func (o OptGetPhoneNumberDetailsOKSipGroup) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetPhoneNumberDetailsOKSipGroup) Reset() {
	var v GetPhoneNumberDetailsOKSipGroup
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetPhoneNumberDetailsOKSipGroup) SetTo(v GetPhoneNumberDetailsOKSipGroup) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetPhoneNumberDetailsOKSipGroup) Get() (v GetPhoneNumberDetailsOKSipGroup, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetPhoneNumberDetailsOKSipGroup) Or(d GetPhoneNumberDetailsOKSipGroup) GetPhoneNumberDetailsOKSipGroup {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetPhoneNumberDetailsOKSite returns new OptGetPhoneNumberDetailsOKSite with value set to v.
func NewOptGetPhoneNumberDetailsOKSite(v GetPhoneNumberDetailsOKSite) OptGetPhoneNumberDetailsOKSite {
	return OptGetPhoneNumberDetailsOKSite{
		Value: v,
		Set:   true,
	}
}

// OptGetPhoneNumberDetailsOKSite is optional GetPhoneNumberDetailsOKSite.
type OptGetPhoneNumberDetailsOKSite struct {
	Value GetPhoneNumberDetailsOKSite
	Set   bool
}

// IsSet returns true if OptGetPhoneNumberDetailsOKSite was set.
func (o OptGetPhoneNumberDetailsOKSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetPhoneNumberDetailsOKSite) Reset() {
	var v GetPhoneNumberDetailsOKSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetPhoneNumberDetailsOKSite) SetTo(v GetPhoneNumberDetailsOKSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetPhoneNumberDetailsOKSite) Get() (v GetPhoneNumberDetailsOKSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetPhoneNumberDetailsOKSite) Or(d GetPhoneNumberDetailsOKSite) GetPhoneNumberDetailsOKSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy returns new OptGetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy with value set to v.
func NewOptGetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy(v GetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy) OptGetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy {
	return OptGetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy{
		Value: v,
		Set:   true,
	}
}

// OptGetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy is optional GetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy.
type OptGetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy struct {
	Value GetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy
	Set   bool
}

// IsSet returns true if OptGetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy was set.
func (o OptGetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy) Reset() {
	var v GetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy) SetTo(v GetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy) Get() (v GetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy) Or(d GetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy) GetPhoneRecordingsByCallIdOrCallLogIdOKAcceptedBy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy returns new OptGetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy with value set to v.
func NewOptGetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy(v GetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy) OptGetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy {
	return OptGetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy{
		Value: v,
		Set:   true,
	}
}

// OptGetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy is optional GetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy.
type OptGetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy struct {
	Value GetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy
	Set   bool
}

// IsSet returns true if OptGetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy was set.
func (o OptGetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy) Reset() {
	var v GetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy) SetTo(v GetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy) Get() (v GetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy) Or(d GetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy) GetPhoneRecordingsByCallIdOrCallLogIdOKOutgoingBy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetPhoneRecordingsByCallIdOrCallLogIdOKOwner returns new OptGetPhoneRecordingsByCallIdOrCallLogIdOKOwner with value set to v.
func NewOptGetPhoneRecordingsByCallIdOrCallLogIdOKOwner(v GetPhoneRecordingsByCallIdOrCallLogIdOKOwner) OptGetPhoneRecordingsByCallIdOrCallLogIdOKOwner {
	return OptGetPhoneRecordingsByCallIdOrCallLogIdOKOwner{
		Value: v,
		Set:   true,
	}
}

// OptGetPhoneRecordingsByCallIdOrCallLogIdOKOwner is optional GetPhoneRecordingsByCallIdOrCallLogIdOKOwner.
type OptGetPhoneRecordingsByCallIdOrCallLogIdOKOwner struct {
	Value GetPhoneRecordingsByCallIdOrCallLogIdOKOwner
	Set   bool
}

// IsSet returns true if OptGetPhoneRecordingsByCallIdOrCallLogIdOKOwner was set.
func (o OptGetPhoneRecordingsByCallIdOrCallLogIdOKOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetPhoneRecordingsByCallIdOrCallLogIdOKOwner) Reset() {
	var v GetPhoneRecordingsByCallIdOrCallLogIdOKOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetPhoneRecordingsByCallIdOrCallLogIdOKOwner) SetTo(v GetPhoneRecordingsByCallIdOrCallLogIdOKOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetPhoneRecordingsByCallIdOrCallLogIdOKOwner) Get() (v GetPhoneRecordingsByCallIdOrCallLogIdOKOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetPhoneRecordingsByCallIdOrCallLogIdOKOwner) Or(d GetPhoneRecordingsByCallIdOrCallLogIdOKOwner) GetPhoneRecordingsByCallIdOrCallLogIdOKOwner {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetPhoneRecordingsOKRecordingsItemAcceptedBy returns new OptGetPhoneRecordingsOKRecordingsItemAcceptedBy with value set to v.
func NewOptGetPhoneRecordingsOKRecordingsItemAcceptedBy(v GetPhoneRecordingsOKRecordingsItemAcceptedBy) OptGetPhoneRecordingsOKRecordingsItemAcceptedBy {
	return OptGetPhoneRecordingsOKRecordingsItemAcceptedBy{
		Value: v,
		Set:   true,
	}
}

// OptGetPhoneRecordingsOKRecordingsItemAcceptedBy is optional GetPhoneRecordingsOKRecordingsItemAcceptedBy.
type OptGetPhoneRecordingsOKRecordingsItemAcceptedBy struct {
	Value GetPhoneRecordingsOKRecordingsItemAcceptedBy
	Set   bool
}

// IsSet returns true if OptGetPhoneRecordingsOKRecordingsItemAcceptedBy was set.
func (o OptGetPhoneRecordingsOKRecordingsItemAcceptedBy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetPhoneRecordingsOKRecordingsItemAcceptedBy) Reset() {
	var v GetPhoneRecordingsOKRecordingsItemAcceptedBy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetPhoneRecordingsOKRecordingsItemAcceptedBy) SetTo(v GetPhoneRecordingsOKRecordingsItemAcceptedBy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetPhoneRecordingsOKRecordingsItemAcceptedBy) Get() (v GetPhoneRecordingsOKRecordingsItemAcceptedBy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetPhoneRecordingsOKRecordingsItemAcceptedBy) Or(d GetPhoneRecordingsOKRecordingsItemAcceptedBy) GetPhoneRecordingsOKRecordingsItemAcceptedBy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetPhoneRecordingsOKRecordingsItemOutgoingBy returns new OptGetPhoneRecordingsOKRecordingsItemOutgoingBy with value set to v.
func NewOptGetPhoneRecordingsOKRecordingsItemOutgoingBy(v GetPhoneRecordingsOKRecordingsItemOutgoingBy) OptGetPhoneRecordingsOKRecordingsItemOutgoingBy {
	return OptGetPhoneRecordingsOKRecordingsItemOutgoingBy{
		Value: v,
		Set:   true,
	}
}

// OptGetPhoneRecordingsOKRecordingsItemOutgoingBy is optional GetPhoneRecordingsOKRecordingsItemOutgoingBy.
type OptGetPhoneRecordingsOKRecordingsItemOutgoingBy struct {
	Value GetPhoneRecordingsOKRecordingsItemOutgoingBy
	Set   bool
}

// IsSet returns true if OptGetPhoneRecordingsOKRecordingsItemOutgoingBy was set.
func (o OptGetPhoneRecordingsOKRecordingsItemOutgoingBy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetPhoneRecordingsOKRecordingsItemOutgoingBy) Reset() {
	var v GetPhoneRecordingsOKRecordingsItemOutgoingBy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetPhoneRecordingsOKRecordingsItemOutgoingBy) SetTo(v GetPhoneRecordingsOKRecordingsItemOutgoingBy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetPhoneRecordingsOKRecordingsItemOutgoingBy) Get() (v GetPhoneRecordingsOKRecordingsItemOutgoingBy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetPhoneRecordingsOKRecordingsItemOutgoingBy) Or(d GetPhoneRecordingsOKRecordingsItemOutgoingBy) GetPhoneRecordingsOKRecordingsItemOutgoingBy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetPhoneRecordingsOKRecordingsItemOwner returns new OptGetPhoneRecordingsOKRecordingsItemOwner with value set to v.
func NewOptGetPhoneRecordingsOKRecordingsItemOwner(v GetPhoneRecordingsOKRecordingsItemOwner) OptGetPhoneRecordingsOKRecordingsItemOwner {
	return OptGetPhoneRecordingsOKRecordingsItemOwner{
		Value: v,
		Set:   true,
	}
}

// OptGetPhoneRecordingsOKRecordingsItemOwner is optional GetPhoneRecordingsOKRecordingsItemOwner.
type OptGetPhoneRecordingsOKRecordingsItemOwner struct {
	Value GetPhoneRecordingsOKRecordingsItemOwner
	Set   bool
}

// IsSet returns true if OptGetPhoneRecordingsOKRecordingsItemOwner was set.
func (o OptGetPhoneRecordingsOKRecordingsItemOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetPhoneRecordingsOKRecordingsItemOwner) Reset() {
	var v GetPhoneRecordingsOKRecordingsItemOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetPhoneRecordingsOKRecordingsItemOwner) SetTo(v GetPhoneRecordingsOKRecordingsItemOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetPhoneRecordingsOKRecordingsItemOwner) Get() (v GetPhoneRecordingsOKRecordingsItemOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetPhoneRecordingsOKRecordingsItemOwner) Or(d GetPhoneRecordingsOKRecordingsItemOwner) GetPhoneRecordingsOKRecordingsItemOwner {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetPhoneRecordingsOKRecordingsItemSite returns new OptGetPhoneRecordingsOKRecordingsItemSite with value set to v.
func NewOptGetPhoneRecordingsOKRecordingsItemSite(v GetPhoneRecordingsOKRecordingsItemSite) OptGetPhoneRecordingsOKRecordingsItemSite {
	return OptGetPhoneRecordingsOKRecordingsItemSite{
		Value: v,
		Set:   true,
	}
}

// OptGetPhoneRecordingsOKRecordingsItemSite is optional GetPhoneRecordingsOKRecordingsItemSite.
type OptGetPhoneRecordingsOKRecordingsItemSite struct {
	Value GetPhoneRecordingsOKRecordingsItemSite
	Set   bool
}

// IsSet returns true if OptGetPhoneRecordingsOKRecordingsItemSite was set.
func (o OptGetPhoneRecordingsOKRecordingsItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetPhoneRecordingsOKRecordingsItemSite) Reset() {
	var v GetPhoneRecordingsOKRecordingsItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetPhoneRecordingsOKRecordingsItemSite) SetTo(v GetPhoneRecordingsOKRecordingsItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetPhoneRecordingsOKRecordingsItemSite) Get() (v GetPhoneRecordingsOKRecordingsItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetPhoneRecordingsOKRecordingsItemSite) Or(d GetPhoneRecordingsOKRecordingsItemSite) GetPhoneRecordingsOKRecordingsItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetPortedNumbersDetailsOKOriginalBillingInfo returns new OptGetPortedNumbersDetailsOKOriginalBillingInfo with value set to v.
func NewOptGetPortedNumbersDetailsOKOriginalBillingInfo(v GetPortedNumbersDetailsOKOriginalBillingInfo) OptGetPortedNumbersDetailsOKOriginalBillingInfo {
	return OptGetPortedNumbersDetailsOKOriginalBillingInfo{
		Value: v,
		Set:   true,
	}
}

// OptGetPortedNumbersDetailsOKOriginalBillingInfo is optional GetPortedNumbersDetailsOKOriginalBillingInfo.
type OptGetPortedNumbersDetailsOKOriginalBillingInfo struct {
	Value GetPortedNumbersDetailsOKOriginalBillingInfo
	Set   bool
}

// IsSet returns true if OptGetPortedNumbersDetailsOKOriginalBillingInfo was set.
func (o OptGetPortedNumbersDetailsOKOriginalBillingInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetPortedNumbersDetailsOKOriginalBillingInfo) Reset() {
	var v GetPortedNumbersDetailsOKOriginalBillingInfo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetPortedNumbersDetailsOKOriginalBillingInfo) SetTo(v GetPortedNumbersDetailsOKOriginalBillingInfo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetPortedNumbersDetailsOKOriginalBillingInfo) Get() (v GetPortedNumbersDetailsOKOriginalBillingInfo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetPortedNumbersDetailsOKOriginalBillingInfo) Or(d GetPortedNumbersDetailsOKOriginalBillingInfo) GetPortedNumbersDetailsOKOriginalBillingInfo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetPortedNumbersDetailsOKOriginalBillingInfoAddress returns new OptGetPortedNumbersDetailsOKOriginalBillingInfoAddress with value set to v.
func NewOptGetPortedNumbersDetailsOKOriginalBillingInfoAddress(v GetPortedNumbersDetailsOKOriginalBillingInfoAddress) OptGetPortedNumbersDetailsOKOriginalBillingInfoAddress {
	return OptGetPortedNumbersDetailsOKOriginalBillingInfoAddress{
		Value: v,
		Set:   true,
	}
}

// OptGetPortedNumbersDetailsOKOriginalBillingInfoAddress is optional GetPortedNumbersDetailsOKOriginalBillingInfoAddress.
type OptGetPortedNumbersDetailsOKOriginalBillingInfoAddress struct {
	Value GetPortedNumbersDetailsOKOriginalBillingInfoAddress
	Set   bool
}

// IsSet returns true if OptGetPortedNumbersDetailsOKOriginalBillingInfoAddress was set.
func (o OptGetPortedNumbersDetailsOKOriginalBillingInfoAddress) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetPortedNumbersDetailsOKOriginalBillingInfoAddress) Reset() {
	var v GetPortedNumbersDetailsOKOriginalBillingInfoAddress
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetPortedNumbersDetailsOKOriginalBillingInfoAddress) SetTo(v GetPortedNumbersDetailsOKOriginalBillingInfoAddress) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetPortedNumbersDetailsOKOriginalBillingInfoAddress) Get() (v GetPortedNumbersDetailsOKOriginalBillingInfoAddress, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetPortedNumbersDetailsOKOriginalBillingInfoAddress) Or(d GetPortedNumbersDetailsOKOriginalBillingInfoAddress) GetPortedNumbersDetailsOKOriginalBillingInfoAddress {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetRoutingRuleOKRoutingPath returns new OptGetRoutingRuleOKRoutingPath with value set to v.
func NewOptGetRoutingRuleOKRoutingPath(v GetRoutingRuleOKRoutingPath) OptGetRoutingRuleOKRoutingPath {
	return OptGetRoutingRuleOKRoutingPath{
		Value: v,
		Set:   true,
	}
}

// OptGetRoutingRuleOKRoutingPath is optional GetRoutingRuleOKRoutingPath.
type OptGetRoutingRuleOKRoutingPath struct {
	Value GetRoutingRuleOKRoutingPath
	Set   bool
}

// IsSet returns true if OptGetRoutingRuleOKRoutingPath was set.
func (o OptGetRoutingRuleOKRoutingPath) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetRoutingRuleOKRoutingPath) Reset() {
	var v GetRoutingRuleOKRoutingPath
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetRoutingRuleOKRoutingPath) SetTo(v GetRoutingRuleOKRoutingPath) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetRoutingRuleOKRoutingPath) Get() (v GetRoutingRuleOKRoutingPath, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetRoutingRuleOKRoutingPath) Or(d GetRoutingRuleOKRoutingPath) GetRoutingRuleOKRoutingPath {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetRoutingRuleOKRoutingPathSipGroup returns new OptGetRoutingRuleOKRoutingPathSipGroup with value set to v.
func NewOptGetRoutingRuleOKRoutingPathSipGroup(v GetRoutingRuleOKRoutingPathSipGroup) OptGetRoutingRuleOKRoutingPathSipGroup {
	return OptGetRoutingRuleOKRoutingPathSipGroup{
		Value: v,
		Set:   true,
	}
}

// OptGetRoutingRuleOKRoutingPathSipGroup is optional GetRoutingRuleOKRoutingPathSipGroup.
type OptGetRoutingRuleOKRoutingPathSipGroup struct {
	Value GetRoutingRuleOKRoutingPathSipGroup
	Set   bool
}

// IsSet returns true if OptGetRoutingRuleOKRoutingPathSipGroup was set.
func (o OptGetRoutingRuleOKRoutingPathSipGroup) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetRoutingRuleOKRoutingPathSipGroup) Reset() {
	var v GetRoutingRuleOKRoutingPathSipGroup
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetRoutingRuleOKRoutingPathSipGroup) SetTo(v GetRoutingRuleOKRoutingPathSipGroup) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetRoutingRuleOKRoutingPathSipGroup) Get() (v GetRoutingRuleOKRoutingPathSipGroup, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetRoutingRuleOKRoutingPathSipGroup) Or(d GetRoutingRuleOKRoutingPathSipGroup) GetRoutingRuleOKRoutingPathSipGroup {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSMSCampaignOKBrand returns new OptGetSMSCampaignOKBrand with value set to v.
func NewOptGetSMSCampaignOKBrand(v GetSMSCampaignOKBrand) OptGetSMSCampaignOKBrand {
	return OptGetSMSCampaignOKBrand{
		Value: v,
		Set:   true,
	}
}

// OptGetSMSCampaignOKBrand is optional GetSMSCampaignOKBrand.
type OptGetSMSCampaignOKBrand struct {
	Value GetSMSCampaignOKBrand
	Set   bool
}

// IsSet returns true if OptGetSMSCampaignOKBrand was set.
func (o OptGetSMSCampaignOKBrand) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSMSCampaignOKBrand) Reset() {
	var v GetSMSCampaignOKBrand
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSMSCampaignOKBrand) SetTo(v GetSMSCampaignOKBrand) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSMSCampaignOKBrand) Get() (v GetSMSCampaignOKBrand, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSMSCampaignOKBrand) Or(d GetSMSCampaignOKBrand) GetSMSCampaignOKBrand {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKPolicy returns new OptGetSettingTemplateOKPolicy with value set to v.
func NewOptGetSettingTemplateOKPolicy(v GetSettingTemplateOKPolicy) OptGetSettingTemplateOKPolicy {
	return OptGetSettingTemplateOKPolicy{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKPolicy is optional GetSettingTemplateOKPolicy.
type OptGetSettingTemplateOKPolicy struct {
	Value GetSettingTemplateOKPolicy
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKPolicy was set.
func (o OptGetSettingTemplateOKPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSettingTemplateOKPolicy) Reset() {
	var v GetSettingTemplateOKPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKPolicy) SetTo(v GetSettingTemplateOKPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKPolicy) Get() (v GetSettingTemplateOKPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKPolicy) Or(d GetSettingTemplateOKPolicy) GetSettingTemplateOKPolicy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKPolicyAdHocCallRecording returns new OptGetSettingTemplateOKPolicyAdHocCallRecording with value set to v.
func NewOptGetSettingTemplateOKPolicyAdHocCallRecording(v GetSettingTemplateOKPolicyAdHocCallRecording) OptGetSettingTemplateOKPolicyAdHocCallRecording {
	return OptGetSettingTemplateOKPolicyAdHocCallRecording{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKPolicyAdHocCallRecording is optional GetSettingTemplateOKPolicyAdHocCallRecording.
type OptGetSettingTemplateOKPolicyAdHocCallRecording struct {
	Value GetSettingTemplateOKPolicyAdHocCallRecording
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKPolicyAdHocCallRecording was set.
func (o OptGetSettingTemplateOKPolicyAdHocCallRecording) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSettingTemplateOKPolicyAdHocCallRecording) Reset() {
	var v GetSettingTemplateOKPolicyAdHocCallRecording
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKPolicyAdHocCallRecording) SetTo(v GetSettingTemplateOKPolicyAdHocCallRecording) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKPolicyAdHocCallRecording) Get() (v GetSettingTemplateOKPolicyAdHocCallRecording, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKPolicyAdHocCallRecording) Or(d GetSettingTemplateOKPolicyAdHocCallRecording) GetSettingTemplateOKPolicyAdHocCallRecording {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKPolicyAutoCallRecording returns new OptGetSettingTemplateOKPolicyAutoCallRecording with value set to v.
func NewOptGetSettingTemplateOKPolicyAutoCallRecording(v GetSettingTemplateOKPolicyAutoCallRecording) OptGetSettingTemplateOKPolicyAutoCallRecording {
	return OptGetSettingTemplateOKPolicyAutoCallRecording{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKPolicyAutoCallRecording is optional GetSettingTemplateOKPolicyAutoCallRecording.
type OptGetSettingTemplateOKPolicyAutoCallRecording struct {
	Value GetSettingTemplateOKPolicyAutoCallRecording
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKPolicyAutoCallRecording was set.
func (o OptGetSettingTemplateOKPolicyAutoCallRecording) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSettingTemplateOKPolicyAutoCallRecording) Reset() {
	var v GetSettingTemplateOKPolicyAutoCallRecording
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKPolicyAutoCallRecording) SetTo(v GetSettingTemplateOKPolicyAutoCallRecording) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKPolicyAutoCallRecording) Get() (v GetSettingTemplateOKPolicyAutoCallRecording, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKPolicyAutoCallRecording) Or(d GetSettingTemplateOKPolicyAutoCallRecording) GetSettingTemplateOKPolicyAutoCallRecording {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKPolicyCallForwarding returns new OptGetSettingTemplateOKPolicyCallForwarding with value set to v.
func NewOptGetSettingTemplateOKPolicyCallForwarding(v GetSettingTemplateOKPolicyCallForwarding) OptGetSettingTemplateOKPolicyCallForwarding {
	return OptGetSettingTemplateOKPolicyCallForwarding{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKPolicyCallForwarding is optional GetSettingTemplateOKPolicyCallForwarding.
type OptGetSettingTemplateOKPolicyCallForwarding struct {
	Value GetSettingTemplateOKPolicyCallForwarding
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKPolicyCallForwarding was set.
func (o OptGetSettingTemplateOKPolicyCallForwarding) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSettingTemplateOKPolicyCallForwarding) Reset() {
	var v GetSettingTemplateOKPolicyCallForwarding
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKPolicyCallForwarding) SetTo(v GetSettingTemplateOKPolicyCallForwarding) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKPolicyCallForwarding) Get() (v GetSettingTemplateOKPolicyCallForwarding, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKPolicyCallForwarding) Or(d GetSettingTemplateOKPolicyCallForwarding) GetSettingTemplateOKPolicyCallForwarding {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKPolicyCallOverflow returns new OptGetSettingTemplateOKPolicyCallOverflow with value set to v.
func NewOptGetSettingTemplateOKPolicyCallOverflow(v GetSettingTemplateOKPolicyCallOverflow) OptGetSettingTemplateOKPolicyCallOverflow {
	return OptGetSettingTemplateOKPolicyCallOverflow{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKPolicyCallOverflow is optional GetSettingTemplateOKPolicyCallOverflow.
type OptGetSettingTemplateOKPolicyCallOverflow struct {
	Value GetSettingTemplateOKPolicyCallOverflow
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKPolicyCallOverflow was set.
func (o OptGetSettingTemplateOKPolicyCallOverflow) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSettingTemplateOKPolicyCallOverflow) Reset() {
	var v GetSettingTemplateOKPolicyCallOverflow
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKPolicyCallOverflow) SetTo(v GetSettingTemplateOKPolicyCallOverflow) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKPolicyCallOverflow) Get() (v GetSettingTemplateOKPolicyCallOverflow, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKPolicyCallOverflow) Or(d GetSettingTemplateOKPolicyCallOverflow) GetSettingTemplateOKPolicyCallOverflow {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKPolicySMS returns new OptGetSettingTemplateOKPolicySMS with value set to v.
func NewOptGetSettingTemplateOKPolicySMS(v GetSettingTemplateOKPolicySMS) OptGetSettingTemplateOKPolicySMS {
	return OptGetSettingTemplateOKPolicySMS{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKPolicySMS is optional GetSettingTemplateOKPolicySMS.
type OptGetSettingTemplateOKPolicySMS struct {
	Value GetSettingTemplateOKPolicySMS
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKPolicySMS was set.
func (o OptGetSettingTemplateOKPolicySMS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSettingTemplateOKPolicySMS) Reset() {
	var v GetSettingTemplateOKPolicySMS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKPolicySMS) SetTo(v GetSettingTemplateOKPolicySMS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKPolicySMS) Get() (v GetSettingTemplateOKPolicySMS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKPolicySMS) Or(d GetSettingTemplateOKPolicySMS) GetSettingTemplateOKPolicySMS {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKPolicyVoicemail returns new OptGetSettingTemplateOKPolicyVoicemail with value set to v.
func NewOptGetSettingTemplateOKPolicyVoicemail(v GetSettingTemplateOKPolicyVoicemail) OptGetSettingTemplateOKPolicyVoicemail {
	return OptGetSettingTemplateOKPolicyVoicemail{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKPolicyVoicemail is optional GetSettingTemplateOKPolicyVoicemail.
type OptGetSettingTemplateOKPolicyVoicemail struct {
	Value GetSettingTemplateOKPolicyVoicemail
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKPolicyVoicemail was set.
func (o OptGetSettingTemplateOKPolicyVoicemail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSettingTemplateOKPolicyVoicemail) Reset() {
	var v GetSettingTemplateOKPolicyVoicemail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKPolicyVoicemail) SetTo(v GetSettingTemplateOKPolicyVoicemail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKPolicyVoicemail) Get() (v GetSettingTemplateOKPolicyVoicemail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKPolicyVoicemail) Or(d GetSettingTemplateOKPolicyVoicemail) GetSettingTemplateOKPolicyVoicemail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKProfile returns new OptGetSettingTemplateOKProfile with value set to v.
func NewOptGetSettingTemplateOKProfile(v GetSettingTemplateOKProfile) OptGetSettingTemplateOKProfile {
	return OptGetSettingTemplateOKProfile{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKProfile is optional GetSettingTemplateOKProfile.
type OptGetSettingTemplateOKProfile struct {
	Value GetSettingTemplateOKProfile
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKProfile was set.
func (o OptGetSettingTemplateOKProfile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSettingTemplateOKProfile) Reset() {
	var v GetSettingTemplateOKProfile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKProfile) SetTo(v GetSettingTemplateOKProfile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKProfile) Get() (v GetSettingTemplateOKProfile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKProfile) Or(d GetSettingTemplateOKProfile) GetSettingTemplateOKProfile {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKUserSettings returns new OptGetSettingTemplateOKUserSettings with value set to v.
func NewOptGetSettingTemplateOKUserSettings(v GetSettingTemplateOKUserSettings) OptGetSettingTemplateOKUserSettings {
	return OptGetSettingTemplateOKUserSettings{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKUserSettings is optional GetSettingTemplateOKUserSettings.
type OptGetSettingTemplateOKUserSettings struct {
	Value GetSettingTemplateOKUserSettings
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKUserSettings was set.
func (o OptGetSettingTemplateOKUserSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSettingTemplateOKUserSettings) Reset() {
	var v GetSettingTemplateOKUserSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKUserSettings) SetTo(v GetSettingTemplateOKUserSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKUserSettings) Get() (v GetSettingTemplateOKUserSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKUserSettings) Or(d GetSettingTemplateOKUserSettings) GetSettingTemplateOKUserSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKUserSettingsCallHandling returns new OptGetSettingTemplateOKUserSettingsCallHandling with value set to v.
func NewOptGetSettingTemplateOKUserSettingsCallHandling(v GetSettingTemplateOKUserSettingsCallHandling) OptGetSettingTemplateOKUserSettingsCallHandling {
	return OptGetSettingTemplateOKUserSettingsCallHandling{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKUserSettingsCallHandling is optional GetSettingTemplateOKUserSettingsCallHandling.
type OptGetSettingTemplateOKUserSettingsCallHandling struct {
	Value GetSettingTemplateOKUserSettingsCallHandling
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKUserSettingsCallHandling was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandling) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSettingTemplateOKUserSettingsCallHandling) Reset() {
	var v GetSettingTemplateOKUserSettingsCallHandling
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKUserSettingsCallHandling) SetTo(v GetSettingTemplateOKUserSettingsCallHandling) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandling) Get() (v GetSettingTemplateOKUserSettingsCallHandling, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKUserSettingsCallHandling) Or(d GetSettingTemplateOKUserSettingsCallHandling) GetSettingTemplateOKUserSettingsCallHandling {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKUserSettingsCallHandlingBusinessHours returns new OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHours with value set to v.
func NewOptGetSettingTemplateOKUserSettingsCallHandlingBusinessHours(v GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHours {
	return OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHours is optional GetSettingTemplateOKUserSettingsCallHandlingBusinessHours.
type OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHours struct {
	Value GetSettingTemplateOKUserSettingsCallHandlingBusinessHours
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHours was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHours) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHours) Reset() {
	var v GetSettingTemplateOKUserSettingsCallHandlingBusinessHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHours) SetTo(v GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHours) Get() (v GetSettingTemplateOKUserSettingsCallHandlingBusinessHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHours) Or(d GetSettingTemplateOKUserSettingsCallHandlingBusinessHours) GetSettingTemplateOKUserSettingsCallHandlingBusinessHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator returns new OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator with value set to v.
func NewOptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator(v GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator {
	return OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator is optional GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator.
type OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator struct {
	Value GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) Reset() {
	var v GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) SetTo(v GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) Get() (v GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) Or(d GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator) GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber returns new OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber with value set to v.
func NewOptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber(v GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber {
	return OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber is optional GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber.
type OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber struct {
	Value GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) Reset() {
	var v GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) SetTo(v GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) Get() (v GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) Or(d GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator returns new OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator with value set to v.
func NewOptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator(v GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator {
	return OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator is optional GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator.
type OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator struct {
	Value GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) Reset() {
	var v GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) SetTo(v GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) Get() (v GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) Or(d GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator) GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber returns new OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber with value set to v.
func NewOptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber(v GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber {
	return OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber is optional GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber.
type OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber struct {
	Value GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) Reset() {
	var v GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) SetTo(v GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) Get() (v GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) Or(d GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) GetSettingTemplateOKUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKUserSettingsCallHandlingCloseHours returns new OptGetSettingTemplateOKUserSettingsCallHandlingCloseHours with value set to v.
func NewOptGetSettingTemplateOKUserSettingsCallHandlingCloseHours(v GetSettingTemplateOKUserSettingsCallHandlingCloseHours) OptGetSettingTemplateOKUserSettingsCallHandlingCloseHours {
	return OptGetSettingTemplateOKUserSettingsCallHandlingCloseHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKUserSettingsCallHandlingCloseHours is optional GetSettingTemplateOKUserSettingsCallHandlingCloseHours.
type OptGetSettingTemplateOKUserSettingsCallHandlingCloseHours struct {
	Value GetSettingTemplateOKUserSettingsCallHandlingCloseHours
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKUserSettingsCallHandlingCloseHours was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingCloseHours) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingCloseHours) Reset() {
	var v GetSettingTemplateOKUserSettingsCallHandlingCloseHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingCloseHours) SetTo(v GetSettingTemplateOKUserSettingsCallHandlingCloseHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingCloseHours) Get() (v GetSettingTemplateOKUserSettingsCallHandlingCloseHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingCloseHours) Or(d GetSettingTemplateOKUserSettingsCallHandlingCloseHours) GetSettingTemplateOKUserSettingsCallHandlingCloseHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator returns new OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator with value set to v.
func NewOptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator(v GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator {
	return OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator is optional GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator.
type OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator struct {
	Value GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) Reset() {
	var v GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) SetTo(v GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) Get() (v GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) Or(d GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator) GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber returns new OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber with value set to v.
func NewOptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber(v GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber {
	return OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber is optional GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber.
type OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber struct {
	Value GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) Reset() {
	var v GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) SetTo(v GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) Get() (v GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) Or(d GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) GetSettingTemplateOKUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator returns new OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator with value set to v.
func NewOptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator(v GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator {
	return OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator is optional GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator.
type OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator struct {
	Value GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) Reset() {
	var v GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) SetTo(v GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) Get() (v GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) Or(d GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator) GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber returns new OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber with value set to v.
func NewOptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber(v GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber {
	return OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber is optional GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber.
type OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber struct {
	Value GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) Reset() {
	var v GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) SetTo(v GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) Get() (v GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) Or(d GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) GetSettingTemplateOKUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSettingTemplateOKUserSettingsDeskPhone returns new OptGetSettingTemplateOKUserSettingsDeskPhone with value set to v.
func NewOptGetSettingTemplateOKUserSettingsDeskPhone(v GetSettingTemplateOKUserSettingsDeskPhone) OptGetSettingTemplateOKUserSettingsDeskPhone {
	return OptGetSettingTemplateOKUserSettingsDeskPhone{
		Value: v,
		Set:   true,
	}
}

// OptGetSettingTemplateOKUserSettingsDeskPhone is optional GetSettingTemplateOKUserSettingsDeskPhone.
type OptGetSettingTemplateOKUserSettingsDeskPhone struct {
	Value GetSettingTemplateOKUserSettingsDeskPhone
	Set   bool
}

// IsSet returns true if OptGetSettingTemplateOKUserSettingsDeskPhone was set.
func (o OptGetSettingTemplateOKUserSettingsDeskPhone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSettingTemplateOKUserSettingsDeskPhone) Reset() {
	var v GetSettingTemplateOKUserSettingsDeskPhone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSettingTemplateOKUserSettingsDeskPhone) SetTo(v GetSettingTemplateOKUserSettingsDeskPhone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSettingTemplateOKUserSettingsDeskPhone) Get() (v GetSettingTemplateOKUserSettingsDeskPhone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSettingTemplateOKUserSettingsDeskPhone) Or(d GetSettingTemplateOKUserSettingsDeskPhone) GetSettingTemplateOKUserSettingsDeskPhone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSharedLineGroupPolicyOKCheckVoicemailsOverPhone returns new OptGetSharedLineGroupPolicyOKCheckVoicemailsOverPhone with value set to v.
func NewOptGetSharedLineGroupPolicyOKCheckVoicemailsOverPhone(v GetSharedLineGroupPolicyOKCheckVoicemailsOverPhone) OptGetSharedLineGroupPolicyOKCheckVoicemailsOverPhone {
	return OptGetSharedLineGroupPolicyOKCheckVoicemailsOverPhone{
		Value: v,
		Set:   true,
	}
}

// OptGetSharedLineGroupPolicyOKCheckVoicemailsOverPhone is optional GetSharedLineGroupPolicyOKCheckVoicemailsOverPhone.
type OptGetSharedLineGroupPolicyOKCheckVoicemailsOverPhone struct {
	Value GetSharedLineGroupPolicyOKCheckVoicemailsOverPhone
	Set   bool
}

// IsSet returns true if OptGetSharedLineGroupPolicyOKCheckVoicemailsOverPhone was set.
func (o OptGetSharedLineGroupPolicyOKCheckVoicemailsOverPhone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSharedLineGroupPolicyOKCheckVoicemailsOverPhone) Reset() {
	var v GetSharedLineGroupPolicyOKCheckVoicemailsOverPhone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSharedLineGroupPolicyOKCheckVoicemailsOverPhone) SetTo(v GetSharedLineGroupPolicyOKCheckVoicemailsOverPhone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSharedLineGroupPolicyOKCheckVoicemailsOverPhone) Get() (v GetSharedLineGroupPolicyOKCheckVoicemailsOverPhone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSharedLineGroupPolicyOKCheckVoicemailsOverPhone) Or(d GetSharedLineGroupPolicyOKCheckVoicemailsOverPhone) GetSharedLineGroupPolicyOKCheckVoicemailsOverPhone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPrompt returns new OptGetSiteSettingForTypeOKAudioPrompt with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPrompt(v GetSiteSettingForTypeOKAudioPrompt) OptGetSiteSettingForTypeOKAudioPrompt {
	return OptGetSiteSettingForTypeOKAudioPrompt{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPrompt is optional GetSiteSettingForTypeOKAudioPrompt.
type OptGetSiteSettingForTypeOKAudioPrompt struct {
	Value GetSiteSettingForTypeOKAudioPrompt
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPrompt was set.
func (o OptGetSiteSettingForTypeOKAudioPrompt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPrompt) Reset() {
	var v GetSiteSettingForTypeOKAudioPrompt
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPrompt) SetTo(v GetSiteSettingForTypeOKAudioPrompt) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPrompt) Get() (v GetSiteSettingForTypeOKAudioPrompt, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPrompt) Or(d GetSiteSettingForTypeOKAudioPrompt) GetSiteSettingForTypeOKAudioPrompt {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptAudioWhileConnecting returns new OptGetSiteSettingForTypeOKAudioPromptAudioWhileConnecting with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptAudioWhileConnecting(v GetSiteSettingForTypeOKAudioPromptAudioWhileConnecting) OptGetSiteSettingForTypeOKAudioPromptAudioWhileConnecting {
	return OptGetSiteSettingForTypeOKAudioPromptAudioWhileConnecting{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptAudioWhileConnecting is optional GetSiteSettingForTypeOKAudioPromptAudioWhileConnecting.
type OptGetSiteSettingForTypeOKAudioPromptAudioWhileConnecting struct {
	Value GetSiteSettingForTypeOKAudioPromptAudioWhileConnecting
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptAudioWhileConnecting was set.
func (o OptGetSiteSettingForTypeOKAudioPromptAudioWhileConnecting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptAudioWhileConnecting) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptAudioWhileConnecting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptAudioWhileConnecting) SetTo(v GetSiteSettingForTypeOKAudioPromptAudioWhileConnecting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptAudioWhileConnecting) Get() (v GetSiteSettingForTypeOKAudioPromptAudioWhileConnecting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptAudioWhileConnecting) Or(d GetSiteSettingForTypeOKAudioPromptAudioWhileConnecting) GetSiteSettingForTypeOKAudioPromptAudioWhileConnecting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction returns new OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction(v GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction) OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction {
	return OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction is optional GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction.
type OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction struct {
	Value GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction) SetTo(v GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction) Get() (v GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction) Or(d GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction) GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstruction {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours returns new OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours(v GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours {
	return OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours is optional GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours.
type OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours struct {
	Value GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) SetTo(v GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) Get() (v GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) Or(d GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionBusinessHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours returns new OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours(v GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours) OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours {
	return OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours is optional GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours.
type OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours struct {
	Value GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours) SetTo(v GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours) Get() (v GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours) Or(d GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours) GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionClosedHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours returns new OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours(v GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours {
	return OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours is optional GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours.
type OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours struct {
	Value GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) SetTo(v GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) Get() (v GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) Or(d GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) GetSiteSettingForTypeOKAudioPromptGreetingLeaveVoicemailInstructionHolidayHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail returns new OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail(v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail {
	return OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail is optional GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail.
type OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail struct {
	Value GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) SetTo(v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) Get() (v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) Or(d GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours returns new OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours(v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours {
	return OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours is optional GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours.
type OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours struct {
	Value GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) SetTo(v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) Get() (v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) Or(d GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours returns new OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours(v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours {
	return OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours is optional GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours.
type OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours struct {
	Value GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) SetTo(v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) Get() (v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) Or(d GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours returns new OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours(v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours {
	return OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours is optional GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours.
type OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours struct {
	Value GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) SetTo(v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) Get() (v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) Or(d GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail returns new OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail(v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail {
	return OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail is optional GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail.
type OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail struct {
	Value GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) SetTo(v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) Get() (v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) Or(d GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours returns new OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours(v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours {
	return OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours is optional GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours.
type OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours struct {
	Value GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) SetTo(v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) Get() (v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) Or(d GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours returns new OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours(v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours {
	return OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours is optional GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours.
type OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours struct {
	Value GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) SetTo(v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) Get() (v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) Or(d GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours returns new OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours(v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours {
	return OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours is optional GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours.
type OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours struct {
	Value GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) SetTo(v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) Get() (v GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) Or(d GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) GetSiteSettingForTypeOKAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail returns new OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail(v GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail) OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail {
	return OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail is optional GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail.
type OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail struct {
	Value GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail) SetTo(v GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail) Get() (v GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail) Or(d GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail) GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours returns new OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours(v GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours {
	return OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours is optional GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours.
type OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours struct {
	Value GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) SetTo(v GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) Get() (v GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) Or(d GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours returns new OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours(v GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours {
	return OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours is optional GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours.
type OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours struct {
	Value GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) SetTo(v GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) Get() (v GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) Or(d GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours returns new OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours(v GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours {
	return OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours is optional GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours.
type OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours struct {
	Value GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) SetTo(v GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) Get() (v GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) Or(d GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) GetSiteSettingForTypeOKAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptHoldMusic returns new OptGetSiteSettingForTypeOKAudioPromptHoldMusic with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptHoldMusic(v GetSiteSettingForTypeOKAudioPromptHoldMusic) OptGetSiteSettingForTypeOKAudioPromptHoldMusic {
	return OptGetSiteSettingForTypeOKAudioPromptHoldMusic{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptHoldMusic is optional GetSiteSettingForTypeOKAudioPromptHoldMusic.
type OptGetSiteSettingForTypeOKAudioPromptHoldMusic struct {
	Value GetSiteSettingForTypeOKAudioPromptHoldMusic
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptHoldMusic was set.
func (o OptGetSiteSettingForTypeOKAudioPromptHoldMusic) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptHoldMusic) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptHoldMusic
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptHoldMusic) SetTo(v GetSiteSettingForTypeOKAudioPromptHoldMusic) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptHoldMusic) Get() (v GetSiteSettingForTypeOKAudioPromptHoldMusic, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptHoldMusic) Or(d GetSiteSettingForTypeOKAudioPromptHoldMusic) GetSiteSettingForTypeOKAudioPromptHoldMusic {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction returns new OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction(v GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction) OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction {
	return OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction is optional GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction.
type OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction struct {
	Value GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction was set.
func (o OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction) SetTo(v GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction) Get() (v GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction) Or(d GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction) GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroduction {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours returns new OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours(v GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours) OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours {
	return OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours is optional GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours.
type OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours struct {
	Value GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours was set.
func (o OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours) SetTo(v GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours) Get() (v GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours) Or(d GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours) GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionBusinessHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours returns new OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours(v GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours) OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours {
	return OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours is optional GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours.
type OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours struct {
	Value GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours was set.
func (o OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours) SetTo(v GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours) Get() (v GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours) Or(d GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours) GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionClosedHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours returns new OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours(v GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours) OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours {
	return OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours is optional GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours.
type OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours struct {
	Value GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours was set.
func (o OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours) SetTo(v GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours) Get() (v GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours) Or(d GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours) GetSiteSettingForTypeOKAudioPromptLeaveVoicemailIntroductionHolidayHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptMessageGreeting returns new OptGetSiteSettingForTypeOKAudioPromptMessageGreeting with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptMessageGreeting(v GetSiteSettingForTypeOKAudioPromptMessageGreeting) OptGetSiteSettingForTypeOKAudioPromptMessageGreeting {
	return OptGetSiteSettingForTypeOKAudioPromptMessageGreeting{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptMessageGreeting is optional GetSiteSettingForTypeOKAudioPromptMessageGreeting.
type OptGetSiteSettingForTypeOKAudioPromptMessageGreeting struct {
	Value GetSiteSettingForTypeOKAudioPromptMessageGreeting
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptMessageGreeting was set.
func (o OptGetSiteSettingForTypeOKAudioPromptMessageGreeting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptMessageGreeting) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptMessageGreeting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptMessageGreeting) SetTo(v GetSiteSettingForTypeOKAudioPromptMessageGreeting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptMessageGreeting) Get() (v GetSiteSettingForTypeOKAudioPromptMessageGreeting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptMessageGreeting) Or(d GetSiteSettingForTypeOKAudioPromptMessageGreeting) GetSiteSettingForTypeOKAudioPromptMessageGreeting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours returns new OptGetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours(v GetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours) OptGetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours {
	return OptGetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours is optional GetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours.
type OptGetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours struct {
	Value GetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours was set.
func (o OptGetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours) SetTo(v GetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours) Get() (v GetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours) Or(d GetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours) GetSiteSettingForTypeOKAudioPromptMessageGreetingBusinessHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours returns new OptGetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours(v GetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours) OptGetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours {
	return OptGetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours is optional GetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours.
type OptGetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours struct {
	Value GetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours was set.
func (o OptGetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours) SetTo(v GetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours) Get() (v GetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours) Or(d GetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours) GetSiteSettingForTypeOKAudioPromptMessageGreetingClosedHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours returns new OptGetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours with value set to v.
func NewOptGetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours(v GetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours) OptGetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours {
	return OptGetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours is optional GetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours.
type OptGetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours struct {
	Value GetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours was set.
func (o OptGetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours) Reset() {
	var v GetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours) SetTo(v GetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours) Get() (v GetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours) Or(d GetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours) GetSiteSettingForTypeOKAudioPromptMessageGreetingHolidayHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKBillingAccount returns new OptGetSiteSettingForTypeOKBillingAccount with value set to v.
func NewOptGetSiteSettingForTypeOKBillingAccount(v GetSiteSettingForTypeOKBillingAccount) OptGetSiteSettingForTypeOKBillingAccount {
	return OptGetSiteSettingForTypeOKBillingAccount{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKBillingAccount is optional GetSiteSettingForTypeOKBillingAccount.
type OptGetSiteSettingForTypeOKBillingAccount struct {
	Value GetSiteSettingForTypeOKBillingAccount
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKBillingAccount was set.
func (o OptGetSiteSettingForTypeOKBillingAccount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKBillingAccount) Reset() {
	var v GetSiteSettingForTypeOKBillingAccount
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKBillingAccount) SetTo(v GetSiteSettingForTypeOKBillingAccount) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKBillingAccount) Get() (v GetSiteSettingForTypeOKBillingAccount, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKBillingAccount) Or(d GetSiteSettingForTypeOKBillingAccount) GetSiteSettingForTypeOKBillingAccount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKBusinessHours returns new OptGetSiteSettingForTypeOKBusinessHours with value set to v.
func NewOptGetSiteSettingForTypeOKBusinessHours(v GetSiteSettingForTypeOKBusinessHours) OptGetSiteSettingForTypeOKBusinessHours {
	return OptGetSiteSettingForTypeOKBusinessHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKBusinessHours is optional GetSiteSettingForTypeOKBusinessHours.
type OptGetSiteSettingForTypeOKBusinessHours struct {
	Value GetSiteSettingForTypeOKBusinessHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKBusinessHours was set.
func (o OptGetSiteSettingForTypeOKBusinessHours) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKBusinessHours) Reset() {
	var v GetSiteSettingForTypeOKBusinessHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKBusinessHours) SetTo(v GetSiteSettingForTypeOKBusinessHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKBusinessHours) Get() (v GetSiteSettingForTypeOKBusinessHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKBusinessHours) Or(d GetSiteSettingForTypeOKBusinessHours) GetSiteSettingForTypeOKBusinessHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKBusinessHoursOverflow returns new OptGetSiteSettingForTypeOKBusinessHoursOverflow with value set to v.
func NewOptGetSiteSettingForTypeOKBusinessHoursOverflow(v GetSiteSettingForTypeOKBusinessHoursOverflow) OptGetSiteSettingForTypeOKBusinessHoursOverflow {
	return OptGetSiteSettingForTypeOKBusinessHoursOverflow{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKBusinessHoursOverflow is optional GetSiteSettingForTypeOKBusinessHoursOverflow.
type OptGetSiteSettingForTypeOKBusinessHoursOverflow struct {
	Value GetSiteSettingForTypeOKBusinessHoursOverflow
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKBusinessHoursOverflow was set.
func (o OptGetSiteSettingForTypeOKBusinessHoursOverflow) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKBusinessHoursOverflow) Reset() {
	var v GetSiteSettingForTypeOKBusinessHoursOverflow
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKBusinessHoursOverflow) SetTo(v GetSiteSettingForTypeOKBusinessHoursOverflow) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKBusinessHoursOverflow) Get() (v GetSiteSettingForTypeOKBusinessHoursOverflow, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKBusinessHoursOverflow) Or(d GetSiteSettingForTypeOKBusinessHoursOverflow) GetSiteSettingForTypeOKBusinessHoursOverflow {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKBusinessHoursOverflowOperator returns new OptGetSiteSettingForTypeOKBusinessHoursOverflowOperator with value set to v.
func NewOptGetSiteSettingForTypeOKBusinessHoursOverflowOperator(v GetSiteSettingForTypeOKBusinessHoursOverflowOperator) OptGetSiteSettingForTypeOKBusinessHoursOverflowOperator {
	return OptGetSiteSettingForTypeOKBusinessHoursOverflowOperator{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKBusinessHoursOverflowOperator is optional GetSiteSettingForTypeOKBusinessHoursOverflowOperator.
type OptGetSiteSettingForTypeOKBusinessHoursOverflowOperator struct {
	Value GetSiteSettingForTypeOKBusinessHoursOverflowOperator
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKBusinessHoursOverflowOperator was set.
func (o OptGetSiteSettingForTypeOKBusinessHoursOverflowOperator) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKBusinessHoursOverflowOperator) Reset() {
	var v GetSiteSettingForTypeOKBusinessHoursOverflowOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKBusinessHoursOverflowOperator) SetTo(v GetSiteSettingForTypeOKBusinessHoursOverflowOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKBusinessHoursOverflowOperator) Get() (v GetSiteSettingForTypeOKBusinessHoursOverflowOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKBusinessHoursOverflowOperator) Or(d GetSiteSettingForTypeOKBusinessHoursOverflowOperator) GetSiteSettingForTypeOKBusinessHoursOverflowOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKClosedHours returns new OptGetSiteSettingForTypeOKClosedHours with value set to v.
func NewOptGetSiteSettingForTypeOKClosedHours(v GetSiteSettingForTypeOKClosedHours) OptGetSiteSettingForTypeOKClosedHours {
	return OptGetSiteSettingForTypeOKClosedHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKClosedHours is optional GetSiteSettingForTypeOKClosedHours.
type OptGetSiteSettingForTypeOKClosedHours struct {
	Value GetSiteSettingForTypeOKClosedHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKClosedHours was set.
func (o OptGetSiteSettingForTypeOKClosedHours) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKClosedHours) Reset() {
	var v GetSiteSettingForTypeOKClosedHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKClosedHours) SetTo(v GetSiteSettingForTypeOKClosedHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKClosedHours) Get() (v GetSiteSettingForTypeOKClosedHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKClosedHours) Or(d GetSiteSettingForTypeOKClosedHours) GetSiteSettingForTypeOKClosedHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKClosedHoursOverflow returns new OptGetSiteSettingForTypeOKClosedHoursOverflow with value set to v.
func NewOptGetSiteSettingForTypeOKClosedHoursOverflow(v GetSiteSettingForTypeOKClosedHoursOverflow) OptGetSiteSettingForTypeOKClosedHoursOverflow {
	return OptGetSiteSettingForTypeOKClosedHoursOverflow{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKClosedHoursOverflow is optional GetSiteSettingForTypeOKClosedHoursOverflow.
type OptGetSiteSettingForTypeOKClosedHoursOverflow struct {
	Value GetSiteSettingForTypeOKClosedHoursOverflow
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKClosedHoursOverflow was set.
func (o OptGetSiteSettingForTypeOKClosedHoursOverflow) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKClosedHoursOverflow) Reset() {
	var v GetSiteSettingForTypeOKClosedHoursOverflow
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKClosedHoursOverflow) SetTo(v GetSiteSettingForTypeOKClosedHoursOverflow) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKClosedHoursOverflow) Get() (v GetSiteSettingForTypeOKClosedHoursOverflow, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKClosedHoursOverflow) Or(d GetSiteSettingForTypeOKClosedHoursOverflow) GetSiteSettingForTypeOKClosedHoursOverflow {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKClosedHoursOverflowOperator returns new OptGetSiteSettingForTypeOKClosedHoursOverflowOperator with value set to v.
func NewOptGetSiteSettingForTypeOKClosedHoursOverflowOperator(v GetSiteSettingForTypeOKClosedHoursOverflowOperator) OptGetSiteSettingForTypeOKClosedHoursOverflowOperator {
	return OptGetSiteSettingForTypeOKClosedHoursOverflowOperator{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKClosedHoursOverflowOperator is optional GetSiteSettingForTypeOKClosedHoursOverflowOperator.
type OptGetSiteSettingForTypeOKClosedHoursOverflowOperator struct {
	Value GetSiteSettingForTypeOKClosedHoursOverflowOperator
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKClosedHoursOverflowOperator was set.
func (o OptGetSiteSettingForTypeOKClosedHoursOverflowOperator) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKClosedHoursOverflowOperator) Reset() {
	var v GetSiteSettingForTypeOKClosedHoursOverflowOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKClosedHoursOverflowOperator) SetTo(v GetSiteSettingForTypeOKClosedHoursOverflowOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKClosedHoursOverflowOperator) Get() (v GetSiteSettingForTypeOKClosedHoursOverflowOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKClosedHoursOverflowOperator) Or(d GetSiteSettingForTypeOKClosedHoursOverflowOperator) GetSiteSettingForTypeOKClosedHoursOverflowOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKDialByName returns new OptGetSiteSettingForTypeOKDialByName with value set to v.
func NewOptGetSiteSettingForTypeOKDialByName(v GetSiteSettingForTypeOKDialByName) OptGetSiteSettingForTypeOKDialByName {
	return OptGetSiteSettingForTypeOKDialByName{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKDialByName is optional GetSiteSettingForTypeOKDialByName.
type OptGetSiteSettingForTypeOKDialByName struct {
	Value GetSiteSettingForTypeOKDialByName
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKDialByName was set.
func (o OptGetSiteSettingForTypeOKDialByName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKDialByName) Reset() {
	var v GetSiteSettingForTypeOKDialByName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKDialByName) SetTo(v GetSiteSettingForTypeOKDialByName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKDialByName) Get() (v GetSiteSettingForTypeOKDialByName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKDialByName) Or(d GetSiteSettingForTypeOKDialByName) GetSiteSettingForTypeOKDialByName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKHolidayHours returns new OptGetSiteSettingForTypeOKHolidayHours with value set to v.
func NewOptGetSiteSettingForTypeOKHolidayHours(v GetSiteSettingForTypeOKHolidayHours) OptGetSiteSettingForTypeOKHolidayHours {
	return OptGetSiteSettingForTypeOKHolidayHours{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKHolidayHours is optional GetSiteSettingForTypeOKHolidayHours.
type OptGetSiteSettingForTypeOKHolidayHours struct {
	Value GetSiteSettingForTypeOKHolidayHours
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKHolidayHours was set.
func (o OptGetSiteSettingForTypeOKHolidayHours) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKHolidayHours) Reset() {
	var v GetSiteSettingForTypeOKHolidayHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKHolidayHours) SetTo(v GetSiteSettingForTypeOKHolidayHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKHolidayHours) Get() (v GetSiteSettingForTypeOKHolidayHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKHolidayHours) Or(d GetSiteSettingForTypeOKHolidayHours) GetSiteSettingForTypeOKHolidayHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKHolidayHoursOverflow returns new OptGetSiteSettingForTypeOKHolidayHoursOverflow with value set to v.
func NewOptGetSiteSettingForTypeOKHolidayHoursOverflow(v GetSiteSettingForTypeOKHolidayHoursOverflow) OptGetSiteSettingForTypeOKHolidayHoursOverflow {
	return OptGetSiteSettingForTypeOKHolidayHoursOverflow{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKHolidayHoursOverflow is optional GetSiteSettingForTypeOKHolidayHoursOverflow.
type OptGetSiteSettingForTypeOKHolidayHoursOverflow struct {
	Value GetSiteSettingForTypeOKHolidayHoursOverflow
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKHolidayHoursOverflow was set.
func (o OptGetSiteSettingForTypeOKHolidayHoursOverflow) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKHolidayHoursOverflow) Reset() {
	var v GetSiteSettingForTypeOKHolidayHoursOverflow
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKHolidayHoursOverflow) SetTo(v GetSiteSettingForTypeOKHolidayHoursOverflow) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKHolidayHoursOverflow) Get() (v GetSiteSettingForTypeOKHolidayHoursOverflow, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKHolidayHoursOverflow) Or(d GetSiteSettingForTypeOKHolidayHoursOverflow) GetSiteSettingForTypeOKHolidayHoursOverflow {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKHolidayHoursOverflowOperator returns new OptGetSiteSettingForTypeOKHolidayHoursOverflowOperator with value set to v.
func NewOptGetSiteSettingForTypeOKHolidayHoursOverflowOperator(v GetSiteSettingForTypeOKHolidayHoursOverflowOperator) OptGetSiteSettingForTypeOKHolidayHoursOverflowOperator {
	return OptGetSiteSettingForTypeOKHolidayHoursOverflowOperator{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKHolidayHoursOverflowOperator is optional GetSiteSettingForTypeOKHolidayHoursOverflowOperator.
type OptGetSiteSettingForTypeOKHolidayHoursOverflowOperator struct {
	Value GetSiteSettingForTypeOKHolidayHoursOverflowOperator
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKHolidayHoursOverflowOperator was set.
func (o OptGetSiteSettingForTypeOKHolidayHoursOverflowOperator) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKHolidayHoursOverflowOperator) Reset() {
	var v GetSiteSettingForTypeOKHolidayHoursOverflowOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKHolidayHoursOverflowOperator) SetTo(v GetSiteSettingForTypeOKHolidayHoursOverflowOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKHolidayHoursOverflowOperator) Get() (v GetSiteSettingForTypeOKHolidayHoursOverflowOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKHolidayHoursOverflowOperator) Or(d GetSiteSettingForTypeOKHolidayHoursOverflowOperator) GetSiteSettingForTypeOKHolidayHoursOverflowOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKLocationBasedRouting returns new OptGetSiteSettingForTypeOKLocationBasedRouting with value set to v.
func NewOptGetSiteSettingForTypeOKLocationBasedRouting(v GetSiteSettingForTypeOKLocationBasedRouting) OptGetSiteSettingForTypeOKLocationBasedRouting {
	return OptGetSiteSettingForTypeOKLocationBasedRouting{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKLocationBasedRouting is optional GetSiteSettingForTypeOKLocationBasedRouting.
type OptGetSiteSettingForTypeOKLocationBasedRouting struct {
	Value GetSiteSettingForTypeOKLocationBasedRouting
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKLocationBasedRouting was set.
func (o OptGetSiteSettingForTypeOKLocationBasedRouting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKLocationBasedRouting) Reset() {
	var v GetSiteSettingForTypeOKLocationBasedRouting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKLocationBasedRouting) SetTo(v GetSiteSettingForTypeOKLocationBasedRouting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKLocationBasedRouting) Get() (v GetSiteSettingForTypeOKLocationBasedRouting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKLocationBasedRouting) Or(d GetSiteSettingForTypeOKLocationBasedRouting) GetSiteSettingForTypeOKLocationBasedRouting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKOutboundCallerID returns new OptGetSiteSettingForTypeOKOutboundCallerID with value set to v.
func NewOptGetSiteSettingForTypeOKOutboundCallerID(v GetSiteSettingForTypeOKOutboundCallerID) OptGetSiteSettingForTypeOKOutboundCallerID {
	return OptGetSiteSettingForTypeOKOutboundCallerID{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKOutboundCallerID is optional GetSiteSettingForTypeOKOutboundCallerID.
type OptGetSiteSettingForTypeOKOutboundCallerID struct {
	Value GetSiteSettingForTypeOKOutboundCallerID
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKOutboundCallerID was set.
func (o OptGetSiteSettingForTypeOKOutboundCallerID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKOutboundCallerID) Reset() {
	var v GetSiteSettingForTypeOKOutboundCallerID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKOutboundCallerID) SetTo(v GetSiteSettingForTypeOKOutboundCallerID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKOutboundCallerID) Get() (v GetSiteSettingForTypeOKOutboundCallerID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKOutboundCallerID) Or(d GetSiteSettingForTypeOKOutboundCallerID) GetSiteSettingForTypeOKOutboundCallerID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSiteSettingForTypeOKSecurity returns new OptGetSiteSettingForTypeOKSecurity with value set to v.
func NewOptGetSiteSettingForTypeOKSecurity(v GetSiteSettingForTypeOKSecurity) OptGetSiteSettingForTypeOKSecurity {
	return OptGetSiteSettingForTypeOKSecurity{
		Value: v,
		Set:   true,
	}
}

// OptGetSiteSettingForTypeOKSecurity is optional GetSiteSettingForTypeOKSecurity.
type OptGetSiteSettingForTypeOKSecurity struct {
	Value GetSiteSettingForTypeOKSecurity
	Set   bool
}

// IsSet returns true if OptGetSiteSettingForTypeOKSecurity was set.
func (o OptGetSiteSettingForTypeOKSecurity) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSiteSettingForTypeOKSecurity) Reset() {
	var v GetSiteSettingForTypeOKSecurity
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSiteSettingForTypeOKSecurity) SetTo(v GetSiteSettingForTypeOKSecurity) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSiteSettingForTypeOKSecurity) Get() (v GetSiteSettingForTypeOKSecurity, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSiteSettingForTypeOKSecurity) Or(d GetSiteSettingForTypeOKSecurity) GetSiteSettingForTypeOKSecurity {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSmsSessionsOKSMSSessionsItemLatestMessage returns new OptGetSmsSessionsOKSMSSessionsItemLatestMessage with value set to v.
func NewOptGetSmsSessionsOKSMSSessionsItemLatestMessage(v GetSmsSessionsOKSMSSessionsItemLatestMessage) OptGetSmsSessionsOKSMSSessionsItemLatestMessage {
	return OptGetSmsSessionsOKSMSSessionsItemLatestMessage{
		Value: v,
		Set:   true,
	}
}

// OptGetSmsSessionsOKSMSSessionsItemLatestMessage is optional GetSmsSessionsOKSMSSessionsItemLatestMessage.
type OptGetSmsSessionsOKSMSSessionsItemLatestMessage struct {
	Value GetSmsSessionsOKSMSSessionsItemLatestMessage
	Set   bool
}

// IsSet returns true if OptGetSmsSessionsOKSMSSessionsItemLatestMessage was set.
func (o OptGetSmsSessionsOKSMSSessionsItemLatestMessage) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSmsSessionsOKSMSSessionsItemLatestMessage) Reset() {
	var v GetSmsSessionsOKSMSSessionsItemLatestMessage
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSmsSessionsOKSMSSessionsItemLatestMessage) SetTo(v GetSmsSessionsOKSMSSessionsItemLatestMessage) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSmsSessionsOKSMSSessionsItemLatestMessage) Get() (v GetSmsSessionsOKSMSSessionsItemLatestMessage, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSmsSessionsOKSMSSessionsItemLatestMessage) Or(d GetSmsSessionsOKSMSSessionsItemLatestMessage) GetSmsSessionsOKSMSSessionsItemLatestMessage {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSmsSessionsOKSMSSessionsItemLatestMessageSender returns new OptGetSmsSessionsOKSMSSessionsItemLatestMessageSender with value set to v.
func NewOptGetSmsSessionsOKSMSSessionsItemLatestMessageSender(v GetSmsSessionsOKSMSSessionsItemLatestMessageSender) OptGetSmsSessionsOKSMSSessionsItemLatestMessageSender {
	return OptGetSmsSessionsOKSMSSessionsItemLatestMessageSender{
		Value: v,
		Set:   true,
	}
}

// OptGetSmsSessionsOKSMSSessionsItemLatestMessageSender is optional GetSmsSessionsOKSMSSessionsItemLatestMessageSender.
type OptGetSmsSessionsOKSMSSessionsItemLatestMessageSender struct {
	Value GetSmsSessionsOKSMSSessionsItemLatestMessageSender
	Set   bool
}

// IsSet returns true if OptGetSmsSessionsOKSMSSessionsItemLatestMessageSender was set.
func (o OptGetSmsSessionsOKSMSSessionsItemLatestMessageSender) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSmsSessionsOKSMSSessionsItemLatestMessageSender) Reset() {
	var v GetSmsSessionsOKSMSSessionsItemLatestMessageSender
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSmsSessionsOKSMSSessionsItemLatestMessageSender) SetTo(v GetSmsSessionsOKSMSSessionsItemLatestMessageSender) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSmsSessionsOKSMSSessionsItemLatestMessageSender) Get() (v GetSmsSessionsOKSMSSessionsItemLatestMessageSender, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSmsSessionsOKSMSSessionsItemLatestMessageSender) Or(d GetSmsSessionsOKSMSSessionsItemLatestMessageSender) GetSmsSessionsOKSMSSessionsItemLatestMessageSender {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner returns new OptGetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner with value set to v.
func NewOptGetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner(v GetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner) OptGetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner {
	return OptGetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner{
		Value: v,
		Set:   true,
	}
}

// OptGetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner is optional GetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner.
type OptGetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner struct {
	Value GetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner
	Set   bool
}

// IsSet returns true if OptGetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner was set.
func (o OptGetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner) Reset() {
	var v GetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner) SetTo(v GetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner) Get() (v GetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner) Or(d GetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner) GetSmsSessionsOKSMSSessionsItemLatestMessageSenderOwner {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner returns new OptGetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner with value set to v.
func NewOptGetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner(v GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner) OptGetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner {
	return OptGetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner{
		Value: v,
		Set:   true,
	}
}

// OptGetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner is optional GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner.
type OptGetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner struct {
	Value GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner
	Set   bool
}

// IsSet returns true if OptGetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner was set.
func (o OptGetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner) Reset() {
	var v GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner) SetTo(v GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner) Get() (v GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner) Or(d GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner) GetSmsSessionsOKSMSSessionsItemLatestMessageToMembersItemOwner {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetSmsSessionsOKSMSSessionsItemParticipantsItemOwner returns new OptGetSmsSessionsOKSMSSessionsItemParticipantsItemOwner with value set to v.
func NewOptGetSmsSessionsOKSMSSessionsItemParticipantsItemOwner(v GetSmsSessionsOKSMSSessionsItemParticipantsItemOwner) OptGetSmsSessionsOKSMSSessionsItemParticipantsItemOwner {
	return OptGetSmsSessionsOKSMSSessionsItemParticipantsItemOwner{
		Value: v,
		Set:   true,
	}
}

// OptGetSmsSessionsOKSMSSessionsItemParticipantsItemOwner is optional GetSmsSessionsOKSMSSessionsItemParticipantsItemOwner.
type OptGetSmsSessionsOKSMSSessionsItemParticipantsItemOwner struct {
	Value GetSmsSessionsOKSMSSessionsItemParticipantsItemOwner
	Set   bool
}

// IsSet returns true if OptGetSmsSessionsOKSMSSessionsItemParticipantsItemOwner was set.
func (o OptGetSmsSessionsOKSMSSessionsItemParticipantsItemOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetSmsSessionsOKSMSSessionsItemParticipantsItemOwner) Reset() {
	var v GetSmsSessionsOKSMSSessionsItemParticipantsItemOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetSmsSessionsOKSMSSessionsItemParticipantsItemOwner) SetTo(v GetSmsSessionsOKSMSSessionsItemParticipantsItemOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetSmsSessionsOKSMSSessionsItemParticipantsItemOwner) Get() (v GetSmsSessionsOKSMSSessionsItemParticipantsItemOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetSmsSessionsOKSMSSessionsItemParticipantsItemOwner) Or(d GetSmsSessionsOKSMSSessionsItemParticipantsItemOwner) GetSmsSessionsOKSMSSessionsItemParticipantsItemOwner {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetVoicemailDetailsByCallIdOrCallLogIdOKTranscription returns new OptGetVoicemailDetailsByCallIdOrCallLogIdOKTranscription with value set to v.
func NewOptGetVoicemailDetailsByCallIdOrCallLogIdOKTranscription(v GetVoicemailDetailsByCallIdOrCallLogIdOKTranscription) OptGetVoicemailDetailsByCallIdOrCallLogIdOKTranscription {
	return OptGetVoicemailDetailsByCallIdOrCallLogIdOKTranscription{
		Value: v,
		Set:   true,
	}
}

// OptGetVoicemailDetailsByCallIdOrCallLogIdOKTranscription is optional GetVoicemailDetailsByCallIdOrCallLogIdOKTranscription.
type OptGetVoicemailDetailsByCallIdOrCallLogIdOKTranscription struct {
	Value GetVoicemailDetailsByCallIdOrCallLogIdOKTranscription
	Set   bool
}

// IsSet returns true if OptGetVoicemailDetailsByCallIdOrCallLogIdOKTranscription was set.
func (o OptGetVoicemailDetailsByCallIdOrCallLogIdOKTranscription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetVoicemailDetailsByCallIdOrCallLogIdOKTranscription) Reset() {
	var v GetVoicemailDetailsByCallIdOrCallLogIdOKTranscription
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetVoicemailDetailsByCallIdOrCallLogIdOKTranscription) SetTo(v GetVoicemailDetailsByCallIdOrCallLogIdOKTranscription) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetVoicemailDetailsByCallIdOrCallLogIdOKTranscription) Get() (v GetVoicemailDetailsByCallIdOrCallLogIdOKTranscription, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetVoicemailDetailsByCallIdOrCallLogIdOKTranscription) Or(d GetVoicemailDetailsByCallIdOrCallLogIdOKTranscription) GetVoicemailDetailsByCallIdOrCallLogIdOKTranscription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetVoicemailDetailsOKTranscription returns new OptGetVoicemailDetailsOKTranscription with value set to v.
func NewOptGetVoicemailDetailsOKTranscription(v GetVoicemailDetailsOKTranscription) OptGetVoicemailDetailsOKTranscription {
	return OptGetVoicemailDetailsOKTranscription{
		Value: v,
		Set:   true,
	}
}

// OptGetVoicemailDetailsOKTranscription is optional GetVoicemailDetailsOKTranscription.
type OptGetVoicemailDetailsOKTranscription struct {
	Value GetVoicemailDetailsOKTranscription
	Set   bool
}

// IsSet returns true if OptGetVoicemailDetailsOKTranscription was set.
func (o OptGetVoicemailDetailsOKTranscription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetVoicemailDetailsOKTranscription) Reset() {
	var v GetVoicemailDetailsOKTranscription
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetVoicemailDetailsOKTranscription) SetTo(v GetVoicemailDetailsOKTranscription) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetVoicemailDetailsOKTranscription) Get() (v GetVoicemailDetailsOKTranscription, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetVoicemailDetailsOKTranscription) Or(d GetVoicemailDetailsOKTranscription) GetVoicemailDetailsOKTranscription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetZoomRoomOKEmergencyAddress returns new OptGetZoomRoomOKEmergencyAddress with value set to v.
func NewOptGetZoomRoomOKEmergencyAddress(v GetZoomRoomOKEmergencyAddress) OptGetZoomRoomOKEmergencyAddress {
	return OptGetZoomRoomOKEmergencyAddress{
		Value: v,
		Set:   true,
	}
}

// OptGetZoomRoomOKEmergencyAddress is optional GetZoomRoomOKEmergencyAddress.
type OptGetZoomRoomOKEmergencyAddress struct {
	Value GetZoomRoomOKEmergencyAddress
	Set   bool
}

// IsSet returns true if OptGetZoomRoomOKEmergencyAddress was set.
func (o OptGetZoomRoomOKEmergencyAddress) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetZoomRoomOKEmergencyAddress) Reset() {
	var v GetZoomRoomOKEmergencyAddress
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetZoomRoomOKEmergencyAddress) SetTo(v GetZoomRoomOKEmergencyAddress) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetZoomRoomOKEmergencyAddress) Get() (v GetZoomRoomOKEmergencyAddress, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetZoomRoomOKEmergencyAddress) Or(d GetZoomRoomOKEmergencyAddress) GetZoomRoomOKEmergencyAddress {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetZoomRoomOKPolicy returns new OptGetZoomRoomOKPolicy with value set to v.
func NewOptGetZoomRoomOKPolicy(v GetZoomRoomOKPolicy) OptGetZoomRoomOKPolicy {
	return OptGetZoomRoomOKPolicy{
		Value: v,
		Set:   true,
	}
}

// OptGetZoomRoomOKPolicy is optional GetZoomRoomOKPolicy.
type OptGetZoomRoomOKPolicy struct {
	Value GetZoomRoomOKPolicy
	Set   bool
}

// IsSet returns true if OptGetZoomRoomOKPolicy was set.
func (o OptGetZoomRoomOKPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetZoomRoomOKPolicy) Reset() {
	var v GetZoomRoomOKPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetZoomRoomOKPolicy) SetTo(v GetZoomRoomOKPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetZoomRoomOKPolicy) Get() (v GetZoomRoomOKPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetZoomRoomOKPolicy) Or(d GetZoomRoomOKPolicy) GetZoomRoomOKPolicy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetZoomRoomOKPolicyInternationalCalling returns new OptGetZoomRoomOKPolicyInternationalCalling with value set to v.
func NewOptGetZoomRoomOKPolicyInternationalCalling(v GetZoomRoomOKPolicyInternationalCalling) OptGetZoomRoomOKPolicyInternationalCalling {
	return OptGetZoomRoomOKPolicyInternationalCalling{
		Value: v,
		Set:   true,
	}
}

// OptGetZoomRoomOKPolicyInternationalCalling is optional GetZoomRoomOKPolicyInternationalCalling.
type OptGetZoomRoomOKPolicyInternationalCalling struct {
	Value GetZoomRoomOKPolicyInternationalCalling
	Set   bool
}

// IsSet returns true if OptGetZoomRoomOKPolicyInternationalCalling was set.
func (o OptGetZoomRoomOKPolicyInternationalCalling) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetZoomRoomOKPolicyInternationalCalling) Reset() {
	var v GetZoomRoomOKPolicyInternationalCalling
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetZoomRoomOKPolicyInternationalCalling) SetTo(v GetZoomRoomOKPolicyInternationalCalling) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetZoomRoomOKPolicyInternationalCalling) Get() (v GetZoomRoomOKPolicyInternationalCalling, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetZoomRoomOKPolicyInternationalCalling) Or(d GetZoomRoomOKPolicyInternationalCalling) GetZoomRoomOKPolicyInternationalCalling {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetZoomRoomOKPolicySelectOutboundCallerID returns new OptGetZoomRoomOKPolicySelectOutboundCallerID with value set to v.
func NewOptGetZoomRoomOKPolicySelectOutboundCallerID(v GetZoomRoomOKPolicySelectOutboundCallerID) OptGetZoomRoomOKPolicySelectOutboundCallerID {
	return OptGetZoomRoomOKPolicySelectOutboundCallerID{
		Value: v,
		Set:   true,
	}
}

// OptGetZoomRoomOKPolicySelectOutboundCallerID is optional GetZoomRoomOKPolicySelectOutboundCallerID.
type OptGetZoomRoomOKPolicySelectOutboundCallerID struct {
	Value GetZoomRoomOKPolicySelectOutboundCallerID
	Set   bool
}

// IsSet returns true if OptGetZoomRoomOKPolicySelectOutboundCallerID was set.
func (o OptGetZoomRoomOKPolicySelectOutboundCallerID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetZoomRoomOKPolicySelectOutboundCallerID) Reset() {
	var v GetZoomRoomOKPolicySelectOutboundCallerID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetZoomRoomOKPolicySelectOutboundCallerID) SetTo(v GetZoomRoomOKPolicySelectOutboundCallerID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetZoomRoomOKPolicySelectOutboundCallerID) Get() (v GetZoomRoomOKPolicySelectOutboundCallerID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetZoomRoomOKPolicySelectOutboundCallerID) Or(d GetZoomRoomOKPolicySelectOutboundCallerID) GetZoomRoomOKPolicySelectOutboundCallerID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetZoomRoomOKSite returns new OptGetZoomRoomOKSite with value set to v.
func NewOptGetZoomRoomOKSite(v GetZoomRoomOKSite) OptGetZoomRoomOKSite {
	return OptGetZoomRoomOKSite{
		Value: v,
		Set:   true,
	}
}

// OptGetZoomRoomOKSite is optional GetZoomRoomOKSite.
type OptGetZoomRoomOKSite struct {
	Value GetZoomRoomOKSite
	Set   bool
}

// IsSet returns true if OptGetZoomRoomOKSite was set.
func (o OptGetZoomRoomOKSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetZoomRoomOKSite) Reset() {
	var v GetZoomRoomOKSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetZoomRoomOKSite) SetTo(v GetZoomRoomOKSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetZoomRoomOKSite) Get() (v GetZoomRoomOKSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetZoomRoomOKSite) Or(d GetZoomRoomOKSite) GetZoomRoomOKSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListAccountPhoneNumbersOKPhoneNumbersItemAssignee returns new OptListAccountPhoneNumbersOKPhoneNumbersItemAssignee with value set to v.
func NewOptListAccountPhoneNumbersOKPhoneNumbersItemAssignee(v ListAccountPhoneNumbersOKPhoneNumbersItemAssignee) OptListAccountPhoneNumbersOKPhoneNumbersItemAssignee {
	return OptListAccountPhoneNumbersOKPhoneNumbersItemAssignee{
		Value: v,
		Set:   true,
	}
}

// OptListAccountPhoneNumbersOKPhoneNumbersItemAssignee is optional ListAccountPhoneNumbersOKPhoneNumbersItemAssignee.
type OptListAccountPhoneNumbersOKPhoneNumbersItemAssignee struct {
	Value ListAccountPhoneNumbersOKPhoneNumbersItemAssignee
	Set   bool
}

// IsSet returns true if OptListAccountPhoneNumbersOKPhoneNumbersItemAssignee was set.
func (o OptListAccountPhoneNumbersOKPhoneNumbersItemAssignee) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListAccountPhoneNumbersOKPhoneNumbersItemAssignee) Reset() {
	var v ListAccountPhoneNumbersOKPhoneNumbersItemAssignee
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListAccountPhoneNumbersOKPhoneNumbersItemAssignee) SetTo(v ListAccountPhoneNumbersOKPhoneNumbersItemAssignee) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListAccountPhoneNumbersOKPhoneNumbersItemAssignee) Get() (v ListAccountPhoneNumbersOKPhoneNumbersItemAssignee, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListAccountPhoneNumbersOKPhoneNumbersItemAssignee) Or(d ListAccountPhoneNumbersOKPhoneNumbersItemAssignee) ListAccountPhoneNumbersOKPhoneNumbersItemAssignee {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListAccountPhoneNumbersOKPhoneNumbersItemCarrier returns new OptListAccountPhoneNumbersOKPhoneNumbersItemCarrier with value set to v.
func NewOptListAccountPhoneNumbersOKPhoneNumbersItemCarrier(v ListAccountPhoneNumbersOKPhoneNumbersItemCarrier) OptListAccountPhoneNumbersOKPhoneNumbersItemCarrier {
	return OptListAccountPhoneNumbersOKPhoneNumbersItemCarrier{
		Value: v,
		Set:   true,
	}
}

// OptListAccountPhoneNumbersOKPhoneNumbersItemCarrier is optional ListAccountPhoneNumbersOKPhoneNumbersItemCarrier.
type OptListAccountPhoneNumbersOKPhoneNumbersItemCarrier struct {
	Value ListAccountPhoneNumbersOKPhoneNumbersItemCarrier
	Set   bool
}

// IsSet returns true if OptListAccountPhoneNumbersOKPhoneNumbersItemCarrier was set.
func (o OptListAccountPhoneNumbersOKPhoneNumbersItemCarrier) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListAccountPhoneNumbersOKPhoneNumbersItemCarrier) Reset() {
	var v ListAccountPhoneNumbersOKPhoneNumbersItemCarrier
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListAccountPhoneNumbersOKPhoneNumbersItemCarrier) SetTo(v ListAccountPhoneNumbersOKPhoneNumbersItemCarrier) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListAccountPhoneNumbersOKPhoneNumbersItemCarrier) Get() (v ListAccountPhoneNumbersOKPhoneNumbersItemCarrier, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListAccountPhoneNumbersOKPhoneNumbersItemCarrier) Or(d ListAccountPhoneNumbersOKPhoneNumbersItemCarrier) ListAccountPhoneNumbersOKPhoneNumbersItemCarrier {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress returns new OptListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress with value set to v.
func NewOptListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress(v ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) OptListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress {
	return OptListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress{
		Value: v,
		Set:   true,
	}
}

// OptListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress is optional ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress.
type OptListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress struct {
	Value ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress
	Set   bool
}

// IsSet returns true if OptListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress was set.
func (o OptListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) Reset() {
	var v ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) SetTo(v ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) Get() (v ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) Or(d ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress) ListAccountPhoneNumbersOKPhoneNumbersItemEmergencyAddress {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListAccountPhoneNumbersOKPhoneNumbersItemSipGroup returns new OptListAccountPhoneNumbersOKPhoneNumbersItemSipGroup with value set to v.
func NewOptListAccountPhoneNumbersOKPhoneNumbersItemSipGroup(v ListAccountPhoneNumbersOKPhoneNumbersItemSipGroup) OptListAccountPhoneNumbersOKPhoneNumbersItemSipGroup {
	return OptListAccountPhoneNumbersOKPhoneNumbersItemSipGroup{
		Value: v,
		Set:   true,
	}
}

// OptListAccountPhoneNumbersOKPhoneNumbersItemSipGroup is optional ListAccountPhoneNumbersOKPhoneNumbersItemSipGroup.
type OptListAccountPhoneNumbersOKPhoneNumbersItemSipGroup struct {
	Value ListAccountPhoneNumbersOKPhoneNumbersItemSipGroup
	Set   bool
}

// IsSet returns true if OptListAccountPhoneNumbersOKPhoneNumbersItemSipGroup was set.
func (o OptListAccountPhoneNumbersOKPhoneNumbersItemSipGroup) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListAccountPhoneNumbersOKPhoneNumbersItemSipGroup) Reset() {
	var v ListAccountPhoneNumbersOKPhoneNumbersItemSipGroup
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListAccountPhoneNumbersOKPhoneNumbersItemSipGroup) SetTo(v ListAccountPhoneNumbersOKPhoneNumbersItemSipGroup) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListAccountPhoneNumbersOKPhoneNumbersItemSipGroup) Get() (v ListAccountPhoneNumbersOKPhoneNumbersItemSipGroup, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListAccountPhoneNumbersOKPhoneNumbersItemSipGroup) Or(d ListAccountPhoneNumbersOKPhoneNumbersItemSipGroup) ListAccountPhoneNumbersOKPhoneNumbersItemSipGroup {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListAccountPhoneNumbersOKPhoneNumbersItemSite returns new OptListAccountPhoneNumbersOKPhoneNumbersItemSite with value set to v.
func NewOptListAccountPhoneNumbersOKPhoneNumbersItemSite(v ListAccountPhoneNumbersOKPhoneNumbersItemSite) OptListAccountPhoneNumbersOKPhoneNumbersItemSite {
	return OptListAccountPhoneNumbersOKPhoneNumbersItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListAccountPhoneNumbersOKPhoneNumbersItemSite is optional ListAccountPhoneNumbersOKPhoneNumbersItemSite.
type OptListAccountPhoneNumbersOKPhoneNumbersItemSite struct {
	Value ListAccountPhoneNumbersOKPhoneNumbersItemSite
	Set   bool
}

// IsSet returns true if OptListAccountPhoneNumbersOKPhoneNumbersItemSite was set.
func (o OptListAccountPhoneNumbersOKPhoneNumbersItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListAccountPhoneNumbersOKPhoneNumbersItemSite) Reset() {
	var v ListAccountPhoneNumbersOKPhoneNumbersItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListAccountPhoneNumbersOKPhoneNumbersItemSite) SetTo(v ListAccountPhoneNumbersOKPhoneNumbersItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListAccountPhoneNumbersOKPhoneNumbersItemSite) Get() (v ListAccountPhoneNumbersOKPhoneNumbersItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListAccountPhoneNumbersOKPhoneNumbersItemSite) Or(d ListAccountPhoneNumbersOKPhoneNumbersItemSite) ListAccountPhoneNumbersOKPhoneNumbersItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListAccountSMSCampaignsOKSMSCampaignsItemBrand returns new OptListAccountSMSCampaignsOKSMSCampaignsItemBrand with value set to v.
func NewOptListAccountSMSCampaignsOKSMSCampaignsItemBrand(v ListAccountSMSCampaignsOKSMSCampaignsItemBrand) OptListAccountSMSCampaignsOKSMSCampaignsItemBrand {
	return OptListAccountSMSCampaignsOKSMSCampaignsItemBrand{
		Value: v,
		Set:   true,
	}
}

// OptListAccountSMSCampaignsOKSMSCampaignsItemBrand is optional ListAccountSMSCampaignsOKSMSCampaignsItemBrand.
type OptListAccountSMSCampaignsOKSMSCampaignsItemBrand struct {
	Value ListAccountSMSCampaignsOKSMSCampaignsItemBrand
	Set   bool
}

// IsSet returns true if OptListAccountSMSCampaignsOKSMSCampaignsItemBrand was set.
func (o OptListAccountSMSCampaignsOKSMSCampaignsItemBrand) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListAccountSMSCampaignsOKSMSCampaignsItemBrand) Reset() {
	var v ListAccountSMSCampaignsOKSMSCampaignsItemBrand
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListAccountSMSCampaignsOKSMSCampaignsItemBrand) SetTo(v ListAccountSMSCampaignsOKSMSCampaignsItemBrand) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListAccountSMSCampaignsOKSMSCampaignsItemBrand) Get() (v ListAccountSMSCampaignsOKSMSCampaignsItemBrand, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListAccountSMSCampaignsOKSMSCampaignsItemBrand) Or(d ListAccountSMSCampaignsOKSMSCampaignsItemBrand) ListAccountSMSCampaignsOKSMSCampaignsItemBrand {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListActivationCodesOKCommonAreasActivationCodesItemSite returns new OptListActivationCodesOKCommonAreasActivationCodesItemSite with value set to v.
func NewOptListActivationCodesOKCommonAreasActivationCodesItemSite(v ListActivationCodesOKCommonAreasActivationCodesItemSite) OptListActivationCodesOKCommonAreasActivationCodesItemSite {
	return OptListActivationCodesOKCommonAreasActivationCodesItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListActivationCodesOKCommonAreasActivationCodesItemSite is optional ListActivationCodesOKCommonAreasActivationCodesItemSite.
type OptListActivationCodesOKCommonAreasActivationCodesItemSite struct {
	Value ListActivationCodesOKCommonAreasActivationCodesItemSite
	Set   bool
}

// IsSet returns true if OptListActivationCodesOKCommonAreasActivationCodesItemSite was set.
func (o OptListActivationCodesOKCommonAreasActivationCodesItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListActivationCodesOKCommonAreasActivationCodesItemSite) Reset() {
	var v ListActivationCodesOKCommonAreasActivationCodesItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListActivationCodesOKCommonAreasActivationCodesItemSite) SetTo(v ListActivationCodesOKCommonAreasActivationCodesItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListActivationCodesOKCommonAreasActivationCodesItemSite) Get() (v ListActivationCodesOKCommonAreasActivationCodesItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListActivationCodesOKCommonAreasActivationCodesItemSite) Or(d ListActivationCodesOKCommonAreasActivationCodesItemSite) ListActivationCodesOKCommonAreasActivationCodesItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListAutoReceptionistsOKAutoReceptionistsItemSite returns new OptListAutoReceptionistsOKAutoReceptionistsItemSite with value set to v.
func NewOptListAutoReceptionistsOKAutoReceptionistsItemSite(v ListAutoReceptionistsOKAutoReceptionistsItemSite) OptListAutoReceptionistsOKAutoReceptionistsItemSite {
	return OptListAutoReceptionistsOKAutoReceptionistsItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListAutoReceptionistsOKAutoReceptionistsItemSite is optional ListAutoReceptionistsOKAutoReceptionistsItemSite.
type OptListAutoReceptionistsOKAutoReceptionistsItemSite struct {
	Value ListAutoReceptionistsOKAutoReceptionistsItemSite
	Set   bool
}

// IsSet returns true if OptListAutoReceptionistsOKAutoReceptionistsItemSite was set.
func (o OptListAutoReceptionistsOKAutoReceptionistsItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListAutoReceptionistsOKAutoReceptionistsItemSite) Reset() {
	var v ListAutoReceptionistsOKAutoReceptionistsItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListAutoReceptionistsOKAutoReceptionistsItemSite) SetTo(v ListAutoReceptionistsOKAutoReceptionistsItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListAutoReceptionistsOKAutoReceptionistsItemSite) Get() (v ListAutoReceptionistsOKAutoReceptionistsItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListAutoReceptionistsOKAutoReceptionistsItemSite) Or(d ListAutoReceptionistsOKAutoReceptionistsItemSite) ListAutoReceptionistsOKAutoReceptionistsItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListCallLogsMetricsOKCallLogsItemCallee returns new OptListCallLogsMetricsOKCallLogsItemCallee with value set to v.
func NewOptListCallLogsMetricsOKCallLogsItemCallee(v ListCallLogsMetricsOKCallLogsItemCallee) OptListCallLogsMetricsOKCallLogsItemCallee {
	return OptListCallLogsMetricsOKCallLogsItemCallee{
		Value: v,
		Set:   true,
	}
}

// OptListCallLogsMetricsOKCallLogsItemCallee is optional ListCallLogsMetricsOKCallLogsItemCallee.
type OptListCallLogsMetricsOKCallLogsItemCallee struct {
	Value ListCallLogsMetricsOKCallLogsItemCallee
	Set   bool
}

// IsSet returns true if OptListCallLogsMetricsOKCallLogsItemCallee was set.
func (o OptListCallLogsMetricsOKCallLogsItemCallee) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListCallLogsMetricsOKCallLogsItemCallee) Reset() {
	var v ListCallLogsMetricsOKCallLogsItemCallee
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListCallLogsMetricsOKCallLogsItemCallee) SetTo(v ListCallLogsMetricsOKCallLogsItemCallee) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListCallLogsMetricsOKCallLogsItemCallee) Get() (v ListCallLogsMetricsOKCallLogsItemCallee, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListCallLogsMetricsOKCallLogsItemCallee) Or(d ListCallLogsMetricsOKCallLogsItemCallee) ListCallLogsMetricsOKCallLogsItemCallee {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListCallLogsMetricsOKCallLogsItemCaller returns new OptListCallLogsMetricsOKCallLogsItemCaller with value set to v.
func NewOptListCallLogsMetricsOKCallLogsItemCaller(v ListCallLogsMetricsOKCallLogsItemCaller) OptListCallLogsMetricsOKCallLogsItemCaller {
	return OptListCallLogsMetricsOKCallLogsItemCaller{
		Value: v,
		Set:   true,
	}
}

// OptListCallLogsMetricsOKCallLogsItemCaller is optional ListCallLogsMetricsOKCallLogsItemCaller.
type OptListCallLogsMetricsOKCallLogsItemCaller struct {
	Value ListCallLogsMetricsOKCallLogsItemCaller
	Set   bool
}

// IsSet returns true if OptListCallLogsMetricsOKCallLogsItemCaller was set.
func (o OptListCallLogsMetricsOKCallLogsItemCaller) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListCallLogsMetricsOKCallLogsItemCaller) Reset() {
	var v ListCallLogsMetricsOKCallLogsItemCaller
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListCallLogsMetricsOKCallLogsItemCaller) SetTo(v ListCallLogsMetricsOKCallLogsItemCaller) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListCallLogsMetricsOKCallLogsItemCaller) Get() (v ListCallLogsMetricsOKCallLogsItemCaller, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListCallLogsMetricsOKCallLogsItemCaller) Or(d ListCallLogsMetricsOKCallLogsItemCaller) ListCallLogsMetricsOKCallLogsItemCaller {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListCallQueuesOKCallQueuesItemSite returns new OptListCallQueuesOKCallQueuesItemSite with value set to v.
func NewOptListCallQueuesOKCallQueuesItemSite(v ListCallQueuesOKCallQueuesItemSite) OptListCallQueuesOKCallQueuesItemSite {
	return OptListCallQueuesOKCallQueuesItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListCallQueuesOKCallQueuesItemSite is optional ListCallQueuesOKCallQueuesItemSite.
type OptListCallQueuesOKCallQueuesItemSite struct {
	Value ListCallQueuesOKCallQueuesItemSite
	Set   bool
}

// IsSet returns true if OptListCallQueuesOKCallQueuesItemSite was set.
func (o OptListCallQueuesOKCallQueuesItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListCallQueuesOKCallQueuesItemSite) Reset() {
	var v ListCallQueuesOKCallQueuesItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListCallQueuesOKCallQueuesItemSite) SetTo(v ListCallQueuesOKCallQueuesItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListCallQueuesOKCallQueuesItemSite) Get() (v ListCallQueuesOKCallQueuesItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListCallQueuesOKCallQueuesItemSite) Or(d ListCallQueuesOKCallQueuesItemSite) ListCallQueuesOKCallQueuesItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListCommonAreasOKCommonAreasItemSite returns new OptListCommonAreasOKCommonAreasItemSite with value set to v.
func NewOptListCommonAreasOKCommonAreasItemSite(v ListCommonAreasOKCommonAreasItemSite) OptListCommonAreasOKCommonAreasItemSite {
	return OptListCommonAreasOKCommonAreasItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListCommonAreasOKCommonAreasItemSite is optional ListCommonAreasOKCommonAreasItemSite.
type OptListCommonAreasOKCommonAreasItemSite struct {
	Value ListCommonAreasOKCommonAreasItemSite
	Set   bool
}

// IsSet returns true if OptListCommonAreasOKCommonAreasItemSite was set.
func (o OptListCommonAreasOKCommonAreasItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListCommonAreasOKCommonAreasItemSite) Reset() {
	var v ListCommonAreasOKCommonAreasItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListCommonAreasOKCommonAreasItemSite) SetTo(v ListCommonAreasOKCommonAreasItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListCommonAreasOKCommonAreasItemSite) Get() (v ListCommonAreasOKCommonAreasItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListCommonAreasOKCommonAreasItemSite) Or(d ListCommonAreasOKCommonAreasItemSite) ListCommonAreasOKCommonAreasItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite returns new OptListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite with value set to v.
func NewOptListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite(v ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) OptListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite {
	return OptListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite is optional ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite.
type OptListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite struct {
	Value ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite
	Set   bool
}

// IsSet returns true if OptListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite was set.
func (o OptListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) Reset() {
	var v ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) SetTo(v ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) Get() (v ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) Or(d ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) ListCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListEmergencyAddressesOKEmergencyAddressesItemOwner returns new OptListEmergencyAddressesOKEmergencyAddressesItemOwner with value set to v.
func NewOptListEmergencyAddressesOKEmergencyAddressesItemOwner(v ListEmergencyAddressesOKEmergencyAddressesItemOwner) OptListEmergencyAddressesOKEmergencyAddressesItemOwner {
	return OptListEmergencyAddressesOKEmergencyAddressesItemOwner{
		Value: v,
		Set:   true,
	}
}

// OptListEmergencyAddressesOKEmergencyAddressesItemOwner is optional ListEmergencyAddressesOKEmergencyAddressesItemOwner.
type OptListEmergencyAddressesOKEmergencyAddressesItemOwner struct {
	Value ListEmergencyAddressesOKEmergencyAddressesItemOwner
	Set   bool
}

// IsSet returns true if OptListEmergencyAddressesOKEmergencyAddressesItemOwner was set.
func (o OptListEmergencyAddressesOKEmergencyAddressesItemOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListEmergencyAddressesOKEmergencyAddressesItemOwner) Reset() {
	var v ListEmergencyAddressesOKEmergencyAddressesItemOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListEmergencyAddressesOKEmergencyAddressesItemOwner) SetTo(v ListEmergencyAddressesOKEmergencyAddressesItemOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListEmergencyAddressesOKEmergencyAddressesItemOwner) Get() (v ListEmergencyAddressesOKEmergencyAddressesItemOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListEmergencyAddressesOKEmergencyAddressesItemOwner) Or(d ListEmergencyAddressesOKEmergencyAddressesItemOwner) ListEmergencyAddressesOKEmergencyAddressesItemOwner {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListEmergencyAddressesOKEmergencyAddressesItemSite returns new OptListEmergencyAddressesOKEmergencyAddressesItemSite with value set to v.
func NewOptListEmergencyAddressesOKEmergencyAddressesItemSite(v ListEmergencyAddressesOKEmergencyAddressesItemSite) OptListEmergencyAddressesOKEmergencyAddressesItemSite {
	return OptListEmergencyAddressesOKEmergencyAddressesItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListEmergencyAddressesOKEmergencyAddressesItemSite is optional ListEmergencyAddressesOKEmergencyAddressesItemSite.
type OptListEmergencyAddressesOKEmergencyAddressesItemSite struct {
	Value ListEmergencyAddressesOKEmergencyAddressesItemSite
	Set   bool
}

// IsSet returns true if OptListEmergencyAddressesOKEmergencyAddressesItemSite was set.
func (o OptListEmergencyAddressesOKEmergencyAddressesItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListEmergencyAddressesOKEmergencyAddressesItemSite) Reset() {
	var v ListEmergencyAddressesOKEmergencyAddressesItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListEmergencyAddressesOKEmergencyAddressesItemSite) SetTo(v ListEmergencyAddressesOKEmergencyAddressesItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListEmergencyAddressesOKEmergencyAddressesItemSite) Get() (v ListEmergencyAddressesOKEmergencyAddressesItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListEmergencyAddressesOKEmergencyAddressesItemSite) Or(d ListEmergencyAddressesOKEmergencyAddressesItemSite) ListEmergencyAddressesOKEmergencyAddressesItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListGCPOKGroupCallPickupItemSite returns new OptListGCPOKGroupCallPickupItemSite with value set to v.
func NewOptListGCPOKGroupCallPickupItemSite(v ListGCPOKGroupCallPickupItemSite) OptListGCPOKGroupCallPickupItemSite {
	return OptListGCPOKGroupCallPickupItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListGCPOKGroupCallPickupItemSite is optional ListGCPOKGroupCallPickupItemSite.
type OptListGCPOKGroupCallPickupItemSite struct {
	Value ListGCPOKGroupCallPickupItemSite
	Set   bool
}

// IsSet returns true if OptListGCPOKGroupCallPickupItemSite was set.
func (o OptListGCPOKGroupCallPickupItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListGCPOKGroupCallPickupItemSite) Reset() {
	var v ListGCPOKGroupCallPickupItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListGCPOKGroupCallPickupItemSite) SetTo(v ListGCPOKGroupCallPickupItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListGCPOKGroupCallPickupItemSite) Get() (v ListGCPOKGroupCallPickupItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListGCPOKGroupCallPickupItemSite) Or(d ListGCPOKGroupCallPickupItemSite) ListGCPOKGroupCallPickupItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListLineKeySettingOKLineKeysItemKeyAssignment returns new OptListLineKeySettingOKLineKeysItemKeyAssignment with value set to v.
func NewOptListLineKeySettingOKLineKeysItemKeyAssignment(v ListLineKeySettingOKLineKeysItemKeyAssignment) OptListLineKeySettingOKLineKeysItemKeyAssignment {
	return OptListLineKeySettingOKLineKeysItemKeyAssignment{
		Value: v,
		Set:   true,
	}
}

// OptListLineKeySettingOKLineKeysItemKeyAssignment is optional ListLineKeySettingOKLineKeysItemKeyAssignment.
type OptListLineKeySettingOKLineKeysItemKeyAssignment struct {
	Value ListLineKeySettingOKLineKeysItemKeyAssignment
	Set   bool
}

// IsSet returns true if OptListLineKeySettingOKLineKeysItemKeyAssignment was set.
func (o OptListLineKeySettingOKLineKeysItemKeyAssignment) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListLineKeySettingOKLineKeysItemKeyAssignment) Reset() {
	var v ListLineKeySettingOKLineKeysItemKeyAssignment
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListLineKeySettingOKLineKeysItemKeyAssignment) SetTo(v ListLineKeySettingOKLineKeysItemKeyAssignment) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListLineKeySettingOKLineKeysItemKeyAssignment) Get() (v ListLineKeySettingOKLineKeysItemKeyAssignment, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListLineKeySettingOKLineKeysItemKeyAssignment) Or(d ListLineKeySettingOKLineKeysItemKeyAssignment) ListLineKeySettingOKLineKeysItemKeyAssignment {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListLocationsOKLocationsItemElin returns new OptListLocationsOKLocationsItemElin with value set to v.
func NewOptListLocationsOKLocationsItemElin(v ListLocationsOKLocationsItemElin) OptListLocationsOKLocationsItemElin {
	return OptListLocationsOKLocationsItemElin{
		Value: v,
		Set:   true,
	}
}

// OptListLocationsOKLocationsItemElin is optional ListLocationsOKLocationsItemElin.
type OptListLocationsOKLocationsItemElin struct {
	Value ListLocationsOKLocationsItemElin
	Set   bool
}

// IsSet returns true if OptListLocationsOKLocationsItemElin was set.
func (o OptListLocationsOKLocationsItemElin) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListLocationsOKLocationsItemElin) Reset() {
	var v ListLocationsOKLocationsItemElin
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListLocationsOKLocationsItemElin) SetTo(v ListLocationsOKLocationsItemElin) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListLocationsOKLocationsItemElin) Get() (v ListLocationsOKLocationsItemElin, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListLocationsOKLocationsItemElin) Or(d ListLocationsOKLocationsItemElin) ListLocationsOKLocationsItemElin {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListLocationsOKLocationsItemEmergencyAddress returns new OptListLocationsOKLocationsItemEmergencyAddress with value set to v.
func NewOptListLocationsOKLocationsItemEmergencyAddress(v ListLocationsOKLocationsItemEmergencyAddress) OptListLocationsOKLocationsItemEmergencyAddress {
	return OptListLocationsOKLocationsItemEmergencyAddress{
		Value: v,
		Set:   true,
	}
}

// OptListLocationsOKLocationsItemEmergencyAddress is optional ListLocationsOKLocationsItemEmergencyAddress.
type OptListLocationsOKLocationsItemEmergencyAddress struct {
	Value ListLocationsOKLocationsItemEmergencyAddress
	Set   bool
}

// IsSet returns true if OptListLocationsOKLocationsItemEmergencyAddress was set.
func (o OptListLocationsOKLocationsItemEmergencyAddress) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListLocationsOKLocationsItemEmergencyAddress) Reset() {
	var v ListLocationsOKLocationsItemEmergencyAddress
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListLocationsOKLocationsItemEmergencyAddress) SetTo(v ListLocationsOKLocationsItemEmergencyAddress) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListLocationsOKLocationsItemEmergencyAddress) Get() (v ListLocationsOKLocationsItemEmergencyAddress, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListLocationsOKLocationsItemEmergencyAddress) Or(d ListLocationsOKLocationsItemEmergencyAddress) ListLocationsOKLocationsItemEmergencyAddress {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListLocationsOKLocationsItemSipGroup returns new OptListLocationsOKLocationsItemSipGroup with value set to v.
func NewOptListLocationsOKLocationsItemSipGroup(v ListLocationsOKLocationsItemSipGroup) OptListLocationsOKLocationsItemSipGroup {
	return OptListLocationsOKLocationsItemSipGroup{
		Value: v,
		Set:   true,
	}
}

// OptListLocationsOKLocationsItemSipGroup is optional ListLocationsOKLocationsItemSipGroup.
type OptListLocationsOKLocationsItemSipGroup struct {
	Value ListLocationsOKLocationsItemSipGroup
	Set   bool
}

// IsSet returns true if OptListLocationsOKLocationsItemSipGroup was set.
func (o OptListLocationsOKLocationsItemSipGroup) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListLocationsOKLocationsItemSipGroup) Reset() {
	var v ListLocationsOKLocationsItemSipGroup
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListLocationsOKLocationsItemSipGroup) SetTo(v ListLocationsOKLocationsItemSipGroup) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListLocationsOKLocationsItemSipGroup) Get() (v ListLocationsOKLocationsItemSipGroup, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListLocationsOKLocationsItemSipGroup) Or(d ListLocationsOKLocationsItemSipGroup) ListLocationsOKLocationsItemSipGroup {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListLocationsOKLocationsItemSite returns new OptListLocationsOKLocationsItemSite with value set to v.
func NewOptListLocationsOKLocationsItemSite(v ListLocationsOKLocationsItemSite) OptListLocationsOKLocationsItemSite {
	return OptListLocationsOKLocationsItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListLocationsOKLocationsItemSite is optional ListLocationsOKLocationsItemSite.
type OptListLocationsOKLocationsItemSite struct {
	Value ListLocationsOKLocationsItemSite
	Set   bool
}

// IsSet returns true if OptListLocationsOKLocationsItemSite was set.
func (o OptListLocationsOKLocationsItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListLocationsOKLocationsItemSite) Reset() {
	var v ListLocationsOKLocationsItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListLocationsOKLocationsItemSite) SetTo(v ListLocationsOKLocationsItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListLocationsOKLocationsItemSite) Get() (v ListLocationsOKLocationsItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListLocationsOKLocationsItemSite) Or(d ListLocationsOKLocationsItemSite) ListLocationsOKLocationsItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListMonitoringGroupOKMonitoringGroupsItemSite returns new OptListMonitoringGroupOKMonitoringGroupsItemSite with value set to v.
func NewOptListMonitoringGroupOKMonitoringGroupsItemSite(v ListMonitoringGroupOKMonitoringGroupsItemSite) OptListMonitoringGroupOKMonitoringGroupsItemSite {
	return OptListMonitoringGroupOKMonitoringGroupsItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListMonitoringGroupOKMonitoringGroupsItemSite is optional ListMonitoringGroupOKMonitoringGroupsItemSite.
type OptListMonitoringGroupOKMonitoringGroupsItemSite struct {
	Value ListMonitoringGroupOKMonitoringGroupsItemSite
	Set   bool
}

// IsSet returns true if OptListMonitoringGroupOKMonitoringGroupsItemSite was set.
func (o OptListMonitoringGroupOKMonitoringGroupsItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListMonitoringGroupOKMonitoringGroupsItemSite) Reset() {
	var v ListMonitoringGroupOKMonitoringGroupsItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListMonitoringGroupOKMonitoringGroupsItemSite) SetTo(v ListMonitoringGroupOKMonitoringGroupsItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListMonitoringGroupOKMonitoringGroupsItemSite) Get() (v ListMonitoringGroupOKMonitoringGroupsItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListMonitoringGroupOKMonitoringGroupsItemSite) Or(d ListMonitoringGroupOKMonitoringGroupsItemSite) ListMonitoringGroupOKMonitoringGroupsItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListPastCallMetricsOKCallLogsItemCallee returns new OptListPastCallMetricsOKCallLogsItemCallee with value set to v.
func NewOptListPastCallMetricsOKCallLogsItemCallee(v ListPastCallMetricsOKCallLogsItemCallee) OptListPastCallMetricsOKCallLogsItemCallee {
	return OptListPastCallMetricsOKCallLogsItemCallee{
		Value: v,
		Set:   true,
	}
}

// OptListPastCallMetricsOKCallLogsItemCallee is optional ListPastCallMetricsOKCallLogsItemCallee.
type OptListPastCallMetricsOKCallLogsItemCallee struct {
	Value ListPastCallMetricsOKCallLogsItemCallee
	Set   bool
}

// IsSet returns true if OptListPastCallMetricsOKCallLogsItemCallee was set.
func (o OptListPastCallMetricsOKCallLogsItemCallee) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListPastCallMetricsOKCallLogsItemCallee) Reset() {
	var v ListPastCallMetricsOKCallLogsItemCallee
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListPastCallMetricsOKCallLogsItemCallee) SetTo(v ListPastCallMetricsOKCallLogsItemCallee) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListPastCallMetricsOKCallLogsItemCallee) Get() (v ListPastCallMetricsOKCallLogsItemCallee, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListPastCallMetricsOKCallLogsItemCallee) Or(d ListPastCallMetricsOKCallLogsItemCallee) ListPastCallMetricsOKCallLogsItemCallee {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListPastCallMetricsOKCallLogsItemCaller returns new OptListPastCallMetricsOKCallLogsItemCaller with value set to v.
func NewOptListPastCallMetricsOKCallLogsItemCaller(v ListPastCallMetricsOKCallLogsItemCaller) OptListPastCallMetricsOKCallLogsItemCaller {
	return OptListPastCallMetricsOKCallLogsItemCaller{
		Value: v,
		Set:   true,
	}
}

// OptListPastCallMetricsOKCallLogsItemCaller is optional ListPastCallMetricsOKCallLogsItemCaller.
type OptListPastCallMetricsOKCallLogsItemCaller struct {
	Value ListPastCallMetricsOKCallLogsItemCaller
	Set   bool
}

// IsSet returns true if OptListPastCallMetricsOKCallLogsItemCaller was set.
func (o OptListPastCallMetricsOKCallLogsItemCaller) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListPastCallMetricsOKCallLogsItemCaller) Reset() {
	var v ListPastCallMetricsOKCallLogsItemCaller
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListPastCallMetricsOKCallLogsItemCaller) SetTo(v ListPastCallMetricsOKCallLogsItemCaller) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListPastCallMetricsOKCallLogsItemCaller) Get() (v ListPastCallMetricsOKCallLogsItemCaller, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListPastCallMetricsOKCallLogsItemCaller) Or(d ListPastCallMetricsOKCallLogsItemCaller) ListPastCallMetricsOKCallLogsItemCaller {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListPhoneDevicesOKDevicesItemAssignee returns new OptListPhoneDevicesOKDevicesItemAssignee with value set to v.
func NewOptListPhoneDevicesOKDevicesItemAssignee(v ListPhoneDevicesOKDevicesItemAssignee) OptListPhoneDevicesOKDevicesItemAssignee {
	return OptListPhoneDevicesOKDevicesItemAssignee{
		Value: v,
		Set:   true,
	}
}

// OptListPhoneDevicesOKDevicesItemAssignee is optional ListPhoneDevicesOKDevicesItemAssignee.
type OptListPhoneDevicesOKDevicesItemAssignee struct {
	Value ListPhoneDevicesOKDevicesItemAssignee
	Set   bool
}

// IsSet returns true if OptListPhoneDevicesOKDevicesItemAssignee was set.
func (o OptListPhoneDevicesOKDevicesItemAssignee) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListPhoneDevicesOKDevicesItemAssignee) Reset() {
	var v ListPhoneDevicesOKDevicesItemAssignee
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListPhoneDevicesOKDevicesItemAssignee) SetTo(v ListPhoneDevicesOKDevicesItemAssignee) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListPhoneDevicesOKDevicesItemAssignee) Get() (v ListPhoneDevicesOKDevicesItemAssignee, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListPhoneDevicesOKDevicesItemAssignee) Or(d ListPhoneDevicesOKDevicesItemAssignee) ListPhoneDevicesOKDevicesItemAssignee {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListPhoneDevicesOKDevicesItemSite returns new OptListPhoneDevicesOKDevicesItemSite with value set to v.
func NewOptListPhoneDevicesOKDevicesItemSite(v ListPhoneDevicesOKDevicesItemSite) OptListPhoneDevicesOKDevicesItemSite {
	return OptListPhoneDevicesOKDevicesItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListPhoneDevicesOKDevicesItemSite is optional ListPhoneDevicesOKDevicesItemSite.
type OptListPhoneDevicesOKDevicesItemSite struct {
	Value ListPhoneDevicesOKDevicesItemSite
	Set   bool
}

// IsSet returns true if OptListPhoneDevicesOKDevicesItemSite was set.
func (o OptListPhoneDevicesOKDevicesItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListPhoneDevicesOKDevicesItemSite) Reset() {
	var v ListPhoneDevicesOKDevicesItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListPhoneDevicesOKDevicesItemSite) SetTo(v ListPhoneDevicesOKDevicesItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListPhoneDevicesOKDevicesItemSite) Get() (v ListPhoneDevicesOKDevicesItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListPhoneDevicesOKDevicesItemSite) Or(d ListPhoneDevicesOKDevicesItemSite) ListPhoneDevicesOKDevicesItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListPhoneSitesOKSitesItemCountry returns new OptListPhoneSitesOKSitesItemCountry with value set to v.
func NewOptListPhoneSitesOKSitesItemCountry(v ListPhoneSitesOKSitesItemCountry) OptListPhoneSitesOKSitesItemCountry {
	return OptListPhoneSitesOKSitesItemCountry{
		Value: v,
		Set:   true,
	}
}

// OptListPhoneSitesOKSitesItemCountry is optional ListPhoneSitesOKSitesItemCountry.
type OptListPhoneSitesOKSitesItemCountry struct {
	Value ListPhoneSitesOKSitesItemCountry
	Set   bool
}

// IsSet returns true if OptListPhoneSitesOKSitesItemCountry was set.
func (o OptListPhoneSitesOKSitesItemCountry) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListPhoneSitesOKSitesItemCountry) Reset() {
	var v ListPhoneSitesOKSitesItemCountry
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListPhoneSitesOKSitesItemCountry) SetTo(v ListPhoneSitesOKSitesItemCountry) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListPhoneSitesOKSitesItemCountry) Get() (v ListPhoneSitesOKSitesItemCountry, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListPhoneSitesOKSitesItemCountry) Or(d ListPhoneSitesOKSitesItemCountry) ListPhoneSitesOKSitesItemCountry {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListPhoneSitesOKSitesItemMainAutoReceptionist returns new OptListPhoneSitesOKSitesItemMainAutoReceptionist with value set to v.
func NewOptListPhoneSitesOKSitesItemMainAutoReceptionist(v ListPhoneSitesOKSitesItemMainAutoReceptionist) OptListPhoneSitesOKSitesItemMainAutoReceptionist {
	return OptListPhoneSitesOKSitesItemMainAutoReceptionist{
		Value: v,
		Set:   true,
	}
}

// OptListPhoneSitesOKSitesItemMainAutoReceptionist is optional ListPhoneSitesOKSitesItemMainAutoReceptionist.
type OptListPhoneSitesOKSitesItemMainAutoReceptionist struct {
	Value ListPhoneSitesOKSitesItemMainAutoReceptionist
	Set   bool
}

// IsSet returns true if OptListPhoneSitesOKSitesItemMainAutoReceptionist was set.
func (o OptListPhoneSitesOKSitesItemMainAutoReceptionist) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListPhoneSitesOKSitesItemMainAutoReceptionist) Reset() {
	var v ListPhoneSitesOKSitesItemMainAutoReceptionist
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListPhoneSitesOKSitesItemMainAutoReceptionist) SetTo(v ListPhoneSitesOKSitesItemMainAutoReceptionist) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListPhoneSitesOKSitesItemMainAutoReceptionist) Get() (v ListPhoneSitesOKSitesItemMainAutoReceptionist, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListPhoneSitesOKSitesItemMainAutoReceptionist) Or(d ListPhoneSitesOKSitesItemMainAutoReceptionist) ListPhoneSitesOKSitesItemMainAutoReceptionist {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListPhoneUsersOKUsersItemSite returns new OptListPhoneUsersOKUsersItemSite with value set to v.
func NewOptListPhoneUsersOKUsersItemSite(v ListPhoneUsersOKUsersItemSite) OptListPhoneUsersOKUsersItemSite {
	return OptListPhoneUsersOKUsersItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListPhoneUsersOKUsersItemSite is optional ListPhoneUsersOKUsersItemSite.
type OptListPhoneUsersOKUsersItemSite struct {
	Value ListPhoneUsersOKUsersItemSite
	Set   bool
}

// IsSet returns true if OptListPhoneUsersOKUsersItemSite was set.
func (o OptListPhoneUsersOKUsersItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListPhoneUsersOKUsersItemSite) Reset() {
	var v ListPhoneUsersOKUsersItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListPhoneUsersOKUsersItemSite) SetTo(v ListPhoneUsersOKUsersItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListPhoneUsersOKUsersItemSite) Get() (v ListPhoneUsersOKUsersItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListPhoneUsersOKUsersItemSite) Or(d ListPhoneUsersOKUsersItemSite) ListPhoneUsersOKUsersItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListRoleMembersOKMembersItemSite returns new OptListRoleMembersOKMembersItemSite with value set to v.
func NewOptListRoleMembersOKMembersItemSite(v ListRoleMembersOKMembersItemSite) OptListRoleMembersOKMembersItemSite {
	return OptListRoleMembersOKMembersItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListRoleMembersOKMembersItemSite is optional ListRoleMembersOKMembersItemSite.
type OptListRoleMembersOKMembersItemSite struct {
	Value ListRoleMembersOKMembersItemSite
	Set   bool
}

// IsSet returns true if OptListRoleMembersOKMembersItemSite was set.
func (o OptListRoleMembersOKMembersItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListRoleMembersOKMembersItemSite) Reset() {
	var v ListRoleMembersOKMembersItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListRoleMembersOKMembersItemSite) SetTo(v ListRoleMembersOKMembersItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListRoleMembersOKMembersItemSite) Get() (v ListRoleMembersOKMembersItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListRoleMembersOKMembersItemSite) Or(d ListRoleMembersOKMembersItemSite) ListRoleMembersOKMembersItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListRoutingRuleOKItemRoutingPath returns new OptListRoutingRuleOKItemRoutingPath with value set to v.
func NewOptListRoutingRuleOKItemRoutingPath(v ListRoutingRuleOKItemRoutingPath) OptListRoutingRuleOKItemRoutingPath {
	return OptListRoutingRuleOKItemRoutingPath{
		Value: v,
		Set:   true,
	}
}

// OptListRoutingRuleOKItemRoutingPath is optional ListRoutingRuleOKItemRoutingPath.
type OptListRoutingRuleOKItemRoutingPath struct {
	Value ListRoutingRuleOKItemRoutingPath
	Set   bool
}

// IsSet returns true if OptListRoutingRuleOKItemRoutingPath was set.
func (o OptListRoutingRuleOKItemRoutingPath) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListRoutingRuleOKItemRoutingPath) Reset() {
	var v ListRoutingRuleOKItemRoutingPath
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListRoutingRuleOKItemRoutingPath) SetTo(v ListRoutingRuleOKItemRoutingPath) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListRoutingRuleOKItemRoutingPath) Get() (v ListRoutingRuleOKItemRoutingPath, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListRoutingRuleOKItemRoutingPath) Or(d ListRoutingRuleOKItemRoutingPath) ListRoutingRuleOKItemRoutingPath {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListRoutingRuleOKItemRoutingPathSipGroup returns new OptListRoutingRuleOKItemRoutingPathSipGroup with value set to v.
func NewOptListRoutingRuleOKItemRoutingPathSipGroup(v ListRoutingRuleOKItemRoutingPathSipGroup) OptListRoutingRuleOKItemRoutingPathSipGroup {
	return OptListRoutingRuleOKItemRoutingPathSipGroup{
		Value: v,
		Set:   true,
	}
}

// OptListRoutingRuleOKItemRoutingPathSipGroup is optional ListRoutingRuleOKItemRoutingPathSipGroup.
type OptListRoutingRuleOKItemRoutingPathSipGroup struct {
	Value ListRoutingRuleOKItemRoutingPathSipGroup
	Set   bool
}

// IsSet returns true if OptListRoutingRuleOKItemRoutingPathSipGroup was set.
func (o OptListRoutingRuleOKItemRoutingPathSipGroup) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListRoutingRuleOKItemRoutingPathSipGroup) Reset() {
	var v ListRoutingRuleOKItemRoutingPathSipGroup
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListRoutingRuleOKItemRoutingPathSipGroup) SetTo(v ListRoutingRuleOKItemRoutingPathSipGroup) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListRoutingRuleOKItemRoutingPathSipGroup) Get() (v ListRoutingRuleOKItemRoutingPathSipGroup, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListRoutingRuleOKItemRoutingPathSipGroup) Or(d ListRoutingRuleOKItemRoutingPathSipGroup) ListRoutingRuleOKItemRoutingPathSipGroup {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListSharedLineAppearancesOKSharedLineAppearancesItemExecutive returns new OptListSharedLineAppearancesOKSharedLineAppearancesItemExecutive with value set to v.
func NewOptListSharedLineAppearancesOKSharedLineAppearancesItemExecutive(v ListSharedLineAppearancesOKSharedLineAppearancesItemExecutive) OptListSharedLineAppearancesOKSharedLineAppearancesItemExecutive {
	return OptListSharedLineAppearancesOKSharedLineAppearancesItemExecutive{
		Value: v,
		Set:   true,
	}
}

// OptListSharedLineAppearancesOKSharedLineAppearancesItemExecutive is optional ListSharedLineAppearancesOKSharedLineAppearancesItemExecutive.
type OptListSharedLineAppearancesOKSharedLineAppearancesItemExecutive struct {
	Value ListSharedLineAppearancesOKSharedLineAppearancesItemExecutive
	Set   bool
}

// IsSet returns true if OptListSharedLineAppearancesOKSharedLineAppearancesItemExecutive was set.
func (o OptListSharedLineAppearancesOKSharedLineAppearancesItemExecutive) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListSharedLineAppearancesOKSharedLineAppearancesItemExecutive) Reset() {
	var v ListSharedLineAppearancesOKSharedLineAppearancesItemExecutive
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListSharedLineAppearancesOKSharedLineAppearancesItemExecutive) SetTo(v ListSharedLineAppearancesOKSharedLineAppearancesItemExecutive) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListSharedLineAppearancesOKSharedLineAppearancesItemExecutive) Get() (v ListSharedLineAppearancesOKSharedLineAppearancesItemExecutive, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListSharedLineAppearancesOKSharedLineAppearancesItemExecutive) Or(d ListSharedLineAppearancesOKSharedLineAppearancesItemExecutive) ListSharedLineAppearancesOKSharedLineAppearancesItemExecutive {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListSharedLineGroupsOKSharedLineGroupsItemSite returns new OptListSharedLineGroupsOKSharedLineGroupsItemSite with value set to v.
func NewOptListSharedLineGroupsOKSharedLineGroupsItemSite(v ListSharedLineGroupsOKSharedLineGroupsItemSite) OptListSharedLineGroupsOKSharedLineGroupsItemSite {
	return OptListSharedLineGroupsOKSharedLineGroupsItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListSharedLineGroupsOKSharedLineGroupsItemSite is optional ListSharedLineGroupsOKSharedLineGroupsItemSite.
type OptListSharedLineGroupsOKSharedLineGroupsItemSite struct {
	Value ListSharedLineGroupsOKSharedLineGroupsItemSite
	Set   bool
}

// IsSet returns true if OptListSharedLineGroupsOKSharedLineGroupsItemSite was set.
func (o OptListSharedLineGroupsOKSharedLineGroupsItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListSharedLineGroupsOKSharedLineGroupsItemSite) Reset() {
	var v ListSharedLineGroupsOKSharedLineGroupsItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListSharedLineGroupsOKSharedLineGroupsItemSite) SetTo(v ListSharedLineGroupsOKSharedLineGroupsItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListSharedLineGroupsOKSharedLineGroupsItemSite) Get() (v ListSharedLineGroupsOKSharedLineGroupsItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListSharedLineGroupsOKSharedLineGroupsItemSite) Or(d ListSharedLineGroupsOKSharedLineGroupsItemSite) ListSharedLineGroupsOKSharedLineGroupsItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListSipGroupsOKSipGroupsItemSipTrunk returns new OptListSipGroupsOKSipGroupsItemSipTrunk with value set to v.
func NewOptListSipGroupsOKSipGroupsItemSipTrunk(v ListSipGroupsOKSipGroupsItemSipTrunk) OptListSipGroupsOKSipGroupsItemSipTrunk {
	return OptListSipGroupsOKSipGroupsItemSipTrunk{
		Value: v,
		Set:   true,
	}
}

// OptListSipGroupsOKSipGroupsItemSipTrunk is optional ListSipGroupsOKSipGroupsItemSipTrunk.
type OptListSipGroupsOKSipGroupsItemSipTrunk struct {
	Value ListSipGroupsOKSipGroupsItemSipTrunk
	Set   bool
}

// IsSet returns true if OptListSipGroupsOKSipGroupsItemSipTrunk was set.
func (o OptListSipGroupsOKSipGroupsItemSipTrunk) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListSipGroupsOKSipGroupsItemSipTrunk) Reset() {
	var v ListSipGroupsOKSipGroupsItemSipTrunk
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListSipGroupsOKSipGroupsItemSipTrunk) SetTo(v ListSipGroupsOKSipGroupsItemSipTrunk) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListSipGroupsOKSipGroupsItemSipTrunk) Get() (v ListSipGroupsOKSipGroupsItemSipTrunk, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListSipGroupsOKSipGroupsItemSipTrunk) Or(d ListSipGroupsOKSipGroupsItemSipTrunk) ListSipGroupsOKSipGroupsItemSipTrunk {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite returns new OptListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite with value set to v.
func NewOptListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite(v ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) OptListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite {
	return OptListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite is optional ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite.
type OptListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite struct {
	Value ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite
	Set   bool
}

// IsSet returns true if OptListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite was set.
func (o OptListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) Reset() {
	var v ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) SetTo(v ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) Get() (v ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) Or(d ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) ListSiteCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListTrackedLocationsOKLocationTrackingItemDevice returns new OptListTrackedLocationsOKLocationTrackingItemDevice with value set to v.
func NewOptListTrackedLocationsOKLocationTrackingItemDevice(v ListTrackedLocationsOKLocationTrackingItemDevice) OptListTrackedLocationsOKLocationTrackingItemDevice {
	return OptListTrackedLocationsOKLocationTrackingItemDevice{
		Value: v,
		Set:   true,
	}
}

// OptListTrackedLocationsOKLocationTrackingItemDevice is optional ListTrackedLocationsOKLocationTrackingItemDevice.
type OptListTrackedLocationsOKLocationTrackingItemDevice struct {
	Value ListTrackedLocationsOKLocationTrackingItemDevice
	Set   bool
}

// IsSet returns true if OptListTrackedLocationsOKLocationTrackingItemDevice was set.
func (o OptListTrackedLocationsOKLocationTrackingItemDevice) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListTrackedLocationsOKLocationTrackingItemDevice) Reset() {
	var v ListTrackedLocationsOKLocationTrackingItemDevice
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListTrackedLocationsOKLocationTrackingItemDevice) SetTo(v ListTrackedLocationsOKLocationTrackingItemDevice) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListTrackedLocationsOKLocationTrackingItemDevice) Get() (v ListTrackedLocationsOKLocationTrackingItemDevice, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListTrackedLocationsOKLocationTrackingItemDevice) Or(d ListTrackedLocationsOKLocationTrackingItemDevice) ListTrackedLocationsOKLocationTrackingItemDevice {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListTrackedLocationsOKLocationTrackingItemNetworkSwitch returns new OptListTrackedLocationsOKLocationTrackingItemNetworkSwitch with value set to v.
func NewOptListTrackedLocationsOKLocationTrackingItemNetworkSwitch(v ListTrackedLocationsOKLocationTrackingItemNetworkSwitch) OptListTrackedLocationsOKLocationTrackingItemNetworkSwitch {
	return OptListTrackedLocationsOKLocationTrackingItemNetworkSwitch{
		Value: v,
		Set:   true,
	}
}

// OptListTrackedLocationsOKLocationTrackingItemNetworkSwitch is optional ListTrackedLocationsOKLocationTrackingItemNetworkSwitch.
type OptListTrackedLocationsOKLocationTrackingItemNetworkSwitch struct {
	Value ListTrackedLocationsOKLocationTrackingItemNetworkSwitch
	Set   bool
}

// IsSet returns true if OptListTrackedLocationsOKLocationTrackingItemNetworkSwitch was set.
func (o OptListTrackedLocationsOKLocationTrackingItemNetworkSwitch) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListTrackedLocationsOKLocationTrackingItemNetworkSwitch) Reset() {
	var v ListTrackedLocationsOKLocationTrackingItemNetworkSwitch
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListTrackedLocationsOKLocationTrackingItemNetworkSwitch) SetTo(v ListTrackedLocationsOKLocationTrackingItemNetworkSwitch) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListTrackedLocationsOKLocationTrackingItemNetworkSwitch) Get() (v ListTrackedLocationsOKLocationTrackingItemNetworkSwitch, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListTrackedLocationsOKLocationTrackingItemNetworkSwitch) Or(d ListTrackedLocationsOKLocationTrackingItemNetworkSwitch) ListTrackedLocationsOKLocationTrackingItemNetworkSwitch {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListTrackedLocationsOKLocationTrackingItemSite returns new OptListTrackedLocationsOKLocationTrackingItemSite with value set to v.
func NewOptListTrackedLocationsOKLocationTrackingItemSite(v ListTrackedLocationsOKLocationTrackingItemSite) OptListTrackedLocationsOKLocationTrackingItemSite {
	return OptListTrackedLocationsOKLocationTrackingItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListTrackedLocationsOKLocationTrackingItemSite is optional ListTrackedLocationsOKLocationTrackingItemSite.
type OptListTrackedLocationsOKLocationTrackingItemSite struct {
	Value ListTrackedLocationsOKLocationTrackingItemSite
	Set   bool
}

// IsSet returns true if OptListTrackedLocationsOKLocationTrackingItemSite was set.
func (o OptListTrackedLocationsOKLocationTrackingItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListTrackedLocationsOKLocationTrackingItemSite) Reset() {
	var v ListTrackedLocationsOKLocationTrackingItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListTrackedLocationsOKLocationTrackingItemSite) SetTo(v ListTrackedLocationsOKLocationTrackingItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListTrackedLocationsOKLocationTrackingItemSite) Get() (v ListTrackedLocationsOKLocationTrackingItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListTrackedLocationsOKLocationTrackingItemSite) Or(d ListTrackedLocationsOKLocationTrackingItemSite) ListTrackedLocationsOKLocationTrackingItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite returns new OptListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite with value set to v.
func NewOptListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite(v ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) OptListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite {
	return OptListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite is optional ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite.
type OptListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite struct {
	Value ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite
	Set   bool
}

// IsSet returns true if OptListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite was set.
func (o OptListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) Reset() {
	var v ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) SetTo(v ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) Get() (v ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) Or(d ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite) ListUserCustomizeOutboundCallerNumbersOKCustomizeNumbersItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListUsersFromDirectoryBySiteOKResultItemSite returns new OptListUsersFromDirectoryBySiteOKResultItemSite with value set to v.
func NewOptListUsersFromDirectoryBySiteOKResultItemSite(v ListUsersFromDirectoryBySiteOKResultItemSite) OptListUsersFromDirectoryBySiteOKResultItemSite {
	return OptListUsersFromDirectoryBySiteOKResultItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListUsersFromDirectoryBySiteOKResultItemSite is optional ListUsersFromDirectoryBySiteOKResultItemSite.
type OptListUsersFromDirectoryBySiteOKResultItemSite struct {
	Value ListUsersFromDirectoryBySiteOKResultItemSite
	Set   bool
}

// IsSet returns true if OptListUsersFromDirectoryBySiteOKResultItemSite was set.
func (o OptListUsersFromDirectoryBySiteOKResultItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListUsersFromDirectoryBySiteOKResultItemSite) Reset() {
	var v ListUsersFromDirectoryBySiteOKResultItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListUsersFromDirectoryBySiteOKResultItemSite) SetTo(v ListUsersFromDirectoryBySiteOKResultItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListUsersFromDirectoryBySiteOKResultItemSite) Get() (v ListUsersFromDirectoryBySiteOKResultItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListUsersFromDirectoryBySiteOKResultItemSite) Or(d ListUsersFromDirectoryBySiteOKResultItemSite) ListUsersFromDirectoryBySiteOKResultItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListUsersFromDirectoryOKResultItemSite returns new OptListUsersFromDirectoryOKResultItemSite with value set to v.
func NewOptListUsersFromDirectoryOKResultItemSite(v ListUsersFromDirectoryOKResultItemSite) OptListUsersFromDirectoryOKResultItemSite {
	return OptListUsersFromDirectoryOKResultItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListUsersFromDirectoryOKResultItemSite is optional ListUsersFromDirectoryOKResultItemSite.
type OptListUsersFromDirectoryOKResultItemSite struct {
	Value ListUsersFromDirectoryOKResultItemSite
	Set   bool
}

// IsSet returns true if OptListUsersFromDirectoryOKResultItemSite was set.
func (o OptListUsersFromDirectoryOKResultItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListUsersFromDirectoryOKResultItemSite) Reset() {
	var v ListUsersFromDirectoryOKResultItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListUsersFromDirectoryOKResultItemSite) SetTo(v ListUsersFromDirectoryOKResultItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListUsersFromDirectoryOKResultItemSite) Get() (v ListUsersFromDirectoryOKResultItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListUsersFromDirectoryOKResultItemSite) Or(d ListUsersFromDirectoryOKResultItemSite) ListUsersFromDirectoryOKResultItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKAdHocCallRecording returns new OptListZoomPhoneAccountSettingsOKAdHocCallRecording with value set to v.
func NewOptListZoomPhoneAccountSettingsOKAdHocCallRecording(v ListZoomPhoneAccountSettingsOKAdHocCallRecording) OptListZoomPhoneAccountSettingsOKAdHocCallRecording {
	return OptListZoomPhoneAccountSettingsOKAdHocCallRecording{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKAdHocCallRecording is optional ListZoomPhoneAccountSettingsOKAdHocCallRecording.
type OptListZoomPhoneAccountSettingsOKAdHocCallRecording struct {
	Value ListZoomPhoneAccountSettingsOKAdHocCallRecording
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKAdHocCallRecording was set.
func (o OptListZoomPhoneAccountSettingsOKAdHocCallRecording) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKAdHocCallRecording) Reset() {
	var v ListZoomPhoneAccountSettingsOKAdHocCallRecording
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKAdHocCallRecording) SetTo(v ListZoomPhoneAccountSettingsOKAdHocCallRecording) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKAdHocCallRecording) Get() (v ListZoomPhoneAccountSettingsOKAdHocCallRecording, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKAdHocCallRecording) Or(d ListZoomPhoneAccountSettingsOKAdHocCallRecording) ListZoomPhoneAccountSettingsOKAdHocCallRecording {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKAdvancedEncryption returns new OptListZoomPhoneAccountSettingsOKAdvancedEncryption with value set to v.
func NewOptListZoomPhoneAccountSettingsOKAdvancedEncryption(v ListZoomPhoneAccountSettingsOKAdvancedEncryption) OptListZoomPhoneAccountSettingsOKAdvancedEncryption {
	return OptListZoomPhoneAccountSettingsOKAdvancedEncryption{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKAdvancedEncryption is optional ListZoomPhoneAccountSettingsOKAdvancedEncryption.
type OptListZoomPhoneAccountSettingsOKAdvancedEncryption struct {
	Value ListZoomPhoneAccountSettingsOKAdvancedEncryption
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKAdvancedEncryption was set.
func (o OptListZoomPhoneAccountSettingsOKAdvancedEncryption) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKAdvancedEncryption) Reset() {
	var v ListZoomPhoneAccountSettingsOKAdvancedEncryption
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKAdvancedEncryption) SetTo(v ListZoomPhoneAccountSettingsOKAdvancedEncryption) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKAdvancedEncryption) Get() (v ListZoomPhoneAccountSettingsOKAdvancedEncryption, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKAdvancedEncryption) Or(d ListZoomPhoneAccountSettingsOKAdvancedEncryption) ListZoomPhoneAccountSettingsOKAdvancedEncryption {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKAllowedCallLocations returns new OptListZoomPhoneAccountSettingsOKAllowedCallLocations with value set to v.
func NewOptListZoomPhoneAccountSettingsOKAllowedCallLocations(v ListZoomPhoneAccountSettingsOKAllowedCallLocations) OptListZoomPhoneAccountSettingsOKAllowedCallLocations {
	return OptListZoomPhoneAccountSettingsOKAllowedCallLocations{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKAllowedCallLocations is optional ListZoomPhoneAccountSettingsOKAllowedCallLocations.
type OptListZoomPhoneAccountSettingsOKAllowedCallLocations struct {
	Value ListZoomPhoneAccountSettingsOKAllowedCallLocations
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKAllowedCallLocations was set.
func (o OptListZoomPhoneAccountSettingsOKAllowedCallLocations) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKAllowedCallLocations) Reset() {
	var v ListZoomPhoneAccountSettingsOKAllowedCallLocations
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKAllowedCallLocations) SetTo(v ListZoomPhoneAccountSettingsOKAllowedCallLocations) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKAllowedCallLocations) Get() (v ListZoomPhoneAccountSettingsOKAllowedCallLocations, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKAllowedCallLocations) Or(d ListZoomPhoneAccountSettingsOKAllowedCallLocations) ListZoomPhoneAccountSettingsOKAllowedCallLocations {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKAudioIntercom returns new OptListZoomPhoneAccountSettingsOKAudioIntercom with value set to v.
func NewOptListZoomPhoneAccountSettingsOKAudioIntercom(v ListZoomPhoneAccountSettingsOKAudioIntercom) OptListZoomPhoneAccountSettingsOKAudioIntercom {
	return OptListZoomPhoneAccountSettingsOKAudioIntercom{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKAudioIntercom is optional ListZoomPhoneAccountSettingsOKAudioIntercom.
type OptListZoomPhoneAccountSettingsOKAudioIntercom struct {
	Value ListZoomPhoneAccountSettingsOKAudioIntercom
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKAudioIntercom was set.
func (o OptListZoomPhoneAccountSettingsOKAudioIntercom) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKAudioIntercom) Reset() {
	var v ListZoomPhoneAccountSettingsOKAudioIntercom
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKAudioIntercom) SetTo(v ListZoomPhoneAccountSettingsOKAudioIntercom) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKAudioIntercom) Get() (v ListZoomPhoneAccountSettingsOKAudioIntercom, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKAudioIntercom) Or(d ListZoomPhoneAccountSettingsOKAudioIntercom) ListZoomPhoneAccountSettingsOKAudioIntercom {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps returns new OptListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps with value set to v.
func NewOptListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps(v ListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps) OptListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps {
	return OptListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps is optional ListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps.
type OptListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps struct {
	Value ListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps was set.
func (o OptListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps) Reset() {
	var v ListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps) SetTo(v ListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps) Get() (v ListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps) Or(d ListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps) ListZoomPhoneAccountSettingsOKAutoCallFromThirdPartyApps {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKAutoCallRecording returns new OptListZoomPhoneAccountSettingsOKAutoCallRecording with value set to v.
func NewOptListZoomPhoneAccountSettingsOKAutoCallRecording(v ListZoomPhoneAccountSettingsOKAutoCallRecording) OptListZoomPhoneAccountSettingsOKAutoCallRecording {
	return OptListZoomPhoneAccountSettingsOKAutoCallRecording{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKAutoCallRecording is optional ListZoomPhoneAccountSettingsOKAutoCallRecording.
type OptListZoomPhoneAccountSettingsOKAutoCallRecording struct {
	Value ListZoomPhoneAccountSettingsOKAutoCallRecording
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKAutoCallRecording was set.
func (o OptListZoomPhoneAccountSettingsOKAutoCallRecording) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKAutoCallRecording) Reset() {
	var v ListZoomPhoneAccountSettingsOKAutoCallRecording
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKAutoCallRecording) SetTo(v ListZoomPhoneAccountSettingsOKAutoCallRecording) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKAutoCallRecording) Get() (v ListZoomPhoneAccountSettingsOKAutoCallRecording, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKAutoCallRecording) Or(d ListZoomPhoneAccountSettingsOKAutoCallRecording) ListZoomPhoneAccountSettingsOKAutoCallRecording {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone returns new OptListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone with value set to v.
func NewOptListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone(v ListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone) OptListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone {
	return OptListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone is optional ListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone.
type OptListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone struct {
	Value ListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone was set.
func (o OptListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone) Reset() {
	var v ListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone) SetTo(v ListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone) Get() (v ListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone) Or(d ListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone) ListZoomPhoneAccountSettingsOKAutoCallRecordingPlayRecordingBeepTone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration returns new OptListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration with value set to v.
func NewOptListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration(v ListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration) OptListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration {
	return OptListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration is optional ListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration.
type OptListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration struct {
	Value ListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration was set.
func (o OptListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration) Reset() {
	var v ListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration) SetTo(v ListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration) Get() (v ListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration) Or(d ListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration) ListZoomPhoneAccountSettingsOKAutoDeleteDataAfterRetentionDuration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKBlockCallsAsThreat returns new OptListZoomPhoneAccountSettingsOKBlockCallsAsThreat with value set to v.
func NewOptListZoomPhoneAccountSettingsOKBlockCallsAsThreat(v ListZoomPhoneAccountSettingsOKBlockCallsAsThreat) OptListZoomPhoneAccountSettingsOKBlockCallsAsThreat {
	return OptListZoomPhoneAccountSettingsOKBlockCallsAsThreat{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKBlockCallsAsThreat is optional ListZoomPhoneAccountSettingsOKBlockCallsAsThreat.
type OptListZoomPhoneAccountSettingsOKBlockCallsAsThreat struct {
	Value ListZoomPhoneAccountSettingsOKBlockCallsAsThreat
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKBlockCallsAsThreat was set.
func (o OptListZoomPhoneAccountSettingsOKBlockCallsAsThreat) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKBlockCallsAsThreat) Reset() {
	var v ListZoomPhoneAccountSettingsOKBlockCallsAsThreat
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKBlockCallsAsThreat) SetTo(v ListZoomPhoneAccountSettingsOKBlockCallsAsThreat) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKBlockCallsAsThreat) Get() (v ListZoomPhoneAccountSettingsOKBlockCallsAsThreat, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKBlockCallsAsThreat) Or(d ListZoomPhoneAccountSettingsOKBlockCallsAsThreat) ListZoomPhoneAccountSettingsOKBlockCallsAsThreat {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID returns new OptListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID with value set to v.
func NewOptListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID(v ListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID) OptListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID {
	return OptListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID is optional ListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID.
type OptListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID struct {
	Value ListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID was set.
func (o OptListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID) Reset() {
	var v ListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID) SetTo(v ListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID) Get() (v ListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID) Or(d ListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID) ListZoomPhoneAccountSettingsOKBlockCallsWithoutCallerID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKBlockExternalCalls returns new OptListZoomPhoneAccountSettingsOKBlockExternalCalls with value set to v.
func NewOptListZoomPhoneAccountSettingsOKBlockExternalCalls(v ListZoomPhoneAccountSettingsOKBlockExternalCalls) OptListZoomPhoneAccountSettingsOKBlockExternalCalls {
	return OptListZoomPhoneAccountSettingsOKBlockExternalCalls{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKBlockExternalCalls is optional ListZoomPhoneAccountSettingsOKBlockExternalCalls.
type OptListZoomPhoneAccountSettingsOKBlockExternalCalls struct {
	Value ListZoomPhoneAccountSettingsOKBlockExternalCalls
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKBlockExternalCalls was set.
func (o OptListZoomPhoneAccountSettingsOKBlockExternalCalls) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKBlockExternalCalls) Reset() {
	var v ListZoomPhoneAccountSettingsOKBlockExternalCalls
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKBlockExternalCalls) SetTo(v ListZoomPhoneAccountSettingsOKBlockExternalCalls) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKBlockExternalCalls) Get() (v ListZoomPhoneAccountSettingsOKBlockExternalCalls, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKBlockExternalCalls) Or(d ListZoomPhoneAccountSettingsOKBlockExternalCalls) ListZoomPhoneAccountSettingsOKBlockExternalCalls {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging returns new OptListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging with value set to v.
func NewOptListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging(v ListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging) OptListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging {
	return OptListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging is optional ListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging.
type OptListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging struct {
	Value ListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging was set.
func (o OptListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging) Reset() {
	var v ListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging) SetTo(v ListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging) Get() (v ListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging) Or(d ListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging) ListZoomPhoneAccountSettingsOKBlockListForInboundCallsAndMessaging {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers returns new OptListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers with value set to v.
func NewOptListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers(v ListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers) OptListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers {
	return OptListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers is optional ListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers.
type OptListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers struct {
	Value ListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers was set.
func (o OptListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers) Reset() {
	var v ListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers) SetTo(v ListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers) Get() (v ListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers) Or(d ListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers) ListZoomPhoneAccountSettingsOKCallHandlingForwardingToOtherUsers {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKCallLiveTranscription returns new OptListZoomPhoneAccountSettingsOKCallLiveTranscription with value set to v.
func NewOptListZoomPhoneAccountSettingsOKCallLiveTranscription(v ListZoomPhoneAccountSettingsOKCallLiveTranscription) OptListZoomPhoneAccountSettingsOKCallLiveTranscription {
	return OptListZoomPhoneAccountSettingsOKCallLiveTranscription{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKCallLiveTranscription is optional ListZoomPhoneAccountSettingsOKCallLiveTranscription.
type OptListZoomPhoneAccountSettingsOKCallLiveTranscription struct {
	Value ListZoomPhoneAccountSettingsOKCallLiveTranscription
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKCallLiveTranscription was set.
func (o OptListZoomPhoneAccountSettingsOKCallLiveTranscription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKCallLiveTranscription) Reset() {
	var v ListZoomPhoneAccountSettingsOKCallLiveTranscription
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKCallLiveTranscription) SetTo(v ListZoomPhoneAccountSettingsOKCallLiveTranscription) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKCallLiveTranscription) Get() (v ListZoomPhoneAccountSettingsOKCallLiveTranscription, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKCallLiveTranscription) Or(d ListZoomPhoneAccountSettingsOKCallLiveTranscription) ListZoomPhoneAccountSettingsOKCallLiveTranscription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt returns new OptListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt with value set to v.
func NewOptListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt(v ListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) OptListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt {
	return OptListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt is optional ListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt.
type OptListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt struct {
	Value ListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt was set.
func (o OptListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) Reset() {
	var v ListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) SetTo(v ListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) Get() (v ListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) Or(d ListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt) ListZoomPhoneAccountSettingsOKCallLiveTranscriptionTranscriptionStartPrompt {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKCallOverflow returns new OptListZoomPhoneAccountSettingsOKCallOverflow with value set to v.
func NewOptListZoomPhoneAccountSettingsOKCallOverflow(v ListZoomPhoneAccountSettingsOKCallOverflow) OptListZoomPhoneAccountSettingsOKCallOverflow {
	return OptListZoomPhoneAccountSettingsOKCallOverflow{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKCallOverflow is optional ListZoomPhoneAccountSettingsOKCallOverflow.
type OptListZoomPhoneAccountSettingsOKCallOverflow struct {
	Value ListZoomPhoneAccountSettingsOKCallOverflow
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKCallOverflow was set.
func (o OptListZoomPhoneAccountSettingsOKCallOverflow) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKCallOverflow) Reset() {
	var v ListZoomPhoneAccountSettingsOKCallOverflow
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKCallOverflow) SetTo(v ListZoomPhoneAccountSettingsOKCallOverflow) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKCallOverflow) Get() (v ListZoomPhoneAccountSettingsOKCallOverflow, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKCallOverflow) Or(d ListZoomPhoneAccountSettingsOKCallOverflow) ListZoomPhoneAccountSettingsOKCallOverflow {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKCallPark returns new OptListZoomPhoneAccountSettingsOKCallPark with value set to v.
func NewOptListZoomPhoneAccountSettingsOKCallPark(v ListZoomPhoneAccountSettingsOKCallPark) OptListZoomPhoneAccountSettingsOKCallPark {
	return OptListZoomPhoneAccountSettingsOKCallPark{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKCallPark is optional ListZoomPhoneAccountSettingsOKCallPark.
type OptListZoomPhoneAccountSettingsOKCallPark struct {
	Value ListZoomPhoneAccountSettingsOKCallPark
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKCallPark was set.
func (o OptListZoomPhoneAccountSettingsOKCallPark) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKCallPark) Reset() {
	var v ListZoomPhoneAccountSettingsOKCallPark
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKCallPark) SetTo(v ListZoomPhoneAccountSettingsOKCallPark) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKCallPark) Get() (v ListZoomPhoneAccountSettingsOKCallPark, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKCallPark) Or(d ListZoomPhoneAccountSettingsOKCallPark) ListZoomPhoneAccountSettingsOKCallPark {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKCallQueueOptOutReason returns new OptListZoomPhoneAccountSettingsOKCallQueueOptOutReason with value set to v.
func NewOptListZoomPhoneAccountSettingsOKCallQueueOptOutReason(v ListZoomPhoneAccountSettingsOKCallQueueOptOutReason) OptListZoomPhoneAccountSettingsOKCallQueueOptOutReason {
	return OptListZoomPhoneAccountSettingsOKCallQueueOptOutReason{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKCallQueueOptOutReason is optional ListZoomPhoneAccountSettingsOKCallQueueOptOutReason.
type OptListZoomPhoneAccountSettingsOKCallQueueOptOutReason struct {
	Value ListZoomPhoneAccountSettingsOKCallQueueOptOutReason
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKCallQueueOptOutReason was set.
func (o OptListZoomPhoneAccountSettingsOKCallQueueOptOutReason) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKCallQueueOptOutReason) Reset() {
	var v ListZoomPhoneAccountSettingsOKCallQueueOptOutReason
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKCallQueueOptOutReason) SetTo(v ListZoomPhoneAccountSettingsOKCallQueueOptOutReason) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKCallQueueOptOutReason) Get() (v ListZoomPhoneAccountSettingsOKCallQueueOptOutReason, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKCallQueueOptOutReason) Or(d ListZoomPhoneAccountSettingsOKCallQueueOptOutReason) ListZoomPhoneAccountSettingsOKCallQueueOptOutReason {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKCallTransferring returns new OptListZoomPhoneAccountSettingsOKCallTransferring with value set to v.
func NewOptListZoomPhoneAccountSettingsOKCallTransferring(v ListZoomPhoneAccountSettingsOKCallTransferring) OptListZoomPhoneAccountSettingsOKCallTransferring {
	return OptListZoomPhoneAccountSettingsOKCallTransferring{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKCallTransferring is optional ListZoomPhoneAccountSettingsOKCallTransferring.
type OptListZoomPhoneAccountSettingsOKCallTransferring struct {
	Value ListZoomPhoneAccountSettingsOKCallTransferring
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKCallTransferring was set.
func (o OptListZoomPhoneAccountSettingsOKCallTransferring) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKCallTransferring) Reset() {
	var v ListZoomPhoneAccountSettingsOKCallTransferring
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKCallTransferring) SetTo(v ListZoomPhoneAccountSettingsOKCallTransferring) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKCallTransferring) Get() (v ListZoomPhoneAccountSettingsOKCallTransferring, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKCallTransferring) Or(d ListZoomPhoneAccountSettingsOKCallTransferring) ListZoomPhoneAccountSettingsOKCallTransferring {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone returns new OptListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone with value set to v.
func NewOptListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone(v ListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone) OptListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone {
	return OptListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone is optional ListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone.
type OptListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone struct {
	Value ListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone was set.
func (o OptListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone) Reset() {
	var v ListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone) SetTo(v ListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone) Get() (v ListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone) Or(d ListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone) ListZoomPhoneAccountSettingsOKCheckVoicemailsOverPhone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKDelegation returns new OptListZoomPhoneAccountSettingsOKDelegation with value set to v.
func NewOptListZoomPhoneAccountSettingsOKDelegation(v ListZoomPhoneAccountSettingsOKDelegation) OptListZoomPhoneAccountSettingsOKDelegation {
	return OptListZoomPhoneAccountSettingsOKDelegation{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKDelegation is optional ListZoomPhoneAccountSettingsOKDelegation.
type OptListZoomPhoneAccountSettingsOKDelegation struct {
	Value ListZoomPhoneAccountSettingsOKDelegation
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKDelegation was set.
func (o OptListZoomPhoneAccountSettingsOKDelegation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKDelegation) Reset() {
	var v ListZoomPhoneAccountSettingsOKDelegation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKDelegation) SetTo(v ListZoomPhoneAccountSettingsOKDelegation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKDelegation) Get() (v ListZoomPhoneAccountSettingsOKDelegation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKDelegation) Or(d ListZoomPhoneAccountSettingsOKDelegation) ListZoomPhoneAccountSettingsOKDelegation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey returns new OptListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey with value set to v.
func NewOptListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey(v ListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey) OptListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey {
	return OptListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey is optional ListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey.
type OptListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey struct {
	Value ListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey was set.
func (o OptListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey) Reset() {
	var v ListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey) SetTo(v ListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey) Get() (v ListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey) Or(d ListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey) ListZoomPhoneAccountSettingsOKDisplayCallFeedbackSurvey {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKE2eEncryption returns new OptListZoomPhoneAccountSettingsOKE2eEncryption with value set to v.
func NewOptListZoomPhoneAccountSettingsOKE2eEncryption(v ListZoomPhoneAccountSettingsOKE2eEncryption) OptListZoomPhoneAccountSettingsOKE2eEncryption {
	return OptListZoomPhoneAccountSettingsOKE2eEncryption{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKE2eEncryption is optional ListZoomPhoneAccountSettingsOKE2eEncryption.
type OptListZoomPhoneAccountSettingsOKE2eEncryption struct {
	Value ListZoomPhoneAccountSettingsOKE2eEncryption
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKE2eEncryption was set.
func (o OptListZoomPhoneAccountSettingsOKE2eEncryption) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKE2eEncryption) Reset() {
	var v ListZoomPhoneAccountSettingsOKE2eEncryption
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKE2eEncryption) SetTo(v ListZoomPhoneAccountSettingsOKE2eEncryption) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKE2eEncryption) Get() (v ListZoomPhoneAccountSettingsOKE2eEncryption, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKE2eEncryption) Or(d ListZoomPhoneAccountSettingsOKE2eEncryption) ListZoomPhoneAccountSettingsOKE2eEncryption {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKElevateToMeeting returns new OptListZoomPhoneAccountSettingsOKElevateToMeeting with value set to v.
func NewOptListZoomPhoneAccountSettingsOKElevateToMeeting(v ListZoomPhoneAccountSettingsOKElevateToMeeting) OptListZoomPhoneAccountSettingsOKElevateToMeeting {
	return OptListZoomPhoneAccountSettingsOKElevateToMeeting{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKElevateToMeeting is optional ListZoomPhoneAccountSettingsOKElevateToMeeting.
type OptListZoomPhoneAccountSettingsOKElevateToMeeting struct {
	Value ListZoomPhoneAccountSettingsOKElevateToMeeting
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKElevateToMeeting was set.
func (o OptListZoomPhoneAccountSettingsOKElevateToMeeting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKElevateToMeeting) Reset() {
	var v ListZoomPhoneAccountSettingsOKElevateToMeeting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKElevateToMeeting) SetTo(v ListZoomPhoneAccountSettingsOKElevateToMeeting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKElevateToMeeting) Get() (v ListZoomPhoneAccountSettingsOKElevateToMeeting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKElevateToMeeting) Or(d ListZoomPhoneAccountSettingsOKElevateToMeeting) ListZoomPhoneAccountSettingsOKElevateToMeeting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea returns new OptListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea with value set to v.
func NewOptListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea(v ListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea) OptListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea {
	return OptListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea is optional ListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea.
type OptListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea struct {
	Value ListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea was set.
func (o OptListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea) Reset() {
	var v ListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea) SetTo(v ListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea) Get() (v ListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea) Or(d ListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea) ListZoomPhoneAccountSettingsOKExternalCallingOnZoomRoomCommonArea {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKHandOffToRoom returns new OptListZoomPhoneAccountSettingsOKHandOffToRoom with value set to v.
func NewOptListZoomPhoneAccountSettingsOKHandOffToRoom(v ListZoomPhoneAccountSettingsOKHandOffToRoom) OptListZoomPhoneAccountSettingsOKHandOffToRoom {
	return OptListZoomPhoneAccountSettingsOKHandOffToRoom{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKHandOffToRoom is optional ListZoomPhoneAccountSettingsOKHandOffToRoom.
type OptListZoomPhoneAccountSettingsOKHandOffToRoom struct {
	Value ListZoomPhoneAccountSettingsOKHandOffToRoom
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKHandOffToRoom was set.
func (o OptListZoomPhoneAccountSettingsOKHandOffToRoom) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKHandOffToRoom) Reset() {
	var v ListZoomPhoneAccountSettingsOKHandOffToRoom
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKHandOffToRoom) SetTo(v ListZoomPhoneAccountSettingsOKHandOffToRoom) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKHandOffToRoom) Get() (v ListZoomPhoneAccountSettingsOKHandOffToRoom, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKHandOffToRoom) Or(d ListZoomPhoneAccountSettingsOKHandOffToRoom) ListZoomPhoneAccountSettingsOKHandOffToRoom {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKInternationalCalling returns new OptListZoomPhoneAccountSettingsOKInternationalCalling with value set to v.
func NewOptListZoomPhoneAccountSettingsOKInternationalCalling(v ListZoomPhoneAccountSettingsOKInternationalCalling) OptListZoomPhoneAccountSettingsOKInternationalCalling {
	return OptListZoomPhoneAccountSettingsOKInternationalCalling{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKInternationalCalling is optional ListZoomPhoneAccountSettingsOKInternationalCalling.
type OptListZoomPhoneAccountSettingsOKInternationalCalling struct {
	Value ListZoomPhoneAccountSettingsOKInternationalCalling
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKInternationalCalling was set.
func (o OptListZoomPhoneAccountSettingsOKInternationalCalling) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKInternationalCalling) Reset() {
	var v ListZoomPhoneAccountSettingsOKInternationalCalling
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKInternationalCalling) SetTo(v ListZoomPhoneAccountSettingsOKInternationalCalling) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKInternationalCalling) Get() (v ListZoomPhoneAccountSettingsOKInternationalCalling, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKInternationalCalling) Or(d ListZoomPhoneAccountSettingsOKInternationalCalling) ListZoomPhoneAccountSettingsOKInternationalCalling {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKLocalSurvivabilityMode returns new OptListZoomPhoneAccountSettingsOKLocalSurvivabilityMode with value set to v.
func NewOptListZoomPhoneAccountSettingsOKLocalSurvivabilityMode(v ListZoomPhoneAccountSettingsOKLocalSurvivabilityMode) OptListZoomPhoneAccountSettingsOKLocalSurvivabilityMode {
	return OptListZoomPhoneAccountSettingsOKLocalSurvivabilityMode{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKLocalSurvivabilityMode is optional ListZoomPhoneAccountSettingsOKLocalSurvivabilityMode.
type OptListZoomPhoneAccountSettingsOKLocalSurvivabilityMode struct {
	Value ListZoomPhoneAccountSettingsOKLocalSurvivabilityMode
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKLocalSurvivabilityMode was set.
func (o OptListZoomPhoneAccountSettingsOKLocalSurvivabilityMode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKLocalSurvivabilityMode) Reset() {
	var v ListZoomPhoneAccountSettingsOKLocalSurvivabilityMode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKLocalSurvivabilityMode) SetTo(v ListZoomPhoneAccountSettingsOKLocalSurvivabilityMode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKLocalSurvivabilityMode) Get() (v ListZoomPhoneAccountSettingsOKLocalSurvivabilityMode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKLocalSurvivabilityMode) Or(d ListZoomPhoneAccountSettingsOKLocalSurvivabilityMode) ListZoomPhoneAccountSettingsOKLocalSurvivabilityMode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKMobileSwitchToCarrier returns new OptListZoomPhoneAccountSettingsOKMobileSwitchToCarrier with value set to v.
func NewOptListZoomPhoneAccountSettingsOKMobileSwitchToCarrier(v ListZoomPhoneAccountSettingsOKMobileSwitchToCarrier) OptListZoomPhoneAccountSettingsOKMobileSwitchToCarrier {
	return OptListZoomPhoneAccountSettingsOKMobileSwitchToCarrier{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKMobileSwitchToCarrier is optional ListZoomPhoneAccountSettingsOKMobileSwitchToCarrier.
type OptListZoomPhoneAccountSettingsOKMobileSwitchToCarrier struct {
	Value ListZoomPhoneAccountSettingsOKMobileSwitchToCarrier
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKMobileSwitchToCarrier was set.
func (o OptListZoomPhoneAccountSettingsOKMobileSwitchToCarrier) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKMobileSwitchToCarrier) Reset() {
	var v ListZoomPhoneAccountSettingsOKMobileSwitchToCarrier
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKMobileSwitchToCarrier) SetTo(v ListZoomPhoneAccountSettingsOKMobileSwitchToCarrier) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKMobileSwitchToCarrier) Get() (v ListZoomPhoneAccountSettingsOKMobileSwitchToCarrier, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKMobileSwitchToCarrier) Or(d ListZoomPhoneAccountSettingsOKMobileSwitchToCarrier) ListZoomPhoneAccountSettingsOKMobileSwitchToCarrier {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKOutboundCalling returns new OptListZoomPhoneAccountSettingsOKOutboundCalling with value set to v.
func NewOptListZoomPhoneAccountSettingsOKOutboundCalling(v ListZoomPhoneAccountSettingsOKOutboundCalling) OptListZoomPhoneAccountSettingsOKOutboundCalling {
	return OptListZoomPhoneAccountSettingsOKOutboundCalling{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKOutboundCalling is optional ListZoomPhoneAccountSettingsOKOutboundCalling.
type OptListZoomPhoneAccountSettingsOKOutboundCalling struct {
	Value ListZoomPhoneAccountSettingsOKOutboundCalling
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKOutboundCalling was set.
func (o OptListZoomPhoneAccountSettingsOKOutboundCalling) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKOutboundCalling) Reset() {
	var v ListZoomPhoneAccountSettingsOKOutboundCalling
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKOutboundCalling) SetTo(v ListZoomPhoneAccountSettingsOKOutboundCalling) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKOutboundCalling) Get() (v ListZoomPhoneAccountSettingsOKOutboundCalling, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKOutboundCalling) Or(d ListZoomPhoneAccountSettingsOKOutboundCalling) ListZoomPhoneAccountSettingsOKOutboundCalling {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKOutboundSMS returns new OptListZoomPhoneAccountSettingsOKOutboundSMS with value set to v.
func NewOptListZoomPhoneAccountSettingsOKOutboundSMS(v ListZoomPhoneAccountSettingsOKOutboundSMS) OptListZoomPhoneAccountSettingsOKOutboundSMS {
	return OptListZoomPhoneAccountSettingsOKOutboundSMS{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKOutboundSMS is optional ListZoomPhoneAccountSettingsOKOutboundSMS.
type OptListZoomPhoneAccountSettingsOKOutboundSMS struct {
	Value ListZoomPhoneAccountSettingsOKOutboundSMS
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKOutboundSMS was set.
func (o OptListZoomPhoneAccountSettingsOKOutboundSMS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKOutboundSMS) Reset() {
	var v ListZoomPhoneAccountSettingsOKOutboundSMS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKOutboundSMS) SetTo(v ListZoomPhoneAccountSettingsOKOutboundSMS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKOutboundSMS) Get() (v ListZoomPhoneAccountSettingsOKOutboundSMS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKOutboundSMS) Or(d ListZoomPhoneAccountSettingsOKOutboundSMS) ListZoomPhoneAccountSettingsOKOutboundSMS {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKOverrideDefaultPort returns new OptListZoomPhoneAccountSettingsOKOverrideDefaultPort with value set to v.
func NewOptListZoomPhoneAccountSettingsOKOverrideDefaultPort(v ListZoomPhoneAccountSettingsOKOverrideDefaultPort) OptListZoomPhoneAccountSettingsOKOverrideDefaultPort {
	return OptListZoomPhoneAccountSettingsOKOverrideDefaultPort{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKOverrideDefaultPort is optional ListZoomPhoneAccountSettingsOKOverrideDefaultPort.
type OptListZoomPhoneAccountSettingsOKOverrideDefaultPort struct {
	Value ListZoomPhoneAccountSettingsOKOverrideDefaultPort
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKOverrideDefaultPort was set.
func (o OptListZoomPhoneAccountSettingsOKOverrideDefaultPort) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKOverrideDefaultPort) Reset() {
	var v ListZoomPhoneAccountSettingsOKOverrideDefaultPort
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKOverrideDefaultPort) SetTo(v ListZoomPhoneAccountSettingsOKOverrideDefaultPort) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKOverrideDefaultPort) Get() (v ListZoomPhoneAccountSettingsOKOverrideDefaultPort, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKOverrideDefaultPort) Or(d ListZoomPhoneAccountSettingsOKOverrideDefaultPort) ListZoomPhoneAccountSettingsOKOverrideDefaultPort {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKPeerToPeerMedia returns new OptListZoomPhoneAccountSettingsOKPeerToPeerMedia with value set to v.
func NewOptListZoomPhoneAccountSettingsOKPeerToPeerMedia(v ListZoomPhoneAccountSettingsOKPeerToPeerMedia) OptListZoomPhoneAccountSettingsOKPeerToPeerMedia {
	return OptListZoomPhoneAccountSettingsOKPeerToPeerMedia{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKPeerToPeerMedia is optional ListZoomPhoneAccountSettingsOKPeerToPeerMedia.
type OptListZoomPhoneAccountSettingsOKPeerToPeerMedia struct {
	Value ListZoomPhoneAccountSettingsOKPeerToPeerMedia
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKPeerToPeerMedia was set.
func (o OptListZoomPhoneAccountSettingsOKPeerToPeerMedia) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKPeerToPeerMedia) Reset() {
	var v ListZoomPhoneAccountSettingsOKPeerToPeerMedia
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKPeerToPeerMedia) SetTo(v ListZoomPhoneAccountSettingsOKPeerToPeerMedia) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKPeerToPeerMedia) Get() (v ListZoomPhoneAccountSettingsOKPeerToPeerMedia, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKPeerToPeerMedia) Or(d ListZoomPhoneAccountSettingsOKPeerToPeerMedia) ListZoomPhoneAccountSettingsOKPeerToPeerMedia {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKPersonalAudioLibrary returns new OptListZoomPhoneAccountSettingsOKPersonalAudioLibrary with value set to v.
func NewOptListZoomPhoneAccountSettingsOKPersonalAudioLibrary(v ListZoomPhoneAccountSettingsOKPersonalAudioLibrary) OptListZoomPhoneAccountSettingsOKPersonalAudioLibrary {
	return OptListZoomPhoneAccountSettingsOKPersonalAudioLibrary{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKPersonalAudioLibrary is optional ListZoomPhoneAccountSettingsOKPersonalAudioLibrary.
type OptListZoomPhoneAccountSettingsOKPersonalAudioLibrary struct {
	Value ListZoomPhoneAccountSettingsOKPersonalAudioLibrary
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKPersonalAudioLibrary was set.
func (o OptListZoomPhoneAccountSettingsOKPersonalAudioLibrary) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKPersonalAudioLibrary) Reset() {
	var v ListZoomPhoneAccountSettingsOKPersonalAudioLibrary
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKPersonalAudioLibrary) SetTo(v ListZoomPhoneAccountSettingsOKPersonalAudioLibrary) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKPersonalAudioLibrary) Get() (v ListZoomPhoneAccountSettingsOKPersonalAudioLibrary, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKPersonalAudioLibrary) Or(d ListZoomPhoneAccountSettingsOKPersonalAudioLibrary) ListZoomPhoneAccountSettingsOKPersonalAudioLibrary {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKRestrictedCallHours returns new OptListZoomPhoneAccountSettingsOKRestrictedCallHours with value set to v.
func NewOptListZoomPhoneAccountSettingsOKRestrictedCallHours(v ListZoomPhoneAccountSettingsOKRestrictedCallHours) OptListZoomPhoneAccountSettingsOKRestrictedCallHours {
	return OptListZoomPhoneAccountSettingsOKRestrictedCallHours{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKRestrictedCallHours is optional ListZoomPhoneAccountSettingsOKRestrictedCallHours.
type OptListZoomPhoneAccountSettingsOKRestrictedCallHours struct {
	Value ListZoomPhoneAccountSettingsOKRestrictedCallHours
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKRestrictedCallHours was set.
func (o OptListZoomPhoneAccountSettingsOKRestrictedCallHours) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKRestrictedCallHours) Reset() {
	var v ListZoomPhoneAccountSettingsOKRestrictedCallHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKRestrictedCallHours) SetTo(v ListZoomPhoneAccountSettingsOKRestrictedCallHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKRestrictedCallHours) Get() (v ListZoomPhoneAccountSettingsOKRestrictedCallHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKRestrictedCallHours) Or(d ListZoomPhoneAccountSettingsOKRestrictedCallHours) ListZoomPhoneAccountSettingsOKRestrictedCallHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone returns new OptListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone with value set to v.
func NewOptListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone(v ListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone) OptListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone {
	return OptListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone is optional ListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone.
type OptListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone struct {
	Value ListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone was set.
func (o OptListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone) Reset() {
	var v ListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone) SetTo(v ListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone) Get() (v ListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone) Or(d ListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone) ListZoomPhoneAccountSettingsOKRestrictedCallHoursTimeZone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKSMS returns new OptListZoomPhoneAccountSettingsOKSMS with value set to v.
func NewOptListZoomPhoneAccountSettingsOKSMS(v ListZoomPhoneAccountSettingsOKSMS) OptListZoomPhoneAccountSettingsOKSMS {
	return OptListZoomPhoneAccountSettingsOKSMS{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKSMS is optional ListZoomPhoneAccountSettingsOKSMS.
type OptListZoomPhoneAccountSettingsOKSMS struct {
	Value ListZoomPhoneAccountSettingsOKSMS
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKSMS was set.
func (o OptListZoomPhoneAccountSettingsOKSMS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKSMS) Reset() {
	var v ListZoomPhoneAccountSettingsOKSMS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKSMS) SetTo(v ListZoomPhoneAccountSettingsOKSMS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKSMS) Get() (v ListZoomPhoneAccountSettingsOKSMS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKSMS) Or(d ListZoomPhoneAccountSettingsOKSMS) ListZoomPhoneAccountSettingsOKSMS {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKSMSEtiquetteTool returns new OptListZoomPhoneAccountSettingsOKSMSEtiquetteTool with value set to v.
func NewOptListZoomPhoneAccountSettingsOKSMSEtiquetteTool(v ListZoomPhoneAccountSettingsOKSMSEtiquetteTool) OptListZoomPhoneAccountSettingsOKSMSEtiquetteTool {
	return OptListZoomPhoneAccountSettingsOKSMSEtiquetteTool{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKSMSEtiquetteTool is optional ListZoomPhoneAccountSettingsOKSMSEtiquetteTool.
type OptListZoomPhoneAccountSettingsOKSMSEtiquetteTool struct {
	Value ListZoomPhoneAccountSettingsOKSMSEtiquetteTool
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKSMSEtiquetteTool was set.
func (o OptListZoomPhoneAccountSettingsOKSMSEtiquetteTool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKSMSEtiquetteTool) Reset() {
	var v ListZoomPhoneAccountSettingsOKSMSEtiquetteTool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKSMSEtiquetteTool) SetTo(v ListZoomPhoneAccountSettingsOKSMSEtiquetteTool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKSMSEtiquetteTool) Get() (v ListZoomPhoneAccountSettingsOKSMSEtiquetteTool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKSMSEtiquetteTool) Or(d ListZoomPhoneAccountSettingsOKSMSEtiquetteTool) ListZoomPhoneAccountSettingsOKSMSEtiquetteTool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKSelectOutboundCallerID returns new OptListZoomPhoneAccountSettingsOKSelectOutboundCallerID with value set to v.
func NewOptListZoomPhoneAccountSettingsOKSelectOutboundCallerID(v ListZoomPhoneAccountSettingsOKSelectOutboundCallerID) OptListZoomPhoneAccountSettingsOKSelectOutboundCallerID {
	return OptListZoomPhoneAccountSettingsOKSelectOutboundCallerID{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKSelectOutboundCallerID is optional ListZoomPhoneAccountSettingsOKSelectOutboundCallerID.
type OptListZoomPhoneAccountSettingsOKSelectOutboundCallerID struct {
	Value ListZoomPhoneAccountSettingsOKSelectOutboundCallerID
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKSelectOutboundCallerID was set.
func (o OptListZoomPhoneAccountSettingsOKSelectOutboundCallerID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKSelectOutboundCallerID) Reset() {
	var v ListZoomPhoneAccountSettingsOKSelectOutboundCallerID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKSelectOutboundCallerID) SetTo(v ListZoomPhoneAccountSettingsOKSelectOutboundCallerID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKSelectOutboundCallerID) Get() (v ListZoomPhoneAccountSettingsOKSelectOutboundCallerID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKSelectOutboundCallerID) Or(d ListZoomPhoneAccountSettingsOKSelectOutboundCallerID) ListZoomPhoneAccountSettingsOKSelectOutboundCallerID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail returns new OptListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail with value set to v.
func NewOptListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail(v ListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail) OptListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail {
	return OptListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail is optional ListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail.
type OptListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail struct {
	Value ListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail was set.
func (o OptListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail) Reset() {
	var v ListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail) SetTo(v ListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail) Get() (v ListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail) Or(d ListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail) ListZoomPhoneAccountSettingsOKSharedVoicemailNotificationByEmail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKVoicemail returns new OptListZoomPhoneAccountSettingsOKVoicemail with value set to v.
func NewOptListZoomPhoneAccountSettingsOKVoicemail(v ListZoomPhoneAccountSettingsOKVoicemail) OptListZoomPhoneAccountSettingsOKVoicemail {
	return OptListZoomPhoneAccountSettingsOKVoicemail{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKVoicemail is optional ListZoomPhoneAccountSettingsOKVoicemail.
type OptListZoomPhoneAccountSettingsOKVoicemail struct {
	Value ListZoomPhoneAccountSettingsOKVoicemail
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKVoicemail was set.
func (o OptListZoomPhoneAccountSettingsOKVoicemail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKVoicemail) Reset() {
	var v ListZoomPhoneAccountSettingsOKVoicemail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKVoicemail) SetTo(v ListZoomPhoneAccountSettingsOKVoicemail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKVoicemail) Get() (v ListZoomPhoneAccountSettingsOKVoicemail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKVoicemail) Or(d ListZoomPhoneAccountSettingsOKVoicemail) ListZoomPhoneAccountSettingsOKVoicemail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail returns new OptListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail with value set to v.
func NewOptListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail(v ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) OptListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail {
	return OptListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail is optional ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail.
type OptListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail struct {
	Value ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail was set.
func (o OptListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) Reset() {
	var v ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) SetTo(v ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) Get() (v ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) Or(d ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail) ListZoomPhoneAccountSettingsOKVoicemailNotificationByEmail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKVoicemailTranscription returns new OptListZoomPhoneAccountSettingsOKVoicemailTranscription with value set to v.
func NewOptListZoomPhoneAccountSettingsOKVoicemailTranscription(v ListZoomPhoneAccountSettingsOKVoicemailTranscription) OptListZoomPhoneAccountSettingsOKVoicemailTranscription {
	return OptListZoomPhoneAccountSettingsOKVoicemailTranscription{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKVoicemailTranscription is optional ListZoomPhoneAccountSettingsOKVoicemailTranscription.
type OptListZoomPhoneAccountSettingsOKVoicemailTranscription struct {
	Value ListZoomPhoneAccountSettingsOKVoicemailTranscription
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKVoicemailTranscription was set.
func (o OptListZoomPhoneAccountSettingsOKVoicemailTranscription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKVoicemailTranscription) Reset() {
	var v ListZoomPhoneAccountSettingsOKVoicemailTranscription
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKVoicemailTranscription) SetTo(v ListZoomPhoneAccountSettingsOKVoicemailTranscription) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKVoicemailTranscription) Get() (v ListZoomPhoneAccountSettingsOKVoicemailTranscription, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKVoicemailTranscription) Or(d ListZoomPhoneAccountSettingsOKVoicemailTranscription) ListZoomPhoneAccountSettingsOKVoicemailTranscription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKZoomPhoneOnMobile returns new OptListZoomPhoneAccountSettingsOKZoomPhoneOnMobile with value set to v.
func NewOptListZoomPhoneAccountSettingsOKZoomPhoneOnMobile(v ListZoomPhoneAccountSettingsOKZoomPhoneOnMobile) OptListZoomPhoneAccountSettingsOKZoomPhoneOnMobile {
	return OptListZoomPhoneAccountSettingsOKZoomPhoneOnMobile{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKZoomPhoneOnMobile is optional ListZoomPhoneAccountSettingsOKZoomPhoneOnMobile.
type OptListZoomPhoneAccountSettingsOKZoomPhoneOnMobile struct {
	Value ListZoomPhoneAccountSettingsOKZoomPhoneOnMobile
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKZoomPhoneOnMobile was set.
func (o OptListZoomPhoneAccountSettingsOKZoomPhoneOnMobile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKZoomPhoneOnMobile) Reset() {
	var v ListZoomPhoneAccountSettingsOKZoomPhoneOnMobile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKZoomPhoneOnMobile) SetTo(v ListZoomPhoneAccountSettingsOKZoomPhoneOnMobile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKZoomPhoneOnMobile) Get() (v ListZoomPhoneAccountSettingsOKZoomPhoneOnMobile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKZoomPhoneOnMobile) Or(d ListZoomPhoneAccountSettingsOKZoomPhoneOnMobile) ListZoomPhoneAccountSettingsOKZoomPhoneOnMobile {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomPhoneAccountSettingsOKZoomPhoneOnPwa returns new OptListZoomPhoneAccountSettingsOKZoomPhoneOnPwa with value set to v.
func NewOptListZoomPhoneAccountSettingsOKZoomPhoneOnPwa(v ListZoomPhoneAccountSettingsOKZoomPhoneOnPwa) OptListZoomPhoneAccountSettingsOKZoomPhoneOnPwa {
	return OptListZoomPhoneAccountSettingsOKZoomPhoneOnPwa{
		Value: v,
		Set:   true,
	}
}

// OptListZoomPhoneAccountSettingsOKZoomPhoneOnPwa is optional ListZoomPhoneAccountSettingsOKZoomPhoneOnPwa.
type OptListZoomPhoneAccountSettingsOKZoomPhoneOnPwa struct {
	Value ListZoomPhoneAccountSettingsOKZoomPhoneOnPwa
	Set   bool
}

// IsSet returns true if OptListZoomPhoneAccountSettingsOKZoomPhoneOnPwa was set.
func (o OptListZoomPhoneAccountSettingsOKZoomPhoneOnPwa) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomPhoneAccountSettingsOKZoomPhoneOnPwa) Reset() {
	var v ListZoomPhoneAccountSettingsOKZoomPhoneOnPwa
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomPhoneAccountSettingsOKZoomPhoneOnPwa) SetTo(v ListZoomPhoneAccountSettingsOKZoomPhoneOnPwa) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomPhoneAccountSettingsOKZoomPhoneOnPwa) Get() (v ListZoomPhoneAccountSettingsOKZoomPhoneOnPwa, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomPhoneAccountSettingsOKZoomPhoneOnPwa) Or(d ListZoomPhoneAccountSettingsOKZoomPhoneOnPwa) ListZoomPhoneAccountSettingsOKZoomPhoneOnPwa {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptListZoomRoomsOKRoomsItemSite returns new OptListZoomRoomsOKRoomsItemSite with value set to v.
func NewOptListZoomRoomsOKRoomsItemSite(v ListZoomRoomsOKRoomsItemSite) OptListZoomRoomsOKRoomsItemSite {
	return OptListZoomRoomsOKRoomsItemSite{
		Value: v,
		Set:   true,
	}
}

// OptListZoomRoomsOKRoomsItemSite is optional ListZoomRoomsOKRoomsItemSite.
type OptListZoomRoomsOKRoomsItemSite struct {
	Value ListZoomRoomsOKRoomsItemSite
	Set   bool
}

// IsSet returns true if OptListZoomRoomsOKRoomsItemSite was set.
func (o OptListZoomRoomsOKRoomsItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptListZoomRoomsOKRoomsItemSite) Reset() {
	var v ListZoomRoomsOKRoomsItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptListZoomRoomsOKRoomsItemSite) SetTo(v ListZoomRoomsOKRoomsItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptListZoomRoomsOKRoomsItemSite) Get() (v ListZoomRoomsOKRoomsItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptListZoomRoomsOKRoomsItemSite) Or(d ListZoomRoomsOKRoomsItemSite) ListZoomRoomsOKRoomsItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMarkPhoneNumberAsBlockedForAllExtensionsReq returns new OptMarkPhoneNumberAsBlockedForAllExtensionsReq with value set to v.
func NewOptMarkPhoneNumberAsBlockedForAllExtensionsReq(v MarkPhoneNumberAsBlockedForAllExtensionsReq) OptMarkPhoneNumberAsBlockedForAllExtensionsReq {
	return OptMarkPhoneNumberAsBlockedForAllExtensionsReq{
		Value: v,
		Set:   true,
	}
}

// OptMarkPhoneNumberAsBlockedForAllExtensionsReq is optional MarkPhoneNumberAsBlockedForAllExtensionsReq.
type OptMarkPhoneNumberAsBlockedForAllExtensionsReq struct {
	Value MarkPhoneNumberAsBlockedForAllExtensionsReq
	Set   bool
}

// IsSet returns true if OptMarkPhoneNumberAsBlockedForAllExtensionsReq was set.
func (o OptMarkPhoneNumberAsBlockedForAllExtensionsReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMarkPhoneNumberAsBlockedForAllExtensionsReq) Reset() {
	var v MarkPhoneNumberAsBlockedForAllExtensionsReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMarkPhoneNumberAsBlockedForAllExtensionsReq) SetTo(v MarkPhoneNumberAsBlockedForAllExtensionsReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMarkPhoneNumberAsBlockedForAllExtensionsReq) Get() (v MarkPhoneNumberAsBlockedForAllExtensionsReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMarkPhoneNumberAsBlockedForAllExtensionsReq) Or(d MarkPhoneNumberAsBlockedForAllExtensionsReq) MarkPhoneNumberAsBlockedForAllExtensionsReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPatchCallHandlingSettingsCallForwardingSettings returns new OptPatchCallHandlingSettingsCallForwardingSettings with value set to v.
func NewOptPatchCallHandlingSettingsCallForwardingSettings(v PatchCallHandlingSettingsCallForwardingSettings) OptPatchCallHandlingSettingsCallForwardingSettings {
	return OptPatchCallHandlingSettingsCallForwardingSettings{
		Value: v,
		Set:   true,
	}
}

// OptPatchCallHandlingSettingsCallForwardingSettings is optional PatchCallHandlingSettingsCallForwardingSettings.
type OptPatchCallHandlingSettingsCallForwardingSettings struct {
	Value PatchCallHandlingSettingsCallForwardingSettings
	Set   bool
}

// IsSet returns true if OptPatchCallHandlingSettingsCallForwardingSettings was set.
func (o OptPatchCallHandlingSettingsCallForwardingSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPatchCallHandlingSettingsCallForwardingSettings) Reset() {
	var v PatchCallHandlingSettingsCallForwardingSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPatchCallHandlingSettingsCallForwardingSettings) SetTo(v PatchCallHandlingSettingsCallForwardingSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPatchCallHandlingSettingsCallForwardingSettings) Get() (v PatchCallHandlingSettingsCallForwardingSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPatchCallHandlingSettingsCallForwardingSettings) Or(d PatchCallHandlingSettingsCallForwardingSettings) PatchCallHandlingSettingsCallForwardingSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact returns new OptPatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact with value set to v.
func NewOptPatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact(v PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact) OptPatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact {
	return OptPatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact{
		Value: v,
		Set:   true,
	}
}

// OptPatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact is optional PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact.
type OptPatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact struct {
	Value PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact
	Set   bool
}

// IsSet returns true if OptPatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact was set.
func (o OptPatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptPatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact) Reset() {
	var v PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact) SetTo(v PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact) Get() (v PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact) Or(d PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact) PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPatchCallHandlingSettingsCallHandlingSettings returns new OptPatchCallHandlingSettingsCallHandlingSettings with value set to v.
func NewOptPatchCallHandlingSettingsCallHandlingSettings(v PatchCallHandlingSettingsCallHandlingSettings) OptPatchCallHandlingSettingsCallHandlingSettings {
	return OptPatchCallHandlingSettingsCallHandlingSettings{
		Value: v,
		Set:   true,
	}
}

// OptPatchCallHandlingSettingsCallHandlingSettings is optional PatchCallHandlingSettingsCallHandlingSettings.
type OptPatchCallHandlingSettingsCallHandlingSettings struct {
	Value PatchCallHandlingSettingsCallHandlingSettings
	Set   bool
}

// IsSet returns true if OptPatchCallHandlingSettingsCallHandlingSettings was set.
func (o OptPatchCallHandlingSettingsCallHandlingSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPatchCallHandlingSettingsCallHandlingSettings) Reset() {
	var v PatchCallHandlingSettingsCallHandlingSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPatchCallHandlingSettingsCallHandlingSettings) SetTo(v PatchCallHandlingSettingsCallHandlingSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPatchCallHandlingSettingsCallHandlingSettings) Get() (v PatchCallHandlingSettingsCallHandlingSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPatchCallHandlingSettingsCallHandlingSettings) Or(d PatchCallHandlingSettingsCallHandlingSettings) PatchCallHandlingSettingsCallHandlingSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPatchCallHandlingSettingsCallHandlingSettingsCallDistribution returns new OptPatchCallHandlingSettingsCallHandlingSettingsCallDistribution with value set to v.
func NewOptPatchCallHandlingSettingsCallHandlingSettingsCallDistribution(v PatchCallHandlingSettingsCallHandlingSettingsCallDistribution) OptPatchCallHandlingSettingsCallHandlingSettingsCallDistribution {
	return OptPatchCallHandlingSettingsCallHandlingSettingsCallDistribution{
		Value: v,
		Set:   true,
	}
}

// OptPatchCallHandlingSettingsCallHandlingSettingsCallDistribution is optional PatchCallHandlingSettingsCallHandlingSettingsCallDistribution.
type OptPatchCallHandlingSettingsCallHandlingSettingsCallDistribution struct {
	Value PatchCallHandlingSettingsCallHandlingSettingsCallDistribution
	Set   bool
}

// IsSet returns true if OptPatchCallHandlingSettingsCallHandlingSettingsCallDistribution was set.
func (o OptPatchCallHandlingSettingsCallHandlingSettingsCallDistribution) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPatchCallHandlingSettingsCallHandlingSettingsCallDistribution) Reset() {
	var v PatchCallHandlingSettingsCallHandlingSettingsCallDistribution
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPatchCallHandlingSettingsCallHandlingSettingsCallDistribution) SetTo(v PatchCallHandlingSettingsCallHandlingSettingsCallDistribution) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPatchCallHandlingSettingsCallHandlingSettingsCallDistribution) Get() (v PatchCallHandlingSettingsCallHandlingSettingsCallDistribution, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPatchCallHandlingSettingsCallHandlingSettingsCallDistribution) Or(d PatchCallHandlingSettingsCallHandlingSettingsCallDistribution) PatchCallHandlingSettingsCallHandlingSettingsCallDistribution {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPatchCallHandlingSettingsCustomHoursSettings returns new OptPatchCallHandlingSettingsCustomHoursSettings with value set to v.
func NewOptPatchCallHandlingSettingsCustomHoursSettings(v PatchCallHandlingSettingsCustomHoursSettings) OptPatchCallHandlingSettingsCustomHoursSettings {
	return OptPatchCallHandlingSettingsCustomHoursSettings{
		Value: v,
		Set:   true,
	}
}

// OptPatchCallHandlingSettingsCustomHoursSettings is optional PatchCallHandlingSettingsCustomHoursSettings.
type OptPatchCallHandlingSettingsCustomHoursSettings struct {
	Value PatchCallHandlingSettingsCustomHoursSettings
	Set   bool
}

// IsSet returns true if OptPatchCallHandlingSettingsCustomHoursSettings was set.
func (o OptPatchCallHandlingSettingsCustomHoursSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPatchCallHandlingSettingsCustomHoursSettings) Reset() {
	var v PatchCallHandlingSettingsCustomHoursSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPatchCallHandlingSettingsCustomHoursSettings) SetTo(v PatchCallHandlingSettingsCustomHoursSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPatchCallHandlingSettingsCustomHoursSettings) Get() (v PatchCallHandlingSettingsCustomHoursSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPatchCallHandlingSettingsCustomHoursSettings) Or(d PatchCallHandlingSettingsCustomHoursSettings) PatchCallHandlingSettingsCustomHoursSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPatchCallHandlingSettingsHolidaySettings returns new OptPatchCallHandlingSettingsHolidaySettings with value set to v.
func NewOptPatchCallHandlingSettingsHolidaySettings(v PatchCallHandlingSettingsHolidaySettings) OptPatchCallHandlingSettingsHolidaySettings {
	return OptPatchCallHandlingSettingsHolidaySettings{
		Value: v,
		Set:   true,
	}
}

// OptPatchCallHandlingSettingsHolidaySettings is optional PatchCallHandlingSettingsHolidaySettings.
type OptPatchCallHandlingSettingsHolidaySettings struct {
	Value PatchCallHandlingSettingsHolidaySettings
	Set   bool
}

// IsSet returns true if OptPatchCallHandlingSettingsHolidaySettings was set.
func (o OptPatchCallHandlingSettingsHolidaySettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPatchCallHandlingSettingsHolidaySettings) Reset() {
	var v PatchCallHandlingSettingsHolidaySettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPatchCallHandlingSettingsHolidaySettings) SetTo(v PatchCallHandlingSettingsHolidaySettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPatchCallHandlingSettingsHolidaySettings) Get() (v PatchCallHandlingSettingsHolidaySettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPatchCallHandlingSettingsHolidaySettings) Or(d PatchCallHandlingSettingsHolidaySettings) PatchCallHandlingSettingsHolidaySettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneSettingOKBillingAccount returns new OptPhoneSettingOKBillingAccount with value set to v.
func NewOptPhoneSettingOKBillingAccount(v PhoneSettingOKBillingAccount) OptPhoneSettingOKBillingAccount {
	return OptPhoneSettingOKBillingAccount{
		Value: v,
		Set:   true,
	}
}

// OptPhoneSettingOKBillingAccount is optional PhoneSettingOKBillingAccount.
type OptPhoneSettingOKBillingAccount struct {
	Value PhoneSettingOKBillingAccount
	Set   bool
}

// IsSet returns true if OptPhoneSettingOKBillingAccount was set.
func (o OptPhoneSettingOKBillingAccount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneSettingOKBillingAccount) Reset() {
	var v PhoneSettingOKBillingAccount
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneSettingOKBillingAccount) SetTo(v PhoneSettingOKBillingAccount) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneSettingOKBillingAccount) Get() (v PhoneSettingOKBillingAccount, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneSettingOKBillingAccount) Or(d PhoneSettingOKBillingAccount) PhoneSettingOKBillingAccount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneSettingOKByoc returns new OptPhoneSettingOKByoc with value set to v.
func NewOptPhoneSettingOKByoc(v PhoneSettingOKByoc) OptPhoneSettingOKByoc {
	return OptPhoneSettingOKByoc{
		Value: v,
		Set:   true,
	}
}

// OptPhoneSettingOKByoc is optional PhoneSettingOKByoc.
type OptPhoneSettingOKByoc struct {
	Value PhoneSettingOKByoc
	Set   bool
}

// IsSet returns true if OptPhoneSettingOKByoc was set.
func (o OptPhoneSettingOKByoc) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneSettingOKByoc) Reset() {
	var v PhoneSettingOKByoc
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneSettingOKByoc) SetTo(v PhoneSettingOKByoc) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneSettingOKByoc) Get() (v PhoneSettingOKByoc, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneSettingOKByoc) Or(d PhoneSettingOKByoc) PhoneSettingOKByoc {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneSettingOKCountry returns new OptPhoneSettingOKCountry with value set to v.
func NewOptPhoneSettingOKCountry(v PhoneSettingOKCountry) OptPhoneSettingOKCountry {
	return OptPhoneSettingOKCountry{
		Value: v,
		Set:   true,
	}
}

// OptPhoneSettingOKCountry is optional PhoneSettingOKCountry.
type OptPhoneSettingOKCountry struct {
	Value PhoneSettingOKCountry
	Set   bool
}

// IsSet returns true if OptPhoneSettingOKCountry was set.
func (o OptPhoneSettingOKCountry) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneSettingOKCountry) Reset() {
	var v PhoneSettingOKCountry
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneSettingOKCountry) SetTo(v PhoneSettingOKCountry) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneSettingOKCountry) Get() (v PhoneSettingOKCountry, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneSettingOKCountry) Or(d PhoneSettingOKCountry) PhoneSettingOKCountry {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneSettingOKMultiplePartyConference returns new OptPhoneSettingOKMultiplePartyConference with value set to v.
func NewOptPhoneSettingOKMultiplePartyConference(v PhoneSettingOKMultiplePartyConference) OptPhoneSettingOKMultiplePartyConference {
	return OptPhoneSettingOKMultiplePartyConference{
		Value: v,
		Set:   true,
	}
}

// OptPhoneSettingOKMultiplePartyConference is optional PhoneSettingOKMultiplePartyConference.
type OptPhoneSettingOKMultiplePartyConference struct {
	Value PhoneSettingOKMultiplePartyConference
	Set   bool
}

// IsSet returns true if OptPhoneSettingOKMultiplePartyConference was set.
func (o OptPhoneSettingOKMultiplePartyConference) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneSettingOKMultiplePartyConference) Reset() {
	var v PhoneSettingOKMultiplePartyConference
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneSettingOKMultiplePartyConference) SetTo(v PhoneSettingOKMultiplePartyConference) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneSettingOKMultiplePartyConference) Get() (v PhoneSettingOKMultiplePartyConference, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneSettingOKMultiplePartyConference) Or(d PhoneSettingOKMultiplePartyConference) PhoneSettingOKMultiplePartyConference {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneSettingOKMultipleSites returns new OptPhoneSettingOKMultipleSites with value set to v.
func NewOptPhoneSettingOKMultipleSites(v PhoneSettingOKMultipleSites) OptPhoneSettingOKMultipleSites {
	return OptPhoneSettingOKMultipleSites{
		Value: v,
		Set:   true,
	}
}

// OptPhoneSettingOKMultipleSites is optional PhoneSettingOKMultipleSites.
type OptPhoneSettingOKMultipleSites struct {
	Value PhoneSettingOKMultipleSites
	Set   bool
}

// IsSet returns true if OptPhoneSettingOKMultipleSites was set.
func (o OptPhoneSettingOKMultipleSites) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneSettingOKMultipleSites) Reset() {
	var v PhoneSettingOKMultipleSites
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneSettingOKMultipleSites) SetTo(v PhoneSettingOKMultipleSites) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneSettingOKMultipleSites) Get() (v PhoneSettingOKMultipleSites, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneSettingOKMultipleSites) Or(d PhoneSettingOKMultipleSites) PhoneSettingOKMultipleSites {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneSettingOKShowDeviceIPForCallLog returns new OptPhoneSettingOKShowDeviceIPForCallLog with value set to v.
func NewOptPhoneSettingOKShowDeviceIPForCallLog(v PhoneSettingOKShowDeviceIPForCallLog) OptPhoneSettingOKShowDeviceIPForCallLog {
	return OptPhoneSettingOKShowDeviceIPForCallLog{
		Value: v,
		Set:   true,
	}
}

// OptPhoneSettingOKShowDeviceIPForCallLog is optional PhoneSettingOKShowDeviceIPForCallLog.
type OptPhoneSettingOKShowDeviceIPForCallLog struct {
	Value PhoneSettingOKShowDeviceIPForCallLog
	Set   bool
}

// IsSet returns true if OptPhoneSettingOKShowDeviceIPForCallLog was set.
func (o OptPhoneSettingOKShowDeviceIPForCallLog) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneSettingOKShowDeviceIPForCallLog) Reset() {
	var v PhoneSettingOKShowDeviceIPForCallLog
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneSettingOKShowDeviceIPForCallLog) SetTo(v PhoneSettingOKShowDeviceIPForCallLog) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneSettingOKShowDeviceIPForCallLog) Get() (v PhoneSettingOKShowDeviceIPForCallLog, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneSettingOKShowDeviceIPForCallLog) Or(d PhoneSettingOKShowDeviceIPForCallLog) PhoneSettingOKShowDeviceIPForCallLog {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserCallLogsOKCallLogsItemAcceptedBy returns new OptPhoneUserCallLogsOKCallLogsItemAcceptedBy with value set to v.
func NewOptPhoneUserCallLogsOKCallLogsItemAcceptedBy(v PhoneUserCallLogsOKCallLogsItemAcceptedBy) OptPhoneUserCallLogsOKCallLogsItemAcceptedBy {
	return OptPhoneUserCallLogsOKCallLogsItemAcceptedBy{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserCallLogsOKCallLogsItemAcceptedBy is optional PhoneUserCallLogsOKCallLogsItemAcceptedBy.
type OptPhoneUserCallLogsOKCallLogsItemAcceptedBy struct {
	Value PhoneUserCallLogsOKCallLogsItemAcceptedBy
	Set   bool
}

// IsSet returns true if OptPhoneUserCallLogsOKCallLogsItemAcceptedBy was set.
func (o OptPhoneUserCallLogsOKCallLogsItemAcceptedBy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserCallLogsOKCallLogsItemAcceptedBy) Reset() {
	var v PhoneUserCallLogsOKCallLogsItemAcceptedBy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserCallLogsOKCallLogsItemAcceptedBy) SetTo(v PhoneUserCallLogsOKCallLogsItemAcceptedBy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserCallLogsOKCallLogsItemAcceptedBy) Get() (v PhoneUserCallLogsOKCallLogsItemAcceptedBy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserCallLogsOKCallLogsItemAcceptedBy) Or(d PhoneUserCallLogsOKCallLogsItemAcceptedBy) PhoneUserCallLogsOKCallLogsItemAcceptedBy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserCallLogsOKCallLogsItemForwardedBy returns new OptPhoneUserCallLogsOKCallLogsItemForwardedBy with value set to v.
func NewOptPhoneUserCallLogsOKCallLogsItemForwardedBy(v PhoneUserCallLogsOKCallLogsItemForwardedBy) OptPhoneUserCallLogsOKCallLogsItemForwardedBy {
	return OptPhoneUserCallLogsOKCallLogsItemForwardedBy{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserCallLogsOKCallLogsItemForwardedBy is optional PhoneUserCallLogsOKCallLogsItemForwardedBy.
type OptPhoneUserCallLogsOKCallLogsItemForwardedBy struct {
	Value PhoneUserCallLogsOKCallLogsItemForwardedBy
	Set   bool
}

// IsSet returns true if OptPhoneUserCallLogsOKCallLogsItemForwardedBy was set.
func (o OptPhoneUserCallLogsOKCallLogsItemForwardedBy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserCallLogsOKCallLogsItemForwardedBy) Reset() {
	var v PhoneUserCallLogsOKCallLogsItemForwardedBy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserCallLogsOKCallLogsItemForwardedBy) SetTo(v PhoneUserCallLogsOKCallLogsItemForwardedBy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserCallLogsOKCallLogsItemForwardedBy) Get() (v PhoneUserCallLogsOKCallLogsItemForwardedBy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserCallLogsOKCallLogsItemForwardedBy) Or(d PhoneUserCallLogsOKCallLogsItemForwardedBy) PhoneUserCallLogsOKCallLogsItemForwardedBy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserCallLogsOKCallLogsItemForwardedTo returns new OptPhoneUserCallLogsOKCallLogsItemForwardedTo with value set to v.
func NewOptPhoneUserCallLogsOKCallLogsItemForwardedTo(v PhoneUserCallLogsOKCallLogsItemForwardedTo) OptPhoneUserCallLogsOKCallLogsItemForwardedTo {
	return OptPhoneUserCallLogsOKCallLogsItemForwardedTo{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserCallLogsOKCallLogsItemForwardedTo is optional PhoneUserCallLogsOKCallLogsItemForwardedTo.
type OptPhoneUserCallLogsOKCallLogsItemForwardedTo struct {
	Value PhoneUserCallLogsOKCallLogsItemForwardedTo
	Set   bool
}

// IsSet returns true if OptPhoneUserCallLogsOKCallLogsItemForwardedTo was set.
func (o OptPhoneUserCallLogsOKCallLogsItemForwardedTo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserCallLogsOKCallLogsItemForwardedTo) Reset() {
	var v PhoneUserCallLogsOKCallLogsItemForwardedTo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserCallLogsOKCallLogsItemForwardedTo) SetTo(v PhoneUserCallLogsOKCallLogsItemForwardedTo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserCallLogsOKCallLogsItemForwardedTo) Get() (v PhoneUserCallLogsOKCallLogsItemForwardedTo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserCallLogsOKCallLogsItemForwardedTo) Or(d PhoneUserCallLogsOKCallLogsItemForwardedTo) PhoneUserCallLogsOKCallLogsItemForwardedTo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserCallLogsOKCallLogsItemOutgoingBy returns new OptPhoneUserCallLogsOKCallLogsItemOutgoingBy with value set to v.
func NewOptPhoneUserCallLogsOKCallLogsItemOutgoingBy(v PhoneUserCallLogsOKCallLogsItemOutgoingBy) OptPhoneUserCallLogsOKCallLogsItemOutgoingBy {
	return OptPhoneUserCallLogsOKCallLogsItemOutgoingBy{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserCallLogsOKCallLogsItemOutgoingBy is optional PhoneUserCallLogsOKCallLogsItemOutgoingBy.
type OptPhoneUserCallLogsOKCallLogsItemOutgoingBy struct {
	Value PhoneUserCallLogsOKCallLogsItemOutgoingBy
	Set   bool
}

// IsSet returns true if OptPhoneUserCallLogsOKCallLogsItemOutgoingBy was set.
func (o OptPhoneUserCallLogsOKCallLogsItemOutgoingBy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserCallLogsOKCallLogsItemOutgoingBy) Reset() {
	var v PhoneUserCallLogsOKCallLogsItemOutgoingBy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserCallLogsOKCallLogsItemOutgoingBy) SetTo(v PhoneUserCallLogsOKCallLogsItemOutgoingBy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserCallLogsOKCallLogsItemOutgoingBy) Get() (v PhoneUserCallLogsOKCallLogsItemOutgoingBy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserCallLogsOKCallLogsItemOutgoingBy) Or(d PhoneUserCallLogsOKCallLogsItemOutgoingBy) PhoneUserCallLogsOKCallLogsItemOutgoingBy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserCallLogsOKCallLogsItemSite returns new OptPhoneUserCallLogsOKCallLogsItemSite with value set to v.
func NewOptPhoneUserCallLogsOKCallLogsItemSite(v PhoneUserCallLogsOKCallLogsItemSite) OptPhoneUserCallLogsOKCallLogsItemSite {
	return OptPhoneUserCallLogsOKCallLogsItemSite{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserCallLogsOKCallLogsItemSite is optional PhoneUserCallLogsOKCallLogsItemSite.
type OptPhoneUserCallLogsOKCallLogsItemSite struct {
	Value PhoneUserCallLogsOKCallLogsItemSite
	Set   bool
}

// IsSet returns true if OptPhoneUserCallLogsOKCallLogsItemSite was set.
func (o OptPhoneUserCallLogsOKCallLogsItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserCallLogsOKCallLogsItemSite) Reset() {
	var v PhoneUserCallLogsOKCallLogsItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserCallLogsOKCallLogsItemSite) SetTo(v PhoneUserCallLogsOKCallLogsItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserCallLogsOKCallLogsItemSite) Get() (v PhoneUserCallLogsOKCallLogsItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserCallLogsOKCallLogsItemSite) Or(d PhoneUserCallLogsOKCallLogsItemSite) PhoneUserCallLogsOKCallLogsItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKEmergencyAddress returns new OptPhoneUserOKEmergencyAddress with value set to v.
func NewOptPhoneUserOKEmergencyAddress(v PhoneUserOKEmergencyAddress) OptPhoneUserOKEmergencyAddress {
	return OptPhoneUserOKEmergencyAddress{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKEmergencyAddress is optional PhoneUserOKEmergencyAddress.
type OptPhoneUserOKEmergencyAddress struct {
	Value PhoneUserOKEmergencyAddress
	Set   bool
}

// IsSet returns true if OptPhoneUserOKEmergencyAddress was set.
func (o OptPhoneUserOKEmergencyAddress) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKEmergencyAddress) Reset() {
	var v PhoneUserOKEmergencyAddress
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKEmergencyAddress) SetTo(v PhoneUserOKEmergencyAddress) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKEmergencyAddress) Get() (v PhoneUserOKEmergencyAddress, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKEmergencyAddress) Or(d PhoneUserOKEmergencyAddress) PhoneUserOKEmergencyAddress {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicy returns new OptPhoneUserOKPolicy with value set to v.
func NewOptPhoneUserOKPolicy(v PhoneUserOKPolicy) OptPhoneUserOKPolicy {
	return OptPhoneUserOKPolicy{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicy is optional PhoneUserOKPolicy.
type OptPhoneUserOKPolicy struct {
	Value PhoneUserOKPolicy
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicy was set.
func (o OptPhoneUserOKPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicy) Reset() {
	var v PhoneUserOKPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicy) SetTo(v PhoneUserOKPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicy) Get() (v PhoneUserOKPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicy) Or(d PhoneUserOKPolicy) PhoneUserOKPolicy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyAdHocCallRecording returns new OptPhoneUserOKPolicyAdHocCallRecording with value set to v.
func NewOptPhoneUserOKPolicyAdHocCallRecording(v PhoneUserOKPolicyAdHocCallRecording) OptPhoneUserOKPolicyAdHocCallRecording {
	return OptPhoneUserOKPolicyAdHocCallRecording{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyAdHocCallRecording is optional PhoneUserOKPolicyAdHocCallRecording.
type OptPhoneUserOKPolicyAdHocCallRecording struct {
	Value PhoneUserOKPolicyAdHocCallRecording
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyAdHocCallRecording was set.
func (o OptPhoneUserOKPolicyAdHocCallRecording) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyAdHocCallRecording) Reset() {
	var v PhoneUserOKPolicyAdHocCallRecording
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyAdHocCallRecording) SetTo(v PhoneUserOKPolicyAdHocCallRecording) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyAdHocCallRecording) Get() (v PhoneUserOKPolicyAdHocCallRecording, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyAdHocCallRecording) Or(d PhoneUserOKPolicyAdHocCallRecording) PhoneUserOKPolicyAdHocCallRecording {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone returns new OptPhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone with value set to v.
func NewOptPhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone(v PhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone) OptPhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone {
	return OptPhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone is optional PhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone.
type OptPhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone struct {
	Value PhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone was set.
func (o OptPhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone) Reset() {
	var v PhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone) SetTo(v PhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone) Get() (v PhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone) Or(d PhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone) PhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyAllowEndUserEditCallHandling returns new OptPhoneUserOKPolicyAllowEndUserEditCallHandling with value set to v.
func NewOptPhoneUserOKPolicyAllowEndUserEditCallHandling(v PhoneUserOKPolicyAllowEndUserEditCallHandling) OptPhoneUserOKPolicyAllowEndUserEditCallHandling {
	return OptPhoneUserOKPolicyAllowEndUserEditCallHandling{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyAllowEndUserEditCallHandling is optional PhoneUserOKPolicyAllowEndUserEditCallHandling.
type OptPhoneUserOKPolicyAllowEndUserEditCallHandling struct {
	Value PhoneUserOKPolicyAllowEndUserEditCallHandling
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyAllowEndUserEditCallHandling was set.
func (o OptPhoneUserOKPolicyAllowEndUserEditCallHandling) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyAllowEndUserEditCallHandling) Reset() {
	var v PhoneUserOKPolicyAllowEndUserEditCallHandling
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyAllowEndUserEditCallHandling) SetTo(v PhoneUserOKPolicyAllowEndUserEditCallHandling) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyAllowEndUserEditCallHandling) Get() (v PhoneUserOKPolicyAllowEndUserEditCallHandling, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyAllowEndUserEditCallHandling) Or(d PhoneUserOKPolicyAllowEndUserEditCallHandling) PhoneUserOKPolicyAllowEndUserEditCallHandling {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyAudioIntercom returns new OptPhoneUserOKPolicyAudioIntercom with value set to v.
func NewOptPhoneUserOKPolicyAudioIntercom(v PhoneUserOKPolicyAudioIntercom) OptPhoneUserOKPolicyAudioIntercom {
	return OptPhoneUserOKPolicyAudioIntercom{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyAudioIntercom is optional PhoneUserOKPolicyAudioIntercom.
type OptPhoneUserOKPolicyAudioIntercom struct {
	Value PhoneUserOKPolicyAudioIntercom
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyAudioIntercom was set.
func (o OptPhoneUserOKPolicyAudioIntercom) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyAudioIntercom) Reset() {
	var v PhoneUserOKPolicyAudioIntercom
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyAudioIntercom) SetTo(v PhoneUserOKPolicyAudioIntercom) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyAudioIntercom) Get() (v PhoneUserOKPolicyAudioIntercom, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyAudioIntercom) Or(d PhoneUserOKPolicyAudioIntercom) PhoneUserOKPolicyAudioIntercom {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyAutoCallRecording returns new OptPhoneUserOKPolicyAutoCallRecording with value set to v.
func NewOptPhoneUserOKPolicyAutoCallRecording(v PhoneUserOKPolicyAutoCallRecording) OptPhoneUserOKPolicyAutoCallRecording {
	return OptPhoneUserOKPolicyAutoCallRecording{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyAutoCallRecording is optional PhoneUserOKPolicyAutoCallRecording.
type OptPhoneUserOKPolicyAutoCallRecording struct {
	Value PhoneUserOKPolicyAutoCallRecording
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyAutoCallRecording was set.
func (o OptPhoneUserOKPolicyAutoCallRecording) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyAutoCallRecording) Reset() {
	var v PhoneUserOKPolicyAutoCallRecording
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyAutoCallRecording) SetTo(v PhoneUserOKPolicyAutoCallRecording) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyAutoCallRecording) Get() (v PhoneUserOKPolicyAutoCallRecording, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyAutoCallRecording) Or(d PhoneUserOKPolicyAutoCallRecording) PhoneUserOKPolicyAutoCallRecording {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone returns new OptPhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone with value set to v.
func NewOptPhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone(v PhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone) OptPhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone {
	return OptPhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone is optional PhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone.
type OptPhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone struct {
	Value PhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone was set.
func (o OptPhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone) Reset() {
	var v PhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone) SetTo(v PhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone) Get() (v PhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone) Or(d PhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone) PhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyCallHandlingForwardingToOtherUsers returns new OptPhoneUserOKPolicyCallHandlingForwardingToOtherUsers with value set to v.
func NewOptPhoneUserOKPolicyCallHandlingForwardingToOtherUsers(v PhoneUserOKPolicyCallHandlingForwardingToOtherUsers) OptPhoneUserOKPolicyCallHandlingForwardingToOtherUsers {
	return OptPhoneUserOKPolicyCallHandlingForwardingToOtherUsers{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyCallHandlingForwardingToOtherUsers is optional PhoneUserOKPolicyCallHandlingForwardingToOtherUsers.
type OptPhoneUserOKPolicyCallHandlingForwardingToOtherUsers struct {
	Value PhoneUserOKPolicyCallHandlingForwardingToOtherUsers
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyCallHandlingForwardingToOtherUsers was set.
func (o OptPhoneUserOKPolicyCallHandlingForwardingToOtherUsers) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyCallHandlingForwardingToOtherUsers) Reset() {
	var v PhoneUserOKPolicyCallHandlingForwardingToOtherUsers
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyCallHandlingForwardingToOtherUsers) SetTo(v PhoneUserOKPolicyCallHandlingForwardingToOtherUsers) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyCallHandlingForwardingToOtherUsers) Get() (v PhoneUserOKPolicyCallHandlingForwardingToOtherUsers, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyCallHandlingForwardingToOtherUsers) Or(d PhoneUserOKPolicyCallHandlingForwardingToOtherUsers) PhoneUserOKPolicyCallHandlingForwardingToOtherUsers {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyCallOverflow returns new OptPhoneUserOKPolicyCallOverflow with value set to v.
func NewOptPhoneUserOKPolicyCallOverflow(v PhoneUserOKPolicyCallOverflow) OptPhoneUserOKPolicyCallOverflow {
	return OptPhoneUserOKPolicyCallOverflow{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyCallOverflow is optional PhoneUserOKPolicyCallOverflow.
type OptPhoneUserOKPolicyCallOverflow struct {
	Value PhoneUserOKPolicyCallOverflow
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyCallOverflow was set.
func (o OptPhoneUserOKPolicyCallOverflow) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyCallOverflow) Reset() {
	var v PhoneUserOKPolicyCallOverflow
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyCallOverflow) SetTo(v PhoneUserOKPolicyCallOverflow) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyCallOverflow) Get() (v PhoneUserOKPolicyCallOverflow, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyCallOverflow) Or(d PhoneUserOKPolicyCallOverflow) PhoneUserOKPolicyCallOverflow {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyCallPark returns new OptPhoneUserOKPolicyCallPark with value set to v.
func NewOptPhoneUserOKPolicyCallPark(v PhoneUserOKPolicyCallPark) OptPhoneUserOKPolicyCallPark {
	return OptPhoneUserOKPolicyCallPark{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyCallPark is optional PhoneUserOKPolicyCallPark.
type OptPhoneUserOKPolicyCallPark struct {
	Value PhoneUserOKPolicyCallPark
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyCallPark was set.
func (o OptPhoneUserOKPolicyCallPark) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyCallPark) Reset() {
	var v PhoneUserOKPolicyCallPark
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyCallPark) SetTo(v PhoneUserOKPolicyCallPark) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyCallPark) Get() (v PhoneUserOKPolicyCallPark, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyCallPark) Or(d PhoneUserOKPolicyCallPark) PhoneUserOKPolicyCallPark {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyCallParkForwardTo returns new OptPhoneUserOKPolicyCallParkForwardTo with value set to v.
func NewOptPhoneUserOKPolicyCallParkForwardTo(v PhoneUserOKPolicyCallParkForwardTo) OptPhoneUserOKPolicyCallParkForwardTo {
	return OptPhoneUserOKPolicyCallParkForwardTo{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyCallParkForwardTo is optional PhoneUserOKPolicyCallParkForwardTo.
type OptPhoneUserOKPolicyCallParkForwardTo struct {
	Value PhoneUserOKPolicyCallParkForwardTo
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyCallParkForwardTo was set.
func (o OptPhoneUserOKPolicyCallParkForwardTo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyCallParkForwardTo) Reset() {
	var v PhoneUserOKPolicyCallParkForwardTo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyCallParkForwardTo) SetTo(v PhoneUserOKPolicyCallParkForwardTo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyCallParkForwardTo) Get() (v PhoneUserOKPolicyCallParkForwardTo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyCallParkForwardTo) Or(d PhoneUserOKPolicyCallParkForwardTo) PhoneUserOKPolicyCallParkForwardTo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyCallTransferring returns new OptPhoneUserOKPolicyCallTransferring with value set to v.
func NewOptPhoneUserOKPolicyCallTransferring(v PhoneUserOKPolicyCallTransferring) OptPhoneUserOKPolicyCallTransferring {
	return OptPhoneUserOKPolicyCallTransferring{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyCallTransferring is optional PhoneUserOKPolicyCallTransferring.
type OptPhoneUserOKPolicyCallTransferring struct {
	Value PhoneUserOKPolicyCallTransferring
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyCallTransferring was set.
func (o OptPhoneUserOKPolicyCallTransferring) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyCallTransferring) Reset() {
	var v PhoneUserOKPolicyCallTransferring
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyCallTransferring) SetTo(v PhoneUserOKPolicyCallTransferring) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyCallTransferring) Get() (v PhoneUserOKPolicyCallTransferring, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyCallTransferring) Or(d PhoneUserOKPolicyCallTransferring) PhoneUserOKPolicyCallTransferring {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyCheckVoicemailsOverPhone returns new OptPhoneUserOKPolicyCheckVoicemailsOverPhone with value set to v.
func NewOptPhoneUserOKPolicyCheckVoicemailsOverPhone(v PhoneUserOKPolicyCheckVoicemailsOverPhone) OptPhoneUserOKPolicyCheckVoicemailsOverPhone {
	return OptPhoneUserOKPolicyCheckVoicemailsOverPhone{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyCheckVoicemailsOverPhone is optional PhoneUserOKPolicyCheckVoicemailsOverPhone.
type OptPhoneUserOKPolicyCheckVoicemailsOverPhone struct {
	Value PhoneUserOKPolicyCheckVoicemailsOverPhone
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyCheckVoicemailsOverPhone was set.
func (o OptPhoneUserOKPolicyCheckVoicemailsOverPhone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyCheckVoicemailsOverPhone) Reset() {
	var v PhoneUserOKPolicyCheckVoicemailsOverPhone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyCheckVoicemailsOverPhone) SetTo(v PhoneUserOKPolicyCheckVoicemailsOverPhone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyCheckVoicemailsOverPhone) Get() (v PhoneUserOKPolicyCheckVoicemailsOverPhone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyCheckVoicemailsOverPhone) Or(d PhoneUserOKPolicyCheckVoicemailsOverPhone) PhoneUserOKPolicyCheckVoicemailsOverPhone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyE2eEncryption returns new OptPhoneUserOKPolicyE2eEncryption with value set to v.
func NewOptPhoneUserOKPolicyE2eEncryption(v PhoneUserOKPolicyE2eEncryption) OptPhoneUserOKPolicyE2eEncryption {
	return OptPhoneUserOKPolicyE2eEncryption{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyE2eEncryption is optional PhoneUserOKPolicyE2eEncryption.
type OptPhoneUserOKPolicyE2eEncryption struct {
	Value PhoneUserOKPolicyE2eEncryption
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyE2eEncryption was set.
func (o OptPhoneUserOKPolicyE2eEncryption) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyE2eEncryption) Reset() {
	var v PhoneUserOKPolicyE2eEncryption
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyE2eEncryption) SetTo(v PhoneUserOKPolicyE2eEncryption) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyE2eEncryption) Get() (v PhoneUserOKPolicyE2eEncryption, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyE2eEncryption) Or(d PhoneUserOKPolicyE2eEncryption) PhoneUserOKPolicyE2eEncryption {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyEmergencyAddressManagement returns new OptPhoneUserOKPolicyEmergencyAddressManagement with value set to v.
func NewOptPhoneUserOKPolicyEmergencyAddressManagement(v PhoneUserOKPolicyEmergencyAddressManagement) OptPhoneUserOKPolicyEmergencyAddressManagement {
	return OptPhoneUserOKPolicyEmergencyAddressManagement{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyEmergencyAddressManagement is optional PhoneUserOKPolicyEmergencyAddressManagement.
type OptPhoneUserOKPolicyEmergencyAddressManagement struct {
	Value PhoneUserOKPolicyEmergencyAddressManagement
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyEmergencyAddressManagement was set.
func (o OptPhoneUserOKPolicyEmergencyAddressManagement) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyEmergencyAddressManagement) Reset() {
	var v PhoneUserOKPolicyEmergencyAddressManagement
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyEmergencyAddressManagement) SetTo(v PhoneUserOKPolicyEmergencyAddressManagement) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyEmergencyAddressManagement) Get() (v PhoneUserOKPolicyEmergencyAddressManagement, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyEmergencyAddressManagement) Or(d PhoneUserOKPolicyEmergencyAddressManagement) PhoneUserOKPolicyEmergencyAddressManagement {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyHandOffToRoom returns new OptPhoneUserOKPolicyHandOffToRoom with value set to v.
func NewOptPhoneUserOKPolicyHandOffToRoom(v PhoneUserOKPolicyHandOffToRoom) OptPhoneUserOKPolicyHandOffToRoom {
	return OptPhoneUserOKPolicyHandOffToRoom{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyHandOffToRoom is optional PhoneUserOKPolicyHandOffToRoom.
type OptPhoneUserOKPolicyHandOffToRoom struct {
	Value PhoneUserOKPolicyHandOffToRoom
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyHandOffToRoom was set.
func (o OptPhoneUserOKPolicyHandOffToRoom) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyHandOffToRoom) Reset() {
	var v PhoneUserOKPolicyHandOffToRoom
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyHandOffToRoom) SetTo(v PhoneUserOKPolicyHandOffToRoom) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyHandOffToRoom) Get() (v PhoneUserOKPolicyHandOffToRoom, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyHandOffToRoom) Or(d PhoneUserOKPolicyHandOffToRoom) PhoneUserOKPolicyHandOffToRoom {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyMobileSwitchToCarrier returns new OptPhoneUserOKPolicyMobileSwitchToCarrier with value set to v.
func NewOptPhoneUserOKPolicyMobileSwitchToCarrier(v PhoneUserOKPolicyMobileSwitchToCarrier) OptPhoneUserOKPolicyMobileSwitchToCarrier {
	return OptPhoneUserOKPolicyMobileSwitchToCarrier{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyMobileSwitchToCarrier is optional PhoneUserOKPolicyMobileSwitchToCarrier.
type OptPhoneUserOKPolicyMobileSwitchToCarrier struct {
	Value PhoneUserOKPolicyMobileSwitchToCarrier
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyMobileSwitchToCarrier was set.
func (o OptPhoneUserOKPolicyMobileSwitchToCarrier) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyMobileSwitchToCarrier) Reset() {
	var v PhoneUserOKPolicyMobileSwitchToCarrier
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyMobileSwitchToCarrier) SetTo(v PhoneUserOKPolicyMobileSwitchToCarrier) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyMobileSwitchToCarrier) Get() (v PhoneUserOKPolicyMobileSwitchToCarrier, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyMobileSwitchToCarrier) Or(d PhoneUserOKPolicyMobileSwitchToCarrier) PhoneUserOKPolicyMobileSwitchToCarrier {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyOutboundCalling returns new OptPhoneUserOKPolicyOutboundCalling with value set to v.
func NewOptPhoneUserOKPolicyOutboundCalling(v PhoneUserOKPolicyOutboundCalling) OptPhoneUserOKPolicyOutboundCalling {
	return OptPhoneUserOKPolicyOutboundCalling{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyOutboundCalling is optional PhoneUserOKPolicyOutboundCalling.
type OptPhoneUserOKPolicyOutboundCalling struct {
	Value PhoneUserOKPolicyOutboundCalling
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyOutboundCalling was set.
func (o OptPhoneUserOKPolicyOutboundCalling) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyOutboundCalling) Reset() {
	var v PhoneUserOKPolicyOutboundCalling
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyOutboundCalling) SetTo(v PhoneUserOKPolicyOutboundCalling) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyOutboundCalling) Get() (v PhoneUserOKPolicyOutboundCalling, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyOutboundCalling) Or(d PhoneUserOKPolicyOutboundCalling) PhoneUserOKPolicyOutboundCalling {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyOutboundSMS returns new OptPhoneUserOKPolicyOutboundSMS with value set to v.
func NewOptPhoneUserOKPolicyOutboundSMS(v PhoneUserOKPolicyOutboundSMS) OptPhoneUserOKPolicyOutboundSMS {
	return OptPhoneUserOKPolicyOutboundSMS{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyOutboundSMS is optional PhoneUserOKPolicyOutboundSMS.
type OptPhoneUserOKPolicyOutboundSMS struct {
	Value PhoneUserOKPolicyOutboundSMS
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyOutboundSMS was set.
func (o OptPhoneUserOKPolicyOutboundSMS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyOutboundSMS) Reset() {
	var v PhoneUserOKPolicyOutboundSMS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyOutboundSMS) SetTo(v PhoneUserOKPolicyOutboundSMS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyOutboundSMS) Get() (v PhoneUserOKPolicyOutboundSMS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyOutboundSMS) Or(d PhoneUserOKPolicyOutboundSMS) PhoneUserOKPolicyOutboundSMS {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyPeerToPeerMedia returns new OptPhoneUserOKPolicyPeerToPeerMedia with value set to v.
func NewOptPhoneUserOKPolicyPeerToPeerMedia(v PhoneUserOKPolicyPeerToPeerMedia) OptPhoneUserOKPolicyPeerToPeerMedia {
	return OptPhoneUserOKPolicyPeerToPeerMedia{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyPeerToPeerMedia is optional PhoneUserOKPolicyPeerToPeerMedia.
type OptPhoneUserOKPolicyPeerToPeerMedia struct {
	Value PhoneUserOKPolicyPeerToPeerMedia
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyPeerToPeerMedia was set.
func (o OptPhoneUserOKPolicyPeerToPeerMedia) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyPeerToPeerMedia) Reset() {
	var v PhoneUserOKPolicyPeerToPeerMedia
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyPeerToPeerMedia) SetTo(v PhoneUserOKPolicyPeerToPeerMedia) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyPeerToPeerMedia) Get() (v PhoneUserOKPolicyPeerToPeerMedia, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyPeerToPeerMedia) Or(d PhoneUserOKPolicyPeerToPeerMedia) PhoneUserOKPolicyPeerToPeerMedia {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyPersonalAudioLibrary returns new OptPhoneUserOKPolicyPersonalAudioLibrary with value set to v.
func NewOptPhoneUserOKPolicyPersonalAudioLibrary(v PhoneUserOKPolicyPersonalAudioLibrary) OptPhoneUserOKPolicyPersonalAudioLibrary {
	return OptPhoneUserOKPolicyPersonalAudioLibrary{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyPersonalAudioLibrary is optional PhoneUserOKPolicyPersonalAudioLibrary.
type OptPhoneUserOKPolicyPersonalAudioLibrary struct {
	Value PhoneUserOKPolicyPersonalAudioLibrary
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyPersonalAudioLibrary was set.
func (o OptPhoneUserOKPolicyPersonalAudioLibrary) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyPersonalAudioLibrary) Reset() {
	var v PhoneUserOKPolicyPersonalAudioLibrary
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyPersonalAudioLibrary) SetTo(v PhoneUserOKPolicyPersonalAudioLibrary) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyPersonalAudioLibrary) Get() (v PhoneUserOKPolicyPersonalAudioLibrary, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyPersonalAudioLibrary) Or(d PhoneUserOKPolicyPersonalAudioLibrary) PhoneUserOKPolicyPersonalAudioLibrary {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicySMS returns new OptPhoneUserOKPolicySMS with value set to v.
func NewOptPhoneUserOKPolicySMS(v PhoneUserOKPolicySMS) OptPhoneUserOKPolicySMS {
	return OptPhoneUserOKPolicySMS{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicySMS is optional PhoneUserOKPolicySMS.
type OptPhoneUserOKPolicySMS struct {
	Value PhoneUserOKPolicySMS
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicySMS was set.
func (o OptPhoneUserOKPolicySMS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicySMS) Reset() {
	var v PhoneUserOKPolicySMS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicySMS) SetTo(v PhoneUserOKPolicySMS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicySMS) Get() (v PhoneUserOKPolicySMS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicySMS) Or(d PhoneUserOKPolicySMS) PhoneUserOKPolicySMS {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicySelectOutboundCallerID returns new OptPhoneUserOKPolicySelectOutboundCallerID with value set to v.
func NewOptPhoneUserOKPolicySelectOutboundCallerID(v PhoneUserOKPolicySelectOutboundCallerID) OptPhoneUserOKPolicySelectOutboundCallerID {
	return OptPhoneUserOKPolicySelectOutboundCallerID{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicySelectOutboundCallerID is optional PhoneUserOKPolicySelectOutboundCallerID.
type OptPhoneUserOKPolicySelectOutboundCallerID struct {
	Value PhoneUserOKPolicySelectOutboundCallerID
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicySelectOutboundCallerID was set.
func (o OptPhoneUserOKPolicySelectOutboundCallerID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicySelectOutboundCallerID) Reset() {
	var v PhoneUserOKPolicySelectOutboundCallerID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicySelectOutboundCallerID) SetTo(v PhoneUserOKPolicySelectOutboundCallerID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicySelectOutboundCallerID) Get() (v PhoneUserOKPolicySelectOutboundCallerID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicySelectOutboundCallerID) Or(d PhoneUserOKPolicySelectOutboundCallerID) PhoneUserOKPolicySelectOutboundCallerID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicySharedVoicemailNotificationByEmail returns new OptPhoneUserOKPolicySharedVoicemailNotificationByEmail with value set to v.
func NewOptPhoneUserOKPolicySharedVoicemailNotificationByEmail(v PhoneUserOKPolicySharedVoicemailNotificationByEmail) OptPhoneUserOKPolicySharedVoicemailNotificationByEmail {
	return OptPhoneUserOKPolicySharedVoicemailNotificationByEmail{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicySharedVoicemailNotificationByEmail is optional PhoneUserOKPolicySharedVoicemailNotificationByEmail.
type OptPhoneUserOKPolicySharedVoicemailNotificationByEmail struct {
	Value PhoneUserOKPolicySharedVoicemailNotificationByEmail
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicySharedVoicemailNotificationByEmail was set.
func (o OptPhoneUserOKPolicySharedVoicemailNotificationByEmail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicySharedVoicemailNotificationByEmail) Reset() {
	var v PhoneUserOKPolicySharedVoicemailNotificationByEmail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicySharedVoicemailNotificationByEmail) SetTo(v PhoneUserOKPolicySharedVoicemailNotificationByEmail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicySharedVoicemailNotificationByEmail) Get() (v PhoneUserOKPolicySharedVoicemailNotificationByEmail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicySharedVoicemailNotificationByEmail) Or(d PhoneUserOKPolicySharedVoicemailNotificationByEmail) PhoneUserOKPolicySharedVoicemailNotificationByEmail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyVoicemail returns new OptPhoneUserOKPolicyVoicemail with value set to v.
func NewOptPhoneUserOKPolicyVoicemail(v PhoneUserOKPolicyVoicemail) OptPhoneUserOKPolicyVoicemail {
	return OptPhoneUserOKPolicyVoicemail{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyVoicemail is optional PhoneUserOKPolicyVoicemail.
type OptPhoneUserOKPolicyVoicemail struct {
	Value PhoneUserOKPolicyVoicemail
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyVoicemail was set.
func (o OptPhoneUserOKPolicyVoicemail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyVoicemail) Reset() {
	var v PhoneUserOKPolicyVoicemail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyVoicemail) SetTo(v PhoneUserOKPolicyVoicemail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyVoicemail) Get() (v PhoneUserOKPolicyVoicemail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyVoicemail) Or(d PhoneUserOKPolicyVoicemail) PhoneUserOKPolicyVoicemail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyVoicemailNotificationByEmail returns new OptPhoneUserOKPolicyVoicemailNotificationByEmail with value set to v.
func NewOptPhoneUserOKPolicyVoicemailNotificationByEmail(v PhoneUserOKPolicyVoicemailNotificationByEmail) OptPhoneUserOKPolicyVoicemailNotificationByEmail {
	return OptPhoneUserOKPolicyVoicemailNotificationByEmail{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyVoicemailNotificationByEmail is optional PhoneUserOKPolicyVoicemailNotificationByEmail.
type OptPhoneUserOKPolicyVoicemailNotificationByEmail struct {
	Value PhoneUserOKPolicyVoicemailNotificationByEmail
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyVoicemailNotificationByEmail was set.
func (o OptPhoneUserOKPolicyVoicemailNotificationByEmail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyVoicemailNotificationByEmail) Reset() {
	var v PhoneUserOKPolicyVoicemailNotificationByEmail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyVoicemailNotificationByEmail) SetTo(v PhoneUserOKPolicyVoicemailNotificationByEmail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyVoicemailNotificationByEmail) Get() (v PhoneUserOKPolicyVoicemailNotificationByEmail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyVoicemailNotificationByEmail) Or(d PhoneUserOKPolicyVoicemailNotificationByEmail) PhoneUserOKPolicyVoicemailNotificationByEmail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyVoicemailTranscription returns new OptPhoneUserOKPolicyVoicemailTranscription with value set to v.
func NewOptPhoneUserOKPolicyVoicemailTranscription(v PhoneUserOKPolicyVoicemailTranscription) OptPhoneUserOKPolicyVoicemailTranscription {
	return OptPhoneUserOKPolicyVoicemailTranscription{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyVoicemailTranscription is optional PhoneUserOKPolicyVoicemailTranscription.
type OptPhoneUserOKPolicyVoicemailTranscription struct {
	Value PhoneUserOKPolicyVoicemailTranscription
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyVoicemailTranscription was set.
func (o OptPhoneUserOKPolicyVoicemailTranscription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyVoicemailTranscription) Reset() {
	var v PhoneUserOKPolicyVoicemailTranscription
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyVoicemailTranscription) SetTo(v PhoneUserOKPolicyVoicemailTranscription) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyVoicemailTranscription) Get() (v PhoneUserOKPolicyVoicemailTranscription, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyVoicemailTranscription) Or(d PhoneUserOKPolicyVoicemailTranscription) PhoneUserOKPolicyVoicemailTranscription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserOKPolicyZoomPhoneOnMobile returns new OptPhoneUserOKPolicyZoomPhoneOnMobile with value set to v.
func NewOptPhoneUserOKPolicyZoomPhoneOnMobile(v PhoneUserOKPolicyZoomPhoneOnMobile) OptPhoneUserOKPolicyZoomPhoneOnMobile {
	return OptPhoneUserOKPolicyZoomPhoneOnMobile{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserOKPolicyZoomPhoneOnMobile is optional PhoneUserOKPolicyZoomPhoneOnMobile.
type OptPhoneUserOKPolicyZoomPhoneOnMobile struct {
	Value PhoneUserOKPolicyZoomPhoneOnMobile
	Set   bool
}

// IsSet returns true if OptPhoneUserOKPolicyZoomPhoneOnMobile was set.
func (o OptPhoneUserOKPolicyZoomPhoneOnMobile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserOKPolicyZoomPhoneOnMobile) Reset() {
	var v PhoneUserOKPolicyZoomPhoneOnMobile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserOKPolicyZoomPhoneOnMobile) SetTo(v PhoneUserOKPolicyZoomPhoneOnMobile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserOKPolicyZoomPhoneOnMobile) Get() (v PhoneUserOKPolicyZoomPhoneOnMobile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserOKPolicyZoomPhoneOnMobile) Or(d PhoneUserOKPolicyZoomPhoneOnMobile) PhoneUserOKPolicyZoomPhoneOnMobile {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserRecordingsOKRecordingsItemAcceptedBy returns new OptPhoneUserRecordingsOKRecordingsItemAcceptedBy with value set to v.
func NewOptPhoneUserRecordingsOKRecordingsItemAcceptedBy(v PhoneUserRecordingsOKRecordingsItemAcceptedBy) OptPhoneUserRecordingsOKRecordingsItemAcceptedBy {
	return OptPhoneUserRecordingsOKRecordingsItemAcceptedBy{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserRecordingsOKRecordingsItemAcceptedBy is optional PhoneUserRecordingsOKRecordingsItemAcceptedBy.
type OptPhoneUserRecordingsOKRecordingsItemAcceptedBy struct {
	Value PhoneUserRecordingsOKRecordingsItemAcceptedBy
	Set   bool
}

// IsSet returns true if OptPhoneUserRecordingsOKRecordingsItemAcceptedBy was set.
func (o OptPhoneUserRecordingsOKRecordingsItemAcceptedBy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserRecordingsOKRecordingsItemAcceptedBy) Reset() {
	var v PhoneUserRecordingsOKRecordingsItemAcceptedBy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserRecordingsOKRecordingsItemAcceptedBy) SetTo(v PhoneUserRecordingsOKRecordingsItemAcceptedBy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserRecordingsOKRecordingsItemAcceptedBy) Get() (v PhoneUserRecordingsOKRecordingsItemAcceptedBy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserRecordingsOKRecordingsItemAcceptedBy) Or(d PhoneUserRecordingsOKRecordingsItemAcceptedBy) PhoneUserRecordingsOKRecordingsItemAcceptedBy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserRecordingsOKRecordingsItemOutgoingBy returns new OptPhoneUserRecordingsOKRecordingsItemOutgoingBy with value set to v.
func NewOptPhoneUserRecordingsOKRecordingsItemOutgoingBy(v PhoneUserRecordingsOKRecordingsItemOutgoingBy) OptPhoneUserRecordingsOKRecordingsItemOutgoingBy {
	return OptPhoneUserRecordingsOKRecordingsItemOutgoingBy{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserRecordingsOKRecordingsItemOutgoingBy is optional PhoneUserRecordingsOKRecordingsItemOutgoingBy.
type OptPhoneUserRecordingsOKRecordingsItemOutgoingBy struct {
	Value PhoneUserRecordingsOKRecordingsItemOutgoingBy
	Set   bool
}

// IsSet returns true if OptPhoneUserRecordingsOKRecordingsItemOutgoingBy was set.
func (o OptPhoneUserRecordingsOKRecordingsItemOutgoingBy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserRecordingsOKRecordingsItemOutgoingBy) Reset() {
	var v PhoneUserRecordingsOKRecordingsItemOutgoingBy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserRecordingsOKRecordingsItemOutgoingBy) SetTo(v PhoneUserRecordingsOKRecordingsItemOutgoingBy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserRecordingsOKRecordingsItemOutgoingBy) Get() (v PhoneUserRecordingsOKRecordingsItemOutgoingBy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserRecordingsOKRecordingsItemOutgoingBy) Or(d PhoneUserRecordingsOKRecordingsItemOutgoingBy) PhoneUserRecordingsOKRecordingsItemOutgoingBy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserSettingsOKCountry returns new OptPhoneUserSettingsOKCountry with value set to v.
func NewOptPhoneUserSettingsOKCountry(v PhoneUserSettingsOKCountry) OptPhoneUserSettingsOKCountry {
	return OptPhoneUserSettingsOKCountry{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserSettingsOKCountry is optional PhoneUserSettingsOKCountry.
type OptPhoneUserSettingsOKCountry struct {
	Value PhoneUserSettingsOKCountry
	Set   bool
}

// IsSet returns true if OptPhoneUserSettingsOKCountry was set.
func (o OptPhoneUserSettingsOKCountry) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserSettingsOKCountry) Reset() {
	var v PhoneUserSettingsOKCountry
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserSettingsOKCountry) SetTo(v PhoneUserSettingsOKCountry) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserSettingsOKCountry) Get() (v PhoneUserSettingsOKCountry, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserSettingsOKCountry) Or(d PhoneUserSettingsOKCountry) PhoneUserSettingsOKCountry {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserSettingsOKDelegation returns new OptPhoneUserSettingsOKDelegation with value set to v.
func NewOptPhoneUserSettingsOKDelegation(v PhoneUserSettingsOKDelegation) OptPhoneUserSettingsOKDelegation {
	return OptPhoneUserSettingsOKDelegation{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserSettingsOKDelegation is optional PhoneUserSettingsOKDelegation.
type OptPhoneUserSettingsOKDelegation struct {
	Value PhoneUserSettingsOKDelegation
	Set   bool
}

// IsSet returns true if OptPhoneUserSettingsOKDelegation was set.
func (o OptPhoneUserSettingsOKDelegation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserSettingsOKDelegation) Reset() {
	var v PhoneUserSettingsOKDelegation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserSettingsOKDelegation) SetTo(v PhoneUserSettingsOKDelegation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserSettingsOKDelegation) Get() (v PhoneUserSettingsOKDelegation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserSettingsOKDelegation) Or(d PhoneUserSettingsOKDelegation) PhoneUserSettingsOKDelegation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserSettingsOKDeskPhone returns new OptPhoneUserSettingsOKDeskPhone with value set to v.
func NewOptPhoneUserSettingsOKDeskPhone(v PhoneUserSettingsOKDeskPhone) OptPhoneUserSettingsOKDeskPhone {
	return OptPhoneUserSettingsOKDeskPhone{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserSettingsOKDeskPhone is optional PhoneUserSettingsOKDeskPhone.
type OptPhoneUserSettingsOKDeskPhone struct {
	Value PhoneUserSettingsOKDeskPhone
	Set   bool
}

// IsSet returns true if OptPhoneUserSettingsOKDeskPhone was set.
func (o OptPhoneUserSettingsOKDeskPhone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserSettingsOKDeskPhone) Reset() {
	var v PhoneUserSettingsOKDeskPhone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserSettingsOKDeskPhone) SetTo(v PhoneUserSettingsOKDeskPhone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserSettingsOKDeskPhone) Get() (v PhoneUserSettingsOKDeskPhone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserSettingsOKDeskPhone) Or(d PhoneUserSettingsOKDeskPhone) PhoneUserSettingsOKDeskPhone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserSettingsOKDeskPhoneDevicesItemPolicy returns new OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicy with value set to v.
func NewOptPhoneUserSettingsOKDeskPhoneDevicesItemPolicy(v PhoneUserSettingsOKDeskPhoneDevicesItemPolicy) OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicy {
	return OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicy{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicy is optional PhoneUserSettingsOKDeskPhoneDevicesItemPolicy.
type OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicy struct {
	Value PhoneUserSettingsOKDeskPhoneDevicesItemPolicy
	Set   bool
}

// IsSet returns true if OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicy was set.
func (o OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicy) Reset() {
	var v PhoneUserSettingsOKDeskPhoneDevicesItemPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicy) SetTo(v PhoneUserSettingsOKDeskPhoneDevicesItemPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicy) Get() (v PhoneUserSettingsOKDeskPhoneDevicesItemPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicy) Or(d PhoneUserSettingsOKDeskPhoneDevicesItemPolicy) PhoneUserSettingsOKDeskPhoneDevicesItemPolicy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl returns new OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl with value set to v.
func NewOptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl(v PhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl) OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl {
	return OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl is optional PhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl.
type OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl struct {
	Value PhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl
	Set   bool
}

// IsSet returns true if OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl was set.
func (o OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl) Reset() {
	var v PhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl) SetTo(v PhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl) Get() (v PhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl) Or(d PhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl) PhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking returns new OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking with value set to v.
func NewOptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking(v PhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking) OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking {
	return OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking is optional PhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking.
type OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking struct {
	Value PhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking
	Set   bool
}

// IsSet returns true if OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking was set.
func (o OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking) Reset() {
	var v PhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking) SetTo(v PhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking) Get() (v PhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking) Or(d PhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking) PhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserSettingsOKDeskPhoneKeysPositions returns new OptPhoneUserSettingsOKDeskPhoneKeysPositions with value set to v.
func NewOptPhoneUserSettingsOKDeskPhoneKeysPositions(v PhoneUserSettingsOKDeskPhoneKeysPositions) OptPhoneUserSettingsOKDeskPhoneKeysPositions {
	return OptPhoneUserSettingsOKDeskPhoneKeysPositions{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserSettingsOKDeskPhoneKeysPositions is optional PhoneUserSettingsOKDeskPhoneKeysPositions.
type OptPhoneUserSettingsOKDeskPhoneKeysPositions struct {
	Value PhoneUserSettingsOKDeskPhoneKeysPositions
	Set   bool
}

// IsSet returns true if OptPhoneUserSettingsOKDeskPhoneKeysPositions was set.
func (o OptPhoneUserSettingsOKDeskPhoneKeysPositions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserSettingsOKDeskPhoneKeysPositions) Reset() {
	var v PhoneUserSettingsOKDeskPhoneKeysPositions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserSettingsOKDeskPhoneKeysPositions) SetTo(v PhoneUserSettingsOKDeskPhoneKeysPositions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserSettingsOKDeskPhoneKeysPositions) Get() (v PhoneUserSettingsOKDeskPhoneKeysPositions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserSettingsOKDeskPhoneKeysPositions) Or(d PhoneUserSettingsOKDeskPhoneKeysPositions) PhoneUserSettingsOKDeskPhoneKeysPositions {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserSettingsOKIntercom returns new OptPhoneUserSettingsOKIntercom with value set to v.
func NewOptPhoneUserSettingsOKIntercom(v PhoneUserSettingsOKIntercom) OptPhoneUserSettingsOKIntercom {
	return OptPhoneUserSettingsOKIntercom{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserSettingsOKIntercom is optional PhoneUserSettingsOKIntercom.
type OptPhoneUserSettingsOKIntercom struct {
	Value PhoneUserSettingsOKIntercom
	Set   bool
}

// IsSet returns true if OptPhoneUserSettingsOKIntercom was set.
func (o OptPhoneUserSettingsOKIntercom) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserSettingsOKIntercom) Reset() {
	var v PhoneUserSettingsOKIntercom
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserSettingsOKIntercom) SetTo(v PhoneUserSettingsOKIntercom) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserSettingsOKIntercom) Get() (v PhoneUserSettingsOKIntercom, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserSettingsOKIntercom) Or(d PhoneUserSettingsOKIntercom) PhoneUserSettingsOKIntercom {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserSettingsOKIntercomDevice returns new OptPhoneUserSettingsOKIntercomDevice with value set to v.
func NewOptPhoneUserSettingsOKIntercomDevice(v PhoneUserSettingsOKIntercomDevice) OptPhoneUserSettingsOKIntercomDevice {
	return OptPhoneUserSettingsOKIntercomDevice{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserSettingsOKIntercomDevice is optional PhoneUserSettingsOKIntercomDevice.
type OptPhoneUserSettingsOKIntercomDevice struct {
	Value PhoneUserSettingsOKIntercomDevice
	Set   bool
}

// IsSet returns true if OptPhoneUserSettingsOKIntercomDevice was set.
func (o OptPhoneUserSettingsOKIntercomDevice) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserSettingsOKIntercomDevice) Reset() {
	var v PhoneUserSettingsOKIntercomDevice
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserSettingsOKIntercomDevice) SetTo(v PhoneUserSettingsOKIntercomDevice) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserSettingsOKIntercomDevice) Get() (v PhoneUserSettingsOKIntercomDevice, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserSettingsOKIntercomDevice) Or(d PhoneUserSettingsOKIntercomDevice) PhoneUserSettingsOKIntercomDevice {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhoneUserSettingsOKOutboundCaller returns new OptPhoneUserSettingsOKOutboundCaller with value set to v.
func NewOptPhoneUserSettingsOKOutboundCaller(v PhoneUserSettingsOKOutboundCaller) OptPhoneUserSettingsOKOutboundCaller {
	return OptPhoneUserSettingsOKOutboundCaller{
		Value: v,
		Set:   true,
	}
}

// OptPhoneUserSettingsOKOutboundCaller is optional PhoneUserSettingsOKOutboundCaller.
type OptPhoneUserSettingsOKOutboundCaller struct {
	Value PhoneUserSettingsOKOutboundCaller
	Set   bool
}

// IsSet returns true if OptPhoneUserSettingsOKOutboundCaller was set.
func (o OptPhoneUserSettingsOKOutboundCaller) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhoneUserSettingsOKOutboundCaller) Reset() {
	var v PhoneUserSettingsOKOutboundCaller
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhoneUserSettingsOKOutboundCaller) SetTo(v PhoneUserSettingsOKOutboundCaller) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhoneUserSettingsOKOutboundCaller) Get() (v PhoneUserSettingsOKOutboundCaller, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhoneUserSettingsOKOutboundCaller) Or(d PhoneUserSettingsOKOutboundCaller) PhoneUserSettingsOKOutboundCaller {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPostCallHandlingSettingsCallForwardingSettings returns new OptPostCallHandlingSettingsCallForwardingSettings with value set to v.
func NewOptPostCallHandlingSettingsCallForwardingSettings(v PostCallHandlingSettingsCallForwardingSettings) OptPostCallHandlingSettingsCallForwardingSettings {
	return OptPostCallHandlingSettingsCallForwardingSettings{
		Value: v,
		Set:   true,
	}
}

// OptPostCallHandlingSettingsCallForwardingSettings is optional PostCallHandlingSettingsCallForwardingSettings.
type OptPostCallHandlingSettingsCallForwardingSettings struct {
	Value PostCallHandlingSettingsCallForwardingSettings
	Set   bool
}

// IsSet returns true if OptPostCallHandlingSettingsCallForwardingSettings was set.
func (o OptPostCallHandlingSettingsCallForwardingSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPostCallHandlingSettingsCallForwardingSettings) Reset() {
	var v PostCallHandlingSettingsCallForwardingSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPostCallHandlingSettingsCallForwardingSettings) SetTo(v PostCallHandlingSettingsCallForwardingSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPostCallHandlingSettingsCallForwardingSettings) Get() (v PostCallHandlingSettingsCallForwardingSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPostCallHandlingSettingsCallForwardingSettings) Or(d PostCallHandlingSettingsCallForwardingSettings) PostCallHandlingSettingsCallForwardingSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPostCallHandlingSettingsHolidaySettings returns new OptPostCallHandlingSettingsHolidaySettings with value set to v.
func NewOptPostCallHandlingSettingsHolidaySettings(v PostCallHandlingSettingsHolidaySettings) OptPostCallHandlingSettingsHolidaySettings {
	return OptPostCallHandlingSettingsHolidaySettings{
		Value: v,
		Set:   true,
	}
}

// OptPostCallHandlingSettingsHolidaySettings is optional PostCallHandlingSettingsHolidaySettings.
type OptPostCallHandlingSettingsHolidaySettings struct {
	Value PostCallHandlingSettingsHolidaySettings
	Set   bool
}

// IsSet returns true if OptPostCallHandlingSettingsHolidaySettings was set.
func (o OptPostCallHandlingSettingsHolidaySettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPostCallHandlingSettingsHolidaySettings) Reset() {
	var v PostCallHandlingSettingsHolidaySettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPostCallHandlingSettingsHolidaySettings) SetTo(v PostCallHandlingSettingsHolidaySettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPostCallHandlingSettingsHolidaySettings) Get() (v PostCallHandlingSettingsHolidaySettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPostCallHandlingSettingsHolidaySettings) Or(d PostCallHandlingSettingsHolidaySettings) PostCallHandlingSettingsHolidaySettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSmsByMessageIdOKSender returns new OptSmsByMessageIdOKSender with value set to v.
func NewOptSmsByMessageIdOKSender(v SmsByMessageIdOKSender) OptSmsByMessageIdOKSender {
	return OptSmsByMessageIdOKSender{
		Value: v,
		Set:   true,
	}
}

// OptSmsByMessageIdOKSender is optional SmsByMessageIdOKSender.
type OptSmsByMessageIdOKSender struct {
	Value SmsByMessageIdOKSender
	Set   bool
}

// IsSet returns true if OptSmsByMessageIdOKSender was set.
func (o OptSmsByMessageIdOKSender) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSmsByMessageIdOKSender) Reset() {
	var v SmsByMessageIdOKSender
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSmsByMessageIdOKSender) SetTo(v SmsByMessageIdOKSender) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSmsByMessageIdOKSender) Get() (v SmsByMessageIdOKSender, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSmsByMessageIdOKSender) Or(d SmsByMessageIdOKSender) SmsByMessageIdOKSender {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSmsByMessageIdOKSenderOwner returns new OptSmsByMessageIdOKSenderOwner with value set to v.
func NewOptSmsByMessageIdOKSenderOwner(v SmsByMessageIdOKSenderOwner) OptSmsByMessageIdOKSenderOwner {
	return OptSmsByMessageIdOKSenderOwner{
		Value: v,
		Set:   true,
	}
}

// OptSmsByMessageIdOKSenderOwner is optional SmsByMessageIdOKSenderOwner.
type OptSmsByMessageIdOKSenderOwner struct {
	Value SmsByMessageIdOKSenderOwner
	Set   bool
}

// IsSet returns true if OptSmsByMessageIdOKSenderOwner was set.
func (o OptSmsByMessageIdOKSenderOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSmsByMessageIdOKSenderOwner) Reset() {
	var v SmsByMessageIdOKSenderOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSmsByMessageIdOKSenderOwner) SetTo(v SmsByMessageIdOKSenderOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSmsByMessageIdOKSenderOwner) Get() (v SmsByMessageIdOKSenderOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSmsByMessageIdOKSenderOwner) Or(d SmsByMessageIdOKSenderOwner) SmsByMessageIdOKSenderOwner {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSmsByMessageIdOKToMembersItemOwner returns new OptSmsByMessageIdOKToMembersItemOwner with value set to v.
func NewOptSmsByMessageIdOKToMembersItemOwner(v SmsByMessageIdOKToMembersItemOwner) OptSmsByMessageIdOKToMembersItemOwner {
	return OptSmsByMessageIdOKToMembersItemOwner{
		Value: v,
		Set:   true,
	}
}

// OptSmsByMessageIdOKToMembersItemOwner is optional SmsByMessageIdOKToMembersItemOwner.
type OptSmsByMessageIdOKToMembersItemOwner struct {
	Value SmsByMessageIdOKToMembersItemOwner
	Set   bool
}

// IsSet returns true if OptSmsByMessageIdOKToMembersItemOwner was set.
func (o OptSmsByMessageIdOKToMembersItemOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSmsByMessageIdOKToMembersItemOwner) Reset() {
	var v SmsByMessageIdOKToMembersItemOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSmsByMessageIdOKToMembersItemOwner) SetTo(v SmsByMessageIdOKToMembersItemOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSmsByMessageIdOKToMembersItemOwner) Get() (v SmsByMessageIdOKToMembersItemOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSmsByMessageIdOKToMembersItemOwner) Or(d SmsByMessageIdOKToMembersItemOwner) SmsByMessageIdOKToMembersItemOwner {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSmsSessionDetailsOKSMSHistoriesItemSender returns new OptSmsSessionDetailsOKSMSHistoriesItemSender with value set to v.
func NewOptSmsSessionDetailsOKSMSHistoriesItemSender(v SmsSessionDetailsOKSMSHistoriesItemSender) OptSmsSessionDetailsOKSMSHistoriesItemSender {
	return OptSmsSessionDetailsOKSMSHistoriesItemSender{
		Value: v,
		Set:   true,
	}
}

// OptSmsSessionDetailsOKSMSHistoriesItemSender is optional SmsSessionDetailsOKSMSHistoriesItemSender.
type OptSmsSessionDetailsOKSMSHistoriesItemSender struct {
	Value SmsSessionDetailsOKSMSHistoriesItemSender
	Set   bool
}

// IsSet returns true if OptSmsSessionDetailsOKSMSHistoriesItemSender was set.
func (o OptSmsSessionDetailsOKSMSHistoriesItemSender) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSmsSessionDetailsOKSMSHistoriesItemSender) Reset() {
	var v SmsSessionDetailsOKSMSHistoriesItemSender
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSmsSessionDetailsOKSMSHistoriesItemSender) SetTo(v SmsSessionDetailsOKSMSHistoriesItemSender) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSmsSessionDetailsOKSMSHistoriesItemSender) Get() (v SmsSessionDetailsOKSMSHistoriesItemSender, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSmsSessionDetailsOKSMSHistoriesItemSender) Or(d SmsSessionDetailsOKSMSHistoriesItemSender) SmsSessionDetailsOKSMSHistoriesItemSender {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSmsSessionDetailsOKSMSHistoriesItemSenderOwner returns new OptSmsSessionDetailsOKSMSHistoriesItemSenderOwner with value set to v.
func NewOptSmsSessionDetailsOKSMSHistoriesItemSenderOwner(v SmsSessionDetailsOKSMSHistoriesItemSenderOwner) OptSmsSessionDetailsOKSMSHistoriesItemSenderOwner {
	return OptSmsSessionDetailsOKSMSHistoriesItemSenderOwner{
		Value: v,
		Set:   true,
	}
}

// OptSmsSessionDetailsOKSMSHistoriesItemSenderOwner is optional SmsSessionDetailsOKSMSHistoriesItemSenderOwner.
type OptSmsSessionDetailsOKSMSHistoriesItemSenderOwner struct {
	Value SmsSessionDetailsOKSMSHistoriesItemSenderOwner
	Set   bool
}

// IsSet returns true if OptSmsSessionDetailsOKSMSHistoriesItemSenderOwner was set.
func (o OptSmsSessionDetailsOKSMSHistoriesItemSenderOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSmsSessionDetailsOKSMSHistoriesItemSenderOwner) Reset() {
	var v SmsSessionDetailsOKSMSHistoriesItemSenderOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSmsSessionDetailsOKSMSHistoriesItemSenderOwner) SetTo(v SmsSessionDetailsOKSMSHistoriesItemSenderOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSmsSessionDetailsOKSMSHistoriesItemSenderOwner) Get() (v SmsSessionDetailsOKSMSHistoriesItemSenderOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSmsSessionDetailsOKSMSHistoriesItemSenderOwner) Or(d SmsSessionDetailsOKSMSHistoriesItemSenderOwner) SmsSessionDetailsOKSMSHistoriesItemSenderOwner {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner returns new OptSmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner with value set to v.
func NewOptSmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner(v SmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner) OptSmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner {
	return OptSmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner{
		Value: v,
		Set:   true,
	}
}

// OptSmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner is optional SmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner.
type OptSmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner struct {
	Value SmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner
	Set   bool
}

// IsSet returns true if OptSmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner was set.
func (o OptSmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner) Reset() {
	var v SmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner) SetTo(v SmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner) Get() (v SmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner) Or(d SmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner) SmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSmsSessionSyncOKSMSHistoriesItemSender returns new OptSmsSessionSyncOKSMSHistoriesItemSender with value set to v.
func NewOptSmsSessionSyncOKSMSHistoriesItemSender(v SmsSessionSyncOKSMSHistoriesItemSender) OptSmsSessionSyncOKSMSHistoriesItemSender {
	return OptSmsSessionSyncOKSMSHistoriesItemSender{
		Value: v,
		Set:   true,
	}
}

// OptSmsSessionSyncOKSMSHistoriesItemSender is optional SmsSessionSyncOKSMSHistoriesItemSender.
type OptSmsSessionSyncOKSMSHistoriesItemSender struct {
	Value SmsSessionSyncOKSMSHistoriesItemSender
	Set   bool
}

// IsSet returns true if OptSmsSessionSyncOKSMSHistoriesItemSender was set.
func (o OptSmsSessionSyncOKSMSHistoriesItemSender) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSmsSessionSyncOKSMSHistoriesItemSender) Reset() {
	var v SmsSessionSyncOKSMSHistoriesItemSender
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSmsSessionSyncOKSMSHistoriesItemSender) SetTo(v SmsSessionSyncOKSMSHistoriesItemSender) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSmsSessionSyncOKSMSHistoriesItemSender) Get() (v SmsSessionSyncOKSMSHistoriesItemSender, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSmsSessionSyncOKSMSHistoriesItemSender) Or(d SmsSessionSyncOKSMSHistoriesItemSender) SmsSessionSyncOKSMSHistoriesItemSender {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSmsSessionSyncOKSMSHistoriesItemSenderOwner returns new OptSmsSessionSyncOKSMSHistoriesItemSenderOwner with value set to v.
func NewOptSmsSessionSyncOKSMSHistoriesItemSenderOwner(v SmsSessionSyncOKSMSHistoriesItemSenderOwner) OptSmsSessionSyncOKSMSHistoriesItemSenderOwner {
	return OptSmsSessionSyncOKSMSHistoriesItemSenderOwner{
		Value: v,
		Set:   true,
	}
}

// OptSmsSessionSyncOKSMSHistoriesItemSenderOwner is optional SmsSessionSyncOKSMSHistoriesItemSenderOwner.
type OptSmsSessionSyncOKSMSHistoriesItemSenderOwner struct {
	Value SmsSessionSyncOKSMSHistoriesItemSenderOwner
	Set   bool
}

// IsSet returns true if OptSmsSessionSyncOKSMSHistoriesItemSenderOwner was set.
func (o OptSmsSessionSyncOKSMSHistoriesItemSenderOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSmsSessionSyncOKSMSHistoriesItemSenderOwner) Reset() {
	var v SmsSessionSyncOKSMSHistoriesItemSenderOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSmsSessionSyncOKSMSHistoriesItemSenderOwner) SetTo(v SmsSessionSyncOKSMSHistoriesItemSenderOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSmsSessionSyncOKSMSHistoriesItemSenderOwner) Get() (v SmsSessionSyncOKSMSHistoriesItemSenderOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSmsSessionSyncOKSMSHistoriesItemSenderOwner) Or(d SmsSessionSyncOKSMSHistoriesItemSenderOwner) SmsSessionSyncOKSMSHistoriesItemSenderOwner {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSmsSessionSyncOKSMSHistoriesItemToMembersItemOwner returns new OptSmsSessionSyncOKSMSHistoriesItemToMembersItemOwner with value set to v.
func NewOptSmsSessionSyncOKSMSHistoriesItemToMembersItemOwner(v SmsSessionSyncOKSMSHistoriesItemToMembersItemOwner) OptSmsSessionSyncOKSMSHistoriesItemToMembersItemOwner {
	return OptSmsSessionSyncOKSMSHistoriesItemToMembersItemOwner{
		Value: v,
		Set:   true,
	}
}

// OptSmsSessionSyncOKSMSHistoriesItemToMembersItemOwner is optional SmsSessionSyncOKSMSHistoriesItemToMembersItemOwner.
type OptSmsSessionSyncOKSMSHistoriesItemToMembersItemOwner struct {
	Value SmsSessionSyncOKSMSHistoriesItemToMembersItemOwner
	Set   bool
}

// IsSet returns true if OptSmsSessionSyncOKSMSHistoriesItemToMembersItemOwner was set.
func (o OptSmsSessionSyncOKSMSHistoriesItemToMembersItemOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSmsSessionSyncOKSMSHistoriesItemToMembersItemOwner) Reset() {
	var v SmsSessionSyncOKSMSHistoriesItemToMembersItemOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSmsSessionSyncOKSMSHistoriesItemToMembersItemOwner) SetTo(v SmsSessionSyncOKSMSHistoriesItemToMembersItemOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSmsSessionSyncOKSMSHistoriesItemToMembersItemOwner) Get() (v SmsSessionSyncOKSMSHistoriesItemToMembersItemOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSmsSessionSyncOKSMSHistoriesItemToMembersItemOwner) Or(d SmsSessionSyncOKSMSHistoriesItemToMembersItemOwner) SmsSessionSyncOKSMSHistoriesItemToMembersItemOwner {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSyncPhoneDeviceReq returns new OptSyncPhoneDeviceReq with value set to v.
func NewOptSyncPhoneDeviceReq(v SyncPhoneDeviceReq) OptSyncPhoneDeviceReq {
	return OptSyncPhoneDeviceReq{
		Value: v,
		Set:   true,
	}
}

// OptSyncPhoneDeviceReq is optional SyncPhoneDeviceReq.
type OptSyncPhoneDeviceReq struct {
	Value SyncPhoneDeviceReq
	Set   bool
}

// IsSet returns true if OptSyncPhoneDeviceReq was set.
func (o OptSyncPhoneDeviceReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSyncPhoneDeviceReq) Reset() {
	var v SyncPhoneDeviceReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSyncPhoneDeviceReq) SetTo(v SyncPhoneDeviceReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSyncPhoneDeviceReq) Get() (v SyncPhoneDeviceReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSyncPhoneDeviceReq) Or(d SyncPhoneDeviceReq) SyncPhoneDeviceReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSyncUserCallLogsOKCallLogsItemAcceptedBy returns new OptSyncUserCallLogsOKCallLogsItemAcceptedBy with value set to v.
func NewOptSyncUserCallLogsOKCallLogsItemAcceptedBy(v SyncUserCallLogsOKCallLogsItemAcceptedBy) OptSyncUserCallLogsOKCallLogsItemAcceptedBy {
	return OptSyncUserCallLogsOKCallLogsItemAcceptedBy{
		Value: v,
		Set:   true,
	}
}

// OptSyncUserCallLogsOKCallLogsItemAcceptedBy is optional SyncUserCallLogsOKCallLogsItemAcceptedBy.
type OptSyncUserCallLogsOKCallLogsItemAcceptedBy struct {
	Value SyncUserCallLogsOKCallLogsItemAcceptedBy
	Set   bool
}

// IsSet returns true if OptSyncUserCallLogsOKCallLogsItemAcceptedBy was set.
func (o OptSyncUserCallLogsOKCallLogsItemAcceptedBy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSyncUserCallLogsOKCallLogsItemAcceptedBy) Reset() {
	var v SyncUserCallLogsOKCallLogsItemAcceptedBy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSyncUserCallLogsOKCallLogsItemAcceptedBy) SetTo(v SyncUserCallLogsOKCallLogsItemAcceptedBy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSyncUserCallLogsOKCallLogsItemAcceptedBy) Get() (v SyncUserCallLogsOKCallLogsItemAcceptedBy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSyncUserCallLogsOKCallLogsItemAcceptedBy) Or(d SyncUserCallLogsOKCallLogsItemAcceptedBy) SyncUserCallLogsOKCallLogsItemAcceptedBy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSyncUserCallLogsOKCallLogsItemForwardedBy returns new OptSyncUserCallLogsOKCallLogsItemForwardedBy with value set to v.
func NewOptSyncUserCallLogsOKCallLogsItemForwardedBy(v SyncUserCallLogsOKCallLogsItemForwardedBy) OptSyncUserCallLogsOKCallLogsItemForwardedBy {
	return OptSyncUserCallLogsOKCallLogsItemForwardedBy{
		Value: v,
		Set:   true,
	}
}

// OptSyncUserCallLogsOKCallLogsItemForwardedBy is optional SyncUserCallLogsOKCallLogsItemForwardedBy.
type OptSyncUserCallLogsOKCallLogsItemForwardedBy struct {
	Value SyncUserCallLogsOKCallLogsItemForwardedBy
	Set   bool
}

// IsSet returns true if OptSyncUserCallLogsOKCallLogsItemForwardedBy was set.
func (o OptSyncUserCallLogsOKCallLogsItemForwardedBy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSyncUserCallLogsOKCallLogsItemForwardedBy) Reset() {
	var v SyncUserCallLogsOKCallLogsItemForwardedBy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSyncUserCallLogsOKCallLogsItemForwardedBy) SetTo(v SyncUserCallLogsOKCallLogsItemForwardedBy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSyncUserCallLogsOKCallLogsItemForwardedBy) Get() (v SyncUserCallLogsOKCallLogsItemForwardedBy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSyncUserCallLogsOKCallLogsItemForwardedBy) Or(d SyncUserCallLogsOKCallLogsItemForwardedBy) SyncUserCallLogsOKCallLogsItemForwardedBy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSyncUserCallLogsOKCallLogsItemForwardedTo returns new OptSyncUserCallLogsOKCallLogsItemForwardedTo with value set to v.
func NewOptSyncUserCallLogsOKCallLogsItemForwardedTo(v SyncUserCallLogsOKCallLogsItemForwardedTo) OptSyncUserCallLogsOKCallLogsItemForwardedTo {
	return OptSyncUserCallLogsOKCallLogsItemForwardedTo{
		Value: v,
		Set:   true,
	}
}

// OptSyncUserCallLogsOKCallLogsItemForwardedTo is optional SyncUserCallLogsOKCallLogsItemForwardedTo.
type OptSyncUserCallLogsOKCallLogsItemForwardedTo struct {
	Value SyncUserCallLogsOKCallLogsItemForwardedTo
	Set   bool
}

// IsSet returns true if OptSyncUserCallLogsOKCallLogsItemForwardedTo was set.
func (o OptSyncUserCallLogsOKCallLogsItemForwardedTo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSyncUserCallLogsOKCallLogsItemForwardedTo) Reset() {
	var v SyncUserCallLogsOKCallLogsItemForwardedTo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSyncUserCallLogsOKCallLogsItemForwardedTo) SetTo(v SyncUserCallLogsOKCallLogsItemForwardedTo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSyncUserCallLogsOKCallLogsItemForwardedTo) Get() (v SyncUserCallLogsOKCallLogsItemForwardedTo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSyncUserCallLogsOKCallLogsItemForwardedTo) Or(d SyncUserCallLogsOKCallLogsItemForwardedTo) SyncUserCallLogsOKCallLogsItemForwardedTo {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSyncUserCallLogsOKCallLogsItemOutgoingBy returns new OptSyncUserCallLogsOKCallLogsItemOutgoingBy with value set to v.
func NewOptSyncUserCallLogsOKCallLogsItemOutgoingBy(v SyncUserCallLogsOKCallLogsItemOutgoingBy) OptSyncUserCallLogsOKCallLogsItemOutgoingBy {
	return OptSyncUserCallLogsOKCallLogsItemOutgoingBy{
		Value: v,
		Set:   true,
	}
}

// OptSyncUserCallLogsOKCallLogsItemOutgoingBy is optional SyncUserCallLogsOKCallLogsItemOutgoingBy.
type OptSyncUserCallLogsOKCallLogsItemOutgoingBy struct {
	Value SyncUserCallLogsOKCallLogsItemOutgoingBy
	Set   bool
}

// IsSet returns true if OptSyncUserCallLogsOKCallLogsItemOutgoingBy was set.
func (o OptSyncUserCallLogsOKCallLogsItemOutgoingBy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSyncUserCallLogsOKCallLogsItemOutgoingBy) Reset() {
	var v SyncUserCallLogsOKCallLogsItemOutgoingBy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSyncUserCallLogsOKCallLogsItemOutgoingBy) SetTo(v SyncUserCallLogsOKCallLogsItemOutgoingBy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSyncUserCallLogsOKCallLogsItemOutgoingBy) Get() (v SyncUserCallLogsOKCallLogsItemOutgoingBy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSyncUserCallLogsOKCallLogsItemOutgoingBy) Or(d SyncUserCallLogsOKCallLogsItemOutgoingBy) SyncUserCallLogsOKCallLogsItemOutgoingBy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSyncUserCallLogsOKCallLogsItemSite returns new OptSyncUserCallLogsOKCallLogsItemSite with value set to v.
func NewOptSyncUserCallLogsOKCallLogsItemSite(v SyncUserCallLogsOKCallLogsItemSite) OptSyncUserCallLogsOKCallLogsItemSite {
	return OptSyncUserCallLogsOKCallLogsItemSite{
		Value: v,
		Set:   true,
	}
}

// OptSyncUserCallLogsOKCallLogsItemSite is optional SyncUserCallLogsOKCallLogsItemSite.
type OptSyncUserCallLogsOKCallLogsItemSite struct {
	Value SyncUserCallLogsOKCallLogsItemSite
	Set   bool
}

// IsSet returns true if OptSyncUserCallLogsOKCallLogsItemSite was set.
func (o OptSyncUserCallLogsOKCallLogsItemSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSyncUserCallLogsOKCallLogsItemSite) Reset() {
	var v SyncUserCallLogsOKCallLogsItemSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSyncUserCallLogsOKCallLogsItemSite) SetTo(v SyncUserCallLogsOKCallLogsItemSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSyncUserCallLogsOKCallLogsItemSite) Get() (v SyncUserCallLogsOKCallLogsItemSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSyncUserCallLogsOKCallLogsItemSite) Or(d SyncUserCallLogsOKCallLogsItemSite) SyncUserCallLogsOKCallLogsItemSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTime returns new OptTime with value set to v.
func NewOptTime(v time.Time) OptTime {
	return OptTime{
		Value: v,
		Set:   true,
	}
}

// OptTime is optional time.Time.
type OptTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptTime was set.
func (o OptTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateADeviceReq returns new OptUpdateADeviceReq with value set to v.
func NewOptUpdateADeviceReq(v UpdateADeviceReq) OptUpdateADeviceReq {
	return OptUpdateADeviceReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateADeviceReq is optional UpdateADeviceReq.
type OptUpdateADeviceReq struct {
	Value UpdateADeviceReq
	Set   bool
}

// IsSet returns true if OptUpdateADeviceReq was set.
func (o OptUpdateADeviceReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateADeviceReq) Reset() {
	var v UpdateADeviceReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateADeviceReq) SetTo(v UpdateADeviceReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateADeviceReq) Get() (v UpdateADeviceReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateADeviceReq) Or(d UpdateADeviceReq) UpdateADeviceReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateAccountLevelInboundBlockRuleReq returns new OptUpdateAccountLevelInboundBlockRuleReq with value set to v.
func NewOptUpdateAccountLevelInboundBlockRuleReq(v UpdateAccountLevelInboundBlockRuleReq) OptUpdateAccountLevelInboundBlockRuleReq {
	return OptUpdateAccountLevelInboundBlockRuleReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateAccountLevelInboundBlockRuleReq is optional UpdateAccountLevelInboundBlockRuleReq.
type OptUpdateAccountLevelInboundBlockRuleReq struct {
	Value UpdateAccountLevelInboundBlockRuleReq
	Set   bool
}

// IsSet returns true if OptUpdateAccountLevelInboundBlockRuleReq was set.
func (o OptUpdateAccountLevelInboundBlockRuleReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateAccountLevelInboundBlockRuleReq) Reset() {
	var v UpdateAccountLevelInboundBlockRuleReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateAccountLevelInboundBlockRuleReq) SetTo(v UpdateAccountLevelInboundBlockRuleReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateAccountLevelInboundBlockRuleReq) Get() (v UpdateAccountLevelInboundBlockRuleReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateAccountLevelInboundBlockRuleReq) Or(d UpdateAccountLevelInboundBlockRuleReq) UpdateAccountLevelInboundBlockRuleReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateAccountOutboundCallingCountriesOrRegionsReq returns new OptUpdateAccountOutboundCallingCountriesOrRegionsReq with value set to v.
func NewOptUpdateAccountOutboundCallingCountriesOrRegionsReq(v UpdateAccountOutboundCallingCountriesOrRegionsReq) OptUpdateAccountOutboundCallingCountriesOrRegionsReq {
	return OptUpdateAccountOutboundCallingCountriesOrRegionsReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateAccountOutboundCallingCountriesOrRegionsReq is optional UpdateAccountOutboundCallingCountriesOrRegionsReq.
type OptUpdateAccountOutboundCallingCountriesOrRegionsReq struct {
	Value UpdateAccountOutboundCallingCountriesOrRegionsReq
	Set   bool
}

// IsSet returns true if OptUpdateAccountOutboundCallingCountriesOrRegionsReq was set.
func (o OptUpdateAccountOutboundCallingCountriesOrRegionsReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateAccountOutboundCallingCountriesOrRegionsReq) Reset() {
	var v UpdateAccountOutboundCallingCountriesOrRegionsReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateAccountOutboundCallingCountriesOrRegionsReq) SetTo(v UpdateAccountOutboundCallingCountriesOrRegionsReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateAccountOutboundCallingCountriesOrRegionsReq) Get() (v UpdateAccountOutboundCallingCountriesOrRegionsReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateAccountOutboundCallingCountriesOrRegionsReq) Or(d UpdateAccountOutboundCallingCountriesOrRegionsReq) UpdateAccountOutboundCallingCountriesOrRegionsReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateAccountOutboundCallingExceptionRuleReq returns new OptUpdateAccountOutboundCallingExceptionRuleReq with value set to v.
func NewOptUpdateAccountOutboundCallingExceptionRuleReq(v UpdateAccountOutboundCallingExceptionRuleReq) OptUpdateAccountOutboundCallingExceptionRuleReq {
	return OptUpdateAccountOutboundCallingExceptionRuleReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateAccountOutboundCallingExceptionRuleReq is optional UpdateAccountOutboundCallingExceptionRuleReq.
type OptUpdateAccountOutboundCallingExceptionRuleReq struct {
	Value UpdateAccountOutboundCallingExceptionRuleReq
	Set   bool
}

// IsSet returns true if OptUpdateAccountOutboundCallingExceptionRuleReq was set.
func (o OptUpdateAccountOutboundCallingExceptionRuleReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateAccountOutboundCallingExceptionRuleReq) Reset() {
	var v UpdateAccountOutboundCallingExceptionRuleReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateAccountOutboundCallingExceptionRuleReq) SetTo(v UpdateAccountOutboundCallingExceptionRuleReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateAccountOutboundCallingExceptionRuleReq) Get() (v UpdateAccountOutboundCallingExceptionRuleReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateAccountOutboundCallingExceptionRuleReq) Or(d UpdateAccountOutboundCallingExceptionRuleReq) UpdateAccountOutboundCallingExceptionRuleReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateAccountOutboundCallingExceptionRuleReqExceptionRule returns new OptUpdateAccountOutboundCallingExceptionRuleReqExceptionRule with value set to v.
func NewOptUpdateAccountOutboundCallingExceptionRuleReqExceptionRule(v UpdateAccountOutboundCallingExceptionRuleReqExceptionRule) OptUpdateAccountOutboundCallingExceptionRuleReqExceptionRule {
	return OptUpdateAccountOutboundCallingExceptionRuleReqExceptionRule{
		Value: v,
		Set:   true,
	}
}

// OptUpdateAccountOutboundCallingExceptionRuleReqExceptionRule is optional UpdateAccountOutboundCallingExceptionRuleReqExceptionRule.
type OptUpdateAccountOutboundCallingExceptionRuleReqExceptionRule struct {
	Value UpdateAccountOutboundCallingExceptionRuleReqExceptionRule
	Set   bool
}

// IsSet returns true if OptUpdateAccountOutboundCallingExceptionRuleReqExceptionRule was set.
func (o OptUpdateAccountOutboundCallingExceptionRuleReqExceptionRule) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateAccountOutboundCallingExceptionRuleReqExceptionRule) Reset() {
	var v UpdateAccountOutboundCallingExceptionRuleReqExceptionRule
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateAccountOutboundCallingExceptionRuleReqExceptionRule) SetTo(v UpdateAccountOutboundCallingExceptionRuleReqExceptionRule) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateAccountOutboundCallingExceptionRuleReqExceptionRule) Get() (v UpdateAccountOutboundCallingExceptionRuleReqExceptionRule, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateAccountOutboundCallingExceptionRuleReqExceptionRule) Or(d UpdateAccountOutboundCallingExceptionRuleReqExceptionRule) UpdateAccountOutboundCallingExceptionRuleReqExceptionRule {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateAnAlertSettingReq returns new OptUpdateAnAlertSettingReq with value set to v.
func NewOptUpdateAnAlertSettingReq(v UpdateAnAlertSettingReq) OptUpdateAnAlertSettingReq {
	return OptUpdateAnAlertSettingReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateAnAlertSettingReq is optional UpdateAnAlertSettingReq.
type OptUpdateAnAlertSettingReq struct {
	Value UpdateAnAlertSettingReq
	Set   bool
}

// IsSet returns true if OptUpdateAnAlertSettingReq was set.
func (o OptUpdateAnAlertSettingReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateAnAlertSettingReq) Reset() {
	var v UpdateAnAlertSettingReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateAnAlertSettingReq) SetTo(v UpdateAnAlertSettingReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateAnAlertSettingReq) Get() (v UpdateAnAlertSettingReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateAnAlertSettingReq) Or(d UpdateAnAlertSettingReq) UpdateAnAlertSettingReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateAudioItemReq returns new OptUpdateAudioItemReq with value set to v.
func NewOptUpdateAudioItemReq(v UpdateAudioItemReq) OptUpdateAudioItemReq {
	return OptUpdateAudioItemReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateAudioItemReq is optional UpdateAudioItemReq.
type OptUpdateAudioItemReq struct {
	Value UpdateAudioItemReq
	Set   bool
}

// IsSet returns true if OptUpdateAudioItemReq was set.
func (o OptUpdateAudioItemReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateAudioItemReq) Reset() {
	var v UpdateAudioItemReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateAudioItemReq) SetTo(v UpdateAudioItemReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateAudioItemReq) Get() (v UpdateAudioItemReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateAudioItemReq) Or(d UpdateAudioItemReq) UpdateAudioItemReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateAutoDeleteFieldReq returns new OptUpdateAutoDeleteFieldReq with value set to v.
func NewOptUpdateAutoDeleteFieldReq(v UpdateAutoDeleteFieldReq) OptUpdateAutoDeleteFieldReq {
	return OptUpdateAutoDeleteFieldReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateAutoDeleteFieldReq is optional UpdateAutoDeleteFieldReq.
type OptUpdateAutoDeleteFieldReq struct {
	Value UpdateAutoDeleteFieldReq
	Set   bool
}

// IsSet returns true if OptUpdateAutoDeleteFieldReq was set.
func (o OptUpdateAutoDeleteFieldReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateAutoDeleteFieldReq) Reset() {
	var v UpdateAutoDeleteFieldReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateAutoDeleteFieldReq) SetTo(v UpdateAutoDeleteFieldReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateAutoDeleteFieldReq) Get() (v UpdateAutoDeleteFieldReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateAutoDeleteFieldReq) Or(d UpdateAutoDeleteFieldReq) UpdateAutoDeleteFieldReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateAutoReceptionistIVRReq returns new OptUpdateAutoReceptionistIVRReq with value set to v.
func NewOptUpdateAutoReceptionistIVRReq(v UpdateAutoReceptionistIVRReq) OptUpdateAutoReceptionistIVRReq {
	return OptUpdateAutoReceptionistIVRReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateAutoReceptionistIVRReq is optional UpdateAutoReceptionistIVRReq.
type OptUpdateAutoReceptionistIVRReq struct {
	Value UpdateAutoReceptionistIVRReq
	Set   bool
}

// IsSet returns true if OptUpdateAutoReceptionistIVRReq was set.
func (o OptUpdateAutoReceptionistIVRReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateAutoReceptionistIVRReq) Reset() {
	var v UpdateAutoReceptionistIVRReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateAutoReceptionistIVRReq) SetTo(v UpdateAutoReceptionistIVRReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateAutoReceptionistIVRReq) Get() (v UpdateAutoReceptionistIVRReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateAutoReceptionistIVRReq) Or(d UpdateAutoReceptionistIVRReq) UpdateAutoReceptionistIVRReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateAutoReceptionistIVRReqCallerEntersNoAction returns new OptUpdateAutoReceptionistIVRReqCallerEntersNoAction with value set to v.
func NewOptUpdateAutoReceptionistIVRReqCallerEntersNoAction(v UpdateAutoReceptionistIVRReqCallerEntersNoAction) OptUpdateAutoReceptionistIVRReqCallerEntersNoAction {
	return OptUpdateAutoReceptionistIVRReqCallerEntersNoAction{
		Value: v,
		Set:   true,
	}
}

// OptUpdateAutoReceptionistIVRReqCallerEntersNoAction is optional UpdateAutoReceptionistIVRReqCallerEntersNoAction.
type OptUpdateAutoReceptionistIVRReqCallerEntersNoAction struct {
	Value UpdateAutoReceptionistIVRReqCallerEntersNoAction
	Set   bool
}

// IsSet returns true if OptUpdateAutoReceptionistIVRReqCallerEntersNoAction was set.
func (o OptUpdateAutoReceptionistIVRReqCallerEntersNoAction) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateAutoReceptionistIVRReqCallerEntersNoAction) Reset() {
	var v UpdateAutoReceptionistIVRReqCallerEntersNoAction
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateAutoReceptionistIVRReqCallerEntersNoAction) SetTo(v UpdateAutoReceptionistIVRReqCallerEntersNoAction) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateAutoReceptionistIVRReqCallerEntersNoAction) Get() (v UpdateAutoReceptionistIVRReqCallerEntersNoAction, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateAutoReceptionistIVRReqCallerEntersNoAction) Or(d UpdateAutoReceptionistIVRReqCallerEntersNoAction) UpdateAutoReceptionistIVRReqCallerEntersNoAction {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateAutoReceptionistIVRReqKeyAction returns new OptUpdateAutoReceptionistIVRReqKeyAction with value set to v.
func NewOptUpdateAutoReceptionistIVRReqKeyAction(v UpdateAutoReceptionistIVRReqKeyAction) OptUpdateAutoReceptionistIVRReqKeyAction {
	return OptUpdateAutoReceptionistIVRReqKeyAction{
		Value: v,
		Set:   true,
	}
}

// OptUpdateAutoReceptionistIVRReqKeyAction is optional UpdateAutoReceptionistIVRReqKeyAction.
type OptUpdateAutoReceptionistIVRReqKeyAction struct {
	Value UpdateAutoReceptionistIVRReqKeyAction
	Set   bool
}

// IsSet returns true if OptUpdateAutoReceptionistIVRReqKeyAction was set.
func (o OptUpdateAutoReceptionistIVRReqKeyAction) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateAutoReceptionistIVRReqKeyAction) Reset() {
	var v UpdateAutoReceptionistIVRReqKeyAction
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateAutoReceptionistIVRReqKeyAction) SetTo(v UpdateAutoReceptionistIVRReqKeyAction) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateAutoReceptionistIVRReqKeyAction) Get() (v UpdateAutoReceptionistIVRReqKeyAction, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateAutoReceptionistIVRReqKeyAction) Or(d UpdateAutoReceptionistIVRReqKeyAction) UpdateAutoReceptionistIVRReqKeyAction {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateAutoReceptionistIVRReqKeyActionTarget returns new OptUpdateAutoReceptionistIVRReqKeyActionTarget with value set to v.
func NewOptUpdateAutoReceptionistIVRReqKeyActionTarget(v UpdateAutoReceptionistIVRReqKeyActionTarget) OptUpdateAutoReceptionistIVRReqKeyActionTarget {
	return OptUpdateAutoReceptionistIVRReqKeyActionTarget{
		Value: v,
		Set:   true,
	}
}

// OptUpdateAutoReceptionistIVRReqKeyActionTarget is optional UpdateAutoReceptionistIVRReqKeyActionTarget.
type OptUpdateAutoReceptionistIVRReqKeyActionTarget struct {
	Value UpdateAutoReceptionistIVRReqKeyActionTarget
	Set   bool
}

// IsSet returns true if OptUpdateAutoReceptionistIVRReqKeyActionTarget was set.
func (o OptUpdateAutoReceptionistIVRReqKeyActionTarget) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateAutoReceptionistIVRReqKeyActionTarget) Reset() {
	var v UpdateAutoReceptionistIVRReqKeyActionTarget
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateAutoReceptionistIVRReqKeyActionTarget) SetTo(v UpdateAutoReceptionistIVRReqKeyActionTarget) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateAutoReceptionistIVRReqKeyActionTarget) Get() (v UpdateAutoReceptionistIVRReqKeyActionTarget, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateAutoReceptionistIVRReqKeyActionTarget) Or(d UpdateAutoReceptionistIVRReqKeyActionTarget) UpdateAutoReceptionistIVRReqKeyActionTarget {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateAutoReceptionistPolicyReq returns new OptUpdateAutoReceptionistPolicyReq with value set to v.
func NewOptUpdateAutoReceptionistPolicyReq(v UpdateAutoReceptionistPolicyReq) OptUpdateAutoReceptionistPolicyReq {
	return OptUpdateAutoReceptionistPolicyReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateAutoReceptionistPolicyReq is optional UpdateAutoReceptionistPolicyReq.
type OptUpdateAutoReceptionistPolicyReq struct {
	Value UpdateAutoReceptionistPolicyReq
	Set   bool
}

// IsSet returns true if OptUpdateAutoReceptionistPolicyReq was set.
func (o OptUpdateAutoReceptionistPolicyReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateAutoReceptionistPolicyReq) Reset() {
	var v UpdateAutoReceptionistPolicyReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateAutoReceptionistPolicyReq) SetTo(v UpdateAutoReceptionistPolicyReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateAutoReceptionistPolicyReq) Get() (v UpdateAutoReceptionistPolicyReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateAutoReceptionistPolicyReq) Or(d UpdateAutoReceptionistPolicyReq) UpdateAutoReceptionistPolicyReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateAutoReceptionistPolicyReqSMS returns new OptUpdateAutoReceptionistPolicyReqSMS with value set to v.
func NewOptUpdateAutoReceptionistPolicyReqSMS(v UpdateAutoReceptionistPolicyReqSMS) OptUpdateAutoReceptionistPolicyReqSMS {
	return OptUpdateAutoReceptionistPolicyReqSMS{
		Value: v,
		Set:   true,
	}
}

// OptUpdateAutoReceptionistPolicyReqSMS is optional UpdateAutoReceptionistPolicyReqSMS.
type OptUpdateAutoReceptionistPolicyReqSMS struct {
	Value UpdateAutoReceptionistPolicyReqSMS
	Set   bool
}

// IsSet returns true if OptUpdateAutoReceptionistPolicyReqSMS was set.
func (o OptUpdateAutoReceptionistPolicyReqSMS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateAutoReceptionistPolicyReqSMS) Reset() {
	var v UpdateAutoReceptionistPolicyReqSMS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateAutoReceptionistPolicyReqSMS) SetTo(v UpdateAutoReceptionistPolicyReqSMS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateAutoReceptionistPolicyReqSMS) Get() (v UpdateAutoReceptionistPolicyReqSMS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateAutoReceptionistPolicyReqSMS) Or(d UpdateAutoReceptionistPolicyReqSMS) UpdateAutoReceptionistPolicyReqSMS {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail returns new OptUpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail with value set to v.
func NewOptUpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail(v UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) OptUpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail {
	return OptUpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail{
		Value: v,
		Set:   true,
	}
}

// OptUpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail is optional UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail.
type OptUpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail struct {
	Value UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail
	Set   bool
}

// IsSet returns true if OptUpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail was set.
func (o OptUpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) Reset() {
	var v UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) SetTo(v UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) Get() (v UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) Or(d UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateAutoReceptionistPolicyReqVoicemailTranscription returns new OptUpdateAutoReceptionistPolicyReqVoicemailTranscription with value set to v.
func NewOptUpdateAutoReceptionistPolicyReqVoicemailTranscription(v UpdateAutoReceptionistPolicyReqVoicemailTranscription) OptUpdateAutoReceptionistPolicyReqVoicemailTranscription {
	return OptUpdateAutoReceptionistPolicyReqVoicemailTranscription{
		Value: v,
		Set:   true,
	}
}

// OptUpdateAutoReceptionistPolicyReqVoicemailTranscription is optional UpdateAutoReceptionistPolicyReqVoicemailTranscription.
type OptUpdateAutoReceptionistPolicyReqVoicemailTranscription struct {
	Value UpdateAutoReceptionistPolicyReqVoicemailTranscription
	Set   bool
}

// IsSet returns true if OptUpdateAutoReceptionistPolicyReqVoicemailTranscription was set.
func (o OptUpdateAutoReceptionistPolicyReqVoicemailTranscription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateAutoReceptionistPolicyReqVoicemailTranscription) Reset() {
	var v UpdateAutoReceptionistPolicyReqVoicemailTranscription
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateAutoReceptionistPolicyReqVoicemailTranscription) SetTo(v UpdateAutoReceptionistPolicyReqVoicemailTranscription) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateAutoReceptionistPolicyReqVoicemailTranscription) Get() (v UpdateAutoReceptionistPolicyReqVoicemailTranscription, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateAutoReceptionistPolicyReqVoicemailTranscription) Or(d UpdateAutoReceptionistPolicyReqVoicemailTranscription) UpdateAutoReceptionistPolicyReqVoicemailTranscription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateAutoReceptionistReq returns new OptUpdateAutoReceptionistReq with value set to v.
func NewOptUpdateAutoReceptionistReq(v UpdateAutoReceptionistReq) OptUpdateAutoReceptionistReq {
	return OptUpdateAutoReceptionistReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateAutoReceptionistReq is optional UpdateAutoReceptionistReq.
type OptUpdateAutoReceptionistReq struct {
	Value UpdateAutoReceptionistReq
	Set   bool
}

// IsSet returns true if OptUpdateAutoReceptionistReq was set.
func (o OptUpdateAutoReceptionistReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateAutoReceptionistReq) Reset() {
	var v UpdateAutoReceptionistReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateAutoReceptionistReq) SetTo(v UpdateAutoReceptionistReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateAutoReceptionistReq) Get() (v UpdateAutoReceptionistReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateAutoReceptionistReq) Or(d UpdateAutoReceptionistReq) UpdateAutoReceptionistReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateCQPolicySubSettingReq returns new OptUpdateCQPolicySubSettingReq with value set to v.
func NewOptUpdateCQPolicySubSettingReq(v UpdateCQPolicySubSettingReq) OptUpdateCQPolicySubSettingReq {
	return OptUpdateCQPolicySubSettingReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateCQPolicySubSettingReq is optional UpdateCQPolicySubSettingReq.
type OptUpdateCQPolicySubSettingReq struct {
	Value UpdateCQPolicySubSettingReq
	Set   bool
}

// IsSet returns true if OptUpdateCQPolicySubSettingReq was set.
func (o OptUpdateCQPolicySubSettingReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateCQPolicySubSettingReq) Reset() {
	var v UpdateCQPolicySubSettingReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateCQPolicySubSettingReq) SetTo(v UpdateCQPolicySubSettingReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateCQPolicySubSettingReq) Get() (v UpdateCQPolicySubSettingReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateCQPolicySubSettingReq) Or(d UpdateCQPolicySubSettingReq) UpdateCQPolicySubSettingReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateCallHandlingReq returns new OptUpdateCallHandlingReq with value set to v.
func NewOptUpdateCallHandlingReq(v UpdateCallHandlingReq) OptUpdateCallHandlingReq {
	return OptUpdateCallHandlingReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateCallHandlingReq is optional UpdateCallHandlingReq.
type OptUpdateCallHandlingReq struct {
	Value UpdateCallHandlingReq
	Set   bool
}

// IsSet returns true if OptUpdateCallHandlingReq was set.
func (o OptUpdateCallHandlingReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateCallHandlingReq) Reset() {
	var v UpdateCallHandlingReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateCallHandlingReq) SetTo(v UpdateCallHandlingReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateCallHandlingReq) Get() (v UpdateCallHandlingReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateCallHandlingReq) Or(d UpdateCallHandlingReq) UpdateCallHandlingReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateCallQueueReq returns new OptUpdateCallQueueReq with value set to v.
func NewOptUpdateCallQueueReq(v UpdateCallQueueReq) OptUpdateCallQueueReq {
	return OptUpdateCallQueueReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateCallQueueReq is optional UpdateCallQueueReq.
type OptUpdateCallQueueReq struct {
	Value UpdateCallQueueReq
	Set   bool
}

// IsSet returns true if OptUpdateCallQueueReq was set.
func (o OptUpdateCallQueueReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateCallQueueReq) Reset() {
	var v UpdateCallQueueReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateCallQueueReq) SetTo(v UpdateCallQueueReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateCallQueueReq) Get() (v UpdateCallQueueReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateCallQueueReq) Or(d UpdateCallQueueReq) UpdateCallQueueReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateCallingPlanReq returns new OptUpdateCallingPlanReq with value set to v.
func NewOptUpdateCallingPlanReq(v UpdateCallingPlanReq) OptUpdateCallingPlanReq {
	return OptUpdateCallingPlanReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateCallingPlanReq is optional UpdateCallingPlanReq.
type OptUpdateCallingPlanReq struct {
	Value UpdateCallingPlanReq
	Set   bool
}

// IsSet returns true if OptUpdateCallingPlanReq was set.
func (o OptUpdateCallingPlanReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateCallingPlanReq) Reset() {
	var v UpdateCallingPlanReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateCallingPlanReq) SetTo(v UpdateCallingPlanReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateCallingPlanReq) Get() (v UpdateCallingPlanReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateCallingPlanReq) Or(d UpdateCallingPlanReq) UpdateCallingPlanReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateCommonAreaOutboundCallingCountriesOrRegionsReq returns new OptUpdateCommonAreaOutboundCallingCountriesOrRegionsReq with value set to v.
func NewOptUpdateCommonAreaOutboundCallingCountriesOrRegionsReq(v UpdateCommonAreaOutboundCallingCountriesOrRegionsReq) OptUpdateCommonAreaOutboundCallingCountriesOrRegionsReq {
	return OptUpdateCommonAreaOutboundCallingCountriesOrRegionsReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateCommonAreaOutboundCallingCountriesOrRegionsReq is optional UpdateCommonAreaOutboundCallingCountriesOrRegionsReq.
type OptUpdateCommonAreaOutboundCallingCountriesOrRegionsReq struct {
	Value UpdateCommonAreaOutboundCallingCountriesOrRegionsReq
	Set   bool
}

// IsSet returns true if OptUpdateCommonAreaOutboundCallingCountriesOrRegionsReq was set.
func (o OptUpdateCommonAreaOutboundCallingCountriesOrRegionsReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateCommonAreaOutboundCallingCountriesOrRegionsReq) Reset() {
	var v UpdateCommonAreaOutboundCallingCountriesOrRegionsReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateCommonAreaOutboundCallingCountriesOrRegionsReq) SetTo(v UpdateCommonAreaOutboundCallingCountriesOrRegionsReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateCommonAreaOutboundCallingCountriesOrRegionsReq) Get() (v UpdateCommonAreaOutboundCallingCountriesOrRegionsReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateCommonAreaOutboundCallingCountriesOrRegionsReq) Or(d UpdateCommonAreaOutboundCallingCountriesOrRegionsReq) UpdateCommonAreaOutboundCallingCountriesOrRegionsReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateCommonAreaOutboundCallingExceptionRuleReq returns new OptUpdateCommonAreaOutboundCallingExceptionRuleReq with value set to v.
func NewOptUpdateCommonAreaOutboundCallingExceptionRuleReq(v UpdateCommonAreaOutboundCallingExceptionRuleReq) OptUpdateCommonAreaOutboundCallingExceptionRuleReq {
	return OptUpdateCommonAreaOutboundCallingExceptionRuleReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateCommonAreaOutboundCallingExceptionRuleReq is optional UpdateCommonAreaOutboundCallingExceptionRuleReq.
type OptUpdateCommonAreaOutboundCallingExceptionRuleReq struct {
	Value UpdateCommonAreaOutboundCallingExceptionRuleReq
	Set   bool
}

// IsSet returns true if OptUpdateCommonAreaOutboundCallingExceptionRuleReq was set.
func (o OptUpdateCommonAreaOutboundCallingExceptionRuleReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateCommonAreaOutboundCallingExceptionRuleReq) Reset() {
	var v UpdateCommonAreaOutboundCallingExceptionRuleReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateCommonAreaOutboundCallingExceptionRuleReq) SetTo(v UpdateCommonAreaOutboundCallingExceptionRuleReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateCommonAreaOutboundCallingExceptionRuleReq) Get() (v UpdateCommonAreaOutboundCallingExceptionRuleReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateCommonAreaOutboundCallingExceptionRuleReq) Or(d UpdateCommonAreaOutboundCallingExceptionRuleReq) UpdateCommonAreaOutboundCallingExceptionRuleReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule returns new OptUpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule with value set to v.
func NewOptUpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule(v UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) OptUpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule {
	return OptUpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule{
		Value: v,
		Set:   true,
	}
}

// OptUpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule is optional UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule.
type OptUpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule struct {
	Value UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule
	Set   bool
}

// IsSet returns true if OptUpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule was set.
func (o OptUpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) Reset() {
	var v UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) SetTo(v UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) Get() (v UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) Or(d UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateCommonAreaReq returns new OptUpdateCommonAreaReq with value set to v.
func NewOptUpdateCommonAreaReq(v UpdateCommonAreaReq) OptUpdateCommonAreaReq {
	return OptUpdateCommonAreaReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateCommonAreaReq is optional UpdateCommonAreaReq.
type OptUpdateCommonAreaReq struct {
	Value UpdateCommonAreaReq
	Set   bool
}

// IsSet returns true if OptUpdateCommonAreaReq was set.
func (o OptUpdateCommonAreaReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateCommonAreaReq) Reset() {
	var v UpdateCommonAreaReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateCommonAreaReq) SetTo(v UpdateCommonAreaReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateCommonAreaReq) Get() (v UpdateCommonAreaReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateCommonAreaReq) Or(d UpdateCommonAreaReq) UpdateCommonAreaReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateCommonAreaReqPolicy returns new OptUpdateCommonAreaReqPolicy with value set to v.
func NewOptUpdateCommonAreaReqPolicy(v UpdateCommonAreaReqPolicy) OptUpdateCommonAreaReqPolicy {
	return OptUpdateCommonAreaReqPolicy{
		Value: v,
		Set:   true,
	}
}

// OptUpdateCommonAreaReqPolicy is optional UpdateCommonAreaReqPolicy.
type OptUpdateCommonAreaReqPolicy struct {
	Value UpdateCommonAreaReqPolicy
	Set   bool
}

// IsSet returns true if OptUpdateCommonAreaReqPolicy was set.
func (o OptUpdateCommonAreaReqPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateCommonAreaReqPolicy) Reset() {
	var v UpdateCommonAreaReqPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateCommonAreaReqPolicy) SetTo(v UpdateCommonAreaReqPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateCommonAreaReqPolicy) Get() (v UpdateCommonAreaReqPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateCommonAreaReqPolicy) Or(d UpdateCommonAreaReqPolicy) UpdateCommonAreaReqPolicy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateCommonAreaReqPolicyInternationalCalling returns new OptUpdateCommonAreaReqPolicyInternationalCalling with value set to v.
func NewOptUpdateCommonAreaReqPolicyInternationalCalling(v UpdateCommonAreaReqPolicyInternationalCalling) OptUpdateCommonAreaReqPolicyInternationalCalling {
	return OptUpdateCommonAreaReqPolicyInternationalCalling{
		Value: v,
		Set:   true,
	}
}

// OptUpdateCommonAreaReqPolicyInternationalCalling is optional UpdateCommonAreaReqPolicyInternationalCalling.
type OptUpdateCommonAreaReqPolicyInternationalCalling struct {
	Value UpdateCommonAreaReqPolicyInternationalCalling
	Set   bool
}

// IsSet returns true if OptUpdateCommonAreaReqPolicyInternationalCalling was set.
func (o OptUpdateCommonAreaReqPolicyInternationalCalling) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateCommonAreaReqPolicyInternationalCalling) Reset() {
	var v UpdateCommonAreaReqPolicyInternationalCalling
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateCommonAreaReqPolicyInternationalCalling) SetTo(v UpdateCommonAreaReqPolicyInternationalCalling) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateCommonAreaReqPolicyInternationalCalling) Get() (v UpdateCommonAreaReqPolicyInternationalCalling, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateCommonAreaReqPolicyInternationalCalling) Or(d UpdateCommonAreaReqPolicyInternationalCalling) UpdateCommonAreaReqPolicyInternationalCalling {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateCommonAreaSettingReq returns new OptUpdateCommonAreaSettingReq with value set to v.
func NewOptUpdateCommonAreaSettingReq(v UpdateCommonAreaSettingReq) OptUpdateCommonAreaSettingReq {
	return OptUpdateCommonAreaSettingReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateCommonAreaSettingReq is optional UpdateCommonAreaSettingReq.
type OptUpdateCommonAreaSettingReq struct {
	Value UpdateCommonAreaSettingReq
	Set   bool
}

// IsSet returns true if OptUpdateCommonAreaSettingReq was set.
func (o OptUpdateCommonAreaSettingReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateCommonAreaSettingReq) Reset() {
	var v UpdateCommonAreaSettingReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateCommonAreaSettingReq) SetTo(v UpdateCommonAreaSettingReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateCommonAreaSettingReq) Get() (v UpdateCommonAreaSettingReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateCommonAreaSettingReq) Or(d UpdateCommonAreaSettingReq) UpdateCommonAreaSettingReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateCommonAreaSettingReqDeskPhonesItemHotDesking returns new OptUpdateCommonAreaSettingReqDeskPhonesItemHotDesking with value set to v.
func NewOptUpdateCommonAreaSettingReqDeskPhonesItemHotDesking(v UpdateCommonAreaSettingReqDeskPhonesItemHotDesking) OptUpdateCommonAreaSettingReqDeskPhonesItemHotDesking {
	return OptUpdateCommonAreaSettingReqDeskPhonesItemHotDesking{
		Value: v,
		Set:   true,
	}
}

// OptUpdateCommonAreaSettingReqDeskPhonesItemHotDesking is optional UpdateCommonAreaSettingReqDeskPhonesItemHotDesking.
type OptUpdateCommonAreaSettingReqDeskPhonesItemHotDesking struct {
	Value UpdateCommonAreaSettingReqDeskPhonesItemHotDesking
	Set   bool
}

// IsSet returns true if OptUpdateCommonAreaSettingReqDeskPhonesItemHotDesking was set.
func (o OptUpdateCommonAreaSettingReqDeskPhonesItemHotDesking) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateCommonAreaSettingReqDeskPhonesItemHotDesking) Reset() {
	var v UpdateCommonAreaSettingReqDeskPhonesItemHotDesking
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateCommonAreaSettingReqDeskPhonesItemHotDesking) SetTo(v UpdateCommonAreaSettingReqDeskPhonesItemHotDesking) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateCommonAreaSettingReqDeskPhonesItemHotDesking) Get() (v UpdateCommonAreaSettingReqDeskPhonesItemHotDesking, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateCommonAreaSettingReqDeskPhonesItemHotDesking) Or(d UpdateCommonAreaSettingReqDeskPhonesItemHotDesking) UpdateCommonAreaSettingReqDeskPhonesItemHotDesking {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateEmergencyAddressOKOwner returns new OptUpdateEmergencyAddressOKOwner with value set to v.
func NewOptUpdateEmergencyAddressOKOwner(v UpdateEmergencyAddressOKOwner) OptUpdateEmergencyAddressOKOwner {
	return OptUpdateEmergencyAddressOKOwner{
		Value: v,
		Set:   true,
	}
}

// OptUpdateEmergencyAddressOKOwner is optional UpdateEmergencyAddressOKOwner.
type OptUpdateEmergencyAddressOKOwner struct {
	Value UpdateEmergencyAddressOKOwner
	Set   bool
}

// IsSet returns true if OptUpdateEmergencyAddressOKOwner was set.
func (o OptUpdateEmergencyAddressOKOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateEmergencyAddressOKOwner) Reset() {
	var v UpdateEmergencyAddressOKOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateEmergencyAddressOKOwner) SetTo(v UpdateEmergencyAddressOKOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateEmergencyAddressOKOwner) Get() (v UpdateEmergencyAddressOKOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateEmergencyAddressOKOwner) Or(d UpdateEmergencyAddressOKOwner) UpdateEmergencyAddressOKOwner {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateEmergencyAddressOKSite returns new OptUpdateEmergencyAddressOKSite with value set to v.
func NewOptUpdateEmergencyAddressOKSite(v UpdateEmergencyAddressOKSite) OptUpdateEmergencyAddressOKSite {
	return OptUpdateEmergencyAddressOKSite{
		Value: v,
		Set:   true,
	}
}

// OptUpdateEmergencyAddressOKSite is optional UpdateEmergencyAddressOKSite.
type OptUpdateEmergencyAddressOKSite struct {
	Value UpdateEmergencyAddressOKSite
	Set   bool
}

// IsSet returns true if OptUpdateEmergencyAddressOKSite was set.
func (o OptUpdateEmergencyAddressOKSite) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateEmergencyAddressOKSite) Reset() {
	var v UpdateEmergencyAddressOKSite
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateEmergencyAddressOKSite) SetTo(v UpdateEmergencyAddressOKSite) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateEmergencyAddressOKSite) Get() (v UpdateEmergencyAddressOKSite, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateEmergencyAddressOKSite) Or(d UpdateEmergencyAddressOKSite) UpdateEmergencyAddressOKSite {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateEmergencyAddressReq returns new OptUpdateEmergencyAddressReq with value set to v.
func NewOptUpdateEmergencyAddressReq(v UpdateEmergencyAddressReq) OptUpdateEmergencyAddressReq {
	return OptUpdateEmergencyAddressReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateEmergencyAddressReq is optional UpdateEmergencyAddressReq.
type OptUpdateEmergencyAddressReq struct {
	Value UpdateEmergencyAddressReq
	Set   bool
}

// IsSet returns true if OptUpdateEmergencyAddressReq was set.
func (o OptUpdateEmergencyAddressReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateEmergencyAddressReq) Reset() {
	var v UpdateEmergencyAddressReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateEmergencyAddressReq) SetTo(v UpdateEmergencyAddressReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateEmergencyAddressReq) Get() (v UpdateEmergencyAddressReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateEmergencyAddressReq) Or(d UpdateEmergencyAddressReq) UpdateEmergencyAddressReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateExternalContactReq returns new OptUpdateExternalContactReq with value set to v.
func NewOptUpdateExternalContactReq(v UpdateExternalContactReq) OptUpdateExternalContactReq {
	return OptUpdateExternalContactReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateExternalContactReq is optional UpdateExternalContactReq.
type OptUpdateExternalContactReq struct {
	Value UpdateExternalContactReq
	Set   bool
}

// IsSet returns true if OptUpdateExternalContactReq was set.
func (o OptUpdateExternalContactReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateExternalContactReq) Reset() {
	var v UpdateExternalContactReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateExternalContactReq) SetTo(v UpdateExternalContactReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateExternalContactReq) Get() (v UpdateExternalContactReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateExternalContactReq) Or(d UpdateExternalContactReq) UpdateExternalContactReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateFirmwareRuleReq returns new OptUpdateFirmwareRuleReq with value set to v.
func NewOptUpdateFirmwareRuleReq(v UpdateFirmwareRuleReq) OptUpdateFirmwareRuleReq {
	return OptUpdateFirmwareRuleReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateFirmwareRuleReq is optional UpdateFirmwareRuleReq.
type OptUpdateFirmwareRuleReq struct {
	Value UpdateFirmwareRuleReq
	Set   bool
}

// IsSet returns true if OptUpdateFirmwareRuleReq was set.
func (o OptUpdateFirmwareRuleReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateFirmwareRuleReq) Reset() {
	var v UpdateFirmwareRuleReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateFirmwareRuleReq) SetTo(v UpdateFirmwareRuleReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateFirmwareRuleReq) Get() (v UpdateFirmwareRuleReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateFirmwareRuleReq) Or(d UpdateFirmwareRuleReq) UpdateFirmwareRuleReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateGCPReq returns new OptUpdateGCPReq with value set to v.
func NewOptUpdateGCPReq(v UpdateGCPReq) OptUpdateGCPReq {
	return OptUpdateGCPReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateGCPReq is optional UpdateGCPReq.
type OptUpdateGCPReq struct {
	Value UpdateGCPReq
	Set   bool
}

// IsSet returns true if OptUpdateGCPReq was set.
func (o OptUpdateGCPReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateGCPReq) Reset() {
	var v UpdateGCPReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateGCPReq) SetTo(v UpdateGCPReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateGCPReq) Get() (v UpdateGCPReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateGCPReq) Or(d UpdateGCPReq) UpdateGCPReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateGCPReqPlayIncomingCallsSound returns new OptUpdateGCPReqPlayIncomingCallsSound with value set to v.
func NewOptUpdateGCPReqPlayIncomingCallsSound(v UpdateGCPReqPlayIncomingCallsSound) OptUpdateGCPReqPlayIncomingCallsSound {
	return OptUpdateGCPReqPlayIncomingCallsSound{
		Value: v,
		Set:   true,
	}
}

// OptUpdateGCPReqPlayIncomingCallsSound is optional UpdateGCPReqPlayIncomingCallsSound.
type OptUpdateGCPReqPlayIncomingCallsSound struct {
	Value UpdateGCPReqPlayIncomingCallsSound
	Set   bool
}

// IsSet returns true if OptUpdateGCPReqPlayIncomingCallsSound was set.
func (o OptUpdateGCPReqPlayIncomingCallsSound) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateGCPReqPlayIncomingCallsSound) Reset() {
	var v UpdateGCPReqPlayIncomingCallsSound
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateGCPReqPlayIncomingCallsSound) SetTo(v UpdateGCPReqPlayIncomingCallsSound) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateGCPReqPlayIncomingCallsSound) Get() (v UpdateGCPReqPlayIncomingCallsSound, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateGCPReqPlayIncomingCallsSound) Or(d UpdateGCPReqPlayIncomingCallsSound) UpdateGCPReqPlayIncomingCallsSound {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateLocationReq returns new OptUpdateLocationReq with value set to v.
func NewOptUpdateLocationReq(v UpdateLocationReq) OptUpdateLocationReq {
	return OptUpdateLocationReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateLocationReq is optional UpdateLocationReq.
type OptUpdateLocationReq struct {
	Value UpdateLocationReq
	Set   bool
}

// IsSet returns true if OptUpdateLocationReq was set.
func (o OptUpdateLocationReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateLocationReq) Reset() {
	var v UpdateLocationReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateLocationReq) SetTo(v UpdateLocationReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateLocationReq) Get() (v UpdateLocationReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateLocationReq) Or(d UpdateLocationReq) UpdateLocationReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateMonitoringGroupReq returns new OptUpdateMonitoringGroupReq with value set to v.
func NewOptUpdateMonitoringGroupReq(v UpdateMonitoringGroupReq) OptUpdateMonitoringGroupReq {
	return OptUpdateMonitoringGroupReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateMonitoringGroupReq is optional UpdateMonitoringGroupReq.
type OptUpdateMonitoringGroupReq struct {
	Value UpdateMonitoringGroupReq
	Set   bool
}

// IsSet returns true if OptUpdateMonitoringGroupReq was set.
func (o OptUpdateMonitoringGroupReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateMonitoringGroupReq) Reset() {
	var v UpdateMonitoringGroupReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateMonitoringGroupReq) SetTo(v UpdateMonitoringGroupReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateMonitoringGroupReq) Get() (v UpdateMonitoringGroupReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateMonitoringGroupReq) Or(d UpdateMonitoringGroupReq) UpdateMonitoringGroupReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdatePeeringPhoneNumbersReq returns new OptUpdatePeeringPhoneNumbersReq with value set to v.
func NewOptUpdatePeeringPhoneNumbersReq(v UpdatePeeringPhoneNumbersReq) OptUpdatePeeringPhoneNumbersReq {
	return OptUpdatePeeringPhoneNumbersReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdatePeeringPhoneNumbersReq is optional UpdatePeeringPhoneNumbersReq.
type OptUpdatePeeringPhoneNumbersReq struct {
	Value UpdatePeeringPhoneNumbersReq
	Set   bool
}

// IsSet returns true if OptUpdatePeeringPhoneNumbersReq was set.
func (o OptUpdatePeeringPhoneNumbersReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdatePeeringPhoneNumbersReq) Reset() {
	var v UpdatePeeringPhoneNumbersReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdatePeeringPhoneNumbersReq) SetTo(v UpdatePeeringPhoneNumbersReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdatePeeringPhoneNumbersReq) Get() (v UpdatePeeringPhoneNumbersReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdatePeeringPhoneNumbersReq) Or(d UpdatePeeringPhoneNumbersReq) UpdatePeeringPhoneNumbersReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdatePhoneNumberDetailsReq returns new OptUpdatePhoneNumberDetailsReq with value set to v.
func NewOptUpdatePhoneNumberDetailsReq(v UpdatePhoneNumberDetailsReq) OptUpdatePhoneNumberDetailsReq {
	return OptUpdatePhoneNumberDetailsReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdatePhoneNumberDetailsReq is optional UpdatePhoneNumberDetailsReq.
type OptUpdatePhoneNumberDetailsReq struct {
	Value UpdatePhoneNumberDetailsReq
	Set   bool
}

// IsSet returns true if OptUpdatePhoneNumberDetailsReq was set.
func (o OptUpdatePhoneNumberDetailsReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdatePhoneNumberDetailsReq) Reset() {
	var v UpdatePhoneNumberDetailsReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdatePhoneNumberDetailsReq) SetTo(v UpdatePhoneNumberDetailsReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdatePhoneNumberDetailsReq) Get() (v UpdatePhoneNumberDetailsReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdatePhoneNumberDetailsReq) Or(d UpdatePhoneNumberDetailsReq) UpdatePhoneNumberDetailsReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdatePhoneRoleReq returns new OptUpdatePhoneRoleReq with value set to v.
func NewOptUpdatePhoneRoleReq(v UpdatePhoneRoleReq) OptUpdatePhoneRoleReq {
	return OptUpdatePhoneRoleReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdatePhoneRoleReq is optional UpdatePhoneRoleReq.
type OptUpdatePhoneRoleReq struct {
	Value UpdatePhoneRoleReq
	Set   bool
}

// IsSet returns true if OptUpdatePhoneRoleReq was set.
func (o OptUpdatePhoneRoleReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdatePhoneRoleReq) Reset() {
	var v UpdatePhoneRoleReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdatePhoneRoleReq) SetTo(v UpdatePhoneRoleReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdatePhoneRoleReq) Get() (v UpdatePhoneRoleReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdatePhoneRoleReq) Or(d UpdatePhoneRoleReq) UpdatePhoneRoleReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdatePhoneSettingsReq returns new OptUpdatePhoneSettingsReq with value set to v.
func NewOptUpdatePhoneSettingsReq(v UpdatePhoneSettingsReq) OptUpdatePhoneSettingsReq {
	return OptUpdatePhoneSettingsReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdatePhoneSettingsReq is optional UpdatePhoneSettingsReq.
type OptUpdatePhoneSettingsReq struct {
	Value UpdatePhoneSettingsReq
	Set   bool
}

// IsSet returns true if OptUpdatePhoneSettingsReq was set.
func (o OptUpdatePhoneSettingsReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdatePhoneSettingsReq) Reset() {
	var v UpdatePhoneSettingsReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdatePhoneSettingsReq) SetTo(v UpdatePhoneSettingsReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdatePhoneSettingsReq) Get() (v UpdatePhoneSettingsReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdatePhoneSettingsReq) Or(d UpdatePhoneSettingsReq) UpdatePhoneSettingsReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdatePhoneSettingsReqBillingAccount returns new OptUpdatePhoneSettingsReqBillingAccount with value set to v.
func NewOptUpdatePhoneSettingsReqBillingAccount(v UpdatePhoneSettingsReqBillingAccount) OptUpdatePhoneSettingsReqBillingAccount {
	return OptUpdatePhoneSettingsReqBillingAccount{
		Value: v,
		Set:   true,
	}
}

// OptUpdatePhoneSettingsReqBillingAccount is optional UpdatePhoneSettingsReqBillingAccount.
type OptUpdatePhoneSettingsReqBillingAccount struct {
	Value UpdatePhoneSettingsReqBillingAccount
	Set   bool
}

// IsSet returns true if OptUpdatePhoneSettingsReqBillingAccount was set.
func (o OptUpdatePhoneSettingsReqBillingAccount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdatePhoneSettingsReqBillingAccount) Reset() {
	var v UpdatePhoneSettingsReqBillingAccount
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdatePhoneSettingsReqBillingAccount) SetTo(v UpdatePhoneSettingsReqBillingAccount) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdatePhoneSettingsReqBillingAccount) Get() (v UpdatePhoneSettingsReqBillingAccount, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdatePhoneSettingsReqBillingAccount) Or(d UpdatePhoneSettingsReqBillingAccount) UpdatePhoneSettingsReqBillingAccount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdatePhoneSettingsReqByoc returns new OptUpdatePhoneSettingsReqByoc with value set to v.
func NewOptUpdatePhoneSettingsReqByoc(v UpdatePhoneSettingsReqByoc) OptUpdatePhoneSettingsReqByoc {
	return OptUpdatePhoneSettingsReqByoc{
		Value: v,
		Set:   true,
	}
}

// OptUpdatePhoneSettingsReqByoc is optional UpdatePhoneSettingsReqByoc.
type OptUpdatePhoneSettingsReqByoc struct {
	Value UpdatePhoneSettingsReqByoc
	Set   bool
}

// IsSet returns true if OptUpdatePhoneSettingsReqByoc was set.
func (o OptUpdatePhoneSettingsReqByoc) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdatePhoneSettingsReqByoc) Reset() {
	var v UpdatePhoneSettingsReqByoc
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdatePhoneSettingsReqByoc) SetTo(v UpdatePhoneSettingsReqByoc) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdatePhoneSettingsReqByoc) Get() (v UpdatePhoneSettingsReqByoc, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdatePhoneSettingsReqByoc) Or(d UpdatePhoneSettingsReqByoc) UpdatePhoneSettingsReqByoc {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdatePhoneSettingsReqMultipleSites returns new OptUpdatePhoneSettingsReqMultipleSites with value set to v.
func NewOptUpdatePhoneSettingsReqMultipleSites(v UpdatePhoneSettingsReqMultipleSites) OptUpdatePhoneSettingsReqMultipleSites {
	return OptUpdatePhoneSettingsReqMultipleSites{
		Value: v,
		Set:   true,
	}
}

// OptUpdatePhoneSettingsReqMultipleSites is optional UpdatePhoneSettingsReqMultipleSites.
type OptUpdatePhoneSettingsReqMultipleSites struct {
	Value UpdatePhoneSettingsReqMultipleSites
	Set   bool
}

// IsSet returns true if OptUpdatePhoneSettingsReqMultipleSites was set.
func (o OptUpdatePhoneSettingsReqMultipleSites) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdatePhoneSettingsReqMultipleSites) Reset() {
	var v UpdatePhoneSettingsReqMultipleSites
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdatePhoneSettingsReqMultipleSites) SetTo(v UpdatePhoneSettingsReqMultipleSites) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdatePhoneSettingsReqMultipleSites) Get() (v UpdatePhoneSettingsReqMultipleSites, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdatePhoneSettingsReqMultipleSites) Or(d UpdatePhoneSettingsReqMultipleSites) UpdatePhoneSettingsReqMultipleSites {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdatePhoneSettingsReqMultipleSitesSiteCode returns new OptUpdatePhoneSettingsReqMultipleSitesSiteCode with value set to v.
func NewOptUpdatePhoneSettingsReqMultipleSitesSiteCode(v UpdatePhoneSettingsReqMultipleSitesSiteCode) OptUpdatePhoneSettingsReqMultipleSitesSiteCode {
	return OptUpdatePhoneSettingsReqMultipleSitesSiteCode{
		Value: v,
		Set:   true,
	}
}

// OptUpdatePhoneSettingsReqMultipleSitesSiteCode is optional UpdatePhoneSettingsReqMultipleSitesSiteCode.
type OptUpdatePhoneSettingsReqMultipleSitesSiteCode struct {
	Value UpdatePhoneSettingsReqMultipleSitesSiteCode
	Set   bool
}

// IsSet returns true if OptUpdatePhoneSettingsReqMultipleSitesSiteCode was set.
func (o OptUpdatePhoneSettingsReqMultipleSitesSiteCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdatePhoneSettingsReqMultipleSitesSiteCode) Reset() {
	var v UpdatePhoneSettingsReqMultipleSitesSiteCode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdatePhoneSettingsReqMultipleSitesSiteCode) SetTo(v UpdatePhoneSettingsReqMultipleSitesSiteCode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdatePhoneSettingsReqMultipleSitesSiteCode) Get() (v UpdatePhoneSettingsReqMultipleSitesSiteCode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdatePhoneSettingsReqMultipleSitesSiteCode) Or(d UpdatePhoneSettingsReqMultipleSitesSiteCode) UpdatePhoneSettingsReqMultipleSitesSiteCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdatePhoneSettingsReqShowDeviceIPForCallLog returns new OptUpdatePhoneSettingsReqShowDeviceIPForCallLog with value set to v.
func NewOptUpdatePhoneSettingsReqShowDeviceIPForCallLog(v UpdatePhoneSettingsReqShowDeviceIPForCallLog) OptUpdatePhoneSettingsReqShowDeviceIPForCallLog {
	return OptUpdatePhoneSettingsReqShowDeviceIPForCallLog{
		Value: v,
		Set:   true,
	}
}

// OptUpdatePhoneSettingsReqShowDeviceIPForCallLog is optional UpdatePhoneSettingsReqShowDeviceIPForCallLog.
type OptUpdatePhoneSettingsReqShowDeviceIPForCallLog struct {
	Value UpdatePhoneSettingsReqShowDeviceIPForCallLog
	Set   bool
}

// IsSet returns true if OptUpdatePhoneSettingsReqShowDeviceIPForCallLog was set.
func (o OptUpdatePhoneSettingsReqShowDeviceIPForCallLog) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdatePhoneSettingsReqShowDeviceIPForCallLog) Reset() {
	var v UpdatePhoneSettingsReqShowDeviceIPForCallLog
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdatePhoneSettingsReqShowDeviceIPForCallLog) SetTo(v UpdatePhoneSettingsReqShowDeviceIPForCallLog) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdatePhoneSettingsReqShowDeviceIPForCallLog) Get() (v UpdatePhoneSettingsReqShowDeviceIPForCallLog, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdatePhoneSettingsReqShowDeviceIPForCallLog) Or(d UpdatePhoneSettingsReqShowDeviceIPForCallLog) UpdatePhoneSettingsReqShowDeviceIPForCallLog {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdatePolicyReq returns new OptUpdatePolicyReq with value set to v.
func NewOptUpdatePolicyReq(v UpdatePolicyReq) OptUpdatePolicyReq {
	return OptUpdatePolicyReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdatePolicyReq is optional UpdatePolicyReq.
type OptUpdatePolicyReq struct {
	Value UpdatePolicyReq
	Set   bool
}

// IsSet returns true if OptUpdatePolicyReq was set.
func (o OptUpdatePolicyReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdatePolicyReq) Reset() {
	var v UpdatePolicyReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdatePolicyReq) SetTo(v UpdatePolicyReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdatePolicyReq) Get() (v UpdatePolicyReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdatePolicyReq) Or(d UpdatePolicyReq) UpdatePolicyReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdatePolicyReqVoicemailAccessMember returns new OptUpdatePolicyReqVoicemailAccessMember with value set to v.
func NewOptUpdatePolicyReqVoicemailAccessMember(v UpdatePolicyReqVoicemailAccessMember) OptUpdatePolicyReqVoicemailAccessMember {
	return OptUpdatePolicyReqVoicemailAccessMember{
		Value: v,
		Set:   true,
	}
}

// OptUpdatePolicyReqVoicemailAccessMember is optional UpdatePolicyReqVoicemailAccessMember.
type OptUpdatePolicyReqVoicemailAccessMember struct {
	Value UpdatePolicyReqVoicemailAccessMember
	Set   bool
}

// IsSet returns true if OptUpdatePolicyReqVoicemailAccessMember was set.
func (o OptUpdatePolicyReqVoicemailAccessMember) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdatePolicyReqVoicemailAccessMember) Reset() {
	var v UpdatePolicyReqVoicemailAccessMember
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdatePolicyReqVoicemailAccessMember) SetTo(v UpdatePolicyReqVoicemailAccessMember) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdatePolicyReqVoicemailAccessMember) Get() (v UpdatePolicyReqVoicemailAccessMember, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdatePolicyReqVoicemailAccessMember) Or(d UpdatePolicyReqVoicemailAccessMember) UpdatePolicyReqVoicemailAccessMember {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateProvisionTemplateReq returns new OptUpdateProvisionTemplateReq with value set to v.
func NewOptUpdateProvisionTemplateReq(v UpdateProvisionTemplateReq) OptUpdateProvisionTemplateReq {
	return OptUpdateProvisionTemplateReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateProvisionTemplateReq is optional UpdateProvisionTemplateReq.
type OptUpdateProvisionTemplateReq struct {
	Value UpdateProvisionTemplateReq
	Set   bool
}

// IsSet returns true if OptUpdateProvisionTemplateReq was set.
func (o OptUpdateProvisionTemplateReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateProvisionTemplateReq) Reset() {
	var v UpdateProvisionTemplateReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateProvisionTemplateReq) SetTo(v UpdateProvisionTemplateReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateProvisionTemplateReq) Get() (v UpdateProvisionTemplateReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateProvisionTemplateReq) Or(d UpdateProvisionTemplateReq) UpdateProvisionTemplateReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateProvisionTemplateToDeviceReq returns new OptUpdateProvisionTemplateToDeviceReq with value set to v.
func NewOptUpdateProvisionTemplateToDeviceReq(v UpdateProvisionTemplateToDeviceReq) OptUpdateProvisionTemplateToDeviceReq {
	return OptUpdateProvisionTemplateToDeviceReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateProvisionTemplateToDeviceReq is optional UpdateProvisionTemplateToDeviceReq.
type OptUpdateProvisionTemplateToDeviceReq struct {
	Value UpdateProvisionTemplateToDeviceReq
	Set   bool
}

// IsSet returns true if OptUpdateProvisionTemplateToDeviceReq was set.
func (o OptUpdateProvisionTemplateToDeviceReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateProvisionTemplateToDeviceReq) Reset() {
	var v UpdateProvisionTemplateToDeviceReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateProvisionTemplateToDeviceReq) SetTo(v UpdateProvisionTemplateToDeviceReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateProvisionTemplateToDeviceReq) Get() (v UpdateProvisionTemplateToDeviceReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateProvisionTemplateToDeviceReq) Or(d UpdateProvisionTemplateToDeviceReq) UpdateProvisionTemplateToDeviceReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateRecordingStatusReq returns new OptUpdateRecordingStatusReq with value set to v.
func NewOptUpdateRecordingStatusReq(v UpdateRecordingStatusReq) OptUpdateRecordingStatusReq {
	return OptUpdateRecordingStatusReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateRecordingStatusReq is optional UpdateRecordingStatusReq.
type OptUpdateRecordingStatusReq struct {
	Value UpdateRecordingStatusReq
	Set   bool
}

// IsSet returns true if OptUpdateRecordingStatusReq was set.
func (o OptUpdateRecordingStatusReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateRecordingStatusReq) Reset() {
	var v UpdateRecordingStatusReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateRecordingStatusReq) SetTo(v UpdateRecordingStatusReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateRecordingStatusReq) Get() (v UpdateRecordingStatusReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateRecordingStatusReq) Or(d UpdateRecordingStatusReq) UpdateRecordingStatusReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateRoutingRuleReq returns new OptUpdateRoutingRuleReq with value set to v.
func NewOptUpdateRoutingRuleReq(v UpdateRoutingRuleReq) OptUpdateRoutingRuleReq {
	return OptUpdateRoutingRuleReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateRoutingRuleReq is optional UpdateRoutingRuleReq.
type OptUpdateRoutingRuleReq struct {
	Value UpdateRoutingRuleReq
	Set   bool
}

// IsSet returns true if OptUpdateRoutingRuleReq was set.
func (o OptUpdateRoutingRuleReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateRoutingRuleReq) Reset() {
	var v UpdateRoutingRuleReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateRoutingRuleReq) SetTo(v UpdateRoutingRuleReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateRoutingRuleReq) Get() (v UpdateRoutingRuleReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateRoutingRuleReq) Or(d UpdateRoutingRuleReq) UpdateRoutingRuleReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSLGPolicySubSettingReq returns new OptUpdateSLGPolicySubSettingReq with value set to v.
func NewOptUpdateSLGPolicySubSettingReq(v UpdateSLGPolicySubSettingReq) OptUpdateSLGPolicySubSettingReq {
	return OptUpdateSLGPolicySubSettingReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSLGPolicySubSettingReq is optional UpdateSLGPolicySubSettingReq.
type OptUpdateSLGPolicySubSettingReq struct {
	Value UpdateSLGPolicySubSettingReq
	Set   bool
}

// IsSet returns true if OptUpdateSLGPolicySubSettingReq was set.
func (o OptUpdateSLGPolicySubSettingReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSLGPolicySubSettingReq) Reset() {
	var v UpdateSLGPolicySubSettingReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSLGPolicySubSettingReq) SetTo(v UpdateSLGPolicySubSettingReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSLGPolicySubSettingReq) Get() (v UpdateSLGPolicySubSettingReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSLGPolicySubSettingReq) Or(d UpdateSLGPolicySubSettingReq) UpdateSLGPolicySubSettingReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReq returns new OptUpdateSettingTemplateReq with value set to v.
func NewOptUpdateSettingTemplateReq(v UpdateSettingTemplateReq) OptUpdateSettingTemplateReq {
	return OptUpdateSettingTemplateReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReq is optional UpdateSettingTemplateReq.
type OptUpdateSettingTemplateReq struct {
	Value UpdateSettingTemplateReq
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReq was set.
func (o OptUpdateSettingTemplateReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSettingTemplateReq) Reset() {
	var v UpdateSettingTemplateReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReq) SetTo(v UpdateSettingTemplateReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReq) Get() (v UpdateSettingTemplateReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReq) Or(d UpdateSettingTemplateReq) UpdateSettingTemplateReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqPolicy returns new OptUpdateSettingTemplateReqPolicy with value set to v.
func NewOptUpdateSettingTemplateReqPolicy(v UpdateSettingTemplateReqPolicy) OptUpdateSettingTemplateReqPolicy {
	return OptUpdateSettingTemplateReqPolicy{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqPolicy is optional UpdateSettingTemplateReqPolicy.
type OptUpdateSettingTemplateReqPolicy struct {
	Value UpdateSettingTemplateReqPolicy
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqPolicy was set.
func (o OptUpdateSettingTemplateReqPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqPolicy) Reset() {
	var v UpdateSettingTemplateReqPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqPolicy) SetTo(v UpdateSettingTemplateReqPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqPolicy) Get() (v UpdateSettingTemplateReqPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqPolicy) Or(d UpdateSettingTemplateReqPolicy) UpdateSettingTemplateReqPolicy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqPolicyAdHocCallRecording returns new OptUpdateSettingTemplateReqPolicyAdHocCallRecording with value set to v.
func NewOptUpdateSettingTemplateReqPolicyAdHocCallRecording(v UpdateSettingTemplateReqPolicyAdHocCallRecording) OptUpdateSettingTemplateReqPolicyAdHocCallRecording {
	return OptUpdateSettingTemplateReqPolicyAdHocCallRecording{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqPolicyAdHocCallRecording is optional UpdateSettingTemplateReqPolicyAdHocCallRecording.
type OptUpdateSettingTemplateReqPolicyAdHocCallRecording struct {
	Value UpdateSettingTemplateReqPolicyAdHocCallRecording
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqPolicyAdHocCallRecording was set.
func (o OptUpdateSettingTemplateReqPolicyAdHocCallRecording) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqPolicyAdHocCallRecording) Reset() {
	var v UpdateSettingTemplateReqPolicyAdHocCallRecording
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqPolicyAdHocCallRecording) SetTo(v UpdateSettingTemplateReqPolicyAdHocCallRecording) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqPolicyAdHocCallRecording) Get() (v UpdateSettingTemplateReqPolicyAdHocCallRecording, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqPolicyAdHocCallRecording) Or(d UpdateSettingTemplateReqPolicyAdHocCallRecording) UpdateSettingTemplateReqPolicyAdHocCallRecording {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqPolicyAutoCallRecording returns new OptUpdateSettingTemplateReqPolicyAutoCallRecording with value set to v.
func NewOptUpdateSettingTemplateReqPolicyAutoCallRecording(v UpdateSettingTemplateReqPolicyAutoCallRecording) OptUpdateSettingTemplateReqPolicyAutoCallRecording {
	return OptUpdateSettingTemplateReqPolicyAutoCallRecording{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqPolicyAutoCallRecording is optional UpdateSettingTemplateReqPolicyAutoCallRecording.
type OptUpdateSettingTemplateReqPolicyAutoCallRecording struct {
	Value UpdateSettingTemplateReqPolicyAutoCallRecording
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqPolicyAutoCallRecording was set.
func (o OptUpdateSettingTemplateReqPolicyAutoCallRecording) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqPolicyAutoCallRecording) Reset() {
	var v UpdateSettingTemplateReqPolicyAutoCallRecording
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqPolicyAutoCallRecording) SetTo(v UpdateSettingTemplateReqPolicyAutoCallRecording) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqPolicyAutoCallRecording) Get() (v UpdateSettingTemplateReqPolicyAutoCallRecording, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqPolicyAutoCallRecording) Or(d UpdateSettingTemplateReqPolicyAutoCallRecording) UpdateSettingTemplateReqPolicyAutoCallRecording {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqPolicyCallForwarding returns new OptUpdateSettingTemplateReqPolicyCallForwarding with value set to v.
func NewOptUpdateSettingTemplateReqPolicyCallForwarding(v UpdateSettingTemplateReqPolicyCallForwarding) OptUpdateSettingTemplateReqPolicyCallForwarding {
	return OptUpdateSettingTemplateReqPolicyCallForwarding{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqPolicyCallForwarding is optional UpdateSettingTemplateReqPolicyCallForwarding.
type OptUpdateSettingTemplateReqPolicyCallForwarding struct {
	Value UpdateSettingTemplateReqPolicyCallForwarding
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqPolicyCallForwarding was set.
func (o OptUpdateSettingTemplateReqPolicyCallForwarding) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqPolicyCallForwarding) Reset() {
	var v UpdateSettingTemplateReqPolicyCallForwarding
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqPolicyCallForwarding) SetTo(v UpdateSettingTemplateReqPolicyCallForwarding) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqPolicyCallForwarding) Get() (v UpdateSettingTemplateReqPolicyCallForwarding, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqPolicyCallForwarding) Or(d UpdateSettingTemplateReqPolicyCallForwarding) UpdateSettingTemplateReqPolicyCallForwarding {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqPolicyCallOverflow returns new OptUpdateSettingTemplateReqPolicyCallOverflow with value set to v.
func NewOptUpdateSettingTemplateReqPolicyCallOverflow(v UpdateSettingTemplateReqPolicyCallOverflow) OptUpdateSettingTemplateReqPolicyCallOverflow {
	return OptUpdateSettingTemplateReqPolicyCallOverflow{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqPolicyCallOverflow is optional UpdateSettingTemplateReqPolicyCallOverflow.
type OptUpdateSettingTemplateReqPolicyCallOverflow struct {
	Value UpdateSettingTemplateReqPolicyCallOverflow
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqPolicyCallOverflow was set.
func (o OptUpdateSettingTemplateReqPolicyCallOverflow) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqPolicyCallOverflow) Reset() {
	var v UpdateSettingTemplateReqPolicyCallOverflow
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqPolicyCallOverflow) SetTo(v UpdateSettingTemplateReqPolicyCallOverflow) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqPolicyCallOverflow) Get() (v UpdateSettingTemplateReqPolicyCallOverflow, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqPolicyCallOverflow) Or(d UpdateSettingTemplateReqPolicyCallOverflow) UpdateSettingTemplateReqPolicyCallOverflow {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqPolicySMS returns new OptUpdateSettingTemplateReqPolicySMS with value set to v.
func NewOptUpdateSettingTemplateReqPolicySMS(v UpdateSettingTemplateReqPolicySMS) OptUpdateSettingTemplateReqPolicySMS {
	return OptUpdateSettingTemplateReqPolicySMS{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqPolicySMS is optional UpdateSettingTemplateReqPolicySMS.
type OptUpdateSettingTemplateReqPolicySMS struct {
	Value UpdateSettingTemplateReqPolicySMS
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqPolicySMS was set.
func (o OptUpdateSettingTemplateReqPolicySMS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqPolicySMS) Reset() {
	var v UpdateSettingTemplateReqPolicySMS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqPolicySMS) SetTo(v UpdateSettingTemplateReqPolicySMS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqPolicySMS) Get() (v UpdateSettingTemplateReqPolicySMS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqPolicySMS) Or(d UpdateSettingTemplateReqPolicySMS) UpdateSettingTemplateReqPolicySMS {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqPolicyVoicemail returns new OptUpdateSettingTemplateReqPolicyVoicemail with value set to v.
func NewOptUpdateSettingTemplateReqPolicyVoicemail(v UpdateSettingTemplateReqPolicyVoicemail) OptUpdateSettingTemplateReqPolicyVoicemail {
	return OptUpdateSettingTemplateReqPolicyVoicemail{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqPolicyVoicemail is optional UpdateSettingTemplateReqPolicyVoicemail.
type OptUpdateSettingTemplateReqPolicyVoicemail struct {
	Value UpdateSettingTemplateReqPolicyVoicemail
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqPolicyVoicemail was set.
func (o OptUpdateSettingTemplateReqPolicyVoicemail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqPolicyVoicemail) Reset() {
	var v UpdateSettingTemplateReqPolicyVoicemail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqPolicyVoicemail) SetTo(v UpdateSettingTemplateReqPolicyVoicemail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqPolicyVoicemail) Get() (v UpdateSettingTemplateReqPolicyVoicemail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqPolicyVoicemail) Or(d UpdateSettingTemplateReqPolicyVoicemail) UpdateSettingTemplateReqPolicyVoicemail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqProfile returns new OptUpdateSettingTemplateReqProfile with value set to v.
func NewOptUpdateSettingTemplateReqProfile(v UpdateSettingTemplateReqProfile) OptUpdateSettingTemplateReqProfile {
	return OptUpdateSettingTemplateReqProfile{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqProfile is optional UpdateSettingTemplateReqProfile.
type OptUpdateSettingTemplateReqProfile struct {
	Value UpdateSettingTemplateReqProfile
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqProfile was set.
func (o OptUpdateSettingTemplateReqProfile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqProfile) Reset() {
	var v UpdateSettingTemplateReqProfile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqProfile) SetTo(v UpdateSettingTemplateReqProfile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqProfile) Get() (v UpdateSettingTemplateReqProfile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqProfile) Or(d UpdateSettingTemplateReqProfile) UpdateSettingTemplateReqProfile {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqUserSettings returns new OptUpdateSettingTemplateReqUserSettings with value set to v.
func NewOptUpdateSettingTemplateReqUserSettings(v UpdateSettingTemplateReqUserSettings) OptUpdateSettingTemplateReqUserSettings {
	return OptUpdateSettingTemplateReqUserSettings{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqUserSettings is optional UpdateSettingTemplateReqUserSettings.
type OptUpdateSettingTemplateReqUserSettings struct {
	Value UpdateSettingTemplateReqUserSettings
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqUserSettings was set.
func (o OptUpdateSettingTemplateReqUserSettings) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqUserSettings) Reset() {
	var v UpdateSettingTemplateReqUserSettings
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqUserSettings) SetTo(v UpdateSettingTemplateReqUserSettings) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqUserSettings) Get() (v UpdateSettingTemplateReqUserSettings, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqUserSettings) Or(d UpdateSettingTemplateReqUserSettings) UpdateSettingTemplateReqUserSettings {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqUserSettingsCallHandling returns new OptUpdateSettingTemplateReqUserSettingsCallHandling with value set to v.
func NewOptUpdateSettingTemplateReqUserSettingsCallHandling(v UpdateSettingTemplateReqUserSettingsCallHandling) OptUpdateSettingTemplateReqUserSettingsCallHandling {
	return OptUpdateSettingTemplateReqUserSettingsCallHandling{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqUserSettingsCallHandling is optional UpdateSettingTemplateReqUserSettingsCallHandling.
type OptUpdateSettingTemplateReqUserSettingsCallHandling struct {
	Value UpdateSettingTemplateReqUserSettingsCallHandling
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqUserSettingsCallHandling was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandling) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandling) Reset() {
	var v UpdateSettingTemplateReqUserSettingsCallHandling
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandling) SetTo(v UpdateSettingTemplateReqUserSettingsCallHandling) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandling) Get() (v UpdateSettingTemplateReqUserSettingsCallHandling, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandling) Or(d UpdateSettingTemplateReqUserSettingsCallHandling) UpdateSettingTemplateReqUserSettingsCallHandling {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours returns new OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours with value set to v.
func NewOptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours(v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours {
	return OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours is optional UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours.
type OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours struct {
	Value UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) Reset() {
	var v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) SetTo(v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) Get() (v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) Or(d UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator returns new OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator with value set to v.
func NewOptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator(v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator {
	return OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator is optional UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator.
type OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator struct {
	Value UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) Reset() {
	var v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) SetTo(v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) Get() (v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) Or(d UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber returns new OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber with value set to v.
func NewOptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber(v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber {
	return OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber is optional UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber.
type OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber struct {
	Value UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) Reset() {
	var v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) SetTo(v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) Get() (v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) Or(d UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator returns new OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator with value set to v.
func NewOptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator(v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator {
	return OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator is optional UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator.
type OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator struct {
	Value UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) Reset() {
	var v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) SetTo(v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) Get() (v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) Or(d UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber returns new OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber with value set to v.
func NewOptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber(v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber {
	return OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber is optional UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber.
type OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber struct {
	Value UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) Reset() {
	var v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) SetTo(v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) Get() (v UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) Or(d UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHours returns new OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHours with value set to v.
func NewOptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHours(v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHours {
	return OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHours is optional UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours.
type OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHours struct {
	Value UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHours was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) Reset() {
	var v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) SetTo(v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) Get() (v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) Or(d UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator returns new OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator with value set to v.
func NewOptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator(v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator {
	return OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator is optional UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator.
type OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator struct {
	Value UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) Reset() {
	var v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) SetTo(v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) Get() (v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) Or(d UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber returns new OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber with value set to v.
func NewOptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber(v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber {
	return OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber is optional UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber.
type OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber struct {
	Value UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) Reset() {
	var v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) SetTo(v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) Get() (v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) Or(d UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator returns new OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator with value set to v.
func NewOptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator(v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator {
	return OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator is optional UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator.
type OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator struct {
	Value UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) Reset() {
	var v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) SetTo(v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) Get() (v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) Or(d UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber returns new OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber with value set to v.
func NewOptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber(v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber {
	return OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber is optional UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber.
type OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber struct {
	Value UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) Reset() {
	var v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) SetTo(v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) Get() (v UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) Or(d UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSettingTemplateReqUserSettingsDeskPhone returns new OptUpdateSettingTemplateReqUserSettingsDeskPhone with value set to v.
func NewOptUpdateSettingTemplateReqUserSettingsDeskPhone(v UpdateSettingTemplateReqUserSettingsDeskPhone) OptUpdateSettingTemplateReqUserSettingsDeskPhone {
	return OptUpdateSettingTemplateReqUserSettingsDeskPhone{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSettingTemplateReqUserSettingsDeskPhone is optional UpdateSettingTemplateReqUserSettingsDeskPhone.
type OptUpdateSettingTemplateReqUserSettingsDeskPhone struct {
	Value UpdateSettingTemplateReqUserSettingsDeskPhone
	Set   bool
}

// IsSet returns true if OptUpdateSettingTemplateReqUserSettingsDeskPhone was set.
func (o OptUpdateSettingTemplateReqUserSettingsDeskPhone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSettingTemplateReqUserSettingsDeskPhone) Reset() {
	var v UpdateSettingTemplateReqUserSettingsDeskPhone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSettingTemplateReqUserSettingsDeskPhone) SetTo(v UpdateSettingTemplateReqUserSettingsDeskPhone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSettingTemplateReqUserSettingsDeskPhone) Get() (v UpdateSettingTemplateReqUserSettingsDeskPhone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSettingTemplateReqUserSettingsDeskPhone) Or(d UpdateSettingTemplateReqUserSettingsDeskPhone) UpdateSettingTemplateReqUserSettingsDeskPhone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSharedLineGroupPolicyReq returns new OptUpdateSharedLineGroupPolicyReq with value set to v.
func NewOptUpdateSharedLineGroupPolicyReq(v UpdateSharedLineGroupPolicyReq) OptUpdateSharedLineGroupPolicyReq {
	return OptUpdateSharedLineGroupPolicyReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSharedLineGroupPolicyReq is optional UpdateSharedLineGroupPolicyReq.
type OptUpdateSharedLineGroupPolicyReq struct {
	Value UpdateSharedLineGroupPolicyReq
	Set   bool
}

// IsSet returns true if OptUpdateSharedLineGroupPolicyReq was set.
func (o OptUpdateSharedLineGroupPolicyReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSharedLineGroupPolicyReq) Reset() {
	var v UpdateSharedLineGroupPolicyReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSharedLineGroupPolicyReq) SetTo(v UpdateSharedLineGroupPolicyReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSharedLineGroupPolicyReq) Get() (v UpdateSharedLineGroupPolicyReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSharedLineGroupPolicyReq) Or(d UpdateSharedLineGroupPolicyReq) UpdateSharedLineGroupPolicyReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone returns new OptUpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone with value set to v.
func NewOptUpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone(v UpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone) OptUpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone {
	return OptUpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone is optional UpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone.
type OptUpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone struct {
	Value UpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone
	Set   bool
}

// IsSet returns true if OptUpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone was set.
func (o OptUpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone) Reset() {
	var v UpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone) SetTo(v UpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone) Get() (v UpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone) Or(d UpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone) UpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReq returns new OptUpdateSiteDetailsReq with value set to v.
func NewOptUpdateSiteDetailsReq(v UpdateSiteDetailsReq) OptUpdateSiteDetailsReq {
	return OptUpdateSiteDetailsReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReq is optional UpdateSiteDetailsReq.
type OptUpdateSiteDetailsReq struct {
	Value UpdateSiteDetailsReq
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReq was set.
func (o OptUpdateSiteDetailsReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReq) Reset() {
	var v UpdateSiteDetailsReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReq) SetTo(v UpdateSiteDetailsReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReq) Get() (v UpdateSiteDetailsReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReq) Or(d UpdateSiteDetailsReq) UpdateSiteDetailsReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqDefaultEmergencyAddress returns new OptUpdateSiteDetailsReqDefaultEmergencyAddress with value set to v.
func NewOptUpdateSiteDetailsReqDefaultEmergencyAddress(v UpdateSiteDetailsReqDefaultEmergencyAddress) OptUpdateSiteDetailsReqDefaultEmergencyAddress {
	return OptUpdateSiteDetailsReqDefaultEmergencyAddress{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqDefaultEmergencyAddress is optional UpdateSiteDetailsReqDefaultEmergencyAddress.
type OptUpdateSiteDetailsReqDefaultEmergencyAddress struct {
	Value UpdateSiteDetailsReqDefaultEmergencyAddress
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqDefaultEmergencyAddress was set.
func (o OptUpdateSiteDetailsReqDefaultEmergencyAddress) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqDefaultEmergencyAddress) Reset() {
	var v UpdateSiteDetailsReqDefaultEmergencyAddress
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqDefaultEmergencyAddress) SetTo(v UpdateSiteDetailsReqDefaultEmergencyAddress) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqDefaultEmergencyAddress) Get() (v UpdateSiteDetailsReqDefaultEmergencyAddress, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqDefaultEmergencyAddress) Or(d UpdateSiteDetailsReqDefaultEmergencyAddress) UpdateSiteDetailsReqDefaultEmergencyAddress {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicy returns new OptUpdateSiteDetailsReqPolicy with value set to v.
func NewOptUpdateSiteDetailsReqPolicy(v UpdateSiteDetailsReqPolicy) OptUpdateSiteDetailsReqPolicy {
	return OptUpdateSiteDetailsReqPolicy{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicy is optional UpdateSiteDetailsReqPolicy.
type OptUpdateSiteDetailsReqPolicy struct {
	Value UpdateSiteDetailsReqPolicy
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicy was set.
func (o OptUpdateSiteDetailsReqPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicy) Reset() {
	var v UpdateSiteDetailsReqPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicy) SetTo(v UpdateSiteDetailsReqPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicy) Get() (v UpdateSiteDetailsReqPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicy) Or(d UpdateSiteDetailsReqPolicy) UpdateSiteDetailsReqPolicy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyAdHocCallRecording returns new OptUpdateSiteDetailsReqPolicyAdHocCallRecording with value set to v.
func NewOptUpdateSiteDetailsReqPolicyAdHocCallRecording(v UpdateSiteDetailsReqPolicyAdHocCallRecording) OptUpdateSiteDetailsReqPolicyAdHocCallRecording {
	return OptUpdateSiteDetailsReqPolicyAdHocCallRecording{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyAdHocCallRecording is optional UpdateSiteDetailsReqPolicyAdHocCallRecording.
type OptUpdateSiteDetailsReqPolicyAdHocCallRecording struct {
	Value UpdateSiteDetailsReqPolicyAdHocCallRecording
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyAdHocCallRecording was set.
func (o OptUpdateSiteDetailsReqPolicyAdHocCallRecording) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyAdHocCallRecording) Reset() {
	var v UpdateSiteDetailsReqPolicyAdHocCallRecording
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyAdHocCallRecording) SetTo(v UpdateSiteDetailsReqPolicyAdHocCallRecording) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyAdHocCallRecording) Get() (v UpdateSiteDetailsReqPolicyAdHocCallRecording, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyAdHocCallRecording) Or(d UpdateSiteDetailsReqPolicyAdHocCallRecording) UpdateSiteDetailsReqPolicyAdHocCallRecording {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone returns new OptUpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone with value set to v.
func NewOptUpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone(v UpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone) OptUpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone {
	return OptUpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone is optional UpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone.
type OptUpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone struct {
	Value UpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone was set.
func (o OptUpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone) Reset() {
	var v UpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone) SetTo(v UpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone) Get() (v UpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone) Or(d UpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone) UpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyAudioIntercom returns new OptUpdateSiteDetailsReqPolicyAudioIntercom with value set to v.
func NewOptUpdateSiteDetailsReqPolicyAudioIntercom(v UpdateSiteDetailsReqPolicyAudioIntercom) OptUpdateSiteDetailsReqPolicyAudioIntercom {
	return OptUpdateSiteDetailsReqPolicyAudioIntercom{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyAudioIntercom is optional UpdateSiteDetailsReqPolicyAudioIntercom.
type OptUpdateSiteDetailsReqPolicyAudioIntercom struct {
	Value UpdateSiteDetailsReqPolicyAudioIntercom
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyAudioIntercom was set.
func (o OptUpdateSiteDetailsReqPolicyAudioIntercom) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyAudioIntercom) Reset() {
	var v UpdateSiteDetailsReqPolicyAudioIntercom
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyAudioIntercom) SetTo(v UpdateSiteDetailsReqPolicyAudioIntercom) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyAudioIntercom) Get() (v UpdateSiteDetailsReqPolicyAudioIntercom, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyAudioIntercom) Or(d UpdateSiteDetailsReqPolicyAudioIntercom) UpdateSiteDetailsReqPolicyAudioIntercom {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyAutoCallRecording returns new OptUpdateSiteDetailsReqPolicyAutoCallRecording with value set to v.
func NewOptUpdateSiteDetailsReqPolicyAutoCallRecording(v UpdateSiteDetailsReqPolicyAutoCallRecording) OptUpdateSiteDetailsReqPolicyAutoCallRecording {
	return OptUpdateSiteDetailsReqPolicyAutoCallRecording{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyAutoCallRecording is optional UpdateSiteDetailsReqPolicyAutoCallRecording.
type OptUpdateSiteDetailsReqPolicyAutoCallRecording struct {
	Value UpdateSiteDetailsReqPolicyAutoCallRecording
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyAutoCallRecording was set.
func (o OptUpdateSiteDetailsReqPolicyAutoCallRecording) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyAutoCallRecording) Reset() {
	var v UpdateSiteDetailsReqPolicyAutoCallRecording
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyAutoCallRecording) SetTo(v UpdateSiteDetailsReqPolicyAutoCallRecording) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyAutoCallRecording) Get() (v UpdateSiteDetailsReqPolicyAutoCallRecording, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyAutoCallRecording) Or(d UpdateSiteDetailsReqPolicyAutoCallRecording) UpdateSiteDetailsReqPolicyAutoCallRecording {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone returns new OptUpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone with value set to v.
func NewOptUpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone(v UpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone) OptUpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone {
	return OptUpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone is optional UpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone.
type OptUpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone struct {
	Value UpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone was set.
func (o OptUpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone) Reset() {
	var v UpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone) SetTo(v UpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone) Get() (v UpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone) Or(d UpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone) UpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration returns new OptUpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration with value set to v.
func NewOptUpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration(v UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) OptUpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration {
	return OptUpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration is optional UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration.
type OptUpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration struct {
	Value UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration was set.
func (o OptUpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) Reset() {
	var v UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) SetTo(v UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) Get() (v UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) Or(d UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID returns new OptUpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID with value set to v.
func NewOptUpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID(v UpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID) OptUpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID {
	return OptUpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID is optional UpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID.
type OptUpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID struct {
	Value UpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID was set.
func (o OptUpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID) Reset() {
	var v UpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID) SetTo(v UpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID) Get() (v UpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID) Or(d UpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID) UpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyBlockExternalCalls returns new OptUpdateSiteDetailsReqPolicyBlockExternalCalls with value set to v.
func NewOptUpdateSiteDetailsReqPolicyBlockExternalCalls(v UpdateSiteDetailsReqPolicyBlockExternalCalls) OptUpdateSiteDetailsReqPolicyBlockExternalCalls {
	return OptUpdateSiteDetailsReqPolicyBlockExternalCalls{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyBlockExternalCalls is optional UpdateSiteDetailsReqPolicyBlockExternalCalls.
type OptUpdateSiteDetailsReqPolicyBlockExternalCalls struct {
	Value UpdateSiteDetailsReqPolicyBlockExternalCalls
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyBlockExternalCalls was set.
func (o OptUpdateSiteDetailsReqPolicyBlockExternalCalls) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyBlockExternalCalls) Reset() {
	var v UpdateSiteDetailsReqPolicyBlockExternalCalls
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyBlockExternalCalls) SetTo(v UpdateSiteDetailsReqPolicyBlockExternalCalls) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyBlockExternalCalls) Get() (v UpdateSiteDetailsReqPolicyBlockExternalCalls, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyBlockExternalCalls) Or(d UpdateSiteDetailsReqPolicyBlockExternalCalls) UpdateSiteDetailsReqPolicyBlockExternalCalls {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption returns new OptUpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption with value set to v.
func NewOptUpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption(v UpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption) OptUpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption {
	return OptUpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption is optional UpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption.
type OptUpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption struct {
	Value UpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption was set.
func (o OptUpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption) Reset() {
	var v UpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption) SetTo(v UpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption) Get() (v UpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption) Or(d UpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption) UpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers returns new OptUpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers with value set to v.
func NewOptUpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers(v UpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers) OptUpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers {
	return OptUpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers is optional UpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers.
type OptUpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers struct {
	Value UpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers was set.
func (o OptUpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers) Reset() {
	var v UpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers) SetTo(v UpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers) Get() (v UpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers) Or(d UpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers) UpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyCallOverflow returns new OptUpdateSiteDetailsReqPolicyCallOverflow with value set to v.
func NewOptUpdateSiteDetailsReqPolicyCallOverflow(v UpdateSiteDetailsReqPolicyCallOverflow) OptUpdateSiteDetailsReqPolicyCallOverflow {
	return OptUpdateSiteDetailsReqPolicyCallOverflow{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyCallOverflow is optional UpdateSiteDetailsReqPolicyCallOverflow.
type OptUpdateSiteDetailsReqPolicyCallOverflow struct {
	Value UpdateSiteDetailsReqPolicyCallOverflow
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyCallOverflow was set.
func (o OptUpdateSiteDetailsReqPolicyCallOverflow) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyCallOverflow) Reset() {
	var v UpdateSiteDetailsReqPolicyCallOverflow
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyCallOverflow) SetTo(v UpdateSiteDetailsReqPolicyCallOverflow) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyCallOverflow) Get() (v UpdateSiteDetailsReqPolicyCallOverflow, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyCallOverflow) Or(d UpdateSiteDetailsReqPolicyCallOverflow) UpdateSiteDetailsReqPolicyCallOverflow {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyCallPark returns new OptUpdateSiteDetailsReqPolicyCallPark with value set to v.
func NewOptUpdateSiteDetailsReqPolicyCallPark(v UpdateSiteDetailsReqPolicyCallPark) OptUpdateSiteDetailsReqPolicyCallPark {
	return OptUpdateSiteDetailsReqPolicyCallPark{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyCallPark is optional UpdateSiteDetailsReqPolicyCallPark.
type OptUpdateSiteDetailsReqPolicyCallPark struct {
	Value UpdateSiteDetailsReqPolicyCallPark
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyCallPark was set.
func (o OptUpdateSiteDetailsReqPolicyCallPark) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyCallPark) Reset() {
	var v UpdateSiteDetailsReqPolicyCallPark
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyCallPark) SetTo(v UpdateSiteDetailsReqPolicyCallPark) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyCallPark) Get() (v UpdateSiteDetailsReqPolicyCallPark, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyCallPark) Or(d UpdateSiteDetailsReqPolicyCallPark) UpdateSiteDetailsReqPolicyCallPark {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyCallQueueOptOutReason returns new OptUpdateSiteDetailsReqPolicyCallQueueOptOutReason with value set to v.
func NewOptUpdateSiteDetailsReqPolicyCallQueueOptOutReason(v UpdateSiteDetailsReqPolicyCallQueueOptOutReason) OptUpdateSiteDetailsReqPolicyCallQueueOptOutReason {
	return OptUpdateSiteDetailsReqPolicyCallQueueOptOutReason{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyCallQueueOptOutReason is optional UpdateSiteDetailsReqPolicyCallQueueOptOutReason.
type OptUpdateSiteDetailsReqPolicyCallQueueOptOutReason struct {
	Value UpdateSiteDetailsReqPolicyCallQueueOptOutReason
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyCallQueueOptOutReason was set.
func (o OptUpdateSiteDetailsReqPolicyCallQueueOptOutReason) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyCallQueueOptOutReason) Reset() {
	var v UpdateSiteDetailsReqPolicyCallQueueOptOutReason
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyCallQueueOptOutReason) SetTo(v UpdateSiteDetailsReqPolicyCallQueueOptOutReason) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyCallQueueOptOutReason) Get() (v UpdateSiteDetailsReqPolicyCallQueueOptOutReason, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyCallQueueOptOutReason) Or(d UpdateSiteDetailsReqPolicyCallQueueOptOutReason) UpdateSiteDetailsReqPolicyCallQueueOptOutReason {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyCallQueuePickupCode returns new OptUpdateSiteDetailsReqPolicyCallQueuePickupCode with value set to v.
func NewOptUpdateSiteDetailsReqPolicyCallQueuePickupCode(v UpdateSiteDetailsReqPolicyCallQueuePickupCode) OptUpdateSiteDetailsReqPolicyCallQueuePickupCode {
	return OptUpdateSiteDetailsReqPolicyCallQueuePickupCode{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyCallQueuePickupCode is optional UpdateSiteDetailsReqPolicyCallQueuePickupCode.
type OptUpdateSiteDetailsReqPolicyCallQueuePickupCode struct {
	Value UpdateSiteDetailsReqPolicyCallQueuePickupCode
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyCallQueuePickupCode was set.
func (o OptUpdateSiteDetailsReqPolicyCallQueuePickupCode) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyCallQueuePickupCode) Reset() {
	var v UpdateSiteDetailsReqPolicyCallQueuePickupCode
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyCallQueuePickupCode) SetTo(v UpdateSiteDetailsReqPolicyCallQueuePickupCode) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyCallQueuePickupCode) Get() (v UpdateSiteDetailsReqPolicyCallQueuePickupCode, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyCallQueuePickupCode) Or(d UpdateSiteDetailsReqPolicyCallQueuePickupCode) UpdateSiteDetailsReqPolicyCallQueuePickupCode {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyCallTransferring returns new OptUpdateSiteDetailsReqPolicyCallTransferring with value set to v.
func NewOptUpdateSiteDetailsReqPolicyCallTransferring(v UpdateSiteDetailsReqPolicyCallTransferring) OptUpdateSiteDetailsReqPolicyCallTransferring {
	return OptUpdateSiteDetailsReqPolicyCallTransferring{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyCallTransferring is optional UpdateSiteDetailsReqPolicyCallTransferring.
type OptUpdateSiteDetailsReqPolicyCallTransferring struct {
	Value UpdateSiteDetailsReqPolicyCallTransferring
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyCallTransferring was set.
func (o OptUpdateSiteDetailsReqPolicyCallTransferring) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyCallTransferring) Reset() {
	var v UpdateSiteDetailsReqPolicyCallTransferring
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyCallTransferring) SetTo(v UpdateSiteDetailsReqPolicyCallTransferring) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyCallTransferring) Get() (v UpdateSiteDetailsReqPolicyCallTransferring, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyCallTransferring) Or(d UpdateSiteDetailsReqPolicyCallTransferring) UpdateSiteDetailsReqPolicyCallTransferring {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone returns new OptUpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone with value set to v.
func NewOptUpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone(v UpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone) OptUpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone {
	return OptUpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone is optional UpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone.
type OptUpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone struct {
	Value UpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone was set.
func (o OptUpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone) Reset() {
	var v UpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone) SetTo(v UpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone) Get() (v UpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone) Or(d UpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone) UpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyDelegation returns new OptUpdateSiteDetailsReqPolicyDelegation with value set to v.
func NewOptUpdateSiteDetailsReqPolicyDelegation(v UpdateSiteDetailsReqPolicyDelegation) OptUpdateSiteDetailsReqPolicyDelegation {
	return OptUpdateSiteDetailsReqPolicyDelegation{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyDelegation is optional UpdateSiteDetailsReqPolicyDelegation.
type OptUpdateSiteDetailsReqPolicyDelegation struct {
	Value UpdateSiteDetailsReqPolicyDelegation
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyDelegation was set.
func (o OptUpdateSiteDetailsReqPolicyDelegation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyDelegation) Reset() {
	var v UpdateSiteDetailsReqPolicyDelegation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyDelegation) SetTo(v UpdateSiteDetailsReqPolicyDelegation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyDelegation) Get() (v UpdateSiteDetailsReqPolicyDelegation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyDelegation) Or(d UpdateSiteDetailsReqPolicyDelegation) UpdateSiteDetailsReqPolicyDelegation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyElevateToMeeting returns new OptUpdateSiteDetailsReqPolicyElevateToMeeting with value set to v.
func NewOptUpdateSiteDetailsReqPolicyElevateToMeeting(v UpdateSiteDetailsReqPolicyElevateToMeeting) OptUpdateSiteDetailsReqPolicyElevateToMeeting {
	return OptUpdateSiteDetailsReqPolicyElevateToMeeting{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyElevateToMeeting is optional UpdateSiteDetailsReqPolicyElevateToMeeting.
type OptUpdateSiteDetailsReqPolicyElevateToMeeting struct {
	Value UpdateSiteDetailsReqPolicyElevateToMeeting
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyElevateToMeeting was set.
func (o OptUpdateSiteDetailsReqPolicyElevateToMeeting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyElevateToMeeting) Reset() {
	var v UpdateSiteDetailsReqPolicyElevateToMeeting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyElevateToMeeting) SetTo(v UpdateSiteDetailsReqPolicyElevateToMeeting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyElevateToMeeting) Get() (v UpdateSiteDetailsReqPolicyElevateToMeeting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyElevateToMeeting) Or(d UpdateSiteDetailsReqPolicyElevateToMeeting) UpdateSiteDetailsReqPolicyElevateToMeeting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyForceOffNet returns new OptUpdateSiteDetailsReqPolicyForceOffNet with value set to v.
func NewOptUpdateSiteDetailsReqPolicyForceOffNet(v UpdateSiteDetailsReqPolicyForceOffNet) OptUpdateSiteDetailsReqPolicyForceOffNet {
	return OptUpdateSiteDetailsReqPolicyForceOffNet{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyForceOffNet is optional UpdateSiteDetailsReqPolicyForceOffNet.
type OptUpdateSiteDetailsReqPolicyForceOffNet struct {
	Value UpdateSiteDetailsReqPolicyForceOffNet
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyForceOffNet was set.
func (o OptUpdateSiteDetailsReqPolicyForceOffNet) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyForceOffNet) Reset() {
	var v UpdateSiteDetailsReqPolicyForceOffNet
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyForceOffNet) SetTo(v UpdateSiteDetailsReqPolicyForceOffNet) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyForceOffNet) Get() (v UpdateSiteDetailsReqPolicyForceOffNet, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyForceOffNet) Or(d UpdateSiteDetailsReqPolicyForceOffNet) UpdateSiteDetailsReqPolicyForceOffNet {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyHandOffToRoom returns new OptUpdateSiteDetailsReqPolicyHandOffToRoom with value set to v.
func NewOptUpdateSiteDetailsReqPolicyHandOffToRoom(v UpdateSiteDetailsReqPolicyHandOffToRoom) OptUpdateSiteDetailsReqPolicyHandOffToRoom {
	return OptUpdateSiteDetailsReqPolicyHandOffToRoom{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyHandOffToRoom is optional UpdateSiteDetailsReqPolicyHandOffToRoom.
type OptUpdateSiteDetailsReqPolicyHandOffToRoom struct {
	Value UpdateSiteDetailsReqPolicyHandOffToRoom
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyHandOffToRoom was set.
func (o OptUpdateSiteDetailsReqPolicyHandOffToRoom) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyHandOffToRoom) Reset() {
	var v UpdateSiteDetailsReqPolicyHandOffToRoom
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyHandOffToRoom) SetTo(v UpdateSiteDetailsReqPolicyHandOffToRoom) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyHandOffToRoom) Get() (v UpdateSiteDetailsReqPolicyHandOffToRoom, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyHandOffToRoom) Or(d UpdateSiteDetailsReqPolicyHandOffToRoom) UpdateSiteDetailsReqPolicyHandOffToRoom {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyInternationalCalling returns new OptUpdateSiteDetailsReqPolicyInternationalCalling with value set to v.
func NewOptUpdateSiteDetailsReqPolicyInternationalCalling(v UpdateSiteDetailsReqPolicyInternationalCalling) OptUpdateSiteDetailsReqPolicyInternationalCalling {
	return OptUpdateSiteDetailsReqPolicyInternationalCalling{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyInternationalCalling is optional UpdateSiteDetailsReqPolicyInternationalCalling.
type OptUpdateSiteDetailsReqPolicyInternationalCalling struct {
	Value UpdateSiteDetailsReqPolicyInternationalCalling
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyInternationalCalling was set.
func (o OptUpdateSiteDetailsReqPolicyInternationalCalling) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyInternationalCalling) Reset() {
	var v UpdateSiteDetailsReqPolicyInternationalCalling
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyInternationalCalling) SetTo(v UpdateSiteDetailsReqPolicyInternationalCalling) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyInternationalCalling) Get() (v UpdateSiteDetailsReqPolicyInternationalCalling, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyInternationalCalling) Or(d UpdateSiteDetailsReqPolicyInternationalCalling) UpdateSiteDetailsReqPolicyInternationalCalling {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyMobileSwitchToCarrier returns new OptUpdateSiteDetailsReqPolicyMobileSwitchToCarrier with value set to v.
func NewOptUpdateSiteDetailsReqPolicyMobileSwitchToCarrier(v UpdateSiteDetailsReqPolicyMobileSwitchToCarrier) OptUpdateSiteDetailsReqPolicyMobileSwitchToCarrier {
	return OptUpdateSiteDetailsReqPolicyMobileSwitchToCarrier{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyMobileSwitchToCarrier is optional UpdateSiteDetailsReqPolicyMobileSwitchToCarrier.
type OptUpdateSiteDetailsReqPolicyMobileSwitchToCarrier struct {
	Value UpdateSiteDetailsReqPolicyMobileSwitchToCarrier
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyMobileSwitchToCarrier was set.
func (o OptUpdateSiteDetailsReqPolicyMobileSwitchToCarrier) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyMobileSwitchToCarrier) Reset() {
	var v UpdateSiteDetailsReqPolicyMobileSwitchToCarrier
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyMobileSwitchToCarrier) SetTo(v UpdateSiteDetailsReqPolicyMobileSwitchToCarrier) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyMobileSwitchToCarrier) Get() (v UpdateSiteDetailsReqPolicyMobileSwitchToCarrier, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyMobileSwitchToCarrier) Or(d UpdateSiteDetailsReqPolicyMobileSwitchToCarrier) UpdateSiteDetailsReqPolicyMobileSwitchToCarrier {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyPersonalAudioLibrary returns new OptUpdateSiteDetailsReqPolicyPersonalAudioLibrary with value set to v.
func NewOptUpdateSiteDetailsReqPolicyPersonalAudioLibrary(v UpdateSiteDetailsReqPolicyPersonalAudioLibrary) OptUpdateSiteDetailsReqPolicyPersonalAudioLibrary {
	return OptUpdateSiteDetailsReqPolicyPersonalAudioLibrary{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyPersonalAudioLibrary is optional UpdateSiteDetailsReqPolicyPersonalAudioLibrary.
type OptUpdateSiteDetailsReqPolicyPersonalAudioLibrary struct {
	Value UpdateSiteDetailsReqPolicyPersonalAudioLibrary
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyPersonalAudioLibrary was set.
func (o OptUpdateSiteDetailsReqPolicyPersonalAudioLibrary) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyPersonalAudioLibrary) Reset() {
	var v UpdateSiteDetailsReqPolicyPersonalAudioLibrary
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyPersonalAudioLibrary) SetTo(v UpdateSiteDetailsReqPolicyPersonalAudioLibrary) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyPersonalAudioLibrary) Get() (v UpdateSiteDetailsReqPolicyPersonalAudioLibrary, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyPersonalAudioLibrary) Or(d UpdateSiteDetailsReqPolicyPersonalAudioLibrary) UpdateSiteDetailsReqPolicyPersonalAudioLibrary {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicySMS returns new OptUpdateSiteDetailsReqPolicySMS with value set to v.
func NewOptUpdateSiteDetailsReqPolicySMS(v UpdateSiteDetailsReqPolicySMS) OptUpdateSiteDetailsReqPolicySMS {
	return OptUpdateSiteDetailsReqPolicySMS{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicySMS is optional UpdateSiteDetailsReqPolicySMS.
type OptUpdateSiteDetailsReqPolicySMS struct {
	Value UpdateSiteDetailsReqPolicySMS
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicySMS was set.
func (o OptUpdateSiteDetailsReqPolicySMS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicySMS) Reset() {
	var v UpdateSiteDetailsReqPolicySMS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicySMS) SetTo(v UpdateSiteDetailsReqPolicySMS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicySMS) Get() (v UpdateSiteDetailsReqPolicySMS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicySMS) Or(d UpdateSiteDetailsReqPolicySMS) UpdateSiteDetailsReqPolicySMS {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicySelectOutboundCallerID returns new OptUpdateSiteDetailsReqPolicySelectOutboundCallerID with value set to v.
func NewOptUpdateSiteDetailsReqPolicySelectOutboundCallerID(v UpdateSiteDetailsReqPolicySelectOutboundCallerID) OptUpdateSiteDetailsReqPolicySelectOutboundCallerID {
	return OptUpdateSiteDetailsReqPolicySelectOutboundCallerID{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicySelectOutboundCallerID is optional UpdateSiteDetailsReqPolicySelectOutboundCallerID.
type OptUpdateSiteDetailsReqPolicySelectOutboundCallerID struct {
	Value UpdateSiteDetailsReqPolicySelectOutboundCallerID
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicySelectOutboundCallerID was set.
func (o OptUpdateSiteDetailsReqPolicySelectOutboundCallerID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicySelectOutboundCallerID) Reset() {
	var v UpdateSiteDetailsReqPolicySelectOutboundCallerID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicySelectOutboundCallerID) SetTo(v UpdateSiteDetailsReqPolicySelectOutboundCallerID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicySelectOutboundCallerID) Get() (v UpdateSiteDetailsReqPolicySelectOutboundCallerID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicySelectOutboundCallerID) Or(d UpdateSiteDetailsReqPolicySelectOutboundCallerID) UpdateSiteDetailsReqPolicySelectOutboundCallerID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail returns new OptUpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail with value set to v.
func NewOptUpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail(v UpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail) OptUpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail {
	return OptUpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail is optional UpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail.
type OptUpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail struct {
	Value UpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail was set.
func (o OptUpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail) Reset() {
	var v UpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail) SetTo(v UpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail) Get() (v UpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail) Or(d UpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail) UpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyVoicemail returns new OptUpdateSiteDetailsReqPolicyVoicemail with value set to v.
func NewOptUpdateSiteDetailsReqPolicyVoicemail(v UpdateSiteDetailsReqPolicyVoicemail) OptUpdateSiteDetailsReqPolicyVoicemail {
	return OptUpdateSiteDetailsReqPolicyVoicemail{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyVoicemail is optional UpdateSiteDetailsReqPolicyVoicemail.
type OptUpdateSiteDetailsReqPolicyVoicemail struct {
	Value UpdateSiteDetailsReqPolicyVoicemail
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyVoicemail was set.
func (o OptUpdateSiteDetailsReqPolicyVoicemail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyVoicemail) Reset() {
	var v UpdateSiteDetailsReqPolicyVoicemail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyVoicemail) SetTo(v UpdateSiteDetailsReqPolicyVoicemail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyVoicemail) Get() (v UpdateSiteDetailsReqPolicyVoicemail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyVoicemail) Or(d UpdateSiteDetailsReqPolicyVoicemail) UpdateSiteDetailsReqPolicyVoicemail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyVoicemailNotificationByEmail returns new OptUpdateSiteDetailsReqPolicyVoicemailNotificationByEmail with value set to v.
func NewOptUpdateSiteDetailsReqPolicyVoicemailNotificationByEmail(v UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) OptUpdateSiteDetailsReqPolicyVoicemailNotificationByEmail {
	return OptUpdateSiteDetailsReqPolicyVoicemailNotificationByEmail{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyVoicemailNotificationByEmail is optional UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail.
type OptUpdateSiteDetailsReqPolicyVoicemailNotificationByEmail struct {
	Value UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyVoicemailNotificationByEmail was set.
func (o OptUpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) Reset() {
	var v UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) SetTo(v UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) Get() (v UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) Or(d UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyVoicemailTranscription returns new OptUpdateSiteDetailsReqPolicyVoicemailTranscription with value set to v.
func NewOptUpdateSiteDetailsReqPolicyVoicemailTranscription(v UpdateSiteDetailsReqPolicyVoicemailTranscription) OptUpdateSiteDetailsReqPolicyVoicemailTranscription {
	return OptUpdateSiteDetailsReqPolicyVoicemailTranscription{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyVoicemailTranscription is optional UpdateSiteDetailsReqPolicyVoicemailTranscription.
type OptUpdateSiteDetailsReqPolicyVoicemailTranscription struct {
	Value UpdateSiteDetailsReqPolicyVoicemailTranscription
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyVoicemailTranscription was set.
func (o OptUpdateSiteDetailsReqPolicyVoicemailTranscription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyVoicemailTranscription) Reset() {
	var v UpdateSiteDetailsReqPolicyVoicemailTranscription
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyVoicemailTranscription) SetTo(v UpdateSiteDetailsReqPolicyVoicemailTranscription) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyVoicemailTranscription) Get() (v UpdateSiteDetailsReqPolicyVoicemailTranscription, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyVoicemailTranscription) Or(d UpdateSiteDetailsReqPolicyVoicemailTranscription) UpdateSiteDetailsReqPolicyVoicemailTranscription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqPolicyZoomPhoneOnMobile returns new OptUpdateSiteDetailsReqPolicyZoomPhoneOnMobile with value set to v.
func NewOptUpdateSiteDetailsReqPolicyZoomPhoneOnMobile(v UpdateSiteDetailsReqPolicyZoomPhoneOnMobile) OptUpdateSiteDetailsReqPolicyZoomPhoneOnMobile {
	return OptUpdateSiteDetailsReqPolicyZoomPhoneOnMobile{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqPolicyZoomPhoneOnMobile is optional UpdateSiteDetailsReqPolicyZoomPhoneOnMobile.
type OptUpdateSiteDetailsReqPolicyZoomPhoneOnMobile struct {
	Value UpdateSiteDetailsReqPolicyZoomPhoneOnMobile
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqPolicyZoomPhoneOnMobile was set.
func (o OptUpdateSiteDetailsReqPolicyZoomPhoneOnMobile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqPolicyZoomPhoneOnMobile) Reset() {
	var v UpdateSiteDetailsReqPolicyZoomPhoneOnMobile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqPolicyZoomPhoneOnMobile) SetTo(v UpdateSiteDetailsReqPolicyZoomPhoneOnMobile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqPolicyZoomPhoneOnMobile) Get() (v UpdateSiteDetailsReqPolicyZoomPhoneOnMobile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqPolicyZoomPhoneOnMobile) Or(d UpdateSiteDetailsReqPolicyZoomPhoneOnMobile) UpdateSiteDetailsReqPolicyZoomPhoneOnMobile {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqShortExtension returns new OptUpdateSiteDetailsReqShortExtension with value set to v.
func NewOptUpdateSiteDetailsReqShortExtension(v UpdateSiteDetailsReqShortExtension) OptUpdateSiteDetailsReqShortExtension {
	return OptUpdateSiteDetailsReqShortExtension{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqShortExtension is optional UpdateSiteDetailsReqShortExtension.
type OptUpdateSiteDetailsReqShortExtension struct {
	Value UpdateSiteDetailsReqShortExtension
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqShortExtension was set.
func (o OptUpdateSiteDetailsReqShortExtension) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqShortExtension) Reset() {
	var v UpdateSiteDetailsReqShortExtension
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqShortExtension) SetTo(v UpdateSiteDetailsReqShortExtension) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqShortExtension) Get() (v UpdateSiteDetailsReqShortExtension, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqShortExtension) Or(d UpdateSiteDetailsReqShortExtension) UpdateSiteDetailsReqShortExtension {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteDetailsReqSipZone returns new OptUpdateSiteDetailsReqSipZone with value set to v.
func NewOptUpdateSiteDetailsReqSipZone(v UpdateSiteDetailsReqSipZone) OptUpdateSiteDetailsReqSipZone {
	return OptUpdateSiteDetailsReqSipZone{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteDetailsReqSipZone is optional UpdateSiteDetailsReqSipZone.
type OptUpdateSiteDetailsReqSipZone struct {
	Value UpdateSiteDetailsReqSipZone
	Set   bool
}

// IsSet returns true if OptUpdateSiteDetailsReqSipZone was set.
func (o OptUpdateSiteDetailsReqSipZone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteDetailsReqSipZone) Reset() {
	var v UpdateSiteDetailsReqSipZone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteDetailsReqSipZone) SetTo(v UpdateSiteDetailsReqSipZone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteDetailsReqSipZone) Get() (v UpdateSiteDetailsReqSipZone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteDetailsReqSipZone) Or(d UpdateSiteDetailsReqSipZone) UpdateSiteDetailsReqSipZone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteForUnassignedPhoneNumbersReq returns new OptUpdateSiteForUnassignedPhoneNumbersReq with value set to v.
func NewOptUpdateSiteForUnassignedPhoneNumbersReq(v UpdateSiteForUnassignedPhoneNumbersReq) OptUpdateSiteForUnassignedPhoneNumbersReq {
	return OptUpdateSiteForUnassignedPhoneNumbersReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteForUnassignedPhoneNumbersReq is optional UpdateSiteForUnassignedPhoneNumbersReq.
type OptUpdateSiteForUnassignedPhoneNumbersReq struct {
	Value UpdateSiteForUnassignedPhoneNumbersReq
	Set   bool
}

// IsSet returns true if OptUpdateSiteForUnassignedPhoneNumbersReq was set.
func (o OptUpdateSiteForUnassignedPhoneNumbersReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteForUnassignedPhoneNumbersReq) Reset() {
	var v UpdateSiteForUnassignedPhoneNumbersReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteForUnassignedPhoneNumbersReq) SetTo(v UpdateSiteForUnassignedPhoneNumbersReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteForUnassignedPhoneNumbersReq) Get() (v UpdateSiteForUnassignedPhoneNumbersReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteForUnassignedPhoneNumbersReq) Or(d UpdateSiteForUnassignedPhoneNumbersReq) UpdateSiteForUnassignedPhoneNumbersReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteOutboundCallingCountriesOrRegionsReq returns new OptUpdateSiteOutboundCallingCountriesOrRegionsReq with value set to v.
func NewOptUpdateSiteOutboundCallingCountriesOrRegionsReq(v UpdateSiteOutboundCallingCountriesOrRegionsReq) OptUpdateSiteOutboundCallingCountriesOrRegionsReq {
	return OptUpdateSiteOutboundCallingCountriesOrRegionsReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteOutboundCallingCountriesOrRegionsReq is optional UpdateSiteOutboundCallingCountriesOrRegionsReq.
type OptUpdateSiteOutboundCallingCountriesOrRegionsReq struct {
	Value UpdateSiteOutboundCallingCountriesOrRegionsReq
	Set   bool
}

// IsSet returns true if OptUpdateSiteOutboundCallingCountriesOrRegionsReq was set.
func (o OptUpdateSiteOutboundCallingCountriesOrRegionsReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteOutboundCallingCountriesOrRegionsReq) Reset() {
	var v UpdateSiteOutboundCallingCountriesOrRegionsReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteOutboundCallingCountriesOrRegionsReq) SetTo(v UpdateSiteOutboundCallingCountriesOrRegionsReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteOutboundCallingCountriesOrRegionsReq) Get() (v UpdateSiteOutboundCallingCountriesOrRegionsReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteOutboundCallingCountriesOrRegionsReq) Or(d UpdateSiteOutboundCallingCountriesOrRegionsReq) UpdateSiteOutboundCallingCountriesOrRegionsReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteOutboundCallingExceptionRuleReq returns new OptUpdateSiteOutboundCallingExceptionRuleReq with value set to v.
func NewOptUpdateSiteOutboundCallingExceptionRuleReq(v UpdateSiteOutboundCallingExceptionRuleReq) OptUpdateSiteOutboundCallingExceptionRuleReq {
	return OptUpdateSiteOutboundCallingExceptionRuleReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteOutboundCallingExceptionRuleReq is optional UpdateSiteOutboundCallingExceptionRuleReq.
type OptUpdateSiteOutboundCallingExceptionRuleReq struct {
	Value UpdateSiteOutboundCallingExceptionRuleReq
	Set   bool
}

// IsSet returns true if OptUpdateSiteOutboundCallingExceptionRuleReq was set.
func (o OptUpdateSiteOutboundCallingExceptionRuleReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteOutboundCallingExceptionRuleReq) Reset() {
	var v UpdateSiteOutboundCallingExceptionRuleReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteOutboundCallingExceptionRuleReq) SetTo(v UpdateSiteOutboundCallingExceptionRuleReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteOutboundCallingExceptionRuleReq) Get() (v UpdateSiteOutboundCallingExceptionRuleReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteOutboundCallingExceptionRuleReq) Or(d UpdateSiteOutboundCallingExceptionRuleReq) UpdateSiteOutboundCallingExceptionRuleReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteOutboundCallingExceptionRuleReqExceptionRule returns new OptUpdateSiteOutboundCallingExceptionRuleReqExceptionRule with value set to v.
func NewOptUpdateSiteOutboundCallingExceptionRuleReqExceptionRule(v UpdateSiteOutboundCallingExceptionRuleReqExceptionRule) OptUpdateSiteOutboundCallingExceptionRuleReqExceptionRule {
	return OptUpdateSiteOutboundCallingExceptionRuleReqExceptionRule{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteOutboundCallingExceptionRuleReqExceptionRule is optional UpdateSiteOutboundCallingExceptionRuleReqExceptionRule.
type OptUpdateSiteOutboundCallingExceptionRuleReqExceptionRule struct {
	Value UpdateSiteOutboundCallingExceptionRuleReqExceptionRule
	Set   bool
}

// IsSet returns true if OptUpdateSiteOutboundCallingExceptionRuleReqExceptionRule was set.
func (o OptUpdateSiteOutboundCallingExceptionRuleReqExceptionRule) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteOutboundCallingExceptionRuleReqExceptionRule) Reset() {
	var v UpdateSiteOutboundCallingExceptionRuleReqExceptionRule
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteOutboundCallingExceptionRuleReqExceptionRule) SetTo(v UpdateSiteOutboundCallingExceptionRuleReqExceptionRule) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteOutboundCallingExceptionRuleReqExceptionRule) Get() (v UpdateSiteOutboundCallingExceptionRuleReqExceptionRule, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteOutboundCallingExceptionRuleReqExceptionRule) Or(d UpdateSiteOutboundCallingExceptionRuleReqExceptionRule) UpdateSiteOutboundCallingExceptionRuleReqExceptionRule {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReq returns new OptUpdateSiteSettingReq with value set to v.
func NewOptUpdateSiteSettingReq(v UpdateSiteSettingReq) OptUpdateSiteSettingReq {
	return OptUpdateSiteSettingReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReq is optional UpdateSiteSettingReq.
type OptUpdateSiteSettingReq struct {
	Value UpdateSiteSettingReq
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReq was set.
func (o OptUpdateSiteSettingReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReq) Reset() {
	var v UpdateSiteSettingReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReq) SetTo(v UpdateSiteSettingReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReq) Get() (v UpdateSiteSettingReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReq) Or(d UpdateSiteSettingReq) UpdateSiteSettingReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPrompt returns new OptUpdateSiteSettingReqAudioPrompt with value set to v.
func NewOptUpdateSiteSettingReqAudioPrompt(v UpdateSiteSettingReqAudioPrompt) OptUpdateSiteSettingReqAudioPrompt {
	return OptUpdateSiteSettingReqAudioPrompt{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPrompt is optional UpdateSiteSettingReqAudioPrompt.
type OptUpdateSiteSettingReqAudioPrompt struct {
	Value UpdateSiteSettingReqAudioPrompt
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPrompt was set.
func (o OptUpdateSiteSettingReqAudioPrompt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPrompt) Reset() {
	var v UpdateSiteSettingReqAudioPrompt
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPrompt) SetTo(v UpdateSiteSettingReqAudioPrompt) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPrompt) Get() (v UpdateSiteSettingReqAudioPrompt, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPrompt) Or(d UpdateSiteSettingReqAudioPrompt) UpdateSiteSettingReqAudioPrompt {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptAudioWhileConnecting returns new OptUpdateSiteSettingReqAudioPromptAudioWhileConnecting with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptAudioWhileConnecting(v UpdateSiteSettingReqAudioPromptAudioWhileConnecting) OptUpdateSiteSettingReqAudioPromptAudioWhileConnecting {
	return OptUpdateSiteSettingReqAudioPromptAudioWhileConnecting{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptAudioWhileConnecting is optional UpdateSiteSettingReqAudioPromptAudioWhileConnecting.
type OptUpdateSiteSettingReqAudioPromptAudioWhileConnecting struct {
	Value UpdateSiteSettingReqAudioPromptAudioWhileConnecting
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptAudioWhileConnecting was set.
func (o OptUpdateSiteSettingReqAudioPromptAudioWhileConnecting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptAudioWhileConnecting) Reset() {
	var v UpdateSiteSettingReqAudioPromptAudioWhileConnecting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptAudioWhileConnecting) SetTo(v UpdateSiteSettingReqAudioPromptAudioWhileConnecting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptAudioWhileConnecting) Get() (v UpdateSiteSettingReqAudioPromptAudioWhileConnecting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptAudioWhileConnecting) Or(d UpdateSiteSettingReqAudioPromptAudioWhileConnecting) UpdateSiteSettingReqAudioPromptAudioWhileConnecting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction returns new OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction(v UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction) OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction {
	return OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction is optional UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction.
type OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction struct {
	Value UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction) Reset() {
	var v UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction) SetTo(v UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction) Get() (v UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction) Or(d UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction) UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours returns new OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours(v UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours {
	return OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours is optional UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours.
type OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours struct {
	Value UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) Reset() {
	var v UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) SetTo(v UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) Get() (v UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) Or(d UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours returns new OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours(v UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours) OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours {
	return OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours is optional UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours.
type OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours struct {
	Value UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours) Reset() {
	var v UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours) SetTo(v UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours) Get() (v UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours) Or(d UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours) UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours returns new OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours(v UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours {
	return OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours is optional UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours.
type OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours struct {
	Value UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) Reset() {
	var v UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) SetTo(v UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) Get() (v UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) Or(d UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail returns new OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail(v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail {
	return OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail is optional UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail.
type OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail struct {
	Value UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) Reset() {
	var v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) SetTo(v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) Get() (v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) Or(d UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours returns new OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours(v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours {
	return OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours is optional UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours.
type OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours struct {
	Value UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) Reset() {
	var v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) SetTo(v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) Get() (v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) Or(d UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours returns new OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours(v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours {
	return OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours is optional UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours.
type OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours struct {
	Value UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) Reset() {
	var v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) SetTo(v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) Get() (v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) Or(d UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours returns new OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours(v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours {
	return OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours is optional UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours.
type OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours struct {
	Value UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) Reset() {
	var v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) SetTo(v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) Get() (v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) Or(d UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail returns new OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail(v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail {
	return OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail is optional UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail.
type OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail struct {
	Value UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) Reset() {
	var v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) SetTo(v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) Get() (v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) Or(d UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours returns new OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours(v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours {
	return OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours is optional UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours.
type OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours struct {
	Value UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) Reset() {
	var v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) SetTo(v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) Get() (v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) Or(d UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours returns new OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours(v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours {
	return OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours is optional UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours.
type OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours struct {
	Value UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) Reset() {
	var v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) SetTo(v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) Get() (v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) Or(d UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours returns new OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours(v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours {
	return OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours is optional UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours.
type OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours struct {
	Value UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) Reset() {
	var v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) SetTo(v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) Get() (v UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) Or(d UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail returns new OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail(v UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail) OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail {
	return OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail is optional UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail.
type OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail struct {
	Value UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail) Reset() {
	var v UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail) SetTo(v UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail) Get() (v UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail) Or(d UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail) UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours returns new OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours(v UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours {
	return OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours is optional UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours.
type OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours struct {
	Value UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) Reset() {
	var v UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) SetTo(v UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) Get() (v UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) Or(d UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours returns new OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours(v UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours {
	return OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours is optional UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours.
type OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours struct {
	Value UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) Reset() {
	var v UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) SetTo(v UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) Get() (v UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) Or(d UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours returns new OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours(v UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours {
	return OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours is optional UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours.
type OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours struct {
	Value UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) Reset() {
	var v UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) SetTo(v UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) Get() (v UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) Or(d UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptHoldMusic returns new OptUpdateSiteSettingReqAudioPromptHoldMusic with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptHoldMusic(v UpdateSiteSettingReqAudioPromptHoldMusic) OptUpdateSiteSettingReqAudioPromptHoldMusic {
	return OptUpdateSiteSettingReqAudioPromptHoldMusic{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptHoldMusic is optional UpdateSiteSettingReqAudioPromptHoldMusic.
type OptUpdateSiteSettingReqAudioPromptHoldMusic struct {
	Value UpdateSiteSettingReqAudioPromptHoldMusic
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptHoldMusic was set.
func (o OptUpdateSiteSettingReqAudioPromptHoldMusic) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptHoldMusic) Reset() {
	var v UpdateSiteSettingReqAudioPromptHoldMusic
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptHoldMusic) SetTo(v UpdateSiteSettingReqAudioPromptHoldMusic) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptHoldMusic) Get() (v UpdateSiteSettingReqAudioPromptHoldMusic, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptHoldMusic) Or(d UpdateSiteSettingReqAudioPromptHoldMusic) UpdateSiteSettingReqAudioPromptHoldMusic {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction returns new OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction(v UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction) OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction {
	return OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction is optional UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction.
type OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction struct {
	Value UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction was set.
func (o OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction) Reset() {
	var v UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction) SetTo(v UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction) Get() (v UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction) Or(d UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction) UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours returns new OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours(v UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours) OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours {
	return OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours is optional UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours.
type OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours struct {
	Value UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours was set.
func (o OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours) Reset() {
	var v UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours) SetTo(v UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours) Get() (v UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours) Or(d UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours) UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours returns new OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours(v UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours) OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours {
	return OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours is optional UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours.
type OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours struct {
	Value UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours was set.
func (o OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours) Reset() {
	var v UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours) SetTo(v UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours) Get() (v UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours) Or(d UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours) UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours returns new OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours(v UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours) OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours {
	return OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours is optional UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours.
type OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours struct {
	Value UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours was set.
func (o OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours) Reset() {
	var v UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours) SetTo(v UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours) Get() (v UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours) Or(d UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours) UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptMessageGreeting returns new OptUpdateSiteSettingReqAudioPromptMessageGreeting with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptMessageGreeting(v UpdateSiteSettingReqAudioPromptMessageGreeting) OptUpdateSiteSettingReqAudioPromptMessageGreeting {
	return OptUpdateSiteSettingReqAudioPromptMessageGreeting{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptMessageGreeting is optional UpdateSiteSettingReqAudioPromptMessageGreeting.
type OptUpdateSiteSettingReqAudioPromptMessageGreeting struct {
	Value UpdateSiteSettingReqAudioPromptMessageGreeting
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptMessageGreeting was set.
func (o OptUpdateSiteSettingReqAudioPromptMessageGreeting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptMessageGreeting) Reset() {
	var v UpdateSiteSettingReqAudioPromptMessageGreeting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptMessageGreeting) SetTo(v UpdateSiteSettingReqAudioPromptMessageGreeting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptMessageGreeting) Get() (v UpdateSiteSettingReqAudioPromptMessageGreeting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptMessageGreeting) Or(d UpdateSiteSettingReqAudioPromptMessageGreeting) UpdateSiteSettingReqAudioPromptMessageGreeting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours returns new OptUpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours(v UpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours) OptUpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours {
	return OptUpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours is optional UpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours.
type OptUpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours struct {
	Value UpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours was set.
func (o OptUpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours) Reset() {
	var v UpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours) SetTo(v UpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours) Get() (v UpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours) Or(d UpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours) UpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptMessageGreetingClosedHours returns new OptUpdateSiteSettingReqAudioPromptMessageGreetingClosedHours with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptMessageGreetingClosedHours(v UpdateSiteSettingReqAudioPromptMessageGreetingClosedHours) OptUpdateSiteSettingReqAudioPromptMessageGreetingClosedHours {
	return OptUpdateSiteSettingReqAudioPromptMessageGreetingClosedHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptMessageGreetingClosedHours is optional UpdateSiteSettingReqAudioPromptMessageGreetingClosedHours.
type OptUpdateSiteSettingReqAudioPromptMessageGreetingClosedHours struct {
	Value UpdateSiteSettingReqAudioPromptMessageGreetingClosedHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptMessageGreetingClosedHours was set.
func (o OptUpdateSiteSettingReqAudioPromptMessageGreetingClosedHours) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptMessageGreetingClosedHours) Reset() {
	var v UpdateSiteSettingReqAudioPromptMessageGreetingClosedHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptMessageGreetingClosedHours) SetTo(v UpdateSiteSettingReqAudioPromptMessageGreetingClosedHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptMessageGreetingClosedHours) Get() (v UpdateSiteSettingReqAudioPromptMessageGreetingClosedHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptMessageGreetingClosedHours) Or(d UpdateSiteSettingReqAudioPromptMessageGreetingClosedHours) UpdateSiteSettingReqAudioPromptMessageGreetingClosedHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours returns new OptUpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours with value set to v.
func NewOptUpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours(v UpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours) OptUpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours {
	return OptUpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours is optional UpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours.
type OptUpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours struct {
	Value UpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours was set.
func (o OptUpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours) Reset() {
	var v UpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours) SetTo(v UpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours) Get() (v UpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours) Or(d UpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours) UpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqBillingAccount returns new OptUpdateSiteSettingReqBillingAccount with value set to v.
func NewOptUpdateSiteSettingReqBillingAccount(v UpdateSiteSettingReqBillingAccount) OptUpdateSiteSettingReqBillingAccount {
	return OptUpdateSiteSettingReqBillingAccount{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqBillingAccount is optional UpdateSiteSettingReqBillingAccount.
type OptUpdateSiteSettingReqBillingAccount struct {
	Value UpdateSiteSettingReqBillingAccount
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqBillingAccount was set.
func (o OptUpdateSiteSettingReqBillingAccount) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqBillingAccount) Reset() {
	var v UpdateSiteSettingReqBillingAccount
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqBillingAccount) SetTo(v UpdateSiteSettingReqBillingAccount) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqBillingAccount) Get() (v UpdateSiteSettingReqBillingAccount, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqBillingAccount) Or(d UpdateSiteSettingReqBillingAccount) UpdateSiteSettingReqBillingAccount {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqBusinessHours returns new OptUpdateSiteSettingReqBusinessHours with value set to v.
func NewOptUpdateSiteSettingReqBusinessHours(v UpdateSiteSettingReqBusinessHours) OptUpdateSiteSettingReqBusinessHours {
	return OptUpdateSiteSettingReqBusinessHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqBusinessHours is optional UpdateSiteSettingReqBusinessHours.
type OptUpdateSiteSettingReqBusinessHours struct {
	Value UpdateSiteSettingReqBusinessHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqBusinessHours was set.
func (o OptUpdateSiteSettingReqBusinessHours) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqBusinessHours) Reset() {
	var v UpdateSiteSettingReqBusinessHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqBusinessHours) SetTo(v UpdateSiteSettingReqBusinessHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqBusinessHours) Get() (v UpdateSiteSettingReqBusinessHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqBusinessHours) Or(d UpdateSiteSettingReqBusinessHours) UpdateSiteSettingReqBusinessHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqBusinessHoursOverflow returns new OptUpdateSiteSettingReqBusinessHoursOverflow with value set to v.
func NewOptUpdateSiteSettingReqBusinessHoursOverflow(v UpdateSiteSettingReqBusinessHoursOverflow) OptUpdateSiteSettingReqBusinessHoursOverflow {
	return OptUpdateSiteSettingReqBusinessHoursOverflow{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqBusinessHoursOverflow is optional UpdateSiteSettingReqBusinessHoursOverflow.
type OptUpdateSiteSettingReqBusinessHoursOverflow struct {
	Value UpdateSiteSettingReqBusinessHoursOverflow
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqBusinessHoursOverflow was set.
func (o OptUpdateSiteSettingReqBusinessHoursOverflow) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqBusinessHoursOverflow) Reset() {
	var v UpdateSiteSettingReqBusinessHoursOverflow
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqBusinessHoursOverflow) SetTo(v UpdateSiteSettingReqBusinessHoursOverflow) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqBusinessHoursOverflow) Get() (v UpdateSiteSettingReqBusinessHoursOverflow, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqBusinessHoursOverflow) Or(d UpdateSiteSettingReqBusinessHoursOverflow) UpdateSiteSettingReqBusinessHoursOverflow {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqBusinessHoursOverflowOperator returns new OptUpdateSiteSettingReqBusinessHoursOverflowOperator with value set to v.
func NewOptUpdateSiteSettingReqBusinessHoursOverflowOperator(v UpdateSiteSettingReqBusinessHoursOverflowOperator) OptUpdateSiteSettingReqBusinessHoursOverflowOperator {
	return OptUpdateSiteSettingReqBusinessHoursOverflowOperator{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqBusinessHoursOverflowOperator is optional UpdateSiteSettingReqBusinessHoursOverflowOperator.
type OptUpdateSiteSettingReqBusinessHoursOverflowOperator struct {
	Value UpdateSiteSettingReqBusinessHoursOverflowOperator
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqBusinessHoursOverflowOperator was set.
func (o OptUpdateSiteSettingReqBusinessHoursOverflowOperator) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqBusinessHoursOverflowOperator) Reset() {
	var v UpdateSiteSettingReqBusinessHoursOverflowOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqBusinessHoursOverflowOperator) SetTo(v UpdateSiteSettingReqBusinessHoursOverflowOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqBusinessHoursOverflowOperator) Get() (v UpdateSiteSettingReqBusinessHoursOverflowOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqBusinessHoursOverflowOperator) Or(d UpdateSiteSettingReqBusinessHoursOverflowOperator) UpdateSiteSettingReqBusinessHoursOverflowOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqClosedHours returns new OptUpdateSiteSettingReqClosedHours with value set to v.
func NewOptUpdateSiteSettingReqClosedHours(v UpdateSiteSettingReqClosedHours) OptUpdateSiteSettingReqClosedHours {
	return OptUpdateSiteSettingReqClosedHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqClosedHours is optional UpdateSiteSettingReqClosedHours.
type OptUpdateSiteSettingReqClosedHours struct {
	Value UpdateSiteSettingReqClosedHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqClosedHours was set.
func (o OptUpdateSiteSettingReqClosedHours) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqClosedHours) Reset() {
	var v UpdateSiteSettingReqClosedHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqClosedHours) SetTo(v UpdateSiteSettingReqClosedHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqClosedHours) Get() (v UpdateSiteSettingReqClosedHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqClosedHours) Or(d UpdateSiteSettingReqClosedHours) UpdateSiteSettingReqClosedHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqClosedHoursOverflow returns new OptUpdateSiteSettingReqClosedHoursOverflow with value set to v.
func NewOptUpdateSiteSettingReqClosedHoursOverflow(v UpdateSiteSettingReqClosedHoursOverflow) OptUpdateSiteSettingReqClosedHoursOverflow {
	return OptUpdateSiteSettingReqClosedHoursOverflow{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqClosedHoursOverflow is optional UpdateSiteSettingReqClosedHoursOverflow.
type OptUpdateSiteSettingReqClosedHoursOverflow struct {
	Value UpdateSiteSettingReqClosedHoursOverflow
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqClosedHoursOverflow was set.
func (o OptUpdateSiteSettingReqClosedHoursOverflow) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqClosedHoursOverflow) Reset() {
	var v UpdateSiteSettingReqClosedHoursOverflow
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqClosedHoursOverflow) SetTo(v UpdateSiteSettingReqClosedHoursOverflow) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqClosedHoursOverflow) Get() (v UpdateSiteSettingReqClosedHoursOverflow, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqClosedHoursOverflow) Or(d UpdateSiteSettingReqClosedHoursOverflow) UpdateSiteSettingReqClosedHoursOverflow {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqClosedHoursOverflowOperator returns new OptUpdateSiteSettingReqClosedHoursOverflowOperator with value set to v.
func NewOptUpdateSiteSettingReqClosedHoursOverflowOperator(v UpdateSiteSettingReqClosedHoursOverflowOperator) OptUpdateSiteSettingReqClosedHoursOverflowOperator {
	return OptUpdateSiteSettingReqClosedHoursOverflowOperator{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqClosedHoursOverflowOperator is optional UpdateSiteSettingReqClosedHoursOverflowOperator.
type OptUpdateSiteSettingReqClosedHoursOverflowOperator struct {
	Value UpdateSiteSettingReqClosedHoursOverflowOperator
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqClosedHoursOverflowOperator was set.
func (o OptUpdateSiteSettingReqClosedHoursOverflowOperator) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqClosedHoursOverflowOperator) Reset() {
	var v UpdateSiteSettingReqClosedHoursOverflowOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqClosedHoursOverflowOperator) SetTo(v UpdateSiteSettingReqClosedHoursOverflowOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqClosedHoursOverflowOperator) Get() (v UpdateSiteSettingReqClosedHoursOverflowOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqClosedHoursOverflowOperator) Or(d UpdateSiteSettingReqClosedHoursOverflowOperator) UpdateSiteSettingReqClosedHoursOverflowOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqDialByName returns new OptUpdateSiteSettingReqDialByName with value set to v.
func NewOptUpdateSiteSettingReqDialByName(v UpdateSiteSettingReqDialByName) OptUpdateSiteSettingReqDialByName {
	return OptUpdateSiteSettingReqDialByName{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqDialByName is optional UpdateSiteSettingReqDialByName.
type OptUpdateSiteSettingReqDialByName struct {
	Value UpdateSiteSettingReqDialByName
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqDialByName was set.
func (o OptUpdateSiteSettingReqDialByName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqDialByName) Reset() {
	var v UpdateSiteSettingReqDialByName
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqDialByName) SetTo(v UpdateSiteSettingReqDialByName) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqDialByName) Get() (v UpdateSiteSettingReqDialByName, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqDialByName) Or(d UpdateSiteSettingReqDialByName) UpdateSiteSettingReqDialByName {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqHolidayHours returns new OptUpdateSiteSettingReqHolidayHours with value set to v.
func NewOptUpdateSiteSettingReqHolidayHours(v UpdateSiteSettingReqHolidayHours) OptUpdateSiteSettingReqHolidayHours {
	return OptUpdateSiteSettingReqHolidayHours{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqHolidayHours is optional UpdateSiteSettingReqHolidayHours.
type OptUpdateSiteSettingReqHolidayHours struct {
	Value UpdateSiteSettingReqHolidayHours
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqHolidayHours was set.
func (o OptUpdateSiteSettingReqHolidayHours) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqHolidayHours) Reset() {
	var v UpdateSiteSettingReqHolidayHours
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqHolidayHours) SetTo(v UpdateSiteSettingReqHolidayHours) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqHolidayHours) Get() (v UpdateSiteSettingReqHolidayHours, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqHolidayHours) Or(d UpdateSiteSettingReqHolidayHours) UpdateSiteSettingReqHolidayHours {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqHolidayHoursOverflow returns new OptUpdateSiteSettingReqHolidayHoursOverflow with value set to v.
func NewOptUpdateSiteSettingReqHolidayHoursOverflow(v UpdateSiteSettingReqHolidayHoursOverflow) OptUpdateSiteSettingReqHolidayHoursOverflow {
	return OptUpdateSiteSettingReqHolidayHoursOverflow{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqHolidayHoursOverflow is optional UpdateSiteSettingReqHolidayHoursOverflow.
type OptUpdateSiteSettingReqHolidayHoursOverflow struct {
	Value UpdateSiteSettingReqHolidayHoursOverflow
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqHolidayHoursOverflow was set.
func (o OptUpdateSiteSettingReqHolidayHoursOverflow) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqHolidayHoursOverflow) Reset() {
	var v UpdateSiteSettingReqHolidayHoursOverflow
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqHolidayHoursOverflow) SetTo(v UpdateSiteSettingReqHolidayHoursOverflow) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqHolidayHoursOverflow) Get() (v UpdateSiteSettingReqHolidayHoursOverflow, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqHolidayHoursOverflow) Or(d UpdateSiteSettingReqHolidayHoursOverflow) UpdateSiteSettingReqHolidayHoursOverflow {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqHolidayHoursOverflowOperator returns new OptUpdateSiteSettingReqHolidayHoursOverflowOperator with value set to v.
func NewOptUpdateSiteSettingReqHolidayHoursOverflowOperator(v UpdateSiteSettingReqHolidayHoursOverflowOperator) OptUpdateSiteSettingReqHolidayHoursOverflowOperator {
	return OptUpdateSiteSettingReqHolidayHoursOverflowOperator{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqHolidayHoursOverflowOperator is optional UpdateSiteSettingReqHolidayHoursOverflowOperator.
type OptUpdateSiteSettingReqHolidayHoursOverflowOperator struct {
	Value UpdateSiteSettingReqHolidayHoursOverflowOperator
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqHolidayHoursOverflowOperator was set.
func (o OptUpdateSiteSettingReqHolidayHoursOverflowOperator) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqHolidayHoursOverflowOperator) Reset() {
	var v UpdateSiteSettingReqHolidayHoursOverflowOperator
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqHolidayHoursOverflowOperator) SetTo(v UpdateSiteSettingReqHolidayHoursOverflowOperator) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqHolidayHoursOverflowOperator) Get() (v UpdateSiteSettingReqHolidayHoursOverflowOperator, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqHolidayHoursOverflowOperator) Or(d UpdateSiteSettingReqHolidayHoursOverflowOperator) UpdateSiteSettingReqHolidayHoursOverflowOperator {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqLocationBasedRouting returns new OptUpdateSiteSettingReqLocationBasedRouting with value set to v.
func NewOptUpdateSiteSettingReqLocationBasedRouting(v UpdateSiteSettingReqLocationBasedRouting) OptUpdateSiteSettingReqLocationBasedRouting {
	return OptUpdateSiteSettingReqLocationBasedRouting{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqLocationBasedRouting is optional UpdateSiteSettingReqLocationBasedRouting.
type OptUpdateSiteSettingReqLocationBasedRouting struct {
	Value UpdateSiteSettingReqLocationBasedRouting
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqLocationBasedRouting was set.
func (o OptUpdateSiteSettingReqLocationBasedRouting) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqLocationBasedRouting) Reset() {
	var v UpdateSiteSettingReqLocationBasedRouting
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqLocationBasedRouting) SetTo(v UpdateSiteSettingReqLocationBasedRouting) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqLocationBasedRouting) Get() (v UpdateSiteSettingReqLocationBasedRouting, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqLocationBasedRouting) Or(d UpdateSiteSettingReqLocationBasedRouting) UpdateSiteSettingReqLocationBasedRouting {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateSiteSettingReqOutboundCallerID returns new OptUpdateSiteSettingReqOutboundCallerID with value set to v.
func NewOptUpdateSiteSettingReqOutboundCallerID(v UpdateSiteSettingReqOutboundCallerID) OptUpdateSiteSettingReqOutboundCallerID {
	return OptUpdateSiteSettingReqOutboundCallerID{
		Value: v,
		Set:   true,
	}
}

// OptUpdateSiteSettingReqOutboundCallerID is optional UpdateSiteSettingReqOutboundCallerID.
type OptUpdateSiteSettingReqOutboundCallerID struct {
	Value UpdateSiteSettingReqOutboundCallerID
	Set   bool
}

// IsSet returns true if OptUpdateSiteSettingReqOutboundCallerID was set.
func (o OptUpdateSiteSettingReqOutboundCallerID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateSiteSettingReqOutboundCallerID) Reset() {
	var v UpdateSiteSettingReqOutboundCallerID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateSiteSettingReqOutboundCallerID) SetTo(v UpdateSiteSettingReqOutboundCallerID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateSiteSettingReqOutboundCallerID) Get() (v UpdateSiteSettingReqOutboundCallerID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateSiteSettingReqOutboundCallerID) Or(d UpdateSiteSettingReqOutboundCallerID) UpdateSiteSettingReqOutboundCallerID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserOutboundCallingCountriesOrRegionsReq returns new OptUpdateUserOutboundCallingCountriesOrRegionsReq with value set to v.
func NewOptUpdateUserOutboundCallingCountriesOrRegionsReq(v UpdateUserOutboundCallingCountriesOrRegionsReq) OptUpdateUserOutboundCallingCountriesOrRegionsReq {
	return OptUpdateUserOutboundCallingCountriesOrRegionsReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserOutboundCallingCountriesOrRegionsReq is optional UpdateUserOutboundCallingCountriesOrRegionsReq.
type OptUpdateUserOutboundCallingCountriesOrRegionsReq struct {
	Value UpdateUserOutboundCallingCountriesOrRegionsReq
	Set   bool
}

// IsSet returns true if OptUpdateUserOutboundCallingCountriesOrRegionsReq was set.
func (o OptUpdateUserOutboundCallingCountriesOrRegionsReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserOutboundCallingCountriesOrRegionsReq) Reset() {
	var v UpdateUserOutboundCallingCountriesOrRegionsReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserOutboundCallingCountriesOrRegionsReq) SetTo(v UpdateUserOutboundCallingCountriesOrRegionsReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserOutboundCallingCountriesOrRegionsReq) Get() (v UpdateUserOutboundCallingCountriesOrRegionsReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserOutboundCallingCountriesOrRegionsReq) Or(d UpdateUserOutboundCallingCountriesOrRegionsReq) UpdateUserOutboundCallingCountriesOrRegionsReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserOutboundCallingExceptionRuleReq returns new OptUpdateUserOutboundCallingExceptionRuleReq with value set to v.
func NewOptUpdateUserOutboundCallingExceptionRuleReq(v UpdateUserOutboundCallingExceptionRuleReq) OptUpdateUserOutboundCallingExceptionRuleReq {
	return OptUpdateUserOutboundCallingExceptionRuleReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserOutboundCallingExceptionRuleReq is optional UpdateUserOutboundCallingExceptionRuleReq.
type OptUpdateUserOutboundCallingExceptionRuleReq struct {
	Value UpdateUserOutboundCallingExceptionRuleReq
	Set   bool
}

// IsSet returns true if OptUpdateUserOutboundCallingExceptionRuleReq was set.
func (o OptUpdateUserOutboundCallingExceptionRuleReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserOutboundCallingExceptionRuleReq) Reset() {
	var v UpdateUserOutboundCallingExceptionRuleReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserOutboundCallingExceptionRuleReq) SetTo(v UpdateUserOutboundCallingExceptionRuleReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserOutboundCallingExceptionRuleReq) Get() (v UpdateUserOutboundCallingExceptionRuleReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserOutboundCallingExceptionRuleReq) Or(d UpdateUserOutboundCallingExceptionRuleReq) UpdateUserOutboundCallingExceptionRuleReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserOutboundCallingExceptionRuleReqExceptionRule returns new OptUpdateUserOutboundCallingExceptionRuleReqExceptionRule with value set to v.
func NewOptUpdateUserOutboundCallingExceptionRuleReqExceptionRule(v UpdateUserOutboundCallingExceptionRuleReqExceptionRule) OptUpdateUserOutboundCallingExceptionRuleReqExceptionRule {
	return OptUpdateUserOutboundCallingExceptionRuleReqExceptionRule{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserOutboundCallingExceptionRuleReqExceptionRule is optional UpdateUserOutboundCallingExceptionRuleReqExceptionRule.
type OptUpdateUserOutboundCallingExceptionRuleReqExceptionRule struct {
	Value UpdateUserOutboundCallingExceptionRuleReqExceptionRule
	Set   bool
}

// IsSet returns true if OptUpdateUserOutboundCallingExceptionRuleReqExceptionRule was set.
func (o OptUpdateUserOutboundCallingExceptionRuleReqExceptionRule) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserOutboundCallingExceptionRuleReqExceptionRule) Reset() {
	var v UpdateUserOutboundCallingExceptionRuleReqExceptionRule
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserOutboundCallingExceptionRuleReqExceptionRule) SetTo(v UpdateUserOutboundCallingExceptionRuleReqExceptionRule) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserOutboundCallingExceptionRuleReqExceptionRule) Get() (v UpdateUserOutboundCallingExceptionRuleReqExceptionRule, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserOutboundCallingExceptionRuleReqExceptionRule) Or(d UpdateUserOutboundCallingExceptionRuleReqExceptionRule) UpdateUserOutboundCallingExceptionRuleReqExceptionRule {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReq returns new OptUpdateUserProfileReq with value set to v.
func NewOptUpdateUserProfileReq(v UpdateUserProfileReq) OptUpdateUserProfileReq {
	return OptUpdateUserProfileReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReq is optional UpdateUserProfileReq.
type OptUpdateUserProfileReq struct {
	Value UpdateUserProfileReq
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReq was set.
func (o OptUpdateUserProfileReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReq) Reset() {
	var v UpdateUserProfileReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReq) SetTo(v UpdateUserProfileReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReq) Get() (v UpdateUserProfileReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReq) Or(d UpdateUserProfileReq) UpdateUserProfileReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicy returns new OptUpdateUserProfileReqPolicy with value set to v.
func NewOptUpdateUserProfileReqPolicy(v UpdateUserProfileReqPolicy) OptUpdateUserProfileReqPolicy {
	return OptUpdateUserProfileReqPolicy{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicy is optional UpdateUserProfileReqPolicy.
type OptUpdateUserProfileReqPolicy struct {
	Value UpdateUserProfileReqPolicy
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicy was set.
func (o OptUpdateUserProfileReqPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicy) Reset() {
	var v UpdateUserProfileReqPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicy) SetTo(v UpdateUserProfileReqPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicy) Get() (v UpdateUserProfileReqPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicy) Or(d UpdateUserProfileReqPolicy) UpdateUserProfileReqPolicy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyAdHocCallRecording returns new OptUpdateUserProfileReqPolicyAdHocCallRecording with value set to v.
func NewOptUpdateUserProfileReqPolicyAdHocCallRecording(v UpdateUserProfileReqPolicyAdHocCallRecording) OptUpdateUserProfileReqPolicyAdHocCallRecording {
	return OptUpdateUserProfileReqPolicyAdHocCallRecording{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyAdHocCallRecording is optional UpdateUserProfileReqPolicyAdHocCallRecording.
type OptUpdateUserProfileReqPolicyAdHocCallRecording struct {
	Value UpdateUserProfileReqPolicyAdHocCallRecording
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyAdHocCallRecording was set.
func (o OptUpdateUserProfileReqPolicyAdHocCallRecording) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyAdHocCallRecording) Reset() {
	var v UpdateUserProfileReqPolicyAdHocCallRecording
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyAdHocCallRecording) SetTo(v UpdateUserProfileReqPolicyAdHocCallRecording) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyAdHocCallRecording) Get() (v UpdateUserProfileReqPolicyAdHocCallRecording, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyAdHocCallRecording) Or(d UpdateUserProfileReqPolicyAdHocCallRecording) UpdateUserProfileReqPolicyAdHocCallRecording {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone returns new OptUpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone with value set to v.
func NewOptUpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone(v UpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone) OptUpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone {
	return OptUpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone is optional UpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone.
type OptUpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone struct {
	Value UpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone was set.
func (o OptUpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone) Reset() {
	var v UpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone) SetTo(v UpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone) Get() (v UpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone) Or(d UpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone) UpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyAudioIntercom returns new OptUpdateUserProfileReqPolicyAudioIntercom with value set to v.
func NewOptUpdateUserProfileReqPolicyAudioIntercom(v UpdateUserProfileReqPolicyAudioIntercom) OptUpdateUserProfileReqPolicyAudioIntercom {
	return OptUpdateUserProfileReqPolicyAudioIntercom{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyAudioIntercom is optional UpdateUserProfileReqPolicyAudioIntercom.
type OptUpdateUserProfileReqPolicyAudioIntercom struct {
	Value UpdateUserProfileReqPolicyAudioIntercom
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyAudioIntercom was set.
func (o OptUpdateUserProfileReqPolicyAudioIntercom) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyAudioIntercom) Reset() {
	var v UpdateUserProfileReqPolicyAudioIntercom
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyAudioIntercom) SetTo(v UpdateUserProfileReqPolicyAudioIntercom) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyAudioIntercom) Get() (v UpdateUserProfileReqPolicyAudioIntercom, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyAudioIntercom) Or(d UpdateUserProfileReqPolicyAudioIntercom) UpdateUserProfileReqPolicyAudioIntercom {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyAutoCallRecording returns new OptUpdateUserProfileReqPolicyAutoCallRecording with value set to v.
func NewOptUpdateUserProfileReqPolicyAutoCallRecording(v UpdateUserProfileReqPolicyAutoCallRecording) OptUpdateUserProfileReqPolicyAutoCallRecording {
	return OptUpdateUserProfileReqPolicyAutoCallRecording{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyAutoCallRecording is optional UpdateUserProfileReqPolicyAutoCallRecording.
type OptUpdateUserProfileReqPolicyAutoCallRecording struct {
	Value UpdateUserProfileReqPolicyAutoCallRecording
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyAutoCallRecording was set.
func (o OptUpdateUserProfileReqPolicyAutoCallRecording) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyAutoCallRecording) Reset() {
	var v UpdateUserProfileReqPolicyAutoCallRecording
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyAutoCallRecording) SetTo(v UpdateUserProfileReqPolicyAutoCallRecording) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyAutoCallRecording) Get() (v UpdateUserProfileReqPolicyAutoCallRecording, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyAutoCallRecording) Or(d UpdateUserProfileReqPolicyAutoCallRecording) UpdateUserProfileReqPolicyAutoCallRecording {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone returns new OptUpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone with value set to v.
func NewOptUpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone(v UpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone) OptUpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone {
	return OptUpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone is optional UpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone.
type OptUpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone struct {
	Value UpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone was set.
func (o OptUpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone) Reset() {
	var v UpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone) SetTo(v UpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone) Get() (v UpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone) Or(d UpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone) UpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers returns new OptUpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers with value set to v.
func NewOptUpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers(v UpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers) OptUpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers {
	return OptUpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers is optional UpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers.
type OptUpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers struct {
	Value UpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers was set.
func (o OptUpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers) Reset() {
	var v UpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers) SetTo(v UpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers) Get() (v UpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers) Or(d UpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers) UpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyCallOverflow returns new OptUpdateUserProfileReqPolicyCallOverflow with value set to v.
func NewOptUpdateUserProfileReqPolicyCallOverflow(v UpdateUserProfileReqPolicyCallOverflow) OptUpdateUserProfileReqPolicyCallOverflow {
	return OptUpdateUserProfileReqPolicyCallOverflow{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyCallOverflow is optional UpdateUserProfileReqPolicyCallOverflow.
type OptUpdateUserProfileReqPolicyCallOverflow struct {
	Value UpdateUserProfileReqPolicyCallOverflow
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyCallOverflow was set.
func (o OptUpdateUserProfileReqPolicyCallOverflow) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyCallOverflow) Reset() {
	var v UpdateUserProfileReqPolicyCallOverflow
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyCallOverflow) SetTo(v UpdateUserProfileReqPolicyCallOverflow) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyCallOverflow) Get() (v UpdateUserProfileReqPolicyCallOverflow, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyCallOverflow) Or(d UpdateUserProfileReqPolicyCallOverflow) UpdateUserProfileReqPolicyCallOverflow {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyCallPark returns new OptUpdateUserProfileReqPolicyCallPark with value set to v.
func NewOptUpdateUserProfileReqPolicyCallPark(v UpdateUserProfileReqPolicyCallPark) OptUpdateUserProfileReqPolicyCallPark {
	return OptUpdateUserProfileReqPolicyCallPark{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyCallPark is optional UpdateUserProfileReqPolicyCallPark.
type OptUpdateUserProfileReqPolicyCallPark struct {
	Value UpdateUserProfileReqPolicyCallPark
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyCallPark was set.
func (o OptUpdateUserProfileReqPolicyCallPark) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyCallPark) Reset() {
	var v UpdateUserProfileReqPolicyCallPark
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyCallPark) SetTo(v UpdateUserProfileReqPolicyCallPark) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyCallPark) Get() (v UpdateUserProfileReqPolicyCallPark, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyCallPark) Or(d UpdateUserProfileReqPolicyCallPark) UpdateUserProfileReqPolicyCallPark {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyCallTransferring returns new OptUpdateUserProfileReqPolicyCallTransferring with value set to v.
func NewOptUpdateUserProfileReqPolicyCallTransferring(v UpdateUserProfileReqPolicyCallTransferring) OptUpdateUserProfileReqPolicyCallTransferring {
	return OptUpdateUserProfileReqPolicyCallTransferring{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyCallTransferring is optional UpdateUserProfileReqPolicyCallTransferring.
type OptUpdateUserProfileReqPolicyCallTransferring struct {
	Value UpdateUserProfileReqPolicyCallTransferring
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyCallTransferring was set.
func (o OptUpdateUserProfileReqPolicyCallTransferring) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyCallTransferring) Reset() {
	var v UpdateUserProfileReqPolicyCallTransferring
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyCallTransferring) SetTo(v UpdateUserProfileReqPolicyCallTransferring) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyCallTransferring) Get() (v UpdateUserProfileReqPolicyCallTransferring, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyCallTransferring) Or(d UpdateUserProfileReqPolicyCallTransferring) UpdateUserProfileReqPolicyCallTransferring {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyCheckVoicemailsOverPhone returns new OptUpdateUserProfileReqPolicyCheckVoicemailsOverPhone with value set to v.
func NewOptUpdateUserProfileReqPolicyCheckVoicemailsOverPhone(v UpdateUserProfileReqPolicyCheckVoicemailsOverPhone) OptUpdateUserProfileReqPolicyCheckVoicemailsOverPhone {
	return OptUpdateUserProfileReqPolicyCheckVoicemailsOverPhone{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyCheckVoicemailsOverPhone is optional UpdateUserProfileReqPolicyCheckVoicemailsOverPhone.
type OptUpdateUserProfileReqPolicyCheckVoicemailsOverPhone struct {
	Value UpdateUserProfileReqPolicyCheckVoicemailsOverPhone
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyCheckVoicemailsOverPhone was set.
func (o OptUpdateUserProfileReqPolicyCheckVoicemailsOverPhone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyCheckVoicemailsOverPhone) Reset() {
	var v UpdateUserProfileReqPolicyCheckVoicemailsOverPhone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyCheckVoicemailsOverPhone) SetTo(v UpdateUserProfileReqPolicyCheckVoicemailsOverPhone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyCheckVoicemailsOverPhone) Get() (v UpdateUserProfileReqPolicyCheckVoicemailsOverPhone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyCheckVoicemailsOverPhone) Or(d UpdateUserProfileReqPolicyCheckVoicemailsOverPhone) UpdateUserProfileReqPolicyCheckVoicemailsOverPhone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyE2eEncryption returns new OptUpdateUserProfileReqPolicyE2eEncryption with value set to v.
func NewOptUpdateUserProfileReqPolicyE2eEncryption(v UpdateUserProfileReqPolicyE2eEncryption) OptUpdateUserProfileReqPolicyE2eEncryption {
	return OptUpdateUserProfileReqPolicyE2eEncryption{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyE2eEncryption is optional UpdateUserProfileReqPolicyE2eEncryption.
type OptUpdateUserProfileReqPolicyE2eEncryption struct {
	Value UpdateUserProfileReqPolicyE2eEncryption
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyE2eEncryption was set.
func (o OptUpdateUserProfileReqPolicyE2eEncryption) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyE2eEncryption) Reset() {
	var v UpdateUserProfileReqPolicyE2eEncryption
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyE2eEncryption) SetTo(v UpdateUserProfileReqPolicyE2eEncryption) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyE2eEncryption) Get() (v UpdateUserProfileReqPolicyE2eEncryption, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyE2eEncryption) Or(d UpdateUserProfileReqPolicyE2eEncryption) UpdateUserProfileReqPolicyE2eEncryption {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyEmergencyAddressManagement returns new OptUpdateUserProfileReqPolicyEmergencyAddressManagement with value set to v.
func NewOptUpdateUserProfileReqPolicyEmergencyAddressManagement(v UpdateUserProfileReqPolicyEmergencyAddressManagement) OptUpdateUserProfileReqPolicyEmergencyAddressManagement {
	return OptUpdateUserProfileReqPolicyEmergencyAddressManagement{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyEmergencyAddressManagement is optional UpdateUserProfileReqPolicyEmergencyAddressManagement.
type OptUpdateUserProfileReqPolicyEmergencyAddressManagement struct {
	Value UpdateUserProfileReqPolicyEmergencyAddressManagement
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyEmergencyAddressManagement was set.
func (o OptUpdateUserProfileReqPolicyEmergencyAddressManagement) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyEmergencyAddressManagement) Reset() {
	var v UpdateUserProfileReqPolicyEmergencyAddressManagement
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyEmergencyAddressManagement) SetTo(v UpdateUserProfileReqPolicyEmergencyAddressManagement) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyEmergencyAddressManagement) Get() (v UpdateUserProfileReqPolicyEmergencyAddressManagement, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyEmergencyAddressManagement) Or(d UpdateUserProfileReqPolicyEmergencyAddressManagement) UpdateUserProfileReqPolicyEmergencyAddressManagement {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyHandOffToRoom returns new OptUpdateUserProfileReqPolicyHandOffToRoom with value set to v.
func NewOptUpdateUserProfileReqPolicyHandOffToRoom(v UpdateUserProfileReqPolicyHandOffToRoom) OptUpdateUserProfileReqPolicyHandOffToRoom {
	return OptUpdateUserProfileReqPolicyHandOffToRoom{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyHandOffToRoom is optional UpdateUserProfileReqPolicyHandOffToRoom.
type OptUpdateUserProfileReqPolicyHandOffToRoom struct {
	Value UpdateUserProfileReqPolicyHandOffToRoom
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyHandOffToRoom was set.
func (o OptUpdateUserProfileReqPolicyHandOffToRoom) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyHandOffToRoom) Reset() {
	var v UpdateUserProfileReqPolicyHandOffToRoom
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyHandOffToRoom) SetTo(v UpdateUserProfileReqPolicyHandOffToRoom) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyHandOffToRoom) Get() (v UpdateUserProfileReqPolicyHandOffToRoom, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyHandOffToRoom) Or(d UpdateUserProfileReqPolicyHandOffToRoom) UpdateUserProfileReqPolicyHandOffToRoom {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyMobileSwitchToCarrier returns new OptUpdateUserProfileReqPolicyMobileSwitchToCarrier with value set to v.
func NewOptUpdateUserProfileReqPolicyMobileSwitchToCarrier(v UpdateUserProfileReqPolicyMobileSwitchToCarrier) OptUpdateUserProfileReqPolicyMobileSwitchToCarrier {
	return OptUpdateUserProfileReqPolicyMobileSwitchToCarrier{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyMobileSwitchToCarrier is optional UpdateUserProfileReqPolicyMobileSwitchToCarrier.
type OptUpdateUserProfileReqPolicyMobileSwitchToCarrier struct {
	Value UpdateUserProfileReqPolicyMobileSwitchToCarrier
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyMobileSwitchToCarrier was set.
func (o OptUpdateUserProfileReqPolicyMobileSwitchToCarrier) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyMobileSwitchToCarrier) Reset() {
	var v UpdateUserProfileReqPolicyMobileSwitchToCarrier
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyMobileSwitchToCarrier) SetTo(v UpdateUserProfileReqPolicyMobileSwitchToCarrier) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyMobileSwitchToCarrier) Get() (v UpdateUserProfileReqPolicyMobileSwitchToCarrier, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyMobileSwitchToCarrier) Or(d UpdateUserProfileReqPolicyMobileSwitchToCarrier) UpdateUserProfileReqPolicyMobileSwitchToCarrier {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyPersonalAudioLibrary returns new OptUpdateUserProfileReqPolicyPersonalAudioLibrary with value set to v.
func NewOptUpdateUserProfileReqPolicyPersonalAudioLibrary(v UpdateUserProfileReqPolicyPersonalAudioLibrary) OptUpdateUserProfileReqPolicyPersonalAudioLibrary {
	return OptUpdateUserProfileReqPolicyPersonalAudioLibrary{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyPersonalAudioLibrary is optional UpdateUserProfileReqPolicyPersonalAudioLibrary.
type OptUpdateUserProfileReqPolicyPersonalAudioLibrary struct {
	Value UpdateUserProfileReqPolicyPersonalAudioLibrary
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyPersonalAudioLibrary was set.
func (o OptUpdateUserProfileReqPolicyPersonalAudioLibrary) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyPersonalAudioLibrary) Reset() {
	var v UpdateUserProfileReqPolicyPersonalAudioLibrary
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyPersonalAudioLibrary) SetTo(v UpdateUserProfileReqPolicyPersonalAudioLibrary) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyPersonalAudioLibrary) Get() (v UpdateUserProfileReqPolicyPersonalAudioLibrary, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyPersonalAudioLibrary) Or(d UpdateUserProfileReqPolicyPersonalAudioLibrary) UpdateUserProfileReqPolicyPersonalAudioLibrary {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicySMS returns new OptUpdateUserProfileReqPolicySMS with value set to v.
func NewOptUpdateUserProfileReqPolicySMS(v UpdateUserProfileReqPolicySMS) OptUpdateUserProfileReqPolicySMS {
	return OptUpdateUserProfileReqPolicySMS{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicySMS is optional UpdateUserProfileReqPolicySMS.
type OptUpdateUserProfileReqPolicySMS struct {
	Value UpdateUserProfileReqPolicySMS
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicySMS was set.
func (o OptUpdateUserProfileReqPolicySMS) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicySMS) Reset() {
	var v UpdateUserProfileReqPolicySMS
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicySMS) SetTo(v UpdateUserProfileReqPolicySMS) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicySMS) Get() (v UpdateUserProfileReqPolicySMS, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicySMS) Or(d UpdateUserProfileReqPolicySMS) UpdateUserProfileReqPolicySMS {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicySelectOutboundCallerID returns new OptUpdateUserProfileReqPolicySelectOutboundCallerID with value set to v.
func NewOptUpdateUserProfileReqPolicySelectOutboundCallerID(v UpdateUserProfileReqPolicySelectOutboundCallerID) OptUpdateUserProfileReqPolicySelectOutboundCallerID {
	return OptUpdateUserProfileReqPolicySelectOutboundCallerID{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicySelectOutboundCallerID is optional UpdateUserProfileReqPolicySelectOutboundCallerID.
type OptUpdateUserProfileReqPolicySelectOutboundCallerID struct {
	Value UpdateUserProfileReqPolicySelectOutboundCallerID
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicySelectOutboundCallerID was set.
func (o OptUpdateUserProfileReqPolicySelectOutboundCallerID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicySelectOutboundCallerID) Reset() {
	var v UpdateUserProfileReqPolicySelectOutboundCallerID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicySelectOutboundCallerID) SetTo(v UpdateUserProfileReqPolicySelectOutboundCallerID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicySelectOutboundCallerID) Get() (v UpdateUserProfileReqPolicySelectOutboundCallerID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicySelectOutboundCallerID) Or(d UpdateUserProfileReqPolicySelectOutboundCallerID) UpdateUserProfileReqPolicySelectOutboundCallerID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicySharedVoicemailNotificationByEmail returns new OptUpdateUserProfileReqPolicySharedVoicemailNotificationByEmail with value set to v.
func NewOptUpdateUserProfileReqPolicySharedVoicemailNotificationByEmail(v UpdateUserProfileReqPolicySharedVoicemailNotificationByEmail) OptUpdateUserProfileReqPolicySharedVoicemailNotificationByEmail {
	return OptUpdateUserProfileReqPolicySharedVoicemailNotificationByEmail{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicySharedVoicemailNotificationByEmail is optional UpdateUserProfileReqPolicySharedVoicemailNotificationByEmail.
type OptUpdateUserProfileReqPolicySharedVoicemailNotificationByEmail struct {
	Value UpdateUserProfileReqPolicySharedVoicemailNotificationByEmail
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicySharedVoicemailNotificationByEmail was set.
func (o OptUpdateUserProfileReqPolicySharedVoicemailNotificationByEmail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicySharedVoicemailNotificationByEmail) Reset() {
	var v UpdateUserProfileReqPolicySharedVoicemailNotificationByEmail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicySharedVoicemailNotificationByEmail) SetTo(v UpdateUserProfileReqPolicySharedVoicemailNotificationByEmail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicySharedVoicemailNotificationByEmail) Get() (v UpdateUserProfileReqPolicySharedVoicemailNotificationByEmail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicySharedVoicemailNotificationByEmail) Or(d UpdateUserProfileReqPolicySharedVoicemailNotificationByEmail) UpdateUserProfileReqPolicySharedVoicemailNotificationByEmail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyVoicemail returns new OptUpdateUserProfileReqPolicyVoicemail with value set to v.
func NewOptUpdateUserProfileReqPolicyVoicemail(v UpdateUserProfileReqPolicyVoicemail) OptUpdateUserProfileReqPolicyVoicemail {
	return OptUpdateUserProfileReqPolicyVoicemail{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyVoicemail is optional UpdateUserProfileReqPolicyVoicemail.
type OptUpdateUserProfileReqPolicyVoicemail struct {
	Value UpdateUserProfileReqPolicyVoicemail
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyVoicemail was set.
func (o OptUpdateUserProfileReqPolicyVoicemail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyVoicemail) Reset() {
	var v UpdateUserProfileReqPolicyVoicemail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyVoicemail) SetTo(v UpdateUserProfileReqPolicyVoicemail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyVoicemail) Get() (v UpdateUserProfileReqPolicyVoicemail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyVoicemail) Or(d UpdateUserProfileReqPolicyVoicemail) UpdateUserProfileReqPolicyVoicemail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyVoicemailNotificationByEmail returns new OptUpdateUserProfileReqPolicyVoicemailNotificationByEmail with value set to v.
func NewOptUpdateUserProfileReqPolicyVoicemailNotificationByEmail(v UpdateUserProfileReqPolicyVoicemailNotificationByEmail) OptUpdateUserProfileReqPolicyVoicemailNotificationByEmail {
	return OptUpdateUserProfileReqPolicyVoicemailNotificationByEmail{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyVoicemailNotificationByEmail is optional UpdateUserProfileReqPolicyVoicemailNotificationByEmail.
type OptUpdateUserProfileReqPolicyVoicemailNotificationByEmail struct {
	Value UpdateUserProfileReqPolicyVoicemailNotificationByEmail
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyVoicemailNotificationByEmail was set.
func (o OptUpdateUserProfileReqPolicyVoicemailNotificationByEmail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyVoicemailNotificationByEmail) Reset() {
	var v UpdateUserProfileReqPolicyVoicemailNotificationByEmail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyVoicemailNotificationByEmail) SetTo(v UpdateUserProfileReqPolicyVoicemailNotificationByEmail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyVoicemailNotificationByEmail) Get() (v UpdateUserProfileReqPolicyVoicemailNotificationByEmail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyVoicemailNotificationByEmail) Or(d UpdateUserProfileReqPolicyVoicemailNotificationByEmail) UpdateUserProfileReqPolicyVoicemailNotificationByEmail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyVoicemailTranscription returns new OptUpdateUserProfileReqPolicyVoicemailTranscription with value set to v.
func NewOptUpdateUserProfileReqPolicyVoicemailTranscription(v UpdateUserProfileReqPolicyVoicemailTranscription) OptUpdateUserProfileReqPolicyVoicemailTranscription {
	return OptUpdateUserProfileReqPolicyVoicemailTranscription{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyVoicemailTranscription is optional UpdateUserProfileReqPolicyVoicemailTranscription.
type OptUpdateUserProfileReqPolicyVoicemailTranscription struct {
	Value UpdateUserProfileReqPolicyVoicemailTranscription
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyVoicemailTranscription was set.
func (o OptUpdateUserProfileReqPolicyVoicemailTranscription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyVoicemailTranscription) Reset() {
	var v UpdateUserProfileReqPolicyVoicemailTranscription
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyVoicemailTranscription) SetTo(v UpdateUserProfileReqPolicyVoicemailTranscription) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyVoicemailTranscription) Get() (v UpdateUserProfileReqPolicyVoicemailTranscription, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyVoicemailTranscription) Or(d UpdateUserProfileReqPolicyVoicemailTranscription) UpdateUserProfileReqPolicyVoicemailTranscription {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserProfileReqPolicyZoomPhoneOnMobile returns new OptUpdateUserProfileReqPolicyZoomPhoneOnMobile with value set to v.
func NewOptUpdateUserProfileReqPolicyZoomPhoneOnMobile(v UpdateUserProfileReqPolicyZoomPhoneOnMobile) OptUpdateUserProfileReqPolicyZoomPhoneOnMobile {
	return OptUpdateUserProfileReqPolicyZoomPhoneOnMobile{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserProfileReqPolicyZoomPhoneOnMobile is optional UpdateUserProfileReqPolicyZoomPhoneOnMobile.
type OptUpdateUserProfileReqPolicyZoomPhoneOnMobile struct {
	Value UpdateUserProfileReqPolicyZoomPhoneOnMobile
	Set   bool
}

// IsSet returns true if OptUpdateUserProfileReqPolicyZoomPhoneOnMobile was set.
func (o OptUpdateUserProfileReqPolicyZoomPhoneOnMobile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserProfileReqPolicyZoomPhoneOnMobile) Reset() {
	var v UpdateUserProfileReqPolicyZoomPhoneOnMobile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserProfileReqPolicyZoomPhoneOnMobile) SetTo(v UpdateUserProfileReqPolicyZoomPhoneOnMobile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserProfileReqPolicyZoomPhoneOnMobile) Get() (v UpdateUserProfileReqPolicyZoomPhoneOnMobile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserProfileReqPolicyZoomPhoneOnMobile) Or(d UpdateUserProfileReqPolicyZoomPhoneOnMobile) UpdateUserProfileReqPolicyZoomPhoneOnMobile {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserSettingReq returns new OptUpdateUserSettingReq with value set to v.
func NewOptUpdateUserSettingReq(v UpdateUserSettingReq) OptUpdateUserSettingReq {
	return OptUpdateUserSettingReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserSettingReq is optional UpdateUserSettingReq.
type OptUpdateUserSettingReq struct {
	Value UpdateUserSettingReq
	Set   bool
}

// IsSet returns true if OptUpdateUserSettingReq was set.
func (o OptUpdateUserSettingReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserSettingReq) Reset() {
	var v UpdateUserSettingReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserSettingReq) SetTo(v UpdateUserSettingReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserSettingReq) Get() (v UpdateUserSettingReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserSettingReq) Or(d UpdateUserSettingReq) UpdateUserSettingReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserSettingReqDelegation returns new OptUpdateUserSettingReqDelegation with value set to v.
func NewOptUpdateUserSettingReqDelegation(v UpdateUserSettingReqDelegation) OptUpdateUserSettingReqDelegation {
	return OptUpdateUserSettingReqDelegation{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserSettingReqDelegation is optional UpdateUserSettingReqDelegation.
type OptUpdateUserSettingReqDelegation struct {
	Value UpdateUserSettingReqDelegation
	Set   bool
}

// IsSet returns true if OptUpdateUserSettingReqDelegation was set.
func (o OptUpdateUserSettingReqDelegation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserSettingReqDelegation) Reset() {
	var v UpdateUserSettingReqDelegation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserSettingReqDelegation) SetTo(v UpdateUserSettingReqDelegation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserSettingReqDelegation) Get() (v UpdateUserSettingReqDelegation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserSettingReqDelegation) Or(d UpdateUserSettingReqDelegation) UpdateUserSettingReqDelegation {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserSettingReqDeskPhone returns new OptUpdateUserSettingReqDeskPhone with value set to v.
func NewOptUpdateUserSettingReqDeskPhone(v UpdateUserSettingReqDeskPhone) OptUpdateUserSettingReqDeskPhone {
	return OptUpdateUserSettingReqDeskPhone{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserSettingReqDeskPhone is optional UpdateUserSettingReqDeskPhone.
type OptUpdateUserSettingReqDeskPhone struct {
	Value UpdateUserSettingReqDeskPhone
	Set   bool
}

// IsSet returns true if OptUpdateUserSettingReqDeskPhone was set.
func (o OptUpdateUserSettingReqDeskPhone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserSettingReqDeskPhone) Reset() {
	var v UpdateUserSettingReqDeskPhone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserSettingReqDeskPhone) SetTo(v UpdateUserSettingReqDeskPhone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserSettingReqDeskPhone) Get() (v UpdateUserSettingReqDeskPhone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserSettingReqDeskPhone) Or(d UpdateUserSettingReqDeskPhone) UpdateUserSettingReqDeskPhone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserSettingReqDeskPhoneDevicesItemPolicy returns new OptUpdateUserSettingReqDeskPhoneDevicesItemPolicy with value set to v.
func NewOptUpdateUserSettingReqDeskPhoneDevicesItemPolicy(v UpdateUserSettingReqDeskPhoneDevicesItemPolicy) OptUpdateUserSettingReqDeskPhoneDevicesItemPolicy {
	return OptUpdateUserSettingReqDeskPhoneDevicesItemPolicy{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserSettingReqDeskPhoneDevicesItemPolicy is optional UpdateUserSettingReqDeskPhoneDevicesItemPolicy.
type OptUpdateUserSettingReqDeskPhoneDevicesItemPolicy struct {
	Value UpdateUserSettingReqDeskPhoneDevicesItemPolicy
	Set   bool
}

// IsSet returns true if OptUpdateUserSettingReqDeskPhoneDevicesItemPolicy was set.
func (o OptUpdateUserSettingReqDeskPhoneDevicesItemPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserSettingReqDeskPhoneDevicesItemPolicy) Reset() {
	var v UpdateUserSettingReqDeskPhoneDevicesItemPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserSettingReqDeskPhoneDevicesItemPolicy) SetTo(v UpdateUserSettingReqDeskPhoneDevicesItemPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserSettingReqDeskPhoneDevicesItemPolicy) Get() (v UpdateUserSettingReqDeskPhoneDevicesItemPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserSettingReqDeskPhoneDevicesItemPolicy) Or(d UpdateUserSettingReqDeskPhoneDevicesItemPolicy) UpdateUserSettingReqDeskPhoneDevicesItemPolicy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl returns new OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl with value set to v.
func NewOptUpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl(v UpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl) OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl {
	return OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl is optional UpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl.
type OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl struct {
	Value UpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl
	Set   bool
}

// IsSet returns true if OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl was set.
func (o OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl) Reset() {
	var v UpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl) SetTo(v UpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl) Get() (v UpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl) Or(d UpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl) UpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking returns new OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking with value set to v.
func NewOptUpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking(v UpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking) OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking {
	return OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking is optional UpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking.
type OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking struct {
	Value UpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking
	Set   bool
}

// IsSet returns true if OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking was set.
func (o OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking) Reset() {
	var v UpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking) SetTo(v UpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking) Get() (v UpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking) Or(d UpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking) UpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserSettingReqIntercom returns new OptUpdateUserSettingReqIntercom with value set to v.
func NewOptUpdateUserSettingReqIntercom(v UpdateUserSettingReqIntercom) OptUpdateUserSettingReqIntercom {
	return OptUpdateUserSettingReqIntercom{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserSettingReqIntercom is optional UpdateUserSettingReqIntercom.
type OptUpdateUserSettingReqIntercom struct {
	Value UpdateUserSettingReqIntercom
	Set   bool
}

// IsSet returns true if OptUpdateUserSettingReqIntercom was set.
func (o OptUpdateUserSettingReqIntercom) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserSettingReqIntercom) Reset() {
	var v UpdateUserSettingReqIntercom
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserSettingReqIntercom) SetTo(v UpdateUserSettingReqIntercom) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserSettingReqIntercom) Get() (v UpdateUserSettingReqIntercom, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserSettingReqIntercom) Or(d UpdateUserSettingReqIntercom) UpdateUserSettingReqIntercom {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserSettingReqVoiceMail returns new OptUpdateUserSettingReqVoiceMail with value set to v.
func NewOptUpdateUserSettingReqVoiceMail(v UpdateUserSettingReqVoiceMail) OptUpdateUserSettingReqVoiceMail {
	return OptUpdateUserSettingReqVoiceMail{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserSettingReqVoiceMail is optional UpdateUserSettingReqVoiceMail.
type OptUpdateUserSettingReqVoiceMail struct {
	Value UpdateUserSettingReqVoiceMail
	Set   bool
}

// IsSet returns true if OptUpdateUserSettingReqVoiceMail was set.
func (o OptUpdateUserSettingReqVoiceMail) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserSettingReqVoiceMail) Reset() {
	var v UpdateUserSettingReqVoiceMail
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserSettingReqVoiceMail) SetTo(v UpdateUserSettingReqVoiceMail) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserSettingReqVoiceMail) Get() (v UpdateUserSettingReqVoiceMail, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserSettingReqVoiceMail) Or(d UpdateUserSettingReqVoiceMail) UpdateUserSettingReqVoiceMail {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUserSettingsReq returns new OptUpdateUserSettingsReq with value set to v.
func NewOptUpdateUserSettingsReq(v UpdateUserSettingsReq) OptUpdateUserSettingsReq {
	return OptUpdateUserSettingsReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUserSettingsReq is optional UpdateUserSettingsReq.
type OptUpdateUserSettingsReq struct {
	Value UpdateUserSettingsReq
	Set   bool
}

// IsSet returns true if OptUpdateUserSettingsReq was set.
func (o OptUpdateUserSettingsReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUserSettingsReq) Reset() {
	var v UpdateUserSettingsReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUserSettingsReq) SetTo(v UpdateUserSettingsReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUserSettingsReq) Get() (v UpdateUserSettingsReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUserSettingsReq) Or(d UpdateUserSettingsReq) UpdateUserSettingsReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateUsersPropertiesInBatchReq returns new OptUpdateUsersPropertiesInBatchReq with value set to v.
func NewOptUpdateUsersPropertiesInBatchReq(v UpdateUsersPropertiesInBatchReq) OptUpdateUsersPropertiesInBatchReq {
	return OptUpdateUsersPropertiesInBatchReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateUsersPropertiesInBatchReq is optional UpdateUsersPropertiesInBatchReq.
type OptUpdateUsersPropertiesInBatchReq struct {
	Value UpdateUsersPropertiesInBatchReq
	Set   bool
}

// IsSet returns true if OptUpdateUsersPropertiesInBatchReq was set.
func (o OptUpdateUsersPropertiesInBatchReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateUsersPropertiesInBatchReq) Reset() {
	var v UpdateUsersPropertiesInBatchReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateUsersPropertiesInBatchReq) SetTo(v UpdateUsersPropertiesInBatchReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateUsersPropertiesInBatchReq) Get() (v UpdateUsersPropertiesInBatchReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateUsersPropertiesInBatchReq) Or(d UpdateUsersPropertiesInBatchReq) UpdateUsersPropertiesInBatchReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateZoomRoomReq returns new OptUpdateZoomRoomReq with value set to v.
func NewOptUpdateZoomRoomReq(v UpdateZoomRoomReq) OptUpdateZoomRoomReq {
	return OptUpdateZoomRoomReq{
		Value: v,
		Set:   true,
	}
}

// OptUpdateZoomRoomReq is optional UpdateZoomRoomReq.
type OptUpdateZoomRoomReq struct {
	Value UpdateZoomRoomReq
	Set   bool
}

// IsSet returns true if OptUpdateZoomRoomReq was set.
func (o OptUpdateZoomRoomReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateZoomRoomReq) Reset() {
	var v UpdateZoomRoomReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateZoomRoomReq) SetTo(v UpdateZoomRoomReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateZoomRoomReq) Get() (v UpdateZoomRoomReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateZoomRoomReq) Or(d UpdateZoomRoomReq) UpdateZoomRoomReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateZoomRoomReqPolicy returns new OptUpdateZoomRoomReqPolicy with value set to v.
func NewOptUpdateZoomRoomReqPolicy(v UpdateZoomRoomReqPolicy) OptUpdateZoomRoomReqPolicy {
	return OptUpdateZoomRoomReqPolicy{
		Value: v,
		Set:   true,
	}
}

// OptUpdateZoomRoomReqPolicy is optional UpdateZoomRoomReqPolicy.
type OptUpdateZoomRoomReqPolicy struct {
	Value UpdateZoomRoomReqPolicy
	Set   bool
}

// IsSet returns true if OptUpdateZoomRoomReqPolicy was set.
func (o OptUpdateZoomRoomReqPolicy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateZoomRoomReqPolicy) Reset() {
	var v UpdateZoomRoomReqPolicy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateZoomRoomReqPolicy) SetTo(v UpdateZoomRoomReqPolicy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateZoomRoomReqPolicy) Get() (v UpdateZoomRoomReqPolicy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateZoomRoomReqPolicy) Or(d UpdateZoomRoomReqPolicy) UpdateZoomRoomReqPolicy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateZoomRoomReqPolicyInternationalCalling returns new OptUpdateZoomRoomReqPolicyInternationalCalling with value set to v.
func NewOptUpdateZoomRoomReqPolicyInternationalCalling(v UpdateZoomRoomReqPolicyInternationalCalling) OptUpdateZoomRoomReqPolicyInternationalCalling {
	return OptUpdateZoomRoomReqPolicyInternationalCalling{
		Value: v,
		Set:   true,
	}
}

// OptUpdateZoomRoomReqPolicyInternationalCalling is optional UpdateZoomRoomReqPolicyInternationalCalling.
type OptUpdateZoomRoomReqPolicyInternationalCalling struct {
	Value UpdateZoomRoomReqPolicyInternationalCalling
	Set   bool
}

// IsSet returns true if OptUpdateZoomRoomReqPolicyInternationalCalling was set.
func (o OptUpdateZoomRoomReqPolicyInternationalCalling) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateZoomRoomReqPolicyInternationalCalling) Reset() {
	var v UpdateZoomRoomReqPolicyInternationalCalling
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateZoomRoomReqPolicyInternationalCalling) SetTo(v UpdateZoomRoomReqPolicyInternationalCalling) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateZoomRoomReqPolicyInternationalCalling) Get() (v UpdateZoomRoomReqPolicyInternationalCalling, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateZoomRoomReqPolicyInternationalCalling) Or(d UpdateZoomRoomReqPolicyInternationalCalling) UpdateZoomRoomReqPolicyInternationalCalling {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateZoomRoomReqPolicySelectOutboundCallerID returns new OptUpdateZoomRoomReqPolicySelectOutboundCallerID with value set to v.
func NewOptUpdateZoomRoomReqPolicySelectOutboundCallerID(v UpdateZoomRoomReqPolicySelectOutboundCallerID) OptUpdateZoomRoomReqPolicySelectOutboundCallerID {
	return OptUpdateZoomRoomReqPolicySelectOutboundCallerID{
		Value: v,
		Set:   true,
	}
}

// OptUpdateZoomRoomReqPolicySelectOutboundCallerID is optional UpdateZoomRoomReqPolicySelectOutboundCallerID.
type OptUpdateZoomRoomReqPolicySelectOutboundCallerID struct {
	Value UpdateZoomRoomReqPolicySelectOutboundCallerID
	Set   bool
}

// IsSet returns true if OptUpdateZoomRoomReqPolicySelectOutboundCallerID was set.
func (o OptUpdateZoomRoomReqPolicySelectOutboundCallerID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateZoomRoomReqPolicySelectOutboundCallerID) Reset() {
	var v UpdateZoomRoomReqPolicySelectOutboundCallerID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateZoomRoomReqPolicySelectOutboundCallerID) SetTo(v UpdateZoomRoomReqPolicySelectOutboundCallerID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateZoomRoomReqPolicySelectOutboundCallerID) Get() (v UpdateZoomRoomReqPolicySelectOutboundCallerID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateZoomRoomReqPolicySelectOutboundCallerID) Or(d UpdateZoomRoomReqPolicySelectOutboundCallerID) UpdateZoomRoomReqPolicySelectOutboundCallerID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserSmsSessionOKSMSSessionsItemParticipantsItemOwner returns new OptUserSmsSessionOKSMSSessionsItemParticipantsItemOwner with value set to v.
func NewOptUserSmsSessionOKSMSSessionsItemParticipantsItemOwner(v UserSmsSessionOKSMSSessionsItemParticipantsItemOwner) OptUserSmsSessionOKSMSSessionsItemParticipantsItemOwner {
	return OptUserSmsSessionOKSMSSessionsItemParticipantsItemOwner{
		Value: v,
		Set:   true,
	}
}

// OptUserSmsSessionOKSMSSessionsItemParticipantsItemOwner is optional UserSmsSessionOKSMSSessionsItemParticipantsItemOwner.
type OptUserSmsSessionOKSMSSessionsItemParticipantsItemOwner struct {
	Value UserSmsSessionOKSMSSessionsItemParticipantsItemOwner
	Set   bool
}

// IsSet returns true if OptUserSmsSessionOKSMSSessionsItemParticipantsItemOwner was set.
func (o OptUserSmsSessionOKSMSSessionsItemParticipantsItemOwner) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserSmsSessionOKSMSSessionsItemParticipantsItemOwner) Reset() {
	var v UserSmsSessionOKSMSSessionsItemParticipantsItemOwner
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserSmsSessionOKSMSSessionsItemParticipantsItemOwner) SetTo(v UserSmsSessionOKSMSSessionsItemParticipantsItemOwner) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserSmsSessionOKSMSSessionsItemParticipantsItemOwner) Get() (v UserSmsSessionOKSMSSessionsItemParticipantsItemOwner, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserSmsSessionOKSMSSessionsItemParticipantsItemOwner) Or(d UserSmsSessionOKSMSSessionsItemParticipantsItemOwner) UserSmsSessionOKSMSSessionsItemParticipantsItemOwner {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/PatchCallHandlingSettingsCallForwarding
type PatchCallHandlingSettingsCallForwarding struct {
	Settings OptPatchCallHandlingSettingsCallForwardingSettings `json:"settings"`
	// The type of sub-setting:
	// * `call_forwarding`.
	SubSettingType OptString `json:"sub_setting_type"`
}

// GetSettings returns the value of Settings.
func (s *PatchCallHandlingSettingsCallForwarding) GetSettings() OptPatchCallHandlingSettingsCallForwardingSettings {
	return s.Settings
}

// GetSubSettingType returns the value of SubSettingType.
func (s *PatchCallHandlingSettingsCallForwarding) GetSubSettingType() OptString {
	return s.SubSettingType
}

// SetSettings sets the value of Settings.
func (s *PatchCallHandlingSettingsCallForwarding) SetSettings(val OptPatchCallHandlingSettingsCallForwardingSettings) {
	s.Settings = val
}

// SetSubSettingType sets the value of SubSettingType.
func (s *PatchCallHandlingSettingsCallForwarding) SetSubSettingType(val OptString) {
	s.SubSettingType = val
}

type PatchCallHandlingSettingsCallForwardingSettings struct {
	// The call forwarding settings. It's only required for the `call_forwarding` sub-setting.
	CallForwardingSettings []PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItem `json:"call_forwarding_settings"`
	// When a call is forwarded to a personal phone number, whether the user must press &quot;1&quot;
	// before the call connects. Enable this option to ensure missed calls do not reach to your personal
	// voicemail. It's required for the `call_forwarding` sub-setting.
	// Press 1 is always enabled and is required for `callQueue` type extension calls.
	RequirePress1BeforeConnecting OptBool `json:"require_press_1_before_connecting"`
}

// GetCallForwardingSettings returns the value of CallForwardingSettings.
func (s *PatchCallHandlingSettingsCallForwardingSettings) GetCallForwardingSettings() []PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItem {
	return s.CallForwardingSettings
}

// GetRequirePress1BeforeConnecting returns the value of RequirePress1BeforeConnecting.
func (s *PatchCallHandlingSettingsCallForwardingSettings) GetRequirePress1BeforeConnecting() OptBool {
	return s.RequirePress1BeforeConnecting
}

// SetCallForwardingSettings sets the value of CallForwardingSettings.
func (s *PatchCallHandlingSettingsCallForwardingSettings) SetCallForwardingSettings(val []PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItem) {
	s.CallForwardingSettings = val
}

// SetRequirePress1BeforeConnecting sets the value of RequirePress1BeforeConnecting.
func (s *PatchCallHandlingSettingsCallForwardingSettings) SetRequirePress1BeforeConnecting(val OptBool) {
	s.RequirePress1BeforeConnecting = val
}

type PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItem struct {
	// The external phone number's description.
	Description OptString `json:"description"`
	// Whether to receive a call.
	Enable OptBool `json:"enable"`
	// The call forwarding's ID.
	ID OptString `json:"id"`
	// The external phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164) format.
	PhoneNumber     OptString                                                                                   `json:"phone_number"`
	ExternalContact OptPatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact `json:"external_contact"`
}

// GetDescription returns the value of Description.
func (s *PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItem) GetDescription() OptString {
	return s.Description
}

// GetEnable returns the value of Enable.
func (s *PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItem) GetEnable() OptBool {
	return s.Enable
}

// GetID returns the value of ID.
func (s *PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItem) GetID() OptString {
	return s.ID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetExternalContact returns the value of ExternalContact.
func (s *PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItem) GetExternalContact() OptPatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact {
	return s.ExternalContact
}

// SetDescription sets the value of Description.
func (s *PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItem) SetDescription(val OptString) {
	s.Description = val
}

// SetEnable sets the value of Enable.
func (s *PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItem) SetEnable(val OptBool) {
	s.Enable = val
}

// SetID sets the value of ID.
func (s *PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItem) SetID(val OptString) {
	s.ID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetExternalContact sets the value of ExternalContact.
func (s *PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItem) SetExternalContact(val OptPatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact) {
	s.ExternalContact = val
}

type PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact struct {
	// The external contact's ID. It updates the external contact's `call_forwarding` sub-setting to
	// where the call will be forwarded.
	ExternalContactID OptString `json:"external_contact_id"`
}

// GetExternalContactID returns the value of ExternalContactID.
func (s *PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact) GetExternalContactID() OptString {
	return s.ExternalContactID
}

// SetExternalContactID sets the value of ExternalContactID.
func (s *PatchCallHandlingSettingsCallForwardingSettingsCallForwardingSettingsItemExternalContact) SetExternalContactID(val OptString) {
	s.ExternalContactID = val
}

// Ref: #/components/schemas/PatchCallHandlingSettingsCallHandling
type PatchCallHandlingSettingsCallHandling struct {
	Settings OptPatchCallHandlingSettingsCallHandlingSettings `json:"settings"`
	// The type of sub-setting:
	// * `call_handling`.
	SubSettingType OptString `json:"sub_setting_type"`
}

// GetSettings returns the value of Settings.
func (s *PatchCallHandlingSettingsCallHandling) GetSettings() OptPatchCallHandlingSettingsCallHandlingSettings {
	return s.Settings
}

// GetSubSettingType returns the value of SubSettingType.
func (s *PatchCallHandlingSettingsCallHandling) GetSubSettingType() OptString {
	return s.SubSettingType
}

// SetSettings sets the value of Settings.
func (s *PatchCallHandlingSettingsCallHandling) SetSettings(val OptPatchCallHandlingSettingsCallHandlingSettings) {
	s.Settings = val
}

// SetSubSettingType sets the value of SubSettingType.
func (s *PatchCallHandlingSettingsCallHandling) SetSubSettingType(val OptString) {
	s.SubSettingType = val
}

type PatchCallHandlingSettingsCallHandlingSettings struct {
	// Whether to allow the callers to check voicemails over a phone. It's required only when the
	// `call_not_answer_action` setting is set to `1` (Forward to a voicemail).
	AllowCallersCheckVoicemail OptBool `json:"allow_callers_check_voicemail"`
	// This field allows queue members to set their own business hours. This field allows queue members'
	// business Hours to override the default hours of the call queue.
	// Only required for `Call Queue custom_hours` sub-setting.
	AllowMembersToReset OptBool `json:"allow_members_to_reset"`
	// The audio while connecting the prompt ID. This option can select the audio played for the inbound
	// callers when they are waiting to be routed to the next available call queue member.
	// Options: empty char - default and `0` - disable
	// This is only required for the `Call Queue` `call_handling` sub-setting.
	AudioWhileConnectingID OptString `json:"audio_while_connecting_id"`
	// This option distributes incoming calls.
	// If `Sequential` or `Rotating` is selected, calls will ring for a specific time before trying the
	// next available queue member.
	// This is only required for the `call_handling` sub-setting.
	CallDistribution OptPatchCallHandlingSettingsCallHandlingSettingsCallDistribution `json:"call_distribution"`
	// The action to take when a call is not answered:
	// * `1` &mdash; Forward to a voicemail.
	// * `2` &mdash; Forward to the user.
	// * `4` &mdash; Forward to the common area.
	// * `6` &mdash; Forward to the auto receptionist.
	// * `7` &mdash; Forward to a call queue.
	// * `8` &mdash; Forward to a shared line group.
	// * `9` &mdash; Forward to an external contact.
	// * `10` - Forward to a phone number.
	// * `11` &mdash; Disconnect.
	// * `12` &mdash; Play a message, then disconnect.
	// * `13` - Forward to a message.
	// * `14` - Forward to an interactive voice response (IVR).
	// This is only required for the `call_handling` sub-setting.
	CallNotAnswerAction OptInt `json:"call_not_answer_action"`
	// The action to take when the user is busy on another call:
	// * `1` &mdash; Forward to a voicemail.
	// * `2` &mdash; Forward to the user.
	// * `4` &mdash; Forward to the common area.
	// * `6` &mdash; Forward to the auto receptionist.
	// * `7` &mdash; Forward to a call queue.
	// * `8` &mdash; Forward to a shared line group.
	// * `9` &mdash; Forward to an external contact.
	// * `10` - Forward to a phone number.
	// * `12` &mdash; Play a message, then disconnect.
	// * `21` &mdash; Call waiting.
	// * `22` &mdash; Play a busy signal.
	// Only required for the `call_handling` sub-setting.
	BusyOnAnotherCallAction OptInt `json:"busy_on_another_call_action"`
	// When one is busy on another call, the receiver needs to press 1 before connecting the call for it
	// to be forwarded to an external contact or a number. This option ensures that forwarded calls won't
	// reach the voicemail box for the external contact or a number.
	BusyRequirePress1BeforeConnecting OptBool `json:"busy_require_press_1_before_connecting"`
	// When a call is unanswered, press 1 before connecting the call to forward to an external contact or
	// a number. This option ensures that forwarded calls won't reach the voicemail box for the external
	// contact or a number.
	UnAnsweredRequirePress1BeforeConnecting OptBool `json:"un_answered_require_press_1_before_connecting"`
	// Whether to play the callee's voicemail greeting when the caller reaches the end of the forwarding
	// sequence.
	// It displays when `call_not_answer_action` is set to: `2` - Forward to the user, `4` - Forward to
	// the common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue, `8` -
	// Forward to a shared line group, `9` - Forward to an external contact, `10` - Forward to an
	// external number.
	OverflowPlayCalleeVoicemailGreeting OptBool `json:"overflow_play_callee_voicemail_greeting"`
	// Whether to play callee's voicemail greeting when the caller reaches the end of forwarding sequence.
	//  It displays when `busy_on_another_call_action` action or `call_not_answer_action` is set to `1` -
	// Forward to a voicemail.
	PlayCalleeVoicemailGreeting OptBool `json:"play_callee_voicemail_greeting"`
	// Whether to play callee's voicemail greeting when the caller reaches the end of the forwarding
	// sequence.
	// It displays when `busy_on_another_call_action` action is set to `2` - Forward to the user, `4` -
	// Forward to the common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue,
	// `8` - Forward to a shared line group, `9` - Forward to an external contact, `10` - Forward to an
	// external number.
	BusyPlayCalleeVoicemailGreeting OptBool `json:"busy_play_callee_voicemail_greeting"`
	// The extension's phone number or forward to an external number in [E.164 format](https://en.
	// wikipedia.org/wiki/E.164) format. It's required when `call_not_answer_action` action is set to
	// `10` - Forward to an external number.
	PhoneNumber OptString `json:"phone_number"`
	// (Optional) This field forwards to an external number description.
	// Add this field when `call_not_answer_action` is set to `10` - Forward to an external number.
	Description OptString `json:"description"`
	// The extension's phone number or forward to an external number in [E.164 format](https://en.
	// wikipedia.org/wiki/E.164) format.
	// It sets when `busy_on_another_call_action` action is set to `10` - Forward to an external number.
	BusyPhoneNumber OptString `json:"busy_phone_number"`
	// This field forwards to an external number description (optional). It sets when
	// `busy_on_another_call_action` action is set to `10` - Forward to an external number.
	BusyDescription OptString `json:"busy_description"`
	// Whether to allow callers to reach an operator. It's required only when the
	// `call_not_answer_action` or `busy_on_another_call_action` is set to `1` (Forward to a voicemail).
	ConnectToOperator OptBool `json:"connect_to_operator"`
	// The forwarding extension ID that's required only when call_not_answer_action setting is set to: 2
	// - Forward to the user. 4 - Forward to the common area. 6 - Forward to the auto receptionist. 7 -
	// Forward to a call queue. 8 - Forward to a shared line group. or 9 - forward to an external contact.
	ForwardToExtensionID OptString `json:"forward_to_extension_id"`
	// The forwarding extension ID that's required only when busy_on_another_call_action setting is set
	// to: 2 - Forward to the user. 4 - Forward to the common area. 6 - Forward to the auto receptionist.
	// 7 - Forward to a call queue. 8 - Forward to a shared line group. or 9 - forward to an external
	// contact.
	BusyForwardToExtensionID OptString `json:"busy_forward_to_extension_id"`
	// The greeting audio prompt ID.
	// Options: empty char - default and `0` - disable
	// This is only required for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting.
	GreetingPromptID OptString `json:"greeting_prompt_id"`
	// The maximum number of calls in queue.
	// Specify the maximum number of callers to place in the queue. When this number is exceeded, callers
	// will be routed based on the overflow option. Up to 60.
	// It's required for the `Call Queue` `call_handling` sub-setting.
	MaxCallInQueue OptInt `json:"max_call_in_queue"`
	// The maximum wait time, in seconds, for `simultaneous` ring mode or the ring duration for each
	// device for `sequential` ring mode:
	// * `10`
	// * `15`
	// * `20`
	// * `25`
	// * `30`
	// * `35`
	// * `40`
	// * `45`
	// * `50`
	// * `55`
	// * `60`
	// Specify how long a caller will wait in the queue. Once the wait time is exceeded, the caller will
	// be rerouted based on the overflow option for `Call Queue`:
	// * `10`
	// * `15`
	// * `20`
	// * `25`
	// * `30`
	// * `35`
	// * `40`
	// * `45`
	// * `50`
	// * `55`
	// * `60`
	// * `120`
	// * `180`
	// * `240`
	// * `300`
	// * `600`
	// * `900`
	// * `1200`
	// * `1500`
	// * `1800`
	// This is only required for the `call_handling` sub-setting.
	MaxWaitTime OptInt `json:"max_wait_time"`
	// The music on hold prompt ID. This field is an option to choose music for inbound callers when
	// they're placed on hold by a call queue member.
	// Options: empty char - default and `0` - disable
	// Only required for the `Call Queue` `call_handling` sub-setting.
	MusicOnHoldID OptString `json:"music_on_hold_id"`
	// The extension ID of the operator to whom the call is being forwarded. It's required only when
	// `call_not_answer_action` is set to `1` (Forward to a voicemail) and `connect_to_operator` is set
	// to `true`.
	OperatorExtensionID OptString `json:"operator_extension_id"`
	// This field receives calls while on a call. When enabled, call queue members can receive new
	// incoming calls notification even on the call.
	// It's required for the `Call Queue call handling` sub-setting.
	ReceiveCall OptBool `json:"receive_call"`
	// The call handling ring mode:
	// * `simultaneous`
	// * `sequential`. For user business hours, `ring_mode` needs to be set with `max_wait_time`.
	RingMode OptString `json:"ring_mode"`
	// The voicemail greeting prompt ID. It's required when `call_not_answer_action` or
	// `busy_on_another_call_action` is set to `1` (Forward to a voicemail).
	// Required only for `call_handling` subsettings of `Call Queue`, `Auto Receptionist` or `User`.
	VoicemailGreetingID OptString `json:"voicemail_greeting_id"`
	// The wrap up time in seconds.
	// Specify the duration before the next queue call is routed to a member in call queue:
	// * `0`
	// * `10`
	// * `15`
	// * `20`
	// * `25`
	// * `30`
	// * `35`
	// * `40`
	// * `45`
	// * `50`
	// * `55`
	// * `60`
	// * `120`
	// * `180`
	// * `240`
	// * `300`
	// This is only required for the `call_handling` sub-setting.
	WrapUpTime OptInt `json:"wrap_up_time"`
}

// GetAllowCallersCheckVoicemail returns the value of AllowCallersCheckVoicemail.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetAllowCallersCheckVoicemail() OptBool {
	return s.AllowCallersCheckVoicemail
}

// GetAllowMembersToReset returns the value of AllowMembersToReset.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetAllowMembersToReset() OptBool {
	return s.AllowMembersToReset
}

// GetAudioWhileConnectingID returns the value of AudioWhileConnectingID.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetAudioWhileConnectingID() OptString {
	return s.AudioWhileConnectingID
}

// GetCallDistribution returns the value of CallDistribution.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetCallDistribution() OptPatchCallHandlingSettingsCallHandlingSettingsCallDistribution {
	return s.CallDistribution
}

// GetCallNotAnswerAction returns the value of CallNotAnswerAction.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetCallNotAnswerAction() OptInt {
	return s.CallNotAnswerAction
}

// GetBusyOnAnotherCallAction returns the value of BusyOnAnotherCallAction.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetBusyOnAnotherCallAction() OptInt {
	return s.BusyOnAnotherCallAction
}

// GetBusyRequirePress1BeforeConnecting returns the value of BusyRequirePress1BeforeConnecting.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetBusyRequirePress1BeforeConnecting() OptBool {
	return s.BusyRequirePress1BeforeConnecting
}

// GetUnAnsweredRequirePress1BeforeConnecting returns the value of UnAnsweredRequirePress1BeforeConnecting.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetUnAnsweredRequirePress1BeforeConnecting() OptBool {
	return s.UnAnsweredRequirePress1BeforeConnecting
}

// GetOverflowPlayCalleeVoicemailGreeting returns the value of OverflowPlayCalleeVoicemailGreeting.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetOverflowPlayCalleeVoicemailGreeting() OptBool {
	return s.OverflowPlayCalleeVoicemailGreeting
}

// GetPlayCalleeVoicemailGreeting returns the value of PlayCalleeVoicemailGreeting.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetPlayCalleeVoicemailGreeting() OptBool {
	return s.PlayCalleeVoicemailGreeting
}

// GetBusyPlayCalleeVoicemailGreeting returns the value of BusyPlayCalleeVoicemailGreeting.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetBusyPlayCalleeVoicemailGreeting() OptBool {
	return s.BusyPlayCalleeVoicemailGreeting
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetDescription returns the value of Description.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetDescription() OptString {
	return s.Description
}

// GetBusyPhoneNumber returns the value of BusyPhoneNumber.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetBusyPhoneNumber() OptString {
	return s.BusyPhoneNumber
}

// GetBusyDescription returns the value of BusyDescription.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetBusyDescription() OptString {
	return s.BusyDescription
}

// GetConnectToOperator returns the value of ConnectToOperator.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetConnectToOperator() OptBool {
	return s.ConnectToOperator
}

// GetForwardToExtensionID returns the value of ForwardToExtensionID.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetForwardToExtensionID() OptString {
	return s.ForwardToExtensionID
}

// GetBusyForwardToExtensionID returns the value of BusyForwardToExtensionID.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetBusyForwardToExtensionID() OptString {
	return s.BusyForwardToExtensionID
}

// GetGreetingPromptID returns the value of GreetingPromptID.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetGreetingPromptID() OptString {
	return s.GreetingPromptID
}

// GetMaxCallInQueue returns the value of MaxCallInQueue.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetMaxCallInQueue() OptInt {
	return s.MaxCallInQueue
}

// GetMaxWaitTime returns the value of MaxWaitTime.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetMaxWaitTime() OptInt {
	return s.MaxWaitTime
}

// GetMusicOnHoldID returns the value of MusicOnHoldID.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetMusicOnHoldID() OptString {
	return s.MusicOnHoldID
}

// GetOperatorExtensionID returns the value of OperatorExtensionID.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetOperatorExtensionID() OptString {
	return s.OperatorExtensionID
}

// GetReceiveCall returns the value of ReceiveCall.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetReceiveCall() OptBool {
	return s.ReceiveCall
}

// GetRingMode returns the value of RingMode.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetRingMode() OptString {
	return s.RingMode
}

// GetVoicemailGreetingID returns the value of VoicemailGreetingID.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetVoicemailGreetingID() OptString {
	return s.VoicemailGreetingID
}

// GetWrapUpTime returns the value of WrapUpTime.
func (s *PatchCallHandlingSettingsCallHandlingSettings) GetWrapUpTime() OptInt {
	return s.WrapUpTime
}

// SetAllowCallersCheckVoicemail sets the value of AllowCallersCheckVoicemail.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetAllowCallersCheckVoicemail(val OptBool) {
	s.AllowCallersCheckVoicemail = val
}

// SetAllowMembersToReset sets the value of AllowMembersToReset.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetAllowMembersToReset(val OptBool) {
	s.AllowMembersToReset = val
}

// SetAudioWhileConnectingID sets the value of AudioWhileConnectingID.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetAudioWhileConnectingID(val OptString) {
	s.AudioWhileConnectingID = val
}

// SetCallDistribution sets the value of CallDistribution.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetCallDistribution(val OptPatchCallHandlingSettingsCallHandlingSettingsCallDistribution) {
	s.CallDistribution = val
}

// SetCallNotAnswerAction sets the value of CallNotAnswerAction.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetCallNotAnswerAction(val OptInt) {
	s.CallNotAnswerAction = val
}

// SetBusyOnAnotherCallAction sets the value of BusyOnAnotherCallAction.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetBusyOnAnotherCallAction(val OptInt) {
	s.BusyOnAnotherCallAction = val
}

// SetBusyRequirePress1BeforeConnecting sets the value of BusyRequirePress1BeforeConnecting.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetBusyRequirePress1BeforeConnecting(val OptBool) {
	s.BusyRequirePress1BeforeConnecting = val
}

// SetUnAnsweredRequirePress1BeforeConnecting sets the value of UnAnsweredRequirePress1BeforeConnecting.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetUnAnsweredRequirePress1BeforeConnecting(val OptBool) {
	s.UnAnsweredRequirePress1BeforeConnecting = val
}

// SetOverflowPlayCalleeVoicemailGreeting sets the value of OverflowPlayCalleeVoicemailGreeting.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetOverflowPlayCalleeVoicemailGreeting(val OptBool) {
	s.OverflowPlayCalleeVoicemailGreeting = val
}

// SetPlayCalleeVoicemailGreeting sets the value of PlayCalleeVoicemailGreeting.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetPlayCalleeVoicemailGreeting(val OptBool) {
	s.PlayCalleeVoicemailGreeting = val
}

// SetBusyPlayCalleeVoicemailGreeting sets the value of BusyPlayCalleeVoicemailGreeting.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetBusyPlayCalleeVoicemailGreeting(val OptBool) {
	s.BusyPlayCalleeVoicemailGreeting = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetDescription sets the value of Description.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetDescription(val OptString) {
	s.Description = val
}

// SetBusyPhoneNumber sets the value of BusyPhoneNumber.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetBusyPhoneNumber(val OptString) {
	s.BusyPhoneNumber = val
}

// SetBusyDescription sets the value of BusyDescription.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetBusyDescription(val OptString) {
	s.BusyDescription = val
}

// SetConnectToOperator sets the value of ConnectToOperator.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetConnectToOperator(val OptBool) {
	s.ConnectToOperator = val
}

// SetForwardToExtensionID sets the value of ForwardToExtensionID.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetForwardToExtensionID(val OptString) {
	s.ForwardToExtensionID = val
}

// SetBusyForwardToExtensionID sets the value of BusyForwardToExtensionID.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetBusyForwardToExtensionID(val OptString) {
	s.BusyForwardToExtensionID = val
}

// SetGreetingPromptID sets the value of GreetingPromptID.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetGreetingPromptID(val OptString) {
	s.GreetingPromptID = val
}

// SetMaxCallInQueue sets the value of MaxCallInQueue.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetMaxCallInQueue(val OptInt) {
	s.MaxCallInQueue = val
}

// SetMaxWaitTime sets the value of MaxWaitTime.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetMaxWaitTime(val OptInt) {
	s.MaxWaitTime = val
}

// SetMusicOnHoldID sets the value of MusicOnHoldID.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetMusicOnHoldID(val OptString) {
	s.MusicOnHoldID = val
}

// SetOperatorExtensionID sets the value of OperatorExtensionID.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetOperatorExtensionID(val OptString) {
	s.OperatorExtensionID = val
}

// SetReceiveCall sets the value of ReceiveCall.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetReceiveCall(val OptBool) {
	s.ReceiveCall = val
}

// SetRingMode sets the value of RingMode.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetRingMode(val OptString) {
	s.RingMode = val
}

// SetVoicemailGreetingID sets the value of VoicemailGreetingID.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetVoicemailGreetingID(val OptString) {
	s.VoicemailGreetingID = val
}

// SetWrapUpTime sets the value of WrapUpTime.
func (s *PatchCallHandlingSettingsCallHandlingSettings) SetWrapUpTime(val OptInt) {
	s.WrapUpTime = val
}

// This option distributes incoming calls.
// If `Sequential` or `Rotating` is selected, calls will ring for a specific time before trying the
// next available queue member.
// This is only required for the `call_handling` sub-setting.
type PatchCallHandlingSettingsCallHandlingSettingsCallDistribution struct {
	// The maximum number of calls that can be handled simultaneously is less than half of the total
	// amount of available call queue members. Note that the first incoming call may not be answered
	// first.
	// Required except for `simultaneous` ring mode.
	HandleMultipleCalls OptBool `json:"handle_multiple_calls"`
	// The ringing duration for each member:
	// * `10`
	// * `15`
	// * `20`
	// * `25`
	// * `30`
	// * `35`
	// * `40`
	// * `45`
	// * `50`
	// * `55`
	// * `60`
	// Required except for `simultaneous` ring mode.
	RingDuration OptInt `json:"ring_duration"`
	// The call distribution ring mode:
	// * `simultaneous`
	// * `sequential`
	// * `rotating`
	// * `longest_idle`.
	RingMode OptString `json:"ring_mode"`
	// 1. Devices with Zoom app or client not launched and mobile phone with screen locked will be
	// skipped.
	// 2. Phone numbers added to user's call handling settings will be skipped.
	// Required except for `simultaneous` ring mode.
	SkipOfflineDevicePhoneNumber OptBool `json:"skip_offline_device_phone_number"`
}

// GetHandleMultipleCalls returns the value of HandleMultipleCalls.
func (s *PatchCallHandlingSettingsCallHandlingSettingsCallDistribution) GetHandleMultipleCalls() OptBool {
	return s.HandleMultipleCalls
}

// GetRingDuration returns the value of RingDuration.
func (s *PatchCallHandlingSettingsCallHandlingSettingsCallDistribution) GetRingDuration() OptInt {
	return s.RingDuration
}

// GetRingMode returns the value of RingMode.
func (s *PatchCallHandlingSettingsCallHandlingSettingsCallDistribution) GetRingMode() OptString {
	return s.RingMode
}

// GetSkipOfflineDevicePhoneNumber returns the value of SkipOfflineDevicePhoneNumber.
func (s *PatchCallHandlingSettingsCallHandlingSettingsCallDistribution) GetSkipOfflineDevicePhoneNumber() OptBool {
	return s.SkipOfflineDevicePhoneNumber
}

// SetHandleMultipleCalls sets the value of HandleMultipleCalls.
func (s *PatchCallHandlingSettingsCallHandlingSettingsCallDistribution) SetHandleMultipleCalls(val OptBool) {
	s.HandleMultipleCalls = val
}

// SetRingDuration sets the value of RingDuration.
func (s *PatchCallHandlingSettingsCallHandlingSettingsCallDistribution) SetRingDuration(val OptInt) {
	s.RingDuration = val
}

// SetRingMode sets the value of RingMode.
func (s *PatchCallHandlingSettingsCallHandlingSettingsCallDistribution) SetRingMode(val OptString) {
	s.RingMode = val
}

// SetSkipOfflineDevicePhoneNumber sets the value of SkipOfflineDevicePhoneNumber.
func (s *PatchCallHandlingSettingsCallHandlingSettingsCallDistribution) SetSkipOfflineDevicePhoneNumber(val OptBool) {
	s.SkipOfflineDevicePhoneNumber = val
}

// Ref: #/components/schemas/PatchCallHandlingSettingsCustomHours
type PatchCallHandlingSettingsCustomHours struct {
	Settings OptPatchCallHandlingSettingsCustomHoursSettings `json:"settings"`
	// The type of sub-setting:
	// * `custom_hours`.
	SubSettingType OptString `json:"sub_setting_type"`
}

// GetSettings returns the value of Settings.
func (s *PatchCallHandlingSettingsCustomHours) GetSettings() OptPatchCallHandlingSettingsCustomHoursSettings {
	return s.Settings
}

// GetSubSettingType returns the value of SubSettingType.
func (s *PatchCallHandlingSettingsCustomHours) GetSubSettingType() OptString {
	return s.SubSettingType
}

// SetSettings sets the value of Settings.
func (s *PatchCallHandlingSettingsCustomHours) SetSettings(val OptPatchCallHandlingSettingsCustomHoursSettings) {
	s.Settings = val
}

// SetSubSettingType sets the value of SubSettingType.
func (s *PatchCallHandlingSettingsCustomHours) SetSubSettingType(val OptString) {
	s.SubSettingType = val
}

type PatchCallHandlingSettingsCustomHoursSettings struct {
	// This field allows queue members to set their own business hours. This field allows queue members'
	// business hours to override the default hours of the call queue.
	// Only required for `Call Queue custom_hours` sub-setting.
	AllowMembersToReset OptBool `json:"allow_members_to_reset"`
	// The custom hours settings. It's only required for the `custom_hours` sub-setting.
	CustomHoursSettings []PatchCallHandlingSettingsCustomHoursSettingsCustomHoursSettingsItem `json:"custom_hours_settings"`
	// The type of custom hours:
	// * `1` &mdash; 24 hours, 7 days a week.
	// * `2` &mdash; Custom hours.
	// This is only required for the `custom_hours` sub-setting.
	Type OptInt `json:"type"`
}

// GetAllowMembersToReset returns the value of AllowMembersToReset.
func (s *PatchCallHandlingSettingsCustomHoursSettings) GetAllowMembersToReset() OptBool {
	return s.AllowMembersToReset
}

// GetCustomHoursSettings returns the value of CustomHoursSettings.
func (s *PatchCallHandlingSettingsCustomHoursSettings) GetCustomHoursSettings() []PatchCallHandlingSettingsCustomHoursSettingsCustomHoursSettingsItem {
	return s.CustomHoursSettings
}

// GetType returns the value of Type.
func (s *PatchCallHandlingSettingsCustomHoursSettings) GetType() OptInt {
	return s.Type
}

// SetAllowMembersToReset sets the value of AllowMembersToReset.
func (s *PatchCallHandlingSettingsCustomHoursSettings) SetAllowMembersToReset(val OptBool) {
	s.AllowMembersToReset = val
}

// SetCustomHoursSettings sets the value of CustomHoursSettings.
func (s *PatchCallHandlingSettingsCustomHoursSettings) SetCustomHoursSettings(val []PatchCallHandlingSettingsCustomHoursSettingsCustomHoursSettingsItem) {
	s.CustomHoursSettings = val
}

// SetType sets the value of Type.
func (s *PatchCallHandlingSettingsCustomHoursSettings) SetType(val OptInt) {
	s.Type = val
}

type PatchCallHandlingSettingsCustomHoursSettingsCustomHoursSettingsItem struct {
	// The custom hours start time `HH:mm` format.
	From OptString `json:"from"`
	// The custom hours end time in `HH:mm` format.
	To OptString `json:"to"`
	// The type of custom hours:
	// * `0` &mdash; Disabled.
	// * `1` &mdash; 24 hours.
	// * `2` &mdash; Customized hours.
	Type OptInt `json:"type"`
	// The day of the week:
	// * `1` &mdash; Sunday
	// * `2` &mdash; Monday
	// * `3` &mdash; Tuesday
	// * `4` &mdash; Wednesday
	// * `5` &mdash; Thursday
	// * `6` &mdash; Friday
	// * `7` &mdash; Saturday.
	Weekday OptInt `json:"weekday"`
}

// GetFrom returns the value of From.
func (s *PatchCallHandlingSettingsCustomHoursSettingsCustomHoursSettingsItem) GetFrom() OptString {
	return s.From
}

// GetTo returns the value of To.
func (s *PatchCallHandlingSettingsCustomHoursSettingsCustomHoursSettingsItem) GetTo() OptString {
	return s.To
}

// GetType returns the value of Type.
func (s *PatchCallHandlingSettingsCustomHoursSettingsCustomHoursSettingsItem) GetType() OptInt {
	return s.Type
}

// GetWeekday returns the value of Weekday.
func (s *PatchCallHandlingSettingsCustomHoursSettingsCustomHoursSettingsItem) GetWeekday() OptInt {
	return s.Weekday
}

// SetFrom sets the value of From.
func (s *PatchCallHandlingSettingsCustomHoursSettingsCustomHoursSettingsItem) SetFrom(val OptString) {
	s.From = val
}

// SetTo sets the value of To.
func (s *PatchCallHandlingSettingsCustomHoursSettingsCustomHoursSettingsItem) SetTo(val OptString) {
	s.To = val
}

// SetType sets the value of Type.
func (s *PatchCallHandlingSettingsCustomHoursSettingsCustomHoursSettingsItem) SetType(val OptInt) {
	s.Type = val
}

// SetWeekday sets the value of Weekday.
func (s *PatchCallHandlingSettingsCustomHoursSettingsCustomHoursSettingsItem) SetWeekday(val OptInt) {
	s.Weekday = val
}

// Ref: #/components/schemas/PatchCallHandlingSettingsHoliday
type PatchCallHandlingSettingsHoliday struct {
	Settings OptPatchCallHandlingSettingsHolidaySettings `json:"settings"`
	// The type of sub-setting:
	// * `holiday`.
	SubSettingType OptString `json:"sub_setting_type"`
}

// GetSettings returns the value of Settings.
func (s *PatchCallHandlingSettingsHoliday) GetSettings() OptPatchCallHandlingSettingsHolidaySettings {
	return s.Settings
}

// GetSubSettingType returns the value of SubSettingType.
func (s *PatchCallHandlingSettingsHoliday) GetSubSettingType() OptString {
	return s.SubSettingType
}

// SetSettings sets the value of Settings.
func (s *PatchCallHandlingSettingsHoliday) SetSettings(val OptPatchCallHandlingSettingsHolidaySettings) {
	s.Settings = val
}

// SetSubSettingType sets the value of SubSettingType.
func (s *PatchCallHandlingSettingsHoliday) SetSubSettingType(val OptString) {
	s.SubSettingType = val
}

type PatchCallHandlingSettingsHolidaySettings struct {
	// The holiday's start date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. It's required for the
	// `holiday` sub-setting.
	From OptDateTime `json:"from"`
	// The holiday's ID. It's required for the `holiday` sub-setting.
	HolidayID OptString `json:"holiday_id"`
	// The name of the holiday. It's required for the `holiday` sub-setting.
	Name OptString `json:"name"`
	// The holiday's end date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. It's required for the
	// `holiday` sub-setting.
	To OptDateTime `json:"to"`
}

// GetFrom returns the value of From.
func (s *PatchCallHandlingSettingsHolidaySettings) GetFrom() OptDateTime {
	return s.From
}

// GetHolidayID returns the value of HolidayID.
func (s *PatchCallHandlingSettingsHolidaySettings) GetHolidayID() OptString {
	return s.HolidayID
}

// GetName returns the value of Name.
func (s *PatchCallHandlingSettingsHolidaySettings) GetName() OptString {
	return s.Name
}

// GetTo returns the value of To.
func (s *PatchCallHandlingSettingsHolidaySettings) GetTo() OptDateTime {
	return s.To
}

// SetFrom sets the value of From.
func (s *PatchCallHandlingSettingsHolidaySettings) SetFrom(val OptDateTime) {
	s.From = val
}

// SetHolidayID sets the value of HolidayID.
func (s *PatchCallHandlingSettingsHolidaySettings) SetHolidayID(val OptString) {
	s.HolidayID = val
}

// SetName sets the value of Name.
func (s *PatchCallHandlingSettingsHolidaySettings) SetName(val OptString) {
	s.Name = val
}

// SetTo sets the value of To.
func (s *PatchCallHandlingSettingsHolidaySettings) SetTo(val OptDateTime) {
	s.To = val
}

// PhoneDownloadRecordingTranscriptOK is response for PhoneDownloadRecordingTranscript operation.
type PhoneDownloadRecordingTranscriptOK struct{}

// The Zoom account setting.
type PhoneSettingOK struct {
	// The BYOC setting.
	Byoc                    OptPhoneSettingOKByoc                    `json:"byoc"`
	Country                 OptPhoneSettingOKCountry                 `json:"country"`
	MultipleSites           OptPhoneSettingOKMultipleSites           `json:"multiple_sites"`
	ShowDeviceIPForCallLog  OptPhoneSettingOKShowDeviceIPForCallLog  `json:"show_device_ip_for_call_log"`
	MultiplePartyConference OptPhoneSettingOKMultiplePartyConference `json:"multiple_party_conference"`
	// The billing account setting.
	BillingAccount OptPhoneSettingOKBillingAccount `json:"billing_account"`
}

// GetByoc returns the value of Byoc.
func (s *PhoneSettingOK) GetByoc() OptPhoneSettingOKByoc {
	return s.Byoc
}

// GetCountry returns the value of Country.
func (s *PhoneSettingOK) GetCountry() OptPhoneSettingOKCountry {
	return s.Country
}

// GetMultipleSites returns the value of MultipleSites.
func (s *PhoneSettingOK) GetMultipleSites() OptPhoneSettingOKMultipleSites {
	return s.MultipleSites
}

// GetShowDeviceIPForCallLog returns the value of ShowDeviceIPForCallLog.
func (s *PhoneSettingOK) GetShowDeviceIPForCallLog() OptPhoneSettingOKShowDeviceIPForCallLog {
	return s.ShowDeviceIPForCallLog
}

// GetMultiplePartyConference returns the value of MultiplePartyConference.
func (s *PhoneSettingOK) GetMultiplePartyConference() OptPhoneSettingOKMultiplePartyConference {
	return s.MultiplePartyConference
}

// GetBillingAccount returns the value of BillingAccount.
func (s *PhoneSettingOK) GetBillingAccount() OptPhoneSettingOKBillingAccount {
	return s.BillingAccount
}

// SetByoc sets the value of Byoc.
func (s *PhoneSettingOK) SetByoc(val OptPhoneSettingOKByoc) {
	s.Byoc = val
}

// SetCountry sets the value of Country.
func (s *PhoneSettingOK) SetCountry(val OptPhoneSettingOKCountry) {
	s.Country = val
}

// SetMultipleSites sets the value of MultipleSites.
func (s *PhoneSettingOK) SetMultipleSites(val OptPhoneSettingOKMultipleSites) {
	s.MultipleSites = val
}

// SetShowDeviceIPForCallLog sets the value of ShowDeviceIPForCallLog.
func (s *PhoneSettingOK) SetShowDeviceIPForCallLog(val OptPhoneSettingOKShowDeviceIPForCallLog) {
	s.ShowDeviceIPForCallLog = val
}

// SetMultiplePartyConference sets the value of MultiplePartyConference.
func (s *PhoneSettingOK) SetMultiplePartyConference(val OptPhoneSettingOKMultiplePartyConference) {
	s.MultiplePartyConference = val
}

// SetBillingAccount sets the value of BillingAccount.
func (s *PhoneSettingOK) SetBillingAccount(val OptPhoneSettingOKBillingAccount) {
	s.BillingAccount = val
}

// The billing account setting.
type PhoneSettingOKBillingAccount struct {
	// The billing account ID.
	ID OptString `json:"id"`
	// The billing account name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *PhoneSettingOKBillingAccount) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *PhoneSettingOKBillingAccount) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *PhoneSettingOKBillingAccount) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *PhoneSettingOKBillingAccount) SetName(val OptString) {
	s.Name = val
}

// The BYOC setting.
type PhoneSettingOKByoc struct {
	// The swtich for the BYOC function.
	Enable OptBool `json:"enable"`
}

// GetEnable returns the value of Enable.
func (s *PhoneSettingOKByoc) GetEnable() OptBool {
	return s.Enable
}

// SetEnable sets the value of Enable.
func (s *PhoneSettingOKByoc) SetEnable(val OptBool) {
	s.Enable = val
}

type PhoneSettingOKCountry struct {
	// The country code.
	Code OptString `json:"code"`
	// The country name.
	Name OptString `json:"name"`
}

// GetCode returns the value of Code.
func (s *PhoneSettingOKCountry) GetCode() OptString {
	return s.Code
}

// GetName returns the value of Name.
func (s *PhoneSettingOKCountry) GetName() OptString {
	return s.Name
}

// SetCode sets the value of Code.
func (s *PhoneSettingOKCountry) SetCode(val OptString) {
	s.Code = val
}

// SetName sets the value of Name.
func (s *PhoneSettingOKCountry) SetName(val OptString) {
	s.Name = val
}

type PhoneSettingOKMultiplePartyConference struct {
	// If the value of this field is `true`, it allows multiple parties to join the conference.
	Enable OptBool `json:"enable"`
}

// GetEnable returns the value of Enable.
func (s *PhoneSettingOKMultiplePartyConference) GetEnable() OptBool {
	return s.Enable
}

// SetEnable sets the value of Enable.
func (s *PhoneSettingOKMultiplePartyConference) SetEnable(val OptBool) {
	s.Enable = val
}

type PhoneSettingOKMultipleSites struct {
	// The multiple sites switch.
	Enabled OptBool `json:"enabled"`
	// The site code switch.
	SiteCode OptBool `json:"site_code"`
}

// GetEnabled returns the value of Enabled.
func (s *PhoneSettingOKMultipleSites) GetEnabled() OptBool {
	return s.Enabled
}

// GetSiteCode returns the value of SiteCode.
func (s *PhoneSettingOKMultipleSites) GetSiteCode() OptBool {
	return s.SiteCode
}

// SetEnabled sets the value of Enabled.
func (s *PhoneSettingOKMultipleSites) SetEnabled(val OptBool) {
	s.Enabled = val
}

// SetSiteCode sets the value of SiteCode.
func (s *PhoneSettingOKMultipleSites) SetSiteCode(val OptBool) {
	s.SiteCode = val
}

type PhoneSettingOKShowDeviceIPForCallLog struct {
	// If the value of this field is `true`, it allows `/phone/call_logs` and
	// `/phone/call_logs/{callLogId}` APIs to show `device_public_ip` and `device_private_ip` in the
	// response.
	Enable OptBool `json:"enable"`
}

// GetEnable returns the value of Enable.
func (s *PhoneSettingOKShowDeviceIPForCallLog) GetEnable() OptBool {
	return s.Enable
}

// SetEnable sets the value of Enable.
func (s *PhoneSettingOKShowDeviceIPForCallLog) SetEnable(val OptBool) {
	s.Enable = val
}

// The phone user call logs.
type PhoneUserCallLogsOK struct {
	// The call Log.
	CallLogs []PhoneUserCallLogsOKCallLogsItem `json:"call_logs"`
	// The start time and date of the log.
	From OptString `json:"from"`
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The total number of pages.
	PageCount OptInt `json:"page_count"`
	// The number of records returned within a single API call for each page.
	PageSize OptInt `json:"page_size"`
	// The end time and date of the log.
	To OptString `json:"to"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
}

// GetCallLogs returns the value of CallLogs.
func (s *PhoneUserCallLogsOK) GetCallLogs() []PhoneUserCallLogsOKCallLogsItem {
	return s.CallLogs
}

// GetFrom returns the value of From.
func (s *PhoneUserCallLogsOK) GetFrom() OptString {
	return s.From
}

// GetNextPageToken returns the value of NextPageToken.
func (s *PhoneUserCallLogsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageCount returns the value of PageCount.
func (s *PhoneUserCallLogsOK) GetPageCount() OptInt {
	return s.PageCount
}

// GetPageSize returns the value of PageSize.
func (s *PhoneUserCallLogsOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTo returns the value of To.
func (s *PhoneUserCallLogsOK) GetTo() OptString {
	return s.To
}

// GetTotalRecords returns the value of TotalRecords.
func (s *PhoneUserCallLogsOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetCallLogs sets the value of CallLogs.
func (s *PhoneUserCallLogsOK) SetCallLogs(val []PhoneUserCallLogsOKCallLogsItem) {
	s.CallLogs = val
}

// SetFrom sets the value of From.
func (s *PhoneUserCallLogsOK) SetFrom(val OptString) {
	s.From = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *PhoneUserCallLogsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageCount sets the value of PageCount.
func (s *PhoneUserCallLogsOK) SetPageCount(val OptInt) {
	s.PageCount = val
}

// SetPageSize sets the value of PageSize.
func (s *PhoneUserCallLogsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTo sets the value of To.
func (s *PhoneUserCallLogsOK) SetTo(val OptString) {
	s.To = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *PhoneUserCallLogsOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type PhoneUserCallLogsOKCallLogsItem struct {
	// This field indicates who accepted the call.
	AcceptedBy OptPhoneUserCallLogsOKCallLogsItemAcceptedBy `json:"accepted_by"`
	// The call's answer time, in GMT `date-time` format. The API only displays this response if the
	// `direction` value is `inbound`.
	AnswerStartTime OptString `json:"answer_start_time"`
	// The call end time, in GMT `date-time` format.
	CallEndTime OptString `json:"call_end_time"`
	// The unique identifier of the phone call.
	CallID OptString `json:"call_id"`
	// The country calling code.
	CalleeCountryCode OptString `json:"callee_country_code"`
	// The ISO alpha2 country code.
	CalleeCountryIsoCode OptString `json:"callee_country_iso_code"`
	// The callee's DID (direct inward dial) number in e164 format.
	CalleeDidNumber OptString `json:"callee_did_number"`
	// The contact name of callee.
	CalleeName OptString `json:"callee_name"`
	// The number of the callee.
	CalleeNumber OptString `json:"callee_number"`
	// The callee's number type:
	// * `1` &mdash; Extension number.
	// * `2` &mdash; Phone number.
	// * `3` &mdash; Customized emergency number.
	CalleeNumberType OptInt `json:"callee_number_type"`
	// This field indicates where the phone number comes from:
	// * `internal` &mdash; ZP native.
	// * `external` &mdash; BYOC or Provider Exchange.
	// * `byop` &mdash; Premise peering.
	// Not available when `callee_number_type = 1`.
	CalleeNumberSource OptString `json:"callee_number_source"`
	// The country calling code.
	CallerCountryCode OptString `json:"caller_country_code"`
	// The ISO alpha2 country code.
	CallerCountryIsoCode OptString `json:"caller_country_iso_code"`
	// The caller's DID (direct inward dial) number in e164 format.
	CallerDidNumber OptString `json:"caller_did_number"`
	// The contact name of the caller.
	CallerName OptString `json:"caller_name"`
	// The number of the caller.
	CallerNumber OptString `json:"caller_number"`
	// The caller's number type:
	// * `1` &mdash; Extension number.
	// * `2` &mdash; Phone number.
	CallerNumberType OptInt `json:"caller_number_type"`
	// This field indicates where the phone number comes from:
	// * `internal` &mdash; ZP native.
	// * `external` &mdash; BYOC or Provider Exchange.
	// * `byop` &mdash; Premise peering.
	// Not available when `caller_number_type = 1`.
	CallerNumberSource OptString `json:"caller_number_source"`
	// The billing reference ID (for peering phone numbers).
	CallerBillingReferenceID OptString `json:"caller_billing_reference_id"`
	// The billing charge for the call.
	Charge OptString `json:"charge"`
	// The client code.
	ClientCode OptString `json:"client_code"`
	// The start time of the call.
	DateTime OptString `json:"date_time"`
	// The direction of the call. &quot;inbound&quot; | &quot;outbound&quot;.
	Direction OptString `json:"direction"`
	// The duration of the call in seconds.
	Duration OptInt `json:"duration"`
	// This field indicates where the call was forwarded from.
	ForwardedBy OptPhoneUserCallLogsOKCallLogsItemForwardedBy `json:"forwarded_by"`
	// The field indicates who the call was forwarded to.
	ForwardedTo OptPhoneUserCallLogsOKCallLogsItemForwardedTo `json:"forwarded_to"`
	// Whether the call has a recording. See [announcement](https://marketplace.zoom.
	// us/docs/guides/stay-up-to-date/announcements#deprecation-of-the-has_voicemail-and-has_recording-responses-in-phone-api) from July, 2021.
	//
	// Deprecated: schema marks this property as deprecated.
	HasRecording OptBool `json:"has_recording"`
	// Whether the call has a voicemail. See [announcement](https://marketplace.zoom.
	// us/docs/guides/stay-up-to-date/announcements#deprecation-of-the-has_voicemail-and-has_recording-responses-in-phone-api) from July, 2021.
	//
	// Deprecated: schema marks this property as deprecated.
	HasVoicemail OptBool `json:"has_voicemail"`
	// The call Log ID.
	ID         OptString                                    `json:"id"`
	OutgoingBy OptPhoneUserCallLogsOKCallLogsItemOutgoingBy `json:"outgoing_by"`
	// The path of the call log.
	Path OptString `json:"path"`
	// The billing rate for the call.
	Rate OptString `json:"rate"`
	// The recording type.
	// * `On-demand` recording.
	// * `Automatic` recording.
	RecordingType OptString `json:"recording_type"`
	// The result of the call: `Missed` | `Voicemail` | `Call connected` | `Rejected` | `Blocked`|
	// `Busy`| `Wrong Number`| `No Answer`| `International Disabled`| `Internal Error`| `Call failed` |
	// `Restricted Number`| `Call Cancel` | `Message`| `Answered by Other Member` | `Call Cancelled` |
	// `Park` | `Parked` | `Blocked by non-GAL` |  `Blocked by info-Barriers` | `Recording Failure`|
	// `Recorded`| `Auto Recorded`.
	Result OptString                              `json:"result"`
	Site   OptPhoneUserCallLogsOKCallLogsItemSite `json:"site"`
	// The user ID or user email.
	UserID OptString `json:"user_id"`
	// The hold time during a call in seconds.
	HoldTime OptInt `json:"hold_time"`
	// The time (in seconds) spent waiting for the call to be connected.
	WaitingTime OptInt `json:"waiting_time"`
	// The name of the user's department.
	Department OptString `json:"department"`
	// The cost center name to which a user belongs.
	CostCenter OptString `json:"cost_center"`
}

// GetAcceptedBy returns the value of AcceptedBy.
func (s *PhoneUserCallLogsOKCallLogsItem) GetAcceptedBy() OptPhoneUserCallLogsOKCallLogsItemAcceptedBy {
	return s.AcceptedBy
}

// GetAnswerStartTime returns the value of AnswerStartTime.
func (s *PhoneUserCallLogsOKCallLogsItem) GetAnswerStartTime() OptString {
	return s.AnswerStartTime
}

// GetCallEndTime returns the value of CallEndTime.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCallEndTime() OptString {
	return s.CallEndTime
}

// GetCallID returns the value of CallID.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCallID() OptString {
	return s.CallID
}

// GetCalleeCountryCode returns the value of CalleeCountryCode.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCalleeCountryCode() OptString {
	return s.CalleeCountryCode
}

// GetCalleeCountryIsoCode returns the value of CalleeCountryIsoCode.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCalleeCountryIsoCode() OptString {
	return s.CalleeCountryIsoCode
}

// GetCalleeDidNumber returns the value of CalleeDidNumber.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCalleeDidNumber() OptString {
	return s.CalleeDidNumber
}

// GetCalleeName returns the value of CalleeName.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCalleeName() OptString {
	return s.CalleeName
}

// GetCalleeNumber returns the value of CalleeNumber.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCalleeNumber() OptString {
	return s.CalleeNumber
}

// GetCalleeNumberType returns the value of CalleeNumberType.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCalleeNumberType() OptInt {
	return s.CalleeNumberType
}

// GetCalleeNumberSource returns the value of CalleeNumberSource.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCalleeNumberSource() OptString {
	return s.CalleeNumberSource
}

// GetCallerCountryCode returns the value of CallerCountryCode.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCallerCountryCode() OptString {
	return s.CallerCountryCode
}

// GetCallerCountryIsoCode returns the value of CallerCountryIsoCode.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCallerCountryIsoCode() OptString {
	return s.CallerCountryIsoCode
}

// GetCallerDidNumber returns the value of CallerDidNumber.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCallerDidNumber() OptString {
	return s.CallerDidNumber
}

// GetCallerName returns the value of CallerName.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCallerName() OptString {
	return s.CallerName
}

// GetCallerNumber returns the value of CallerNumber.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCallerNumber() OptString {
	return s.CallerNumber
}

// GetCallerNumberType returns the value of CallerNumberType.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCallerNumberType() OptInt {
	return s.CallerNumberType
}

// GetCallerNumberSource returns the value of CallerNumberSource.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCallerNumberSource() OptString {
	return s.CallerNumberSource
}

// GetCallerBillingReferenceID returns the value of CallerBillingReferenceID.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCallerBillingReferenceID() OptString {
	return s.CallerBillingReferenceID
}

// GetCharge returns the value of Charge.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCharge() OptString {
	return s.Charge
}

// GetClientCode returns the value of ClientCode.
func (s *PhoneUserCallLogsOKCallLogsItem) GetClientCode() OptString {
	return s.ClientCode
}

// GetDateTime returns the value of DateTime.
func (s *PhoneUserCallLogsOKCallLogsItem) GetDateTime() OptString {
	return s.DateTime
}

// GetDirection returns the value of Direction.
func (s *PhoneUserCallLogsOKCallLogsItem) GetDirection() OptString {
	return s.Direction
}

// GetDuration returns the value of Duration.
func (s *PhoneUserCallLogsOKCallLogsItem) GetDuration() OptInt {
	return s.Duration
}

// GetForwardedBy returns the value of ForwardedBy.
func (s *PhoneUserCallLogsOKCallLogsItem) GetForwardedBy() OptPhoneUserCallLogsOKCallLogsItemForwardedBy {
	return s.ForwardedBy
}

// GetForwardedTo returns the value of ForwardedTo.
func (s *PhoneUserCallLogsOKCallLogsItem) GetForwardedTo() OptPhoneUserCallLogsOKCallLogsItemForwardedTo {
	return s.ForwardedTo
}

// GetHasRecording returns the value of HasRecording.
func (s *PhoneUserCallLogsOKCallLogsItem) GetHasRecording() OptBool {
	return s.HasRecording
}

// GetHasVoicemail returns the value of HasVoicemail.
func (s *PhoneUserCallLogsOKCallLogsItem) GetHasVoicemail() OptBool {
	return s.HasVoicemail
}

// GetID returns the value of ID.
func (s *PhoneUserCallLogsOKCallLogsItem) GetID() OptString {
	return s.ID
}

// GetOutgoingBy returns the value of OutgoingBy.
func (s *PhoneUserCallLogsOKCallLogsItem) GetOutgoingBy() OptPhoneUserCallLogsOKCallLogsItemOutgoingBy {
	return s.OutgoingBy
}

// GetPath returns the value of Path.
func (s *PhoneUserCallLogsOKCallLogsItem) GetPath() OptString {
	return s.Path
}

// GetRate returns the value of Rate.
func (s *PhoneUserCallLogsOKCallLogsItem) GetRate() OptString {
	return s.Rate
}

// GetRecordingType returns the value of RecordingType.
func (s *PhoneUserCallLogsOKCallLogsItem) GetRecordingType() OptString {
	return s.RecordingType
}

// GetResult returns the value of Result.
func (s *PhoneUserCallLogsOKCallLogsItem) GetResult() OptString {
	return s.Result
}

// GetSite returns the value of Site.
func (s *PhoneUserCallLogsOKCallLogsItem) GetSite() OptPhoneUserCallLogsOKCallLogsItemSite {
	return s.Site
}

// GetUserID returns the value of UserID.
func (s *PhoneUserCallLogsOKCallLogsItem) GetUserID() OptString {
	return s.UserID
}

// GetHoldTime returns the value of HoldTime.
func (s *PhoneUserCallLogsOKCallLogsItem) GetHoldTime() OptInt {
	return s.HoldTime
}

// GetWaitingTime returns the value of WaitingTime.
func (s *PhoneUserCallLogsOKCallLogsItem) GetWaitingTime() OptInt {
	return s.WaitingTime
}

// GetDepartment returns the value of Department.
func (s *PhoneUserCallLogsOKCallLogsItem) GetDepartment() OptString {
	return s.Department
}

// GetCostCenter returns the value of CostCenter.
func (s *PhoneUserCallLogsOKCallLogsItem) GetCostCenter() OptString {
	return s.CostCenter
}

// SetAcceptedBy sets the value of AcceptedBy.
func (s *PhoneUserCallLogsOKCallLogsItem) SetAcceptedBy(val OptPhoneUserCallLogsOKCallLogsItemAcceptedBy) {
	s.AcceptedBy = val
}

// SetAnswerStartTime sets the value of AnswerStartTime.
func (s *PhoneUserCallLogsOKCallLogsItem) SetAnswerStartTime(val OptString) {
	s.AnswerStartTime = val
}

// SetCallEndTime sets the value of CallEndTime.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCallEndTime(val OptString) {
	s.CallEndTime = val
}

// SetCallID sets the value of CallID.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCallID(val OptString) {
	s.CallID = val
}

// SetCalleeCountryCode sets the value of CalleeCountryCode.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCalleeCountryCode(val OptString) {
	s.CalleeCountryCode = val
}

// SetCalleeCountryIsoCode sets the value of CalleeCountryIsoCode.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCalleeCountryIsoCode(val OptString) {
	s.CalleeCountryIsoCode = val
}

// SetCalleeDidNumber sets the value of CalleeDidNumber.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCalleeDidNumber(val OptString) {
	s.CalleeDidNumber = val
}

// SetCalleeName sets the value of CalleeName.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCalleeName(val OptString) {
	s.CalleeName = val
}

// SetCalleeNumber sets the value of CalleeNumber.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCalleeNumber(val OptString) {
	s.CalleeNumber = val
}

// SetCalleeNumberType sets the value of CalleeNumberType.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCalleeNumberType(val OptInt) {
	s.CalleeNumberType = val
}

// SetCalleeNumberSource sets the value of CalleeNumberSource.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCalleeNumberSource(val OptString) {
	s.CalleeNumberSource = val
}

// SetCallerCountryCode sets the value of CallerCountryCode.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCallerCountryCode(val OptString) {
	s.CallerCountryCode = val
}

// SetCallerCountryIsoCode sets the value of CallerCountryIsoCode.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCallerCountryIsoCode(val OptString) {
	s.CallerCountryIsoCode = val
}

// SetCallerDidNumber sets the value of CallerDidNumber.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCallerDidNumber(val OptString) {
	s.CallerDidNumber = val
}

// SetCallerName sets the value of CallerName.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCallerName(val OptString) {
	s.CallerName = val
}

// SetCallerNumber sets the value of CallerNumber.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCallerNumber(val OptString) {
	s.CallerNumber = val
}

// SetCallerNumberType sets the value of CallerNumberType.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCallerNumberType(val OptInt) {
	s.CallerNumberType = val
}

// SetCallerNumberSource sets the value of CallerNumberSource.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCallerNumberSource(val OptString) {
	s.CallerNumberSource = val
}

// SetCallerBillingReferenceID sets the value of CallerBillingReferenceID.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCallerBillingReferenceID(val OptString) {
	s.CallerBillingReferenceID = val
}

// SetCharge sets the value of Charge.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCharge(val OptString) {
	s.Charge = val
}

// SetClientCode sets the value of ClientCode.
func (s *PhoneUserCallLogsOKCallLogsItem) SetClientCode(val OptString) {
	s.ClientCode = val
}

// SetDateTime sets the value of DateTime.
func (s *PhoneUserCallLogsOKCallLogsItem) SetDateTime(val OptString) {
	s.DateTime = val
}

// SetDirection sets the value of Direction.
func (s *PhoneUserCallLogsOKCallLogsItem) SetDirection(val OptString) {
	s.Direction = val
}

// SetDuration sets the value of Duration.
func (s *PhoneUserCallLogsOKCallLogsItem) SetDuration(val OptInt) {
	s.Duration = val
}

// SetForwardedBy sets the value of ForwardedBy.
func (s *PhoneUserCallLogsOKCallLogsItem) SetForwardedBy(val OptPhoneUserCallLogsOKCallLogsItemForwardedBy) {
	s.ForwardedBy = val
}

// SetForwardedTo sets the value of ForwardedTo.
func (s *PhoneUserCallLogsOKCallLogsItem) SetForwardedTo(val OptPhoneUserCallLogsOKCallLogsItemForwardedTo) {
	s.ForwardedTo = val
}

// SetHasRecording sets the value of HasRecording.
func (s *PhoneUserCallLogsOKCallLogsItem) SetHasRecording(val OptBool) {
	s.HasRecording = val
}

// SetHasVoicemail sets the value of HasVoicemail.
func (s *PhoneUserCallLogsOKCallLogsItem) SetHasVoicemail(val OptBool) {
	s.HasVoicemail = val
}

// SetID sets the value of ID.
func (s *PhoneUserCallLogsOKCallLogsItem) SetID(val OptString) {
	s.ID = val
}

// SetOutgoingBy sets the value of OutgoingBy.
func (s *PhoneUserCallLogsOKCallLogsItem) SetOutgoingBy(val OptPhoneUserCallLogsOKCallLogsItemOutgoingBy) {
	s.OutgoingBy = val
}

// SetPath sets the value of Path.
func (s *PhoneUserCallLogsOKCallLogsItem) SetPath(val OptString) {
	s.Path = val
}

// SetRate sets the value of Rate.
func (s *PhoneUserCallLogsOKCallLogsItem) SetRate(val OptString) {
	s.Rate = val
}

// SetRecordingType sets the value of RecordingType.
func (s *PhoneUserCallLogsOKCallLogsItem) SetRecordingType(val OptString) {
	s.RecordingType = val
}

// SetResult sets the value of Result.
func (s *PhoneUserCallLogsOKCallLogsItem) SetResult(val OptString) {
	s.Result = val
}

// SetSite sets the value of Site.
func (s *PhoneUserCallLogsOKCallLogsItem) SetSite(val OptPhoneUserCallLogsOKCallLogsItemSite) {
	s.Site = val
}

// SetUserID sets the value of UserID.
func (s *PhoneUserCallLogsOKCallLogsItem) SetUserID(val OptString) {
	s.UserID = val
}

// SetHoldTime sets the value of HoldTime.
func (s *PhoneUserCallLogsOKCallLogsItem) SetHoldTime(val OptInt) {
	s.HoldTime = val
}

// SetWaitingTime sets the value of WaitingTime.
func (s *PhoneUserCallLogsOKCallLogsItem) SetWaitingTime(val OptInt) {
	s.WaitingTime = val
}

// SetDepartment sets the value of Department.
func (s *PhoneUserCallLogsOKCallLogsItem) SetDepartment(val OptString) {
	s.Department = val
}

// SetCostCenter sets the value of CostCenter.
func (s *PhoneUserCallLogsOKCallLogsItem) SetCostCenter(val OptString) {
	s.CostCenter = val
}

// This field indicates who accepted the call.
type PhoneUserCallLogsOKCallLogsItemAcceptedBy struct {
	ExtensionNumber OptString `json:"extension_number"`
	Location        OptString `json:"location"`
	Name            OptString `json:"name"`
	// The phone number types: `1` - Extension `2`- E164 number `3` - Custom number.
	NumberType  OptInt    `json:"number_type"`
	PhoneNumber OptString `json:"phone_number"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *PhoneUserCallLogsOKCallLogsItemAcceptedBy) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetLocation returns the value of Location.
func (s *PhoneUserCallLogsOKCallLogsItemAcceptedBy) GetLocation() OptString {
	return s.Location
}

// GetName returns the value of Name.
func (s *PhoneUserCallLogsOKCallLogsItemAcceptedBy) GetName() OptString {
	return s.Name
}

// GetNumberType returns the value of NumberType.
func (s *PhoneUserCallLogsOKCallLogsItemAcceptedBy) GetNumberType() OptInt {
	return s.NumberType
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *PhoneUserCallLogsOKCallLogsItemAcceptedBy) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *PhoneUserCallLogsOKCallLogsItemAcceptedBy) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetLocation sets the value of Location.
func (s *PhoneUserCallLogsOKCallLogsItemAcceptedBy) SetLocation(val OptString) {
	s.Location = val
}

// SetName sets the value of Name.
func (s *PhoneUserCallLogsOKCallLogsItemAcceptedBy) SetName(val OptString) {
	s.Name = val
}

// SetNumberType sets the value of NumberType.
func (s *PhoneUserCallLogsOKCallLogsItemAcceptedBy) SetNumberType(val OptInt) {
	s.NumberType = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *PhoneUserCallLogsOKCallLogsItemAcceptedBy) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// This field indicates where the call was forwarded from.
type PhoneUserCallLogsOKCallLogsItemForwardedBy struct {
	ExtensionNumber OptString `json:"extension_number"`
	ExtensionType   OptString `json:"extension_type"`
	Location        OptString `json:"location"`
	Name            OptString `json:"name"`
	// The phone number types: `1` - Extension `2`- E164 number `3` - Custom number.
	NumberType  OptInt    `json:"number_type"`
	PhoneNumber OptString `json:"phone_number"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedBy) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedBy) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetLocation returns the value of Location.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedBy) GetLocation() OptString {
	return s.Location
}

// GetName returns the value of Name.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedBy) GetName() OptString {
	return s.Name
}

// GetNumberType returns the value of NumberType.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedBy) GetNumberType() OptInt {
	return s.NumberType
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedBy) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedBy) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedBy) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetLocation sets the value of Location.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedBy) SetLocation(val OptString) {
	s.Location = val
}

// SetName sets the value of Name.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedBy) SetName(val OptString) {
	s.Name = val
}

// SetNumberType sets the value of NumberType.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedBy) SetNumberType(val OptInt) {
	s.NumberType = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedBy) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// The field indicates who the call was forwarded to.
type PhoneUserCallLogsOKCallLogsItemForwardedTo struct {
	ExtensionNumber OptString `json:"extension_number"`
	Location        OptString `json:"location"`
	Name            OptString `json:"name"`
	// The phone number types: `1` - Extension `2`- E164 number `3` - Custom number.
	NumberType  OptInt    `json:"number_type"`
	PhoneNumber OptString `json:"phone_number"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedTo) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetLocation returns the value of Location.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedTo) GetLocation() OptString {
	return s.Location
}

// GetName returns the value of Name.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedTo) GetName() OptString {
	return s.Name
}

// GetNumberType returns the value of NumberType.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedTo) GetNumberType() OptInt {
	return s.NumberType
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedTo) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedTo) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetLocation sets the value of Location.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedTo) SetLocation(val OptString) {
	s.Location = val
}

// SetName sets the value of Name.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedTo) SetName(val OptString) {
	s.Name = val
}

// SetNumberType sets the value of NumberType.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedTo) SetNumberType(val OptInt) {
	s.NumberType = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *PhoneUserCallLogsOKCallLogsItemForwardedTo) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

type PhoneUserCallLogsOKCallLogsItemOutgoingBy struct {
	ExtensionNumber OptString `json:"extension_number"`
	Location        OptString `json:"location"`
	Name            OptString `json:"name"`
	// The phone number types: `1` - Extension `2`- E164 number `3` - Custom number.
	NumberType  OptInt    `json:"number_type"`
	PhoneNumber OptString `json:"phone_number"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *PhoneUserCallLogsOKCallLogsItemOutgoingBy) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetLocation returns the value of Location.
func (s *PhoneUserCallLogsOKCallLogsItemOutgoingBy) GetLocation() OptString {
	return s.Location
}

// GetName returns the value of Name.
func (s *PhoneUserCallLogsOKCallLogsItemOutgoingBy) GetName() OptString {
	return s.Name
}

// GetNumberType returns the value of NumberType.
func (s *PhoneUserCallLogsOKCallLogsItemOutgoingBy) GetNumberType() OptInt {
	return s.NumberType
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *PhoneUserCallLogsOKCallLogsItemOutgoingBy) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *PhoneUserCallLogsOKCallLogsItemOutgoingBy) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetLocation sets the value of Location.
func (s *PhoneUserCallLogsOKCallLogsItemOutgoingBy) SetLocation(val OptString) {
	s.Location = val
}

// SetName sets the value of Name.
func (s *PhoneUserCallLogsOKCallLogsItemOutgoingBy) SetName(val OptString) {
	s.Name = val
}

// SetNumberType sets the value of NumberType.
func (s *PhoneUserCallLogsOKCallLogsItemOutgoingBy) SetNumberType(val OptInt) {
	s.NumberType = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *PhoneUserCallLogsOKCallLogsItemOutgoingBy) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

type PhoneUserCallLogsOKCallLogsItemSite struct {
	// The target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites)
	// in which the phone number was assigned. Sites allow you to organize the phone users in your
	// organization. For example, you sites could be created based on different office locations.
	ID OptString `json:"id"`
	// The name of the site where the phone number is assigned.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *PhoneUserCallLogsOKCallLogsItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *PhoneUserCallLogsOKCallLogsItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *PhoneUserCallLogsOKCallLogsItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *PhoneUserCallLogsOKCallLogsItemSite) SetName(val OptString) {
	s.Name = val
}

// The Zoom user profile.
type PhoneUserOK struct {
	// The calling plan of the user.
	CallingPlans []PhoneUserOKCallingPlansItem `json:"calling_plans"`
	// The cost center name.
	CostCenter OptString `json:"cost_center"`
	// The department name.
	Department OptString `json:"department"`
	// The email address of the user.
	Email            OptString                      `json:"email"`
	EmergencyAddress OptPhoneUserOKEmergencyAddress `json:"emergency_address"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The Zoom user ID.
	ID           OptString                     `json:"id"`
	PhoneNumbers []PhoneUserOKPhoneNumbersItem `json:"phone_numbers"`
	// The Zoom phone user ID.
	PhoneUserID OptString `json:"phone_user_id"`
	// A list of the user's policies. Policies are exceptions to the user's calling plan restrictions.
	Policy OptPhoneUserOKPolicy `json:"policy"`
	// Whether the user is a [site admin](https://support.zoom.us/hc/en-us/articles/360042099012) or not.
	SiteAdmin OptBool `json:"site_admin"`
	// The unique identifier of a [site](https://support.zoom.us/hc/en-us/articles/360020809672).
	SiteID OptString `json:"site_id"`
	// The status of the user.
	// `activate`: An active user.
	// `deactivate`: User has been deactivated from the Zoom Phone system.
	Status OptString `json:"status"`
}

// GetCallingPlans returns the value of CallingPlans.
func (s *PhoneUserOK) GetCallingPlans() []PhoneUserOKCallingPlansItem {
	return s.CallingPlans
}

// GetCostCenter returns the value of CostCenter.
func (s *PhoneUserOK) GetCostCenter() OptString {
	return s.CostCenter
}

// GetDepartment returns the value of Department.
func (s *PhoneUserOK) GetDepartment() OptString {
	return s.Department
}

// GetEmail returns the value of Email.
func (s *PhoneUserOK) GetEmail() OptString {
	return s.Email
}

// GetEmergencyAddress returns the value of EmergencyAddress.
func (s *PhoneUserOK) GetEmergencyAddress() OptPhoneUserOKEmergencyAddress {
	return s.EmergencyAddress
}

// GetExtensionID returns the value of ExtensionID.
func (s *PhoneUserOK) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *PhoneUserOK) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *PhoneUserOK) GetID() OptString {
	return s.ID
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *PhoneUserOK) GetPhoneNumbers() []PhoneUserOKPhoneNumbersItem {
	return s.PhoneNumbers
}

// GetPhoneUserID returns the value of PhoneUserID.
func (s *PhoneUserOK) GetPhoneUserID() OptString {
	return s.PhoneUserID
}

// GetPolicy returns the value of Policy.
func (s *PhoneUserOK) GetPolicy() OptPhoneUserOKPolicy {
	return s.Policy
}

// GetSiteAdmin returns the value of SiteAdmin.
func (s *PhoneUserOK) GetSiteAdmin() OptBool {
	return s.SiteAdmin
}

// GetSiteID returns the value of SiteID.
func (s *PhoneUserOK) GetSiteID() OptString {
	return s.SiteID
}

// GetStatus returns the value of Status.
func (s *PhoneUserOK) GetStatus() OptString {
	return s.Status
}

// SetCallingPlans sets the value of CallingPlans.
func (s *PhoneUserOK) SetCallingPlans(val []PhoneUserOKCallingPlansItem) {
	s.CallingPlans = val
}

// SetCostCenter sets the value of CostCenter.
func (s *PhoneUserOK) SetCostCenter(val OptString) {
	s.CostCenter = val
}

// SetDepartment sets the value of Department.
func (s *PhoneUserOK) SetDepartment(val OptString) {
	s.Department = val
}

// SetEmail sets the value of Email.
func (s *PhoneUserOK) SetEmail(val OptString) {
	s.Email = val
}

// SetEmergencyAddress sets the value of EmergencyAddress.
func (s *PhoneUserOK) SetEmergencyAddress(val OptPhoneUserOKEmergencyAddress) {
	s.EmergencyAddress = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *PhoneUserOK) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *PhoneUserOK) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *PhoneUserOK) SetID(val OptString) {
	s.ID = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *PhoneUserOK) SetPhoneNumbers(val []PhoneUserOKPhoneNumbersItem) {
	s.PhoneNumbers = val
}

// SetPhoneUserID sets the value of PhoneUserID.
func (s *PhoneUserOK) SetPhoneUserID(val OptString) {
	s.PhoneUserID = val
}

// SetPolicy sets the value of Policy.
func (s *PhoneUserOK) SetPolicy(val OptPhoneUserOKPolicy) {
	s.Policy = val
}

// SetSiteAdmin sets the value of SiteAdmin.
func (s *PhoneUserOK) SetSiteAdmin(val OptBool) {
	s.SiteAdmin = val
}

// SetSiteID sets the value of SiteID.
func (s *PhoneUserOK) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetStatus sets the value of Status.
func (s *PhoneUserOK) SetStatus(val OptString) {
	s.Status = val
}

type PhoneUserOKCallingPlansItem struct {
	// The [type](https://marketplace.zoom.
	// us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of calling plan.
	Type OptInt `json:"type"`
	// The billing account ID. It displays when the user is located in India.
	BillingAccountID OptString `json:"billing_account_id"`
	// The billing account name. It displays when the user is located in India.
	BillingAccountName OptString `json:"billing_account_name"`
}

// GetType returns the value of Type.
func (s *PhoneUserOKCallingPlansItem) GetType() OptInt {
	return s.Type
}

// GetBillingAccountID returns the value of BillingAccountID.
func (s *PhoneUserOKCallingPlansItem) GetBillingAccountID() OptString {
	return s.BillingAccountID
}

// GetBillingAccountName returns the value of BillingAccountName.
func (s *PhoneUserOKCallingPlansItem) GetBillingAccountName() OptString {
	return s.BillingAccountName
}

// SetType sets the value of Type.
func (s *PhoneUserOKCallingPlansItem) SetType(val OptInt) {
	s.Type = val
}

// SetBillingAccountID sets the value of BillingAccountID.
func (s *PhoneUserOKCallingPlansItem) SetBillingAccountID(val OptString) {
	s.BillingAccountID = val
}

// SetBillingAccountName sets the value of BillingAccountName.
func (s *PhoneUserOKCallingPlansItem) SetBillingAccountName(val OptString) {
	s.BillingAccountName = val
}

type PhoneUserOKEmergencyAddress struct {
	// The address Line 1 of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that contains the house number and
	// street name.
	AddressLine1 OptString `json:"address_line1"`
	// The address Line 2 of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that contains the building number,
	// floor number, unit, and others.
	AddressLine2 OptString `json:"address_line2"`
	// The city of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	City OptString `json:"city"`
	// The two-lettered country code (Alpha-2 code in ISO-3166 format) standard of the site's [emergency
	// address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	Country OptString `json:"country"`
	// The emergency address ID.
	ID OptString `json:"id"`
	// The state code of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	StateCode OptString `json:"state_code"`
	// The zip code of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	Zip OptString `json:"zip"`
}

// GetAddressLine1 returns the value of AddressLine1.
func (s *PhoneUserOKEmergencyAddress) GetAddressLine1() OptString {
	return s.AddressLine1
}

// GetAddressLine2 returns the value of AddressLine2.
func (s *PhoneUserOKEmergencyAddress) GetAddressLine2() OptString {
	return s.AddressLine2
}

// GetCity returns the value of City.
func (s *PhoneUserOKEmergencyAddress) GetCity() OptString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *PhoneUserOKEmergencyAddress) GetCountry() OptString {
	return s.Country
}

// GetID returns the value of ID.
func (s *PhoneUserOKEmergencyAddress) GetID() OptString {
	return s.ID
}

// GetStateCode returns the value of StateCode.
func (s *PhoneUserOKEmergencyAddress) GetStateCode() OptString {
	return s.StateCode
}

// GetZip returns the value of Zip.
func (s *PhoneUserOKEmergencyAddress) GetZip() OptString {
	return s.Zip
}

// SetAddressLine1 sets the value of AddressLine1.
func (s *PhoneUserOKEmergencyAddress) SetAddressLine1(val OptString) {
	s.AddressLine1 = val
}

// SetAddressLine2 sets the value of AddressLine2.
func (s *PhoneUserOKEmergencyAddress) SetAddressLine2(val OptString) {
	s.AddressLine2 = val
}

// SetCity sets the value of City.
func (s *PhoneUserOKEmergencyAddress) SetCity(val OptString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *PhoneUserOKEmergencyAddress) SetCountry(val OptString) {
	s.Country = val
}

// SetID sets the value of ID.
func (s *PhoneUserOKEmergencyAddress) SetID(val OptString) {
	s.ID = val
}

// SetStateCode sets the value of StateCode.
func (s *PhoneUserOKEmergencyAddress) SetStateCode(val OptString) {
	s.StateCode = val
}

// SetZip sets the value of Zip.
func (s *PhoneUserOKEmergencyAddress) SetZip(val OptString) {
	s.Zip = val
}

type PhoneUserOKPhoneNumbersItem struct {
	// The phone number ID.
	ID OptString `json:"id"`
	// The phone number.
	Number OptString `json:"number"`
}

// GetID returns the value of ID.
func (s *PhoneUserOKPhoneNumbersItem) GetID() OptString {
	return s.ID
}

// GetNumber returns the value of Number.
func (s *PhoneUserOKPhoneNumbersItem) GetNumber() OptString {
	return s.Number
}

// SetID sets the value of ID.
func (s *PhoneUserOKPhoneNumbersItem) SetID(val OptString) {
	s.ID = val
}

// SetNumber sets the value of Number.
func (s *PhoneUserOKPhoneNumbersItem) SetNumber(val OptString) {
	s.Number = val
}

// A list of the user's policies. Policies are exceptions to the user's calling plan restrictions.
type PhoneUserOKPolicy struct {
	// A list of ad hoc call recording settings.
	AdHocCallRecording OptPhoneUserOKPolicyAdHocCallRecording `json:"ad_hoc_call_recording"`
	// The shared ad hoc call recording access member list.
	AdHocCallRecordingAccessMembers []PhoneUserOKPolicyAdHocCallRecordingAccessMembersItem `json:"ad_hoc_call_recording_access_members"`
	// A list of the user's automatic call recording settings.
	AutoCallRecording OptPhoneUserOKPolicyAutoCallRecording `json:"auto_call_recording"`
	// The shared automatic call recording access member list.
	AutoCallRecordingAccessMembers []PhoneUserOKPolicyAutoCallRecordingAccessMembersItem `json:"auto_call_recording_access_members"`
	CallOverflow                   OptPhoneUserOKPolicyCallOverflow                      `json:"call_overflow"`
	CallPark                       OptPhoneUserOKPolicyCallPark                          `json:"call_park"`
	CallTransferring               OptPhoneUserOKPolicyCallTransferring                  `json:"call_transferring"`
	// Whether the user can use [call delegation](https://support.zoom.
	// us/hc/en-us/articles/360032881731-Setting-up-call-delegation-shared-lines-appearance-).
	Delegation OptBool `json:"delegation"`
	// Whether the user can elevate their phone calls to a meeting.
	ElevateToMeeting           OptBool                                        `json:"elevate_to_meeting"`
	EmergencyAddressManagement OptPhoneUserOKPolicyEmergencyAddressManagement `json:"emergency_address_management"`
	// When disabled, emergency calls placed by the user will not be delivered to the Public Safety
	// Answering Point(PSAP), but still will be delivered to the Internal Safety Response Team based on
	// the settings.
	EmergencyCallsToPsap OptBool `json:"emergency_calls_to_psap"`
	// Whether call forwarding to external numbers is enabled. Use the
	// `call_handling_forwarding_to_other_users` instead.
	//
	// Deprecated: schema marks this property as deprecated.
	ForwardingToExternalNumbers OptBool `json:"forwarding_to_external_numbers"`
	// Whether to allow the user to forward calls to other numbers.
	CallHandlingForwardingToOtherUsers OptPhoneUserOKPolicyCallHandlingForwardingToOtherUsers `json:"call_handling_forwarding_to_other_users"`
	HandOffToRoom                      OptPhoneUserOKPolicyHandOffToRoom                      `json:"hand_off_to_room"`
	// Whether the current extension can make international calls outside of their calling plan.
	InternationalCalling   OptBool                                    `json:"international_calling"`
	MobileSwitchToCarrier  OptPhoneUserOKPolicyMobileSwitchToCarrier  `json:"mobile_switch_to_carrier"`
	SelectOutboundCallerID OptPhoneUserOKPolicySelectOutboundCallerID `json:"select_outbound_caller_id"`
	SMS                    OptPhoneUserOKPolicySMS                    `json:"sms"`
	Voicemail              OptPhoneUserOKPolicyVoicemail              `json:"voicemail"`
	// The shared voicemail access member list.
	VoicemailAccessMembers             []PhoneUserOKPolicyVoicemailAccessMembersItem          `json:"voicemail_access_members"`
	ZoomPhoneOnMobile                  OptPhoneUserOKPolicyZoomPhoneOnMobile                  `json:"zoom_phone_on_mobile"`
	PersonalAudioLibrary               OptPhoneUserOKPolicyPersonalAudioLibrary               `json:"personal_audio_library"`
	VoicemailTranscription             OptPhoneUserOKPolicyVoicemailTranscription             `json:"voicemail_transcription"`
	VoicemailNotificationByEmail       OptPhoneUserOKPolicyVoicemailNotificationByEmail       `json:"voicemail_notification_by_email"`
	SharedVoicemailNotificationByEmail OptPhoneUserOKPolicySharedVoicemailNotificationByEmail `json:"shared_voicemail_notification_by_email"`
	// Whether the user can check voicemails of users and shared line groups over phone using a PIN code.
	CheckVoicemailsOverPhone OptPhoneUserOKPolicyCheckVoicemailsOverPhone `json:"check_voicemails_over_phone"`
	// Whether the user can use audio intercom.
	AudioIntercom OptPhoneUserOKPolicyAudioIntercom `json:"audio_intercom"`
	// Whether to allow Zoom clients to send media directly to each other. Users or devices that have
	// certain features like recording or monitoring enabled may not be able to use the peer to peer
	// media sharing feature.
	PeerToPeerMedia              OptPhoneUserOKPolicyPeerToPeerMedia              `json:"peer_to_peer_media"`
	E2eEncryption                OptPhoneUserOKPolicyE2eEncryption                `json:"e2e_encryption"`
	OutboundCalling              OptPhoneUserOKPolicyOutboundCalling              `json:"outbound_calling"`
	OutboundSMS                  OptPhoneUserOKPolicyOutboundSMS                  `json:"outbound_sms"`
	AllowEndUserEditCallHandling OptPhoneUserOKPolicyAllowEndUserEditCallHandling `json:"allow_end_user_edit_call_handling"`
}

// GetAdHocCallRecording returns the value of AdHocCallRecording.
func (s *PhoneUserOKPolicy) GetAdHocCallRecording() OptPhoneUserOKPolicyAdHocCallRecording {
	return s.AdHocCallRecording
}

// GetAdHocCallRecordingAccessMembers returns the value of AdHocCallRecordingAccessMembers.
func (s *PhoneUserOKPolicy) GetAdHocCallRecordingAccessMembers() []PhoneUserOKPolicyAdHocCallRecordingAccessMembersItem {
	return s.AdHocCallRecordingAccessMembers
}

// GetAutoCallRecording returns the value of AutoCallRecording.
func (s *PhoneUserOKPolicy) GetAutoCallRecording() OptPhoneUserOKPolicyAutoCallRecording {
	return s.AutoCallRecording
}

// GetAutoCallRecordingAccessMembers returns the value of AutoCallRecordingAccessMembers.
func (s *PhoneUserOKPolicy) GetAutoCallRecordingAccessMembers() []PhoneUserOKPolicyAutoCallRecordingAccessMembersItem {
	return s.AutoCallRecordingAccessMembers
}

// GetCallOverflow returns the value of CallOverflow.
func (s *PhoneUserOKPolicy) GetCallOverflow() OptPhoneUserOKPolicyCallOverflow {
	return s.CallOverflow
}

// GetCallPark returns the value of CallPark.
func (s *PhoneUserOKPolicy) GetCallPark() OptPhoneUserOKPolicyCallPark {
	return s.CallPark
}

// GetCallTransferring returns the value of CallTransferring.
func (s *PhoneUserOKPolicy) GetCallTransferring() OptPhoneUserOKPolicyCallTransferring {
	return s.CallTransferring
}

// GetDelegation returns the value of Delegation.
func (s *PhoneUserOKPolicy) GetDelegation() OptBool {
	return s.Delegation
}

// GetElevateToMeeting returns the value of ElevateToMeeting.
func (s *PhoneUserOKPolicy) GetElevateToMeeting() OptBool {
	return s.ElevateToMeeting
}

// GetEmergencyAddressManagement returns the value of EmergencyAddressManagement.
func (s *PhoneUserOKPolicy) GetEmergencyAddressManagement() OptPhoneUserOKPolicyEmergencyAddressManagement {
	return s.EmergencyAddressManagement
}

// GetEmergencyCallsToPsap returns the value of EmergencyCallsToPsap.
func (s *PhoneUserOKPolicy) GetEmergencyCallsToPsap() OptBool {
	return s.EmergencyCallsToPsap
}

// GetForwardingToExternalNumbers returns the value of ForwardingToExternalNumbers.
func (s *PhoneUserOKPolicy) GetForwardingToExternalNumbers() OptBool {
	return s.ForwardingToExternalNumbers
}

// GetCallHandlingForwardingToOtherUsers returns the value of CallHandlingForwardingToOtherUsers.
func (s *PhoneUserOKPolicy) GetCallHandlingForwardingToOtherUsers() OptPhoneUserOKPolicyCallHandlingForwardingToOtherUsers {
	return s.CallHandlingForwardingToOtherUsers
}

// GetHandOffToRoom returns the value of HandOffToRoom.
func (s *PhoneUserOKPolicy) GetHandOffToRoom() OptPhoneUserOKPolicyHandOffToRoom {
	return s.HandOffToRoom
}

// GetInternationalCalling returns the value of InternationalCalling.
func (s *PhoneUserOKPolicy) GetInternationalCalling() OptBool {
	return s.InternationalCalling
}

// GetMobileSwitchToCarrier returns the value of MobileSwitchToCarrier.
func (s *PhoneUserOKPolicy) GetMobileSwitchToCarrier() OptPhoneUserOKPolicyMobileSwitchToCarrier {
	return s.MobileSwitchToCarrier
}

// GetSelectOutboundCallerID returns the value of SelectOutboundCallerID.
func (s *PhoneUserOKPolicy) GetSelectOutboundCallerID() OptPhoneUserOKPolicySelectOutboundCallerID {
	return s.SelectOutboundCallerID
}

// GetSMS returns the value of SMS.
func (s *PhoneUserOKPolicy) GetSMS() OptPhoneUserOKPolicySMS {
	return s.SMS
}

// GetVoicemail returns the value of Voicemail.
func (s *PhoneUserOKPolicy) GetVoicemail() OptPhoneUserOKPolicyVoicemail {
	return s.Voicemail
}

// GetVoicemailAccessMembers returns the value of VoicemailAccessMembers.
func (s *PhoneUserOKPolicy) GetVoicemailAccessMembers() []PhoneUserOKPolicyVoicemailAccessMembersItem {
	return s.VoicemailAccessMembers
}

// GetZoomPhoneOnMobile returns the value of ZoomPhoneOnMobile.
func (s *PhoneUserOKPolicy) GetZoomPhoneOnMobile() OptPhoneUserOKPolicyZoomPhoneOnMobile {
	return s.ZoomPhoneOnMobile
}

// GetPersonalAudioLibrary returns the value of PersonalAudioLibrary.
func (s *PhoneUserOKPolicy) GetPersonalAudioLibrary() OptPhoneUserOKPolicyPersonalAudioLibrary {
	return s.PersonalAudioLibrary
}

// GetVoicemailTranscription returns the value of VoicemailTranscription.
func (s *PhoneUserOKPolicy) GetVoicemailTranscription() OptPhoneUserOKPolicyVoicemailTranscription {
	return s.VoicemailTranscription
}

// GetVoicemailNotificationByEmail returns the value of VoicemailNotificationByEmail.
func (s *PhoneUserOKPolicy) GetVoicemailNotificationByEmail() OptPhoneUserOKPolicyVoicemailNotificationByEmail {
	return s.VoicemailNotificationByEmail
}

// GetSharedVoicemailNotificationByEmail returns the value of SharedVoicemailNotificationByEmail.
func (s *PhoneUserOKPolicy) GetSharedVoicemailNotificationByEmail() OptPhoneUserOKPolicySharedVoicemailNotificationByEmail {
	return s.SharedVoicemailNotificationByEmail
}

// GetCheckVoicemailsOverPhone returns the value of CheckVoicemailsOverPhone.
func (s *PhoneUserOKPolicy) GetCheckVoicemailsOverPhone() OptPhoneUserOKPolicyCheckVoicemailsOverPhone {
	return s.CheckVoicemailsOverPhone
}

// GetAudioIntercom returns the value of AudioIntercom.
func (s *PhoneUserOKPolicy) GetAudioIntercom() OptPhoneUserOKPolicyAudioIntercom {
	return s.AudioIntercom
}

// GetPeerToPeerMedia returns the value of PeerToPeerMedia.
func (s *PhoneUserOKPolicy) GetPeerToPeerMedia() OptPhoneUserOKPolicyPeerToPeerMedia {
	return s.PeerToPeerMedia
}

// GetE2eEncryption returns the value of E2eEncryption.
func (s *PhoneUserOKPolicy) GetE2eEncryption() OptPhoneUserOKPolicyE2eEncryption {
	return s.E2eEncryption
}

// GetOutboundCalling returns the value of OutboundCalling.
func (s *PhoneUserOKPolicy) GetOutboundCalling() OptPhoneUserOKPolicyOutboundCalling {
	return s.OutboundCalling
}

// GetOutboundSMS returns the value of OutboundSMS.
func (s *PhoneUserOKPolicy) GetOutboundSMS() OptPhoneUserOKPolicyOutboundSMS {
	return s.OutboundSMS
}

// GetAllowEndUserEditCallHandling returns the value of AllowEndUserEditCallHandling.
func (s *PhoneUserOKPolicy) GetAllowEndUserEditCallHandling() OptPhoneUserOKPolicyAllowEndUserEditCallHandling {
	return s.AllowEndUserEditCallHandling
}

// SetAdHocCallRecording sets the value of AdHocCallRecording.
func (s *PhoneUserOKPolicy) SetAdHocCallRecording(val OptPhoneUserOKPolicyAdHocCallRecording) {
	s.AdHocCallRecording = val
}

// SetAdHocCallRecordingAccessMembers sets the value of AdHocCallRecordingAccessMembers.
func (s *PhoneUserOKPolicy) SetAdHocCallRecordingAccessMembers(val []PhoneUserOKPolicyAdHocCallRecordingAccessMembersItem) {
	s.AdHocCallRecordingAccessMembers = val
}

// SetAutoCallRecording sets the value of AutoCallRecording.
func (s *PhoneUserOKPolicy) SetAutoCallRecording(val OptPhoneUserOKPolicyAutoCallRecording) {
	s.AutoCallRecording = val
}

// SetAutoCallRecordingAccessMembers sets the value of AutoCallRecordingAccessMembers.
func (s *PhoneUserOKPolicy) SetAutoCallRecordingAccessMembers(val []PhoneUserOKPolicyAutoCallRecordingAccessMembersItem) {
	s.AutoCallRecordingAccessMembers = val
}

// SetCallOverflow sets the value of CallOverflow.
func (s *PhoneUserOKPolicy) SetCallOverflow(val OptPhoneUserOKPolicyCallOverflow) {
	s.CallOverflow = val
}

// SetCallPark sets the value of CallPark.
func (s *PhoneUserOKPolicy) SetCallPark(val OptPhoneUserOKPolicyCallPark) {
	s.CallPark = val
}

// SetCallTransferring sets the value of CallTransferring.
func (s *PhoneUserOKPolicy) SetCallTransferring(val OptPhoneUserOKPolicyCallTransferring) {
	s.CallTransferring = val
}

// SetDelegation sets the value of Delegation.
func (s *PhoneUserOKPolicy) SetDelegation(val OptBool) {
	s.Delegation = val
}

// SetElevateToMeeting sets the value of ElevateToMeeting.
func (s *PhoneUserOKPolicy) SetElevateToMeeting(val OptBool) {
	s.ElevateToMeeting = val
}

// SetEmergencyAddressManagement sets the value of EmergencyAddressManagement.
func (s *PhoneUserOKPolicy) SetEmergencyAddressManagement(val OptPhoneUserOKPolicyEmergencyAddressManagement) {
	s.EmergencyAddressManagement = val
}

// SetEmergencyCallsToPsap sets the value of EmergencyCallsToPsap.
func (s *PhoneUserOKPolicy) SetEmergencyCallsToPsap(val OptBool) {
	s.EmergencyCallsToPsap = val
}

// SetForwardingToExternalNumbers sets the value of ForwardingToExternalNumbers.
func (s *PhoneUserOKPolicy) SetForwardingToExternalNumbers(val OptBool) {
	s.ForwardingToExternalNumbers = val
}

// SetCallHandlingForwardingToOtherUsers sets the value of CallHandlingForwardingToOtherUsers.
func (s *PhoneUserOKPolicy) SetCallHandlingForwardingToOtherUsers(val OptPhoneUserOKPolicyCallHandlingForwardingToOtherUsers) {
	s.CallHandlingForwardingToOtherUsers = val
}

// SetHandOffToRoom sets the value of HandOffToRoom.
func (s *PhoneUserOKPolicy) SetHandOffToRoom(val OptPhoneUserOKPolicyHandOffToRoom) {
	s.HandOffToRoom = val
}

// SetInternationalCalling sets the value of InternationalCalling.
func (s *PhoneUserOKPolicy) SetInternationalCalling(val OptBool) {
	s.InternationalCalling = val
}

// SetMobileSwitchToCarrier sets the value of MobileSwitchToCarrier.
func (s *PhoneUserOKPolicy) SetMobileSwitchToCarrier(val OptPhoneUserOKPolicyMobileSwitchToCarrier) {
	s.MobileSwitchToCarrier = val
}

// SetSelectOutboundCallerID sets the value of SelectOutboundCallerID.
func (s *PhoneUserOKPolicy) SetSelectOutboundCallerID(val OptPhoneUserOKPolicySelectOutboundCallerID) {
	s.SelectOutboundCallerID = val
}

// SetSMS sets the value of SMS.
func (s *PhoneUserOKPolicy) SetSMS(val OptPhoneUserOKPolicySMS) {
	s.SMS = val
}

// SetVoicemail sets the value of Voicemail.
func (s *PhoneUserOKPolicy) SetVoicemail(val OptPhoneUserOKPolicyVoicemail) {
	s.Voicemail = val
}

// SetVoicemailAccessMembers sets the value of VoicemailAccessMembers.
func (s *PhoneUserOKPolicy) SetVoicemailAccessMembers(val []PhoneUserOKPolicyVoicemailAccessMembersItem) {
	s.VoicemailAccessMembers = val
}

// SetZoomPhoneOnMobile sets the value of ZoomPhoneOnMobile.
func (s *PhoneUserOKPolicy) SetZoomPhoneOnMobile(val OptPhoneUserOKPolicyZoomPhoneOnMobile) {
	s.ZoomPhoneOnMobile = val
}

// SetPersonalAudioLibrary sets the value of PersonalAudioLibrary.
func (s *PhoneUserOKPolicy) SetPersonalAudioLibrary(val OptPhoneUserOKPolicyPersonalAudioLibrary) {
	s.PersonalAudioLibrary = val
}

// SetVoicemailTranscription sets the value of VoicemailTranscription.
func (s *PhoneUserOKPolicy) SetVoicemailTranscription(val OptPhoneUserOKPolicyVoicemailTranscription) {
	s.VoicemailTranscription = val
}

// SetVoicemailNotificationByEmail sets the value of VoicemailNotificationByEmail.
func (s *PhoneUserOKPolicy) SetVoicemailNotificationByEmail(val OptPhoneUserOKPolicyVoicemailNotificationByEmail) {
	s.VoicemailNotificationByEmail = val
}

// SetSharedVoicemailNotificationByEmail sets the value of SharedVoicemailNotificationByEmail.
func (s *PhoneUserOKPolicy) SetSharedVoicemailNotificationByEmail(val OptPhoneUserOKPolicySharedVoicemailNotificationByEmail) {
	s.SharedVoicemailNotificationByEmail = val
}

// SetCheckVoicemailsOverPhone sets the value of CheckVoicemailsOverPhone.
func (s *PhoneUserOKPolicy) SetCheckVoicemailsOverPhone(val OptPhoneUserOKPolicyCheckVoicemailsOverPhone) {
	s.CheckVoicemailsOverPhone = val
}

// SetAudioIntercom sets the value of AudioIntercom.
func (s *PhoneUserOKPolicy) SetAudioIntercom(val OptPhoneUserOKPolicyAudioIntercom) {
	s.AudioIntercom = val
}

// SetPeerToPeerMedia sets the value of PeerToPeerMedia.
func (s *PhoneUserOKPolicy) SetPeerToPeerMedia(val OptPhoneUserOKPolicyPeerToPeerMedia) {
	s.PeerToPeerMedia = val
}

// SetE2eEncryption sets the value of E2eEncryption.
func (s *PhoneUserOKPolicy) SetE2eEncryption(val OptPhoneUserOKPolicyE2eEncryption) {
	s.E2eEncryption = val
}

// SetOutboundCalling sets the value of OutboundCalling.
func (s *PhoneUserOKPolicy) SetOutboundCalling(val OptPhoneUserOKPolicyOutboundCalling) {
	s.OutboundCalling = val
}

// SetOutboundSMS sets the value of OutboundSMS.
func (s *PhoneUserOKPolicy) SetOutboundSMS(val OptPhoneUserOKPolicyOutboundSMS) {
	s.OutboundSMS = val
}

// SetAllowEndUserEditCallHandling sets the value of AllowEndUserEditCallHandling.
func (s *PhoneUserOKPolicy) SetAllowEndUserEditCallHandling(val OptPhoneUserOKPolicyAllowEndUserEditCallHandling) {
	s.AllowEndUserEditCallHandling = val
}

// A list of ad hoc call recording settings.
type PhoneUserOKPolicyAdHocCallRecording struct {
	// Whether the current extension can record and save calls to the cloud.
	Enable OptBool `json:"enable"`
	// Whether a prompt plays to call participants when the recording has started.
	RecordingStartPrompt OptBool `json:"recording_start_prompt"`
	// Whether the call recording transcription is enabled.
	RecordingTranscription OptBool                                                     `json:"recording_transcription"`
	PlayRecordingBeepTone  OptPhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone `json:"play_recording_beep_tone"`
	// Whether the senior administrator allow users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyAdHocCallRecording) GetEnable() OptBool {
	return s.Enable
}

// GetRecordingStartPrompt returns the value of RecordingStartPrompt.
func (s *PhoneUserOKPolicyAdHocCallRecording) GetRecordingStartPrompt() OptBool {
	return s.RecordingStartPrompt
}

// GetRecordingTranscription returns the value of RecordingTranscription.
func (s *PhoneUserOKPolicyAdHocCallRecording) GetRecordingTranscription() OptBool {
	return s.RecordingTranscription
}

// GetPlayRecordingBeepTone returns the value of PlayRecordingBeepTone.
func (s *PhoneUserOKPolicyAdHocCallRecording) GetPlayRecordingBeepTone() OptPhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone {
	return s.PlayRecordingBeepTone
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyAdHocCallRecording) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicyAdHocCallRecording) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyAdHocCallRecording) SetEnable(val OptBool) {
	s.Enable = val
}

// SetRecordingStartPrompt sets the value of RecordingStartPrompt.
func (s *PhoneUserOKPolicyAdHocCallRecording) SetRecordingStartPrompt(val OptBool) {
	s.RecordingStartPrompt = val
}

// SetRecordingTranscription sets the value of RecordingTranscription.
func (s *PhoneUserOKPolicyAdHocCallRecording) SetRecordingTranscription(val OptBool) {
	s.RecordingTranscription = val
}

// SetPlayRecordingBeepTone sets the value of PlayRecordingBeepTone.
func (s *PhoneUserOKPolicyAdHocCallRecording) SetPlayRecordingBeepTone(val OptPhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone) {
	s.PlayRecordingBeepTone = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyAdHocCallRecording) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicyAdHocCallRecording) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// Merged schema.
type PhoneUserOKPolicyAdHocCallRecordingAccessMembersItem struct {
	// The Zoom user ID to share access permissions.
	AccessUserID OptString `json:"access_user_id"`
	// Whether the user has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// Whether the user has download permissions. The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
	// The unique identifier of the shared sub-setting that the user can access.
	SharedID OptString `json:"shared_id"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *PhoneUserOKPolicyAdHocCallRecordingAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDelete returns the value of AllowDelete.
func (s *PhoneUserOKPolicyAdHocCallRecordingAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *PhoneUserOKPolicyAdHocCallRecordingAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetSharedID returns the value of SharedID.
func (s *PhoneUserOKPolicyAdHocCallRecordingAccessMembersItem) GetSharedID() OptString {
	return s.SharedID
}

// SetAccessUserID sets the value of AccessUserID.
func (s *PhoneUserOKPolicyAdHocCallRecordingAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *PhoneUserOKPolicyAdHocCallRecordingAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *PhoneUserOKPolicyAdHocCallRecordingAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetSharedID sets the value of SharedID.
func (s *PhoneUserOKPolicyAdHocCallRecordingAccessMembersItem) SetSharedID(val OptString) {
	s.SharedID = val
}

type PhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone struct {
	// Whether to play the side tone beep for recorded users while recording. It displays only when ad
	// hoc call recording policy uses the new framework.
	Enable OptBool `json:"enable"`
	// The side tone beep volume. It displays only when `enable` is set to `true`.
	PlayBeepVolume OptInt `json:"play_beep_volume"`
	// The beep time interval in seconds. It displays only when the `enable` is set to true.
	PlayBeepTimeInterval OptInt `json:"play_beep_time_interval"`
	// The beep sides. It displays only when the `enable` is set to true.
	PlayBeepMember OptString `json:"play_beep_member"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone) GetEnable() OptBool {
	return s.Enable
}

// GetPlayBeepVolume returns the value of PlayBeepVolume.
func (s *PhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone) GetPlayBeepVolume() OptInt {
	return s.PlayBeepVolume
}

// GetPlayBeepTimeInterval returns the value of PlayBeepTimeInterval.
func (s *PhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone) GetPlayBeepTimeInterval() OptInt {
	return s.PlayBeepTimeInterval
}

// GetPlayBeepMember returns the value of PlayBeepMember.
func (s *PhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone) GetPlayBeepMember() OptString {
	return s.PlayBeepMember
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone) SetEnable(val OptBool) {
	s.Enable = val
}

// SetPlayBeepVolume sets the value of PlayBeepVolume.
func (s *PhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone) SetPlayBeepVolume(val OptInt) {
	s.PlayBeepVolume = val
}

// SetPlayBeepTimeInterval sets the value of PlayBeepTimeInterval.
func (s *PhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone) SetPlayBeepTimeInterval(val OptInt) {
	s.PlayBeepTimeInterval = val
}

// SetPlayBeepMember sets the value of PlayBeepMember.
func (s *PhoneUserOKPolicyAdHocCallRecordingPlayRecordingBeepTone) SetPlayBeepMember(val OptString) {
	s.PlayBeepMember = val
}

type PhoneUserOKPolicyAllowEndUserEditCallHandling struct {
	// Whether to allow users to be able to edit their call handling settings on the web portal or enable
	// call forwarding on the client.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyAllowEndUserEditCallHandling) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyAllowEndUserEditCallHandling) GetLocked() OptBool {
	return s.Locked
}

// GetModified returns the value of Modified.
func (s *PhoneUserOKPolicyAllowEndUserEditCallHandling) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyAllowEndUserEditCallHandling) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyAllowEndUserEditCallHandling) SetLocked(val OptBool) {
	s.Locked = val
}

// SetModified sets the value of Modified.
func (s *PhoneUserOKPolicyAllowEndUserEditCallHandling) SetModified(val OptBool) {
	s.Modified = val
}

// Whether the user can use audio intercom.
type PhoneUserOKPolicyAudioIntercom struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset in the update call.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyAudioIntercom) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyAudioIntercom) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicyAudioIntercom) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *PhoneUserOKPolicyAudioIntercom) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyAudioIntercom) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyAudioIntercom) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicyAudioIntercom) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *PhoneUserOKPolicyAudioIntercom) SetModified(val OptBool) {
	s.Modified = val
}

// A list of the user's automatic call recording settings.
type PhoneUserOKPolicyAutoCallRecording struct {
	// Whether the stop of and resuming of automatic call recording is enabled.
	AllowStopResumeRecording OptBool `json:"allow_stop_resume_recording"`
	// Whether a call disconnects when there is an issue with automatic call recording and the call
	// cannot reconnect after five seconds. It does **not** include emergency calls.
	DisconnectOnRecordingFailure OptBool `json:"disconnect_on_recording_failure"`
	// Whether the automatic call recording is enabled.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allow users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// The type of calls automatically recorded:
	// * `inbound`
	// * `outbound`
	// * `both`.
	RecordingCalls OptString `json:"recording_calls"`
	// Whether the 'press 1' option that provides recording consent is enabled.
	RecordingExplicitConsent OptBool `json:"recording_explicit_consent"`
	// Whether a prompt plays to call participants when the recording has started.
	RecordingStartPrompt OptBool `json:"recording_start_prompt"`
	// Whether the call recording transcription is enabled.
	RecordingTranscription OptBool                                                    `json:"recording_transcription"`
	PlayRecordingBeepTone  OptPhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone `json:"play_recording_beep_tone"`
}

// GetAllowStopResumeRecording returns the value of AllowStopResumeRecording.
func (s *PhoneUserOKPolicyAutoCallRecording) GetAllowStopResumeRecording() OptBool {
	return s.AllowStopResumeRecording
}

// GetDisconnectOnRecordingFailure returns the value of DisconnectOnRecordingFailure.
func (s *PhoneUserOKPolicyAutoCallRecording) GetDisconnectOnRecordingFailure() OptBool {
	return s.DisconnectOnRecordingFailure
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyAutoCallRecording) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyAutoCallRecording) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicyAutoCallRecording) GetLockedBy() OptString {
	return s.LockedBy
}

// GetRecordingCalls returns the value of RecordingCalls.
func (s *PhoneUserOKPolicyAutoCallRecording) GetRecordingCalls() OptString {
	return s.RecordingCalls
}

// GetRecordingExplicitConsent returns the value of RecordingExplicitConsent.
func (s *PhoneUserOKPolicyAutoCallRecording) GetRecordingExplicitConsent() OptBool {
	return s.RecordingExplicitConsent
}

// GetRecordingStartPrompt returns the value of RecordingStartPrompt.
func (s *PhoneUserOKPolicyAutoCallRecording) GetRecordingStartPrompt() OptBool {
	return s.RecordingStartPrompt
}

// GetRecordingTranscription returns the value of RecordingTranscription.
func (s *PhoneUserOKPolicyAutoCallRecording) GetRecordingTranscription() OptBool {
	return s.RecordingTranscription
}

// GetPlayRecordingBeepTone returns the value of PlayRecordingBeepTone.
func (s *PhoneUserOKPolicyAutoCallRecording) GetPlayRecordingBeepTone() OptPhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone {
	return s.PlayRecordingBeepTone
}

// SetAllowStopResumeRecording sets the value of AllowStopResumeRecording.
func (s *PhoneUserOKPolicyAutoCallRecording) SetAllowStopResumeRecording(val OptBool) {
	s.AllowStopResumeRecording = val
}

// SetDisconnectOnRecordingFailure sets the value of DisconnectOnRecordingFailure.
func (s *PhoneUserOKPolicyAutoCallRecording) SetDisconnectOnRecordingFailure(val OptBool) {
	s.DisconnectOnRecordingFailure = val
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyAutoCallRecording) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyAutoCallRecording) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicyAutoCallRecording) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetRecordingCalls sets the value of RecordingCalls.
func (s *PhoneUserOKPolicyAutoCallRecording) SetRecordingCalls(val OptString) {
	s.RecordingCalls = val
}

// SetRecordingExplicitConsent sets the value of RecordingExplicitConsent.
func (s *PhoneUserOKPolicyAutoCallRecording) SetRecordingExplicitConsent(val OptBool) {
	s.RecordingExplicitConsent = val
}

// SetRecordingStartPrompt sets the value of RecordingStartPrompt.
func (s *PhoneUserOKPolicyAutoCallRecording) SetRecordingStartPrompt(val OptBool) {
	s.RecordingStartPrompt = val
}

// SetRecordingTranscription sets the value of RecordingTranscription.
func (s *PhoneUserOKPolicyAutoCallRecording) SetRecordingTranscription(val OptBool) {
	s.RecordingTranscription = val
}

// SetPlayRecordingBeepTone sets the value of PlayRecordingBeepTone.
func (s *PhoneUserOKPolicyAutoCallRecording) SetPlayRecordingBeepTone(val OptPhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone) {
	s.PlayRecordingBeepTone = val
}

// Merged schema.
type PhoneUserOKPolicyAutoCallRecordingAccessMembersItem struct {
	// The Zoom user ID to share access permissions.
	AccessUserID OptString `json:"access_user_id"`
	// Whether the user has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// Whether the user has download permissions. The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
	// The unique identifier of the shared sub-setting that the user can access.
	SharedID OptString `json:"shared_id"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *PhoneUserOKPolicyAutoCallRecordingAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDelete returns the value of AllowDelete.
func (s *PhoneUserOKPolicyAutoCallRecordingAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *PhoneUserOKPolicyAutoCallRecordingAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetSharedID returns the value of SharedID.
func (s *PhoneUserOKPolicyAutoCallRecordingAccessMembersItem) GetSharedID() OptString {
	return s.SharedID
}

// SetAccessUserID sets the value of AccessUserID.
func (s *PhoneUserOKPolicyAutoCallRecordingAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *PhoneUserOKPolicyAutoCallRecordingAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *PhoneUserOKPolicyAutoCallRecordingAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetSharedID sets the value of SharedID.
func (s *PhoneUserOKPolicyAutoCallRecordingAccessMembersItem) SetSharedID(val OptString) {
	s.SharedID = val
}

type PhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone struct {
	// Whether to play the side tone beep for recorded users while recording. It displays only when auto
	// call recording policy uses the new framework.
	Enable OptBool `json:"enable"`
	// The side tone beep volume. It displays only when `enable` is set to `true`.
	PlayBeepVolume OptInt `json:"play_beep_volume"`
	// The beep time interval in seconds. It displays only when the `enable` is set to true.
	PlayBeepTimeInterval OptInt `json:"play_beep_time_interval"`
	// The beep sides. It displays only when the `enable` is set to true.
	PlayBeepMember OptString `json:"play_beep_member"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone) GetEnable() OptBool {
	return s.Enable
}

// GetPlayBeepVolume returns the value of PlayBeepVolume.
func (s *PhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone) GetPlayBeepVolume() OptInt {
	return s.PlayBeepVolume
}

// GetPlayBeepTimeInterval returns the value of PlayBeepTimeInterval.
func (s *PhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone) GetPlayBeepTimeInterval() OptInt {
	return s.PlayBeepTimeInterval
}

// GetPlayBeepMember returns the value of PlayBeepMember.
func (s *PhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone) GetPlayBeepMember() OptString {
	return s.PlayBeepMember
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone) SetEnable(val OptBool) {
	s.Enable = val
}

// SetPlayBeepVolume sets the value of PlayBeepVolume.
func (s *PhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone) SetPlayBeepVolume(val OptInt) {
	s.PlayBeepVolume = val
}

// SetPlayBeepTimeInterval sets the value of PlayBeepTimeInterval.
func (s *PhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone) SetPlayBeepTimeInterval(val OptInt) {
	s.PlayBeepTimeInterval = val
}

// SetPlayBeepMember sets the value of PlayBeepMember.
func (s *PhoneUserOKPolicyAutoCallRecordingPlayRecordingBeepTone) SetPlayBeepMember(val OptString) {
	s.PlayBeepMember = val
}

// Whether to allow the user to forward calls to other numbers.
type PhoneUserOKPolicyCallHandlingForwardingToOtherUsers struct {
	Enable OptBool `json:"enable"`
	// `1` - Low restriction (external numbers not allowed)
	// `2` - Medium restriction (external numbers and external contacts not allowed)
	// `3` - High restriction (external numbers, external contacts and internal extensions without
	// inbound automatic call recording not allowed)
	// `4` - No restriction.
	CallForwardingType OptInt `json:"call_forwarding_type"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyCallHandlingForwardingToOtherUsers) GetEnable() OptBool {
	return s.Enable
}

// GetCallForwardingType returns the value of CallForwardingType.
func (s *PhoneUserOKPolicyCallHandlingForwardingToOtherUsers) GetCallForwardingType() OptInt {
	return s.CallForwardingType
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyCallHandlingForwardingToOtherUsers) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicyCallHandlingForwardingToOtherUsers) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *PhoneUserOKPolicyCallHandlingForwardingToOtherUsers) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyCallHandlingForwardingToOtherUsers) SetEnable(val OptBool) {
	s.Enable = val
}

// SetCallForwardingType sets the value of CallForwardingType.
func (s *PhoneUserOKPolicyCallHandlingForwardingToOtherUsers) SetCallForwardingType(val OptInt) {
	s.CallForwardingType = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyCallHandlingForwardingToOtherUsers) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicyCallHandlingForwardingToOtherUsers) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *PhoneUserOKPolicyCallHandlingForwardingToOtherUsers) SetModified(val OptBool) {
	s.Modified = val
}

type PhoneUserOKPolicyCallOverflow struct {
	// `1` - Low restriction (external numbers not allowed)
	// `2` - Medium restriction (external numbers and external contacts not allowed)
	// `3` - High restriction (external numbers, external contacts and internal extensions without
	// inbound automatic call recording not allowed)
	// `4` - No restriction.
	CallOverflowType OptInt `json:"call_overflow_type"`
	// Whether to allow the user to forward calls to other numbers.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetCallOverflowType returns the value of CallOverflowType.
func (s *PhoneUserOKPolicyCallOverflow) GetCallOverflowType() OptInt {
	return s.CallOverflowType
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyCallOverflow) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyCallOverflow) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicyCallOverflow) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *PhoneUserOKPolicyCallOverflow) GetModified() OptBool {
	return s.Modified
}

// SetCallOverflowType sets the value of CallOverflowType.
func (s *PhoneUserOKPolicyCallOverflow) SetCallOverflowType(val OptInt) {
	s.CallOverflowType = val
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyCallOverflow) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyCallOverflow) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicyCallOverflow) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *PhoneUserOKPolicyCallOverflow) SetModified(val OptBool) {
	s.Modified = val
}

type PhoneUserOKPolicyCallPark struct {
	// The action when a parked call is not picked up. 100-Ring back to parker, 0-Forward to voicemail of
	// the parker, 9-Disconnect, 50-Forward to another extension.
	CallNotPickedUpAction OptInt `json:"call_not_picked_up_action"`
	// Whether to allow calls placed on hold to be resumed from another location using a retrieval code.
	Enable OptBool `json:"enable"`
	// A time limit for parked calls and unit minutes. After the expiration period ends, the retrieval
	// code is no longer valid and a new code will be generated.
	ExpirationPeriod OptInt `json:"expiration_period"`
	// The extension's forwarding information.
	ForwardTo OptPhoneUserOKPolicyCallParkForwardTo `json:"forward_to"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetCallNotPickedUpAction returns the value of CallNotPickedUpAction.
func (s *PhoneUserOKPolicyCallPark) GetCallNotPickedUpAction() OptInt {
	return s.CallNotPickedUpAction
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyCallPark) GetEnable() OptBool {
	return s.Enable
}

// GetExpirationPeriod returns the value of ExpirationPeriod.
func (s *PhoneUserOKPolicyCallPark) GetExpirationPeriod() OptInt {
	return s.ExpirationPeriod
}

// GetForwardTo returns the value of ForwardTo.
func (s *PhoneUserOKPolicyCallPark) GetForwardTo() OptPhoneUserOKPolicyCallParkForwardTo {
	return s.ForwardTo
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyCallPark) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicyCallPark) GetLockedBy() OptString {
	return s.LockedBy
}

// SetCallNotPickedUpAction sets the value of CallNotPickedUpAction.
func (s *PhoneUserOKPolicyCallPark) SetCallNotPickedUpAction(val OptInt) {
	s.CallNotPickedUpAction = val
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyCallPark) SetEnable(val OptBool) {
	s.Enable = val
}

// SetExpirationPeriod sets the value of ExpirationPeriod.
func (s *PhoneUserOKPolicyCallPark) SetExpirationPeriod(val OptInt) {
	s.ExpirationPeriod = val
}

// SetForwardTo sets the value of ForwardTo.
func (s *PhoneUserOKPolicyCallPark) SetForwardTo(val OptPhoneUserOKPolicyCallParkForwardTo) {
	s.ForwardTo = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyCallPark) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicyCallPark) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// The extension's forwarding information.
type PhoneUserOKPolicyCallParkForwardTo struct {
	// The extension's name.
	DisplayName OptString `json:"display_name"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The type of extension:
	// * `user`
	// * `zoomRoom`
	// * `commonArea`
	// * `ciscoRoom/polycomRoom`
	// * `autoReceptionist`
	// * `sharedLineGroup`
	// * `callQueue`.
	ExtensionType OptString `json:"extension_type"`
	// The ID of the extension `user`, `zoomRoom`, `commonArea`, `ciscoRoom/polycomRoom`,
	// `autoReceptionist`, `callQueue` or `sharedLineGroup`.
	ID OptString `json:"id"`
}

// GetDisplayName returns the value of DisplayName.
func (s *PhoneUserOKPolicyCallParkForwardTo) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *PhoneUserOKPolicyCallParkForwardTo) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *PhoneUserOKPolicyCallParkForwardTo) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *PhoneUserOKPolicyCallParkForwardTo) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetID returns the value of ID.
func (s *PhoneUserOKPolicyCallParkForwardTo) GetID() OptString {
	return s.ID
}

// SetDisplayName sets the value of DisplayName.
func (s *PhoneUserOKPolicyCallParkForwardTo) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *PhoneUserOKPolicyCallParkForwardTo) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *PhoneUserOKPolicyCallParkForwardTo) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *PhoneUserOKPolicyCallParkForwardTo) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetID sets the value of ID.
func (s *PhoneUserOKPolicyCallParkForwardTo) SetID(val OptString) {
	s.ID = val
}

type PhoneUserOKPolicyCallTransferring struct {
	// This field contains these settings: 1-No restriction.
	// 2-Medium restriction (external numbers and external contacts not allowed).
	// 3-High restriction (external numbers, unrecorded external contacts, and internal extensions
	// without inbound automatic recording not allowed).
	// 4-Low restriction (external numbers not allowed).
	CallTransferringType OptInt `json:"call_transferring_type"`
	// Whether to allow user to warm or blind transfer their calls. This does not apply to warm transfer
	// on IP Phones except for Yealink.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetCallTransferringType returns the value of CallTransferringType.
func (s *PhoneUserOKPolicyCallTransferring) GetCallTransferringType() OptInt {
	return s.CallTransferringType
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyCallTransferring) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyCallTransferring) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicyCallTransferring) GetLockedBy() OptString {
	return s.LockedBy
}

// SetCallTransferringType sets the value of CallTransferringType.
func (s *PhoneUserOKPolicyCallTransferring) SetCallTransferringType(val OptInt) {
	s.CallTransferringType = val
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyCallTransferring) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyCallTransferring) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicyCallTransferring) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// Whether the user can check voicemails of users and shared line groups over phone using a PIN code.
type PhoneUserOKPolicyCheckVoicemailsOverPhone struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset in the update call.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyCheckVoicemailsOverPhone) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyCheckVoicemailsOverPhone) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicyCheckVoicemailsOverPhone) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *PhoneUserOKPolicyCheckVoicemailsOverPhone) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyCheckVoicemailsOverPhone) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyCheckVoicemailsOverPhone) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicyCheckVoicemailsOverPhone) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *PhoneUserOKPolicyCheckVoicemailsOverPhone) SetModified(val OptBool) {
	s.Modified = val
}

type PhoneUserOKPolicyE2eEncryption struct {
	// Whether to allow users to switch their calls to `End-to-End Encryption`. If users have the
	// `Automatic Call Recording` turned on, they will not be able to use the `End-to-End Encryption`.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyE2eEncryption) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyE2eEncryption) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicyE2eEncryption) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *PhoneUserOKPolicyE2eEncryption) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyE2eEncryption) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyE2eEncryption) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicyE2eEncryption) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *PhoneUserOKPolicyE2eEncryption) SetModified(val OptBool) {
	s.Modified = val
}

type PhoneUserOKPolicyEmergencyAddressManagement struct {
	// Whether to allow the current extension to manage its own emergency addresses.
	Enable OptBool `json:"enable"`
	// Whether to prompt the user to set or confirm a default address.
	PromptDefaultAddress OptBool `json:"prompt_default_address"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyEmergencyAddressManagement) GetEnable() OptBool {
	return s.Enable
}

// GetPromptDefaultAddress returns the value of PromptDefaultAddress.
func (s *PhoneUserOKPolicyEmergencyAddressManagement) GetPromptDefaultAddress() OptBool {
	return s.PromptDefaultAddress
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyEmergencyAddressManagement) SetEnable(val OptBool) {
	s.Enable = val
}

// SetPromptDefaultAddress sets the value of PromptDefaultAddress.
func (s *PhoneUserOKPolicyEmergencyAddressManagement) SetPromptDefaultAddress(val OptBool) {
	s.PromptDefaultAddress = val
}

type PhoneUserOKPolicyHandOffToRoom struct {
	// Whether to allow users to send a call to a Zoom Room.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyHandOffToRoom) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyHandOffToRoom) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicyHandOffToRoom) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyHandOffToRoom) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyHandOffToRoom) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicyHandOffToRoom) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type PhoneUserOKPolicyMobileSwitchToCarrier struct {
	// Whether to allow the user to switch from a Zoom Phone to their native carrier.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyMobileSwitchToCarrier) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyMobileSwitchToCarrier) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicyMobileSwitchToCarrier) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyMobileSwitchToCarrier) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyMobileSwitchToCarrier) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicyMobileSwitchToCarrier) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type PhoneUserOKPolicyOutboundCalling struct {
	// Whether to define calling rules to restrict the user or extension from calling specific countries,
	// cities, or numbers.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyOutboundCalling) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyOutboundCalling) GetLocked() OptBool {
	return s.Locked
}

// GetModified returns the value of Modified.
func (s *PhoneUserOKPolicyOutboundCalling) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyOutboundCalling) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyOutboundCalling) SetLocked(val OptBool) {
	s.Locked = val
}

// SetModified sets the value of Modified.
func (s *PhoneUserOKPolicyOutboundCalling) SetModified(val OptBool) {
	s.Modified = val
}

type PhoneUserOKPolicyOutboundSMS struct {
	// Whether to allow users to send and receive messages. You will still need to assign a valid calling
	// plan and phone number to each user for them to send and receive messages.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Whether the current settings have been modified. If modified, they can be reset (displayed when
	// using the new policy framework).
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyOutboundSMS) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyOutboundSMS) GetLocked() OptBool {
	return s.Locked
}

// GetModified returns the value of Modified.
func (s *PhoneUserOKPolicyOutboundSMS) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyOutboundSMS) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyOutboundSMS) SetLocked(val OptBool) {
	s.Locked = val
}

// SetModified sets the value of Modified.
func (s *PhoneUserOKPolicyOutboundSMS) SetModified(val OptBool) {
	s.Modified = val
}

// Whether to allow Zoom clients to send media directly to each other. Users or devices that have
// certain features like recording or monitoring enabled may not be able to use the peer to peer
// media sharing feature.
type PhoneUserOKPolicyPeerToPeerMedia struct {
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset in the update call.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyPeerToPeerMedia) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyPeerToPeerMedia) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicyPeerToPeerMedia) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *PhoneUserOKPolicyPeerToPeerMedia) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyPeerToPeerMedia) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyPeerToPeerMedia) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicyPeerToPeerMedia) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *PhoneUserOKPolicyPeerToPeerMedia) SetModified(val OptBool) {
	s.Modified = val
}

type PhoneUserOKPolicyPersonalAudioLibrary struct {
	// Whether to allow users to change their own audio library.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset in the update call.
	Modified OptBool `json:"modified"`
	// Whether to allow music on hold customization.
	AllowMusicOnHoldCustomization OptBool `json:"allow_music_on_hold_customization"`
	// Whether to allow voicemail and message greeting customization.
	AllowVoicemailAndMessageGreetingCustomization OptBool `json:"allow_voicemail_and_message_greeting_customization"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyPersonalAudioLibrary) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyPersonalAudioLibrary) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicyPersonalAudioLibrary) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *PhoneUserOKPolicyPersonalAudioLibrary) GetModified() OptBool {
	return s.Modified
}

// GetAllowMusicOnHoldCustomization returns the value of AllowMusicOnHoldCustomization.
func (s *PhoneUserOKPolicyPersonalAudioLibrary) GetAllowMusicOnHoldCustomization() OptBool {
	return s.AllowMusicOnHoldCustomization
}

// GetAllowVoicemailAndMessageGreetingCustomization returns the value of AllowVoicemailAndMessageGreetingCustomization.
func (s *PhoneUserOKPolicyPersonalAudioLibrary) GetAllowVoicemailAndMessageGreetingCustomization() OptBool {
	return s.AllowVoicemailAndMessageGreetingCustomization
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyPersonalAudioLibrary) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyPersonalAudioLibrary) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicyPersonalAudioLibrary) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *PhoneUserOKPolicyPersonalAudioLibrary) SetModified(val OptBool) {
	s.Modified = val
}

// SetAllowMusicOnHoldCustomization sets the value of AllowMusicOnHoldCustomization.
func (s *PhoneUserOKPolicyPersonalAudioLibrary) SetAllowMusicOnHoldCustomization(val OptBool) {
	s.AllowMusicOnHoldCustomization = val
}

// SetAllowVoicemailAndMessageGreetingCustomization sets the value of AllowVoicemailAndMessageGreetingCustomization.
func (s *PhoneUserOKPolicyPersonalAudioLibrary) SetAllowVoicemailAndMessageGreetingCustomization(val OptBool) {
	s.AllowVoicemailAndMessageGreetingCustomization = val
}

type PhoneUserOKPolicySMS struct {
	// Whether the user can send and receive messages.
	Enable OptBool `json:"enable"`
	// Whether the user can send and receive international messages.
	InternationalSMS OptBool `json:"international_sms"`
	// The country that can send and receive international messages. The [country ISO
	// code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	InternationalSMSCountries []string `json:"international_sms_countries"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicySMS) GetEnable() OptBool {
	return s.Enable
}

// GetInternationalSMS returns the value of InternationalSMS.
func (s *PhoneUserOKPolicySMS) GetInternationalSMS() OptBool {
	return s.InternationalSMS
}

// GetInternationalSMSCountries returns the value of InternationalSMSCountries.
func (s *PhoneUserOKPolicySMS) GetInternationalSMSCountries() []string {
	return s.InternationalSMSCountries
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicySMS) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicySMS) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicySMS) SetEnable(val OptBool) {
	s.Enable = val
}

// SetInternationalSMS sets the value of InternationalSMS.
func (s *PhoneUserOKPolicySMS) SetInternationalSMS(val OptBool) {
	s.InternationalSMS = val
}

// SetInternationalSMSCountries sets the value of InternationalSMSCountries.
func (s *PhoneUserOKPolicySMS) SetInternationalSMSCountries(val []string) {
	s.InternationalSMSCountries = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicySMS) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicySMS) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type PhoneUserOKPolicySelectOutboundCallerID struct {
	// Whether to allow the current extension to change the outbound caller ID when placing calls.
	Enable OptBool `json:"enable"`
	// Whether to allow the current extension to hide outbound caller id.
	AllowHideOutboundCallerID OptBool `json:"allow_hide_outbound_caller_id"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicySelectOutboundCallerID) GetEnable() OptBool {
	return s.Enable
}

// GetAllowHideOutboundCallerID returns the value of AllowHideOutboundCallerID.
func (s *PhoneUserOKPolicySelectOutboundCallerID) GetAllowHideOutboundCallerID() OptBool {
	return s.AllowHideOutboundCallerID
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicySelectOutboundCallerID) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicySelectOutboundCallerID) GetLockedBy() OptString {
	return s.LockedBy
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicySelectOutboundCallerID) SetEnable(val OptBool) {
	s.Enable = val
}

// SetAllowHideOutboundCallerID sets the value of AllowHideOutboundCallerID.
func (s *PhoneUserOKPolicySelectOutboundCallerID) SetAllowHideOutboundCallerID(val OptBool) {
	s.AllowHideOutboundCallerID = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicySelectOutboundCallerID) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicySelectOutboundCallerID) SetLockedBy(val OptString) {
	s.LockedBy = val
}

type PhoneUserOKPolicySharedVoicemailNotificationByEmail struct {
	// If enabled, the user will receive email notification when there is a new shared voicemail.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset in the update call.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicySharedVoicemailNotificationByEmail) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicySharedVoicemailNotificationByEmail) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicySharedVoicemailNotificationByEmail) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *PhoneUserOKPolicySharedVoicemailNotificationByEmail) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicySharedVoicemailNotificationByEmail) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicySharedVoicemailNotificationByEmail) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicySharedVoicemailNotificationByEmail) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *PhoneUserOKPolicySharedVoicemailNotificationByEmail) SetModified(val OptBool) {
	s.Modified = val
}

type PhoneUserOKPolicyVoicemail struct {
	// This field allows the user to delete his own voicemail.
	AllowDelete OptBool `json:"allow_delete"`
	// This field allows the user to download their voicemail.
	AllowDownload OptBool `json:"allow_download"`
	// Whether the voicemail transcription is enabled.
	AllowTranscription OptBool `json:"allow_transcription"`
	// Whether to allow users to access, share, download, or delete the video mail.
	AllowVideomail OptBool `json:"allow_videomail"`
	// Whether the current extension can access, receive, or share voicemail.
	Enable OptBool `json:"enable"`
}

// GetAllowDelete returns the value of AllowDelete.
func (s *PhoneUserOKPolicyVoicemail) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *PhoneUserOKPolicyVoicemail) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowTranscription returns the value of AllowTranscription.
func (s *PhoneUserOKPolicyVoicemail) GetAllowTranscription() OptBool {
	return s.AllowTranscription
}

// GetAllowVideomail returns the value of AllowVideomail.
func (s *PhoneUserOKPolicyVoicemail) GetAllowVideomail() OptBool {
	return s.AllowVideomail
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyVoicemail) GetEnable() OptBool {
	return s.Enable
}

// SetAllowDelete sets the value of AllowDelete.
func (s *PhoneUserOKPolicyVoicemail) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *PhoneUserOKPolicyVoicemail) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowTranscription sets the value of AllowTranscription.
func (s *PhoneUserOKPolicyVoicemail) SetAllowTranscription(val OptBool) {
	s.AllowTranscription = val
}

// SetAllowVideomail sets the value of AllowVideomail.
func (s *PhoneUserOKPolicyVoicemail) SetAllowVideomail(val OptBool) {
	s.AllowVideomail = val
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyVoicemail) SetEnable(val OptBool) {
	s.Enable = val
}

// Merged schema.
type PhoneUserOKPolicyVoicemailAccessMembersItem struct {
	// The Zoom user ID to share the voicemail access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// Whether the user has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// Whether the user has download permissions. The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
	// Whether the user has permission to share. The default is **false**.
	AllowSharing OptBool `json:"allow_sharing"`
	// The unique identifier of the shared sub-setting that the user can access.
	SharedID OptString `json:"shared_id"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *PhoneUserOKPolicyVoicemailAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDelete returns the value of AllowDelete.
func (s *PhoneUserOKPolicyVoicemailAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *PhoneUserOKPolicyVoicemailAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowSharing returns the value of AllowSharing.
func (s *PhoneUserOKPolicyVoicemailAccessMembersItem) GetAllowSharing() OptBool {
	return s.AllowSharing
}

// GetSharedID returns the value of SharedID.
func (s *PhoneUserOKPolicyVoicemailAccessMembersItem) GetSharedID() OptString {
	return s.SharedID
}

// SetAccessUserID sets the value of AccessUserID.
func (s *PhoneUserOKPolicyVoicemailAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *PhoneUserOKPolicyVoicemailAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *PhoneUserOKPolicyVoicemailAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowSharing sets the value of AllowSharing.
func (s *PhoneUserOKPolicyVoicemailAccessMembersItem) SetAllowSharing(val OptBool) {
	s.AllowSharing = val
}

// SetSharedID sets the value of SharedID.
func (s *PhoneUserOKPolicyVoicemailAccessMembersItem) SetSharedID(val OptString) {
	s.SharedID = val
}

type PhoneUserOKPolicyVoicemailNotificationByEmail struct {
	// Whether to include the voicemail file.
	IncludeVoicemailFile OptBool `json:"include_voicemail_file"`
	// Whether to include the voicemail transcription.
	IncludeVoicemailTranscription OptBool `json:"include_voicemail_transcription"`
	// If enabled, the user will receive email notifications when there is a new voicemail from users,
	// call queues, auto receptionists, or shared line groups.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset in the update call.
	Modified OptBool `json:"modified"`
}

// GetIncludeVoicemailFile returns the value of IncludeVoicemailFile.
func (s *PhoneUserOKPolicyVoicemailNotificationByEmail) GetIncludeVoicemailFile() OptBool {
	return s.IncludeVoicemailFile
}

// GetIncludeVoicemailTranscription returns the value of IncludeVoicemailTranscription.
func (s *PhoneUserOKPolicyVoicemailNotificationByEmail) GetIncludeVoicemailTranscription() OptBool {
	return s.IncludeVoicemailTranscription
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyVoicemailNotificationByEmail) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyVoicemailNotificationByEmail) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicyVoicemailNotificationByEmail) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *PhoneUserOKPolicyVoicemailNotificationByEmail) GetModified() OptBool {
	return s.Modified
}

// SetIncludeVoicemailFile sets the value of IncludeVoicemailFile.
func (s *PhoneUserOKPolicyVoicemailNotificationByEmail) SetIncludeVoicemailFile(val OptBool) {
	s.IncludeVoicemailFile = val
}

// SetIncludeVoicemailTranscription sets the value of IncludeVoicemailTranscription.
func (s *PhoneUserOKPolicyVoicemailNotificationByEmail) SetIncludeVoicemailTranscription(val OptBool) {
	s.IncludeVoicemailTranscription = val
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyVoicemailNotificationByEmail) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyVoicemailNotificationByEmail) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicyVoicemailNotificationByEmail) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *PhoneUserOKPolicyVoicemailNotificationByEmail) SetModified(val OptBool) {
	s.Modified = val
}

type PhoneUserOKPolicyVoicemailTranscription struct {
	// Whether to allow the user to access transcriptions of voicemails.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset in the update call.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyVoicemailTranscription) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyVoicemailTranscription) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicyVoicemailTranscription) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *PhoneUserOKPolicyVoicemailTranscription) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyVoicemailTranscription) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyVoicemailTranscription) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicyVoicemailTranscription) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *PhoneUserOKPolicyVoicemailTranscription) SetModified(val OptBool) {
	s.Modified = val
}

type PhoneUserOKPolicyZoomPhoneOnMobile struct {
	// Whether to allow calling and SMS/MMS functions on mobile.
	AllowCallingSMSMms OptBool `json:"allow_calling_sms_mms"`
	// Whether to allow user to use Zoom Phone on mobile clients (iOS, iPad OS, and Android).
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits the modification of the current settings.
	LockedBy OptString `json:"locked_by"`
}

// GetAllowCallingSMSMms returns the value of AllowCallingSMSMms.
func (s *PhoneUserOKPolicyZoomPhoneOnMobile) GetAllowCallingSMSMms() OptBool {
	return s.AllowCallingSMSMms
}

// GetEnable returns the value of Enable.
func (s *PhoneUserOKPolicyZoomPhoneOnMobile) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *PhoneUserOKPolicyZoomPhoneOnMobile) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *PhoneUserOKPolicyZoomPhoneOnMobile) GetLockedBy() OptString {
	return s.LockedBy
}

// SetAllowCallingSMSMms sets the value of AllowCallingSMSMms.
func (s *PhoneUserOKPolicyZoomPhoneOnMobile) SetAllowCallingSMSMms(val OptBool) {
	s.AllowCallingSMSMms = val
}

// SetEnable sets the value of Enable.
func (s *PhoneUserOKPolicyZoomPhoneOnMobile) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserOKPolicyZoomPhoneOnMobile) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *PhoneUserOKPolicyZoomPhoneOnMobile) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// The phone user recordings.
type PhoneUserRecordingsOK struct {
	// The start time and date of the query.
	From OptDate `json:"from"`
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// The total number of pages.
	PageCount OptInt `json:"page_count"`
	// The number of records returned within a single API call for each page.
	PageSize OptInt `json:"page_size"`
	// The recordings.
	Recordings []PhoneUserRecordingsOKRecordingsItem `json:"recordings"`
	// The end time and date of the query.
	To OptDate `json:"to"`
	// The total number of records returned.
	TotalRecords OptInt `json:"total_records"`
}

// GetFrom returns the value of From.
func (s *PhoneUserRecordingsOK) GetFrom() OptDate {
	return s.From
}

// GetNextPageToken returns the value of NextPageToken.
func (s *PhoneUserRecordingsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageCount returns the value of PageCount.
func (s *PhoneUserRecordingsOK) GetPageCount() OptInt {
	return s.PageCount
}

// GetPageSize returns the value of PageSize.
func (s *PhoneUserRecordingsOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetRecordings returns the value of Recordings.
func (s *PhoneUserRecordingsOK) GetRecordings() []PhoneUserRecordingsOKRecordingsItem {
	return s.Recordings
}

// GetTo returns the value of To.
func (s *PhoneUserRecordingsOK) GetTo() OptDate {
	return s.To
}

// GetTotalRecords returns the value of TotalRecords.
func (s *PhoneUserRecordingsOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// SetFrom sets the value of From.
func (s *PhoneUserRecordingsOK) SetFrom(val OptDate) {
	s.From = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *PhoneUserRecordingsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageCount sets the value of PageCount.
func (s *PhoneUserRecordingsOK) SetPageCount(val OptInt) {
	s.PageCount = val
}

// SetPageSize sets the value of PageSize.
func (s *PhoneUserRecordingsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetRecordings sets the value of Recordings.
func (s *PhoneUserRecordingsOK) SetRecordings(val []PhoneUserRecordingsOKRecordingsItem) {
	s.Recordings = val
}

// SetTo sets the value of To.
func (s *PhoneUserRecordingsOK) SetTo(val OptDate) {
	s.To = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *PhoneUserRecordingsOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

type PhoneUserRecordingsOKRecordingsItem struct {
	// The phone call's unique ID.
	CallID OptString `json:"call_id"`
	// The phone call log's unique ID.
	CallLogID OptString `json:"call_log_id"`
	// The contact name of callee.
	CalleeName OptString `json:"callee_name"`
	// The number of callee.
	CalleeNumber OptString `json:"callee_number"`
	// The callee's number type:
	// * `1` &mdash; Internal number.
	// * `2` &mdash; External number.
	// * `3` &mdash; Customized emergency number.
	CalleeNumberType OptInt `json:"callee_number_type"`
	// The contact name of caller.
	CallerName OptString `json:"caller_name"`
	// The number of caller.
	CallerNumber OptString `json:"caller_number"`
	// The caller's number type:
	// * `1` &mdash; Internal number.
	// * `2` &mdash; External number.
	CallerNumberType OptInt `json:"caller_number_type"`
	// The call-initiating user. The current recording must belong to the initiator and call queue for it
	// to be available.
	OutgoingBy OptPhoneUserRecordingsOKRecordingsItemOutgoingBy `json:"outgoing_by"`
	// The call-receiving user. The current recording must belong to the receiver and call queue for it
	// to be available.
	AcceptedBy OptPhoneUserRecordingsOKRecordingsItemAcceptedBy `json:"accepted_by"`
	// The date and time when the record is received.
	DateTime OptString `json:"date_time"`
	// Direction of the call. &quot;inbound&quot; | &quot;outbound&quot;.
	Direction OptString `json:"direction"`
	// The download URL for the recording. For security purposes, you must provide an OAuth access token
	// in the auth header to download the recording file using this url.
	// Example request:
	// ```
	// curl --request GET \
	// --url {download_url} \
	// --header 'authorization: Bearer {access_token} \
	// --header 'content-type: application/json'
	// ```.
	DownloadURL OptString `json:"download_url"`
	// The call recording's duration, in seconds.
	Duration OptInt `json:"duration"`
	// The ID of the recording.
	ID OptString `json:"id"`
	// Download url for the recording transcript. For security purposes, you must provide an OAuth access
	// token in the auth header to download the recording transcript file using this url.
	// Example request:
	// ```
	// curl --request GET \
	// --url {transcript_download_url} \
	// --header 'authorization: Bearer {access_token} \
	// --header 'content-type: application/json'
	// ```.
	TranscriptDownloadURL OptString `json:"transcript_download_url"`
}

// GetCallID returns the value of CallID.
func (s *PhoneUserRecordingsOKRecordingsItem) GetCallID() OptString {
	return s.CallID
}

// GetCallLogID returns the value of CallLogID.
func (s *PhoneUserRecordingsOKRecordingsItem) GetCallLogID() OptString {
	return s.CallLogID
}

// GetCalleeName returns the value of CalleeName.
func (s *PhoneUserRecordingsOKRecordingsItem) GetCalleeName() OptString {
	return s.CalleeName
}

// GetCalleeNumber returns the value of CalleeNumber.
func (s *PhoneUserRecordingsOKRecordingsItem) GetCalleeNumber() OptString {
	return s.CalleeNumber
}

// GetCalleeNumberType returns the value of CalleeNumberType.
func (s *PhoneUserRecordingsOKRecordingsItem) GetCalleeNumberType() OptInt {
	return s.CalleeNumberType
}

// GetCallerName returns the value of CallerName.
func (s *PhoneUserRecordingsOKRecordingsItem) GetCallerName() OptString {
	return s.CallerName
}

// GetCallerNumber returns the value of CallerNumber.
func (s *PhoneUserRecordingsOKRecordingsItem) GetCallerNumber() OptString {
	return s.CallerNumber
}

// GetCallerNumberType returns the value of CallerNumberType.
func (s *PhoneUserRecordingsOKRecordingsItem) GetCallerNumberType() OptInt {
	return s.CallerNumberType
}

// GetOutgoingBy returns the value of OutgoingBy.
func (s *PhoneUserRecordingsOKRecordingsItem) GetOutgoingBy() OptPhoneUserRecordingsOKRecordingsItemOutgoingBy {
	return s.OutgoingBy
}

// GetAcceptedBy returns the value of AcceptedBy.
func (s *PhoneUserRecordingsOKRecordingsItem) GetAcceptedBy() OptPhoneUserRecordingsOKRecordingsItemAcceptedBy {
	return s.AcceptedBy
}

// GetDateTime returns the value of DateTime.
func (s *PhoneUserRecordingsOKRecordingsItem) GetDateTime() OptString {
	return s.DateTime
}

// GetDirection returns the value of Direction.
func (s *PhoneUserRecordingsOKRecordingsItem) GetDirection() OptString {
	return s.Direction
}

// GetDownloadURL returns the value of DownloadURL.
func (s *PhoneUserRecordingsOKRecordingsItem) GetDownloadURL() OptString {
	return s.DownloadURL
}

// GetDuration returns the value of Duration.
func (s *PhoneUserRecordingsOKRecordingsItem) GetDuration() OptInt {
	return s.Duration
}

// GetID returns the value of ID.
func (s *PhoneUserRecordingsOKRecordingsItem) GetID() OptString {
	return s.ID
}

// GetTranscriptDownloadURL returns the value of TranscriptDownloadURL.
func (s *PhoneUserRecordingsOKRecordingsItem) GetTranscriptDownloadURL() OptString {
	return s.TranscriptDownloadURL
}

// SetCallID sets the value of CallID.
func (s *PhoneUserRecordingsOKRecordingsItem) SetCallID(val OptString) {
	s.CallID = val
}

// SetCallLogID sets the value of CallLogID.
func (s *PhoneUserRecordingsOKRecordingsItem) SetCallLogID(val OptString) {
	s.CallLogID = val
}

// SetCalleeName sets the value of CalleeName.
func (s *PhoneUserRecordingsOKRecordingsItem) SetCalleeName(val OptString) {
	s.CalleeName = val
}

// SetCalleeNumber sets the value of CalleeNumber.
func (s *PhoneUserRecordingsOKRecordingsItem) SetCalleeNumber(val OptString) {
	s.CalleeNumber = val
}

// SetCalleeNumberType sets the value of CalleeNumberType.
func (s *PhoneUserRecordingsOKRecordingsItem) SetCalleeNumberType(val OptInt) {
	s.CalleeNumberType = val
}

// SetCallerName sets the value of CallerName.
func (s *PhoneUserRecordingsOKRecordingsItem) SetCallerName(val OptString) {
	s.CallerName = val
}

// SetCallerNumber sets the value of CallerNumber.
func (s *PhoneUserRecordingsOKRecordingsItem) SetCallerNumber(val OptString) {
	s.CallerNumber = val
}

// SetCallerNumberType sets the value of CallerNumberType.
func (s *PhoneUserRecordingsOKRecordingsItem) SetCallerNumberType(val OptInt) {
	s.CallerNumberType = val
}

// SetOutgoingBy sets the value of OutgoingBy.
func (s *PhoneUserRecordingsOKRecordingsItem) SetOutgoingBy(val OptPhoneUserRecordingsOKRecordingsItemOutgoingBy) {
	s.OutgoingBy = val
}

// SetAcceptedBy sets the value of AcceptedBy.
func (s *PhoneUserRecordingsOKRecordingsItem) SetAcceptedBy(val OptPhoneUserRecordingsOKRecordingsItemAcceptedBy) {
	s.AcceptedBy = val
}

// SetDateTime sets the value of DateTime.
func (s *PhoneUserRecordingsOKRecordingsItem) SetDateTime(val OptString) {
	s.DateTime = val
}

// SetDirection sets the value of Direction.
func (s *PhoneUserRecordingsOKRecordingsItem) SetDirection(val OptString) {
	s.Direction = val
}

// SetDownloadURL sets the value of DownloadURL.
func (s *PhoneUserRecordingsOKRecordingsItem) SetDownloadURL(val OptString) {
	s.DownloadURL = val
}

// SetDuration sets the value of Duration.
func (s *PhoneUserRecordingsOKRecordingsItem) SetDuration(val OptInt) {
	s.Duration = val
}

// SetID sets the value of ID.
func (s *PhoneUserRecordingsOKRecordingsItem) SetID(val OptString) {
	s.ID = val
}

// SetTranscriptDownloadURL sets the value of TranscriptDownloadURL.
func (s *PhoneUserRecordingsOKRecordingsItem) SetTranscriptDownloadURL(val OptString) {
	s.TranscriptDownloadURL = val
}

// The call-receiving user. The current recording must belong to the receiver and call queue for it
// to be available.
type PhoneUserRecordingsOKRecordingsItemAcceptedBy struct {
	// The user name.
	Name OptString `json:"name"`
	// The user extension number.
	ExtensionNumber OptString `json:"extension_number"`
}

// GetName returns the value of Name.
func (s *PhoneUserRecordingsOKRecordingsItemAcceptedBy) GetName() OptString {
	return s.Name
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *PhoneUserRecordingsOKRecordingsItemAcceptedBy) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// SetName sets the value of Name.
func (s *PhoneUserRecordingsOKRecordingsItemAcceptedBy) SetName(val OptString) {
	s.Name = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *PhoneUserRecordingsOKRecordingsItemAcceptedBy) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// The call-initiating user. The current recording must belong to the initiator and call queue for it
// to be available.
type PhoneUserRecordingsOKRecordingsItemOutgoingBy struct {
	// The user name.
	Name OptString `json:"name"`
	// The user extension number.
	ExtensionNumber OptString `json:"extension_number"`
}

// GetName returns the value of Name.
func (s *PhoneUserRecordingsOKRecordingsItemOutgoingBy) GetName() OptString {
	return s.Name
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *PhoneUserRecordingsOKRecordingsItemOutgoingBy) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// SetName sets the value of Name.
func (s *PhoneUserRecordingsOKRecordingsItemOutgoingBy) SetName(val OptString) {
	s.Name = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *PhoneUserRecordingsOKRecordingsItemOutgoingBy) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// The phone user setting.
type PhoneUserSettingsOK struct {
	// The area code of user.
	AreaCode OptString `json:"area_code"`
	// The audio prompt language code.
	// American English: `en-US`
	// British English: `en-GB`
	// Espa&ntilde;ol americano: `es-US`
	// Fran&ccedil;ais canadien: `fr-CA`
	// Dansk: `da-DK`
	// Deutsch: `de-DE`
	// Espa&ntilde;ol: `es-ES`
	// Fran&ccedil;ais: `fr-FR`
	// Italiano: `it-IT`
	// Nederlands: `nl-NL`
	// Portugues portugal: `pt-PT`
	// Japanese: `ja-JP`
	// Korean: `ko-KO`
	// Portugues brasil: `pt-BR`
	// Chinese: `zh-CN`
	// Taiwanese: `zh-TW`.
	AudioPromptLanguage OptString `json:"audio_prompt_language"`
	// The [company number](https://support.zoom.us/hc/en-us/articles/360028553691) can be used by
	// external callers to reach your phone users (by dialing the main company number and the user's
	// extension). It can also be used by phone users as their caller ID when making calls.
	CompanyNumber OptString `json:"company_number"`
	// The site's country.
	Country OptPhoneUserSettingsOKCountry `json:"country"`
	// The user delegation.
	Delegation OptPhoneUserSettingsOKDelegation `json:"delegation"`
	// This field contains information on phones or devices provisioned for the user.
	DeskPhone OptPhoneUserSettingsOKDeskPhone `json:"desk_phone"`
	// The owner's extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The music on hold ID.
	// Options: empty char - default and `0` - disable.
	MusicOnHoldID OptString `json:"music_on_hold_id"`
	// The information about the outbound caller.
	OutboundCaller    OptPhoneUserSettingsOKOutboundCaller       `json:"outbound_caller"`
	OutboundCallerIds []PhoneUserSettingsOKOutboundCallerIdsItem `json:"outbound_caller_ids"`
	// The status of the user.
	Status OptString `json:"status"`
	// The shared voicemail access member list. &lt;b&gt;Deprecated&lt;/b&gt;, we will completely
	// deprecate this property in a future release. Instead use policy.voicemail_access_members property
	// from 'Get a user's profile' API.
	VoiceMail []PhoneUserSettingsOKVoiceMailItem `json:"voice_mail"`
	Intercom  OptPhoneUserSettingsOKIntercom     `json:"intercom"`
	// The shared automatic call recording access member list. &lt;b&gt;Deprecated&lt;/b&gt;, we will
	// completely deprecate this property in a future release. Instead use policy.
	// auto_call_recording_access_members property from 'Get a user's profile' API.
	AutoCallRecordingAccessMembers []PhoneUserSettingsOKAutoCallRecordingAccessMembersItem `json:"auto_call_recording_access_members"`
	// The shared ad hoc call recording access member list. &lt;b&gt;Deprecated&lt;/b&gt;, we will
	// completely deprecate this property in a future release. Instead use policy.
	// ad_hoc_call_recording_access_members property from 'Get a user's profile' API.
	AdHocCallRecordingAccessMembers []PhoneUserSettingsOKAdHocCallRecordingAccessMembersItem `json:"ad_hoc_call_recording_access_members"`
}

// GetAreaCode returns the value of AreaCode.
func (s *PhoneUserSettingsOK) GetAreaCode() OptString {
	return s.AreaCode
}

// GetAudioPromptLanguage returns the value of AudioPromptLanguage.
func (s *PhoneUserSettingsOK) GetAudioPromptLanguage() OptString {
	return s.AudioPromptLanguage
}

// GetCompanyNumber returns the value of CompanyNumber.
func (s *PhoneUserSettingsOK) GetCompanyNumber() OptString {
	return s.CompanyNumber
}

// GetCountry returns the value of Country.
func (s *PhoneUserSettingsOK) GetCountry() OptPhoneUserSettingsOKCountry {
	return s.Country
}

// GetDelegation returns the value of Delegation.
func (s *PhoneUserSettingsOK) GetDelegation() OptPhoneUserSettingsOKDelegation {
	return s.Delegation
}

// GetDeskPhone returns the value of DeskPhone.
func (s *PhoneUserSettingsOK) GetDeskPhone() OptPhoneUserSettingsOKDeskPhone {
	return s.DeskPhone
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *PhoneUserSettingsOK) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetMusicOnHoldID returns the value of MusicOnHoldID.
func (s *PhoneUserSettingsOK) GetMusicOnHoldID() OptString {
	return s.MusicOnHoldID
}

// GetOutboundCaller returns the value of OutboundCaller.
func (s *PhoneUserSettingsOK) GetOutboundCaller() OptPhoneUserSettingsOKOutboundCaller {
	return s.OutboundCaller
}

// GetOutboundCallerIds returns the value of OutboundCallerIds.
func (s *PhoneUserSettingsOK) GetOutboundCallerIds() []PhoneUserSettingsOKOutboundCallerIdsItem {
	return s.OutboundCallerIds
}

// GetStatus returns the value of Status.
func (s *PhoneUserSettingsOK) GetStatus() OptString {
	return s.Status
}

// GetVoiceMail returns the value of VoiceMail.
func (s *PhoneUserSettingsOK) GetVoiceMail() []PhoneUserSettingsOKVoiceMailItem {
	return s.VoiceMail
}

// GetIntercom returns the value of Intercom.
func (s *PhoneUserSettingsOK) GetIntercom() OptPhoneUserSettingsOKIntercom {
	return s.Intercom
}

// GetAutoCallRecordingAccessMembers returns the value of AutoCallRecordingAccessMembers.
func (s *PhoneUserSettingsOK) GetAutoCallRecordingAccessMembers() []PhoneUserSettingsOKAutoCallRecordingAccessMembersItem {
	return s.AutoCallRecordingAccessMembers
}

// GetAdHocCallRecordingAccessMembers returns the value of AdHocCallRecordingAccessMembers.
func (s *PhoneUserSettingsOK) GetAdHocCallRecordingAccessMembers() []PhoneUserSettingsOKAdHocCallRecordingAccessMembersItem {
	return s.AdHocCallRecordingAccessMembers
}

// SetAreaCode sets the value of AreaCode.
func (s *PhoneUserSettingsOK) SetAreaCode(val OptString) {
	s.AreaCode = val
}

// SetAudioPromptLanguage sets the value of AudioPromptLanguage.
func (s *PhoneUserSettingsOK) SetAudioPromptLanguage(val OptString) {
	s.AudioPromptLanguage = val
}

// SetCompanyNumber sets the value of CompanyNumber.
func (s *PhoneUserSettingsOK) SetCompanyNumber(val OptString) {
	s.CompanyNumber = val
}

// SetCountry sets the value of Country.
func (s *PhoneUserSettingsOK) SetCountry(val OptPhoneUserSettingsOKCountry) {
	s.Country = val
}

// SetDelegation sets the value of Delegation.
func (s *PhoneUserSettingsOK) SetDelegation(val OptPhoneUserSettingsOKDelegation) {
	s.Delegation = val
}

// SetDeskPhone sets the value of DeskPhone.
func (s *PhoneUserSettingsOK) SetDeskPhone(val OptPhoneUserSettingsOKDeskPhone) {
	s.DeskPhone = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *PhoneUserSettingsOK) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetMusicOnHoldID sets the value of MusicOnHoldID.
func (s *PhoneUserSettingsOK) SetMusicOnHoldID(val OptString) {
	s.MusicOnHoldID = val
}

// SetOutboundCaller sets the value of OutboundCaller.
func (s *PhoneUserSettingsOK) SetOutboundCaller(val OptPhoneUserSettingsOKOutboundCaller) {
	s.OutboundCaller = val
}

// SetOutboundCallerIds sets the value of OutboundCallerIds.
func (s *PhoneUserSettingsOK) SetOutboundCallerIds(val []PhoneUserSettingsOKOutboundCallerIdsItem) {
	s.OutboundCallerIds = val
}

// SetStatus sets the value of Status.
func (s *PhoneUserSettingsOK) SetStatus(val OptString) {
	s.Status = val
}

// SetVoiceMail sets the value of VoiceMail.
func (s *PhoneUserSettingsOK) SetVoiceMail(val []PhoneUserSettingsOKVoiceMailItem) {
	s.VoiceMail = val
}

// SetIntercom sets the value of Intercom.
func (s *PhoneUserSettingsOK) SetIntercom(val OptPhoneUserSettingsOKIntercom) {
	s.Intercom = val
}

// SetAutoCallRecordingAccessMembers sets the value of AutoCallRecordingAccessMembers.
func (s *PhoneUserSettingsOK) SetAutoCallRecordingAccessMembers(val []PhoneUserSettingsOKAutoCallRecordingAccessMembersItem) {
	s.AutoCallRecordingAccessMembers = val
}

// SetAdHocCallRecordingAccessMembers sets the value of AdHocCallRecordingAccessMembers.
func (s *PhoneUserSettingsOK) SetAdHocCallRecordingAccessMembers(val []PhoneUserSettingsOKAdHocCallRecordingAccessMembersItem) {
	s.AdHocCallRecordingAccessMembers = val
}

// Merged schema.
type PhoneUserSettingsOKAdHocCallRecordingAccessMembersItem struct {
	// The Zoom user ID to share the access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// This field specifies whether the user has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// This field specifies whether the user has download permissions. The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
	// The unique identifier of the shared sub-setting that the user can access.
	SharedID OptString `json:"shared_id"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *PhoneUserSettingsOKAdHocCallRecordingAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDelete returns the value of AllowDelete.
func (s *PhoneUserSettingsOKAdHocCallRecordingAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *PhoneUserSettingsOKAdHocCallRecordingAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetSharedID returns the value of SharedID.
func (s *PhoneUserSettingsOKAdHocCallRecordingAccessMembersItem) GetSharedID() OptString {
	return s.SharedID
}

// SetAccessUserID sets the value of AccessUserID.
func (s *PhoneUserSettingsOKAdHocCallRecordingAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *PhoneUserSettingsOKAdHocCallRecordingAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *PhoneUserSettingsOKAdHocCallRecordingAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetSharedID sets the value of SharedID.
func (s *PhoneUserSettingsOKAdHocCallRecordingAccessMembersItem) SetSharedID(val OptString) {
	s.SharedID = val
}

// Merged schema.
type PhoneUserSettingsOKAutoCallRecordingAccessMembersItem struct {
	// The Zoom user ID to share the access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// This field specifies whether the user has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// This field specifies whether the user has download permissions. The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
	// The unique identifier of the shared sub-setting that the user can access.
	SharedID OptString `json:"shared_id"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *PhoneUserSettingsOKAutoCallRecordingAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDelete returns the value of AllowDelete.
func (s *PhoneUserSettingsOKAutoCallRecordingAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *PhoneUserSettingsOKAutoCallRecordingAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetSharedID returns the value of SharedID.
func (s *PhoneUserSettingsOKAutoCallRecordingAccessMembersItem) GetSharedID() OptString {
	return s.SharedID
}

// SetAccessUserID sets the value of AccessUserID.
func (s *PhoneUserSettingsOKAutoCallRecordingAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *PhoneUserSettingsOKAutoCallRecordingAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *PhoneUserSettingsOKAutoCallRecordingAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetSharedID sets the value of SharedID.
func (s *PhoneUserSettingsOKAutoCallRecordingAccessMembersItem) SetSharedID(val OptString) {
	s.SharedID = val
}

// The site's country.
type PhoneUserSettingsOKCountry struct {
	// Two lettered country [code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	Code OptString `json:"code"`
	// The country's calling code.
	CountryCode OptString `json:"country_code"`
	// The site's country name.
	Name OptString `json:"name"`
}

// GetCode returns the value of Code.
func (s *PhoneUserSettingsOKCountry) GetCode() OptString {
	return s.Code
}

// GetCountryCode returns the value of CountryCode.
func (s *PhoneUserSettingsOKCountry) GetCountryCode() OptString {
	return s.CountryCode
}

// GetName returns the value of Name.
func (s *PhoneUserSettingsOKCountry) GetName() OptString {
	return s.Name
}

// SetCode sets the value of Code.
func (s *PhoneUserSettingsOKCountry) SetCode(val OptString) {
	s.Code = val
}

// SetCountryCode sets the value of CountryCode.
func (s *PhoneUserSettingsOKCountry) SetCountryCode(val OptString) {
	s.CountryCode = val
}

// SetName sets the value of Name.
func (s *PhoneUserSettingsOKCountry) SetName(val OptString) {
	s.Name = val
}

// The user delegation.
type PhoneUserSettingsOKDelegation struct {
	// The delegation assistants.
	Assistants []PhoneUserSettingsOKDelegationAssistantsItem `json:"assistants"`
	// Whether to allow members to prevent others from picking up a held call, and listening, whispering,
	// barging, or taking over a call if it's configured.
	Privacy OptBool `json:"privacy"`
	// The delegation privileges. 1-Place Calls, 2-Answer Calls, 3- Pick Up Hold Calls.
	Privileges []int `json:"privileges"`
	// Whether to allow users to access to the feature of delegation.
	Locked OptBool `json:"locked"`
}

// GetAssistants returns the value of Assistants.
func (s *PhoneUserSettingsOKDelegation) GetAssistants() []PhoneUserSettingsOKDelegationAssistantsItem {
	return s.Assistants
}

// GetPrivacy returns the value of Privacy.
func (s *PhoneUserSettingsOKDelegation) GetPrivacy() OptBool {
	return s.Privacy
}

// GetPrivileges returns the value of Privileges.
func (s *PhoneUserSettingsOKDelegation) GetPrivileges() []int {
	return s.Privileges
}

// GetLocked returns the value of Locked.
func (s *PhoneUserSettingsOKDelegation) GetLocked() OptBool {
	return s.Locked
}

// SetAssistants sets the value of Assistants.
func (s *PhoneUserSettingsOKDelegation) SetAssistants(val []PhoneUserSettingsOKDelegationAssistantsItem) {
	s.Assistants = val
}

// SetPrivacy sets the value of Privacy.
func (s *PhoneUserSettingsOKDelegation) SetPrivacy(val OptBool) {
	s.Privacy = val
}

// SetPrivileges sets the value of Privileges.
func (s *PhoneUserSettingsOKDelegation) SetPrivileges(val []int) {
	s.Privileges = val
}

// SetLocked sets the value of Locked.
func (s *PhoneUserSettingsOKDelegation) SetLocked(val OptBool) {
	s.Locked = val
}

type PhoneUserSettingsOKDelegationAssistantsItem struct {
	// The display name.
	DisplayName OptString `json:"display_name"`
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The extension type: `user` or `commonArea`.
	ExtensionType OptString `json:"extension_type"`
	// The user or common area ID.
	ID OptString `json:"id"`
}

// GetDisplayName returns the value of DisplayName.
func (s *PhoneUserSettingsOKDelegationAssistantsItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionID returns the value of ExtensionID.
func (s *PhoneUserSettingsOKDelegationAssistantsItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *PhoneUserSettingsOKDelegationAssistantsItem) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *PhoneUserSettingsOKDelegationAssistantsItem) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetID returns the value of ID.
func (s *PhoneUserSettingsOKDelegationAssistantsItem) GetID() OptString {
	return s.ID
}

// SetDisplayName sets the value of DisplayName.
func (s *PhoneUserSettingsOKDelegationAssistantsItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionID sets the value of ExtensionID.
func (s *PhoneUserSettingsOKDelegationAssistantsItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *PhoneUserSettingsOKDelegationAssistantsItem) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *PhoneUserSettingsOKDelegationAssistantsItem) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetID sets the value of ID.
func (s *PhoneUserSettingsOKDelegationAssistantsItem) SetID(val OptString) {
	s.ID = val
}

// This field contains information on phones or devices provisioned for the user.
type PhoneUserSettingsOKDeskPhone struct {
	// The information about the desk phones.
	Devices       []PhoneUserSettingsOKDeskPhoneDevicesItem    `json:"devices"`
	KeysPositions OptPhoneUserSettingsOKDeskPhoneKeysPositions `json:"keys_positions"`
	// After enabling this option, you can lock your desk phone screen. PIN Code is required to unlock
	// your phone. This feature is not supported on some devices. See [Supported Device
	// Types](https://support.zoom.us/hc/en-us/articles/360029698771) for more information.
	PhoneScreenLock OptBool `json:"phone_screen_lock"`
	// The PIN code to be used to access voicemail, hot desking, and unlocking desk phones.
	PinCode OptString `json:"pin_code"`
}

// GetDevices returns the value of Devices.
func (s *PhoneUserSettingsOKDeskPhone) GetDevices() []PhoneUserSettingsOKDeskPhoneDevicesItem {
	return s.Devices
}

// GetKeysPositions returns the value of KeysPositions.
func (s *PhoneUserSettingsOKDeskPhone) GetKeysPositions() OptPhoneUserSettingsOKDeskPhoneKeysPositions {
	return s.KeysPositions
}

// GetPhoneScreenLock returns the value of PhoneScreenLock.
func (s *PhoneUserSettingsOKDeskPhone) GetPhoneScreenLock() OptBool {
	return s.PhoneScreenLock
}

// GetPinCode returns the value of PinCode.
func (s *PhoneUserSettingsOKDeskPhone) GetPinCode() OptString {
	return s.PinCode
}

// SetDevices sets the value of Devices.
func (s *PhoneUserSettingsOKDeskPhone) SetDevices(val []PhoneUserSettingsOKDeskPhoneDevicesItem) {
	s.Devices = val
}

// SetKeysPositions sets the value of KeysPositions.
func (s *PhoneUserSettingsOKDeskPhone) SetKeysPositions(val OptPhoneUserSettingsOKDeskPhoneKeysPositions) {
	s.KeysPositions = val
}

// SetPhoneScreenLock sets the value of PhoneScreenLock.
func (s *PhoneUserSettingsOKDeskPhone) SetPhoneScreenLock(val OptBool) {
	s.PhoneScreenLock = val
}

// SetPinCode sets the value of PinCode.
func (s *PhoneUserSettingsOKDeskPhone) SetPinCode(val OptString) {
	s.PinCode = val
}

type PhoneUserSettingsOKDeskPhoneDevicesItem struct {
	// The device type, including the manufacturer and the model name.
	DeviceType OptString `json:"device_type"`
	// The display name of the device.
	DisplayName OptString `json:"display_name"`
	// The device ID.
	ID OptString `json:"id"`
	// The device policy.
	Policy OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicy `json:"policy"`
	// The status of the device: `online` or `offline`.
	Status OptString `json:"status"`
}

// GetDeviceType returns the value of DeviceType.
func (s *PhoneUserSettingsOKDeskPhoneDevicesItem) GetDeviceType() OptString {
	return s.DeviceType
}

// GetDisplayName returns the value of DisplayName.
func (s *PhoneUserSettingsOKDeskPhoneDevicesItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetID returns the value of ID.
func (s *PhoneUserSettingsOKDeskPhoneDevicesItem) GetID() OptString {
	return s.ID
}

// GetPolicy returns the value of Policy.
func (s *PhoneUserSettingsOKDeskPhoneDevicesItem) GetPolicy() OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicy {
	return s.Policy
}

// GetStatus returns the value of Status.
func (s *PhoneUserSettingsOKDeskPhoneDevicesItem) GetStatus() OptString {
	return s.Status
}

// SetDeviceType sets the value of DeviceType.
func (s *PhoneUserSettingsOKDeskPhoneDevicesItem) SetDeviceType(val OptString) {
	s.DeviceType = val
}

// SetDisplayName sets the value of DisplayName.
func (s *PhoneUserSettingsOKDeskPhoneDevicesItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetID sets the value of ID.
func (s *PhoneUserSettingsOKDeskPhoneDevicesItem) SetID(val OptString) {
	s.ID = val
}

// SetPolicy sets the value of Policy.
func (s *PhoneUserSettingsOKDeskPhoneDevicesItem) SetPolicy(val OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicy) {
	s.Policy = val
}

// SetStatus sets the value of Status.
func (s *PhoneUserSettingsOKDeskPhoneDevicesItem) SetStatus(val OptString) {
	s.Status = val
}

// The device policy.
type PhoneUserSettingsOKDeskPhoneDevicesItemPolicy struct {
	CallControl OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl `json:"call_control"`
	HotDesking  OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking  `json:"hot_desking"`
}

// GetCallControl returns the value of CallControl.
func (s *PhoneUserSettingsOKDeskPhoneDevicesItemPolicy) GetCallControl() OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl {
	return s.CallControl
}

// GetHotDesking returns the value of HotDesking.
func (s *PhoneUserSettingsOKDeskPhoneDevicesItemPolicy) GetHotDesking() OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking {
	return s.HotDesking
}

// SetCallControl sets the value of CallControl.
func (s *PhoneUserSettingsOKDeskPhoneDevicesItemPolicy) SetCallControl(val OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl) {
	s.CallControl = val
}

// SetHotDesking sets the value of HotDesking.
func (s *PhoneUserSettingsOKDeskPhoneDevicesItemPolicy) SetHotDesking(val OptPhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking) {
	s.HotDesking = val
}

type PhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl struct {
	// This field allows the call control feature to the current device. Configure the desk phone devices
	// to enable call control, which allows users to perform desk phone's call control actions from the
	// Zoom desktop client, including making and accepting calls.
	// Options include:
	// * `unsupported`
	// * `on`
	// * `off`.
	Status OptString `json:"status"`
}

// GetStatus returns the value of Status.
func (s *PhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl) GetStatus() OptString {
	return s.Status
}

// SetStatus sets the value of Status.
func (s *PhoneUserSettingsOKDeskPhoneDevicesItemPolicyCallControl) SetStatus(val OptString) {
	s.Status = val
}

type PhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking struct {
	// This field allows the hot desking feature to the current device. It lets the guest user sign in to
	// the desk phone. You can't use the desk phone until the guest user signs out.
	// Options include:
	// * `unsupported`
	// * `on`
	// * `off`.
	Status OptString `json:"status"`
}

// GetStatus returns the value of Status.
func (s *PhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking) GetStatus() OptString {
	return s.Status
}

// SetStatus sets the value of Status.
func (s *PhoneUserSettingsOKDeskPhoneDevicesItemPolicyHotDesking) SetStatus(val OptString) {
	s.Status = val
}

type PhoneUserSettingsOKDeskPhoneKeysPositions struct {
	// The primary number of the user.
	PrimaryNumber OptString `json:"primary_number"`
}

// GetPrimaryNumber returns the value of PrimaryNumber.
func (s *PhoneUserSettingsOKDeskPhoneKeysPositions) GetPrimaryNumber() OptString {
	return s.PrimaryNumber
}

// SetPrimaryNumber sets the value of PrimaryNumber.
func (s *PhoneUserSettingsOKDeskPhoneKeysPositions) SetPrimaryNumber(val OptString) {
	s.PrimaryNumber = val
}

type PhoneUserSettingsOKIntercom struct {
	// The extensions invited into the intercom relationship.
	AudioIntercoms []PhoneUserSettingsOKIntercomAudioIntercomsItem `json:"audio_intercoms"`
	// The selected default device to which all your intercom calls will be routed.
	Device OptPhoneUserSettingsOKIntercomDevice `json:"device"`
}

// GetAudioIntercoms returns the value of AudioIntercoms.
func (s *PhoneUserSettingsOKIntercom) GetAudioIntercoms() []PhoneUserSettingsOKIntercomAudioIntercomsItem {
	return s.AudioIntercoms
}

// GetDevice returns the value of Device.
func (s *PhoneUserSettingsOKIntercom) GetDevice() OptPhoneUserSettingsOKIntercomDevice {
	return s.Device
}

// SetAudioIntercoms sets the value of AudioIntercoms.
func (s *PhoneUserSettingsOKIntercom) SetAudioIntercoms(val []PhoneUserSettingsOKIntercomAudioIntercomsItem) {
	s.AudioIntercoms = val
}

// SetDevice sets the value of Device.
func (s *PhoneUserSettingsOKIntercom) SetDevice(val OptPhoneUserSettingsOKIntercomDevice) {
	s.Device = val
}

type PhoneUserSettingsOKIntercomAudioIntercomsItem struct {
	// The extension ID.
	ExtensionID OptString `json:"extension_id"`
	// The extension number.
	ExtensionNumber OptString `json:"extension_number"`
	// The extension type: `user` or `commonArea`.
	ExtensionType OptString `json:"extension_type"`
	// The display name.
	DisplayName OptString `json:"display_name"`
	// The status of the extension: `active` or `pending`.
	Status OptString `json:"status"`
	// The device ID. Applicable when the extension level is `commonArea`.
	DeviceID OptString `json:"device_id"`
	// The status of the device. Applicable when the extension level is `commonArea`.
	DeviceStatus OptString `json:"device_status"`
}

// GetExtensionID returns the value of ExtensionID.
func (s *PhoneUserSettingsOKIntercomAudioIntercomsItem) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *PhoneUserSettingsOKIntercomAudioIntercomsItem) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *PhoneUserSettingsOKIntercomAudioIntercomsItem) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetDisplayName returns the value of DisplayName.
func (s *PhoneUserSettingsOKIntercomAudioIntercomsItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetStatus returns the value of Status.
func (s *PhoneUserSettingsOKIntercomAudioIntercomsItem) GetStatus() OptString {
	return s.Status
}

// GetDeviceID returns the value of DeviceID.
func (s *PhoneUserSettingsOKIntercomAudioIntercomsItem) GetDeviceID() OptString {
	return s.DeviceID
}

// GetDeviceStatus returns the value of DeviceStatus.
func (s *PhoneUserSettingsOKIntercomAudioIntercomsItem) GetDeviceStatus() OptString {
	return s.DeviceStatus
}

// SetExtensionID sets the value of ExtensionID.
func (s *PhoneUserSettingsOKIntercomAudioIntercomsItem) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *PhoneUserSettingsOKIntercomAudioIntercomsItem) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *PhoneUserSettingsOKIntercomAudioIntercomsItem) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetDisplayName sets the value of DisplayName.
func (s *PhoneUserSettingsOKIntercomAudioIntercomsItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetStatus sets the value of Status.
func (s *PhoneUserSettingsOKIntercomAudioIntercomsItem) SetStatus(val OptString) {
	s.Status = val
}

// SetDeviceID sets the value of DeviceID.
func (s *PhoneUserSettingsOKIntercomAudioIntercomsItem) SetDeviceID(val OptString) {
	s.DeviceID = val
}

// SetDeviceStatus sets the value of DeviceStatus.
func (s *PhoneUserSettingsOKIntercomAudioIntercomsItem) SetDeviceStatus(val OptString) {
	s.DeviceStatus = val
}

// The selected default device to which all your intercom calls will be routed.
type PhoneUserSettingsOKIntercomDevice struct {
	// The device ID.
	ID OptString `json:"id"`
	// The device name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *PhoneUserSettingsOKIntercomDevice) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *PhoneUserSettingsOKIntercomDevice) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *PhoneUserSettingsOKIntercomDevice) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *PhoneUserSettingsOKIntercomDevice) SetName(val OptString) {
	s.Name = val
}

// The information about the outbound caller.
type PhoneUserSettingsOKOutboundCaller struct {
	// The outbound calling number.
	Number OptString `json:"number"`
}

// GetNumber returns the value of Number.
func (s *PhoneUserSettingsOKOutboundCaller) GetNumber() OptString {
	return s.Number
}

// SetNumber sets the value of Number.
func (s *PhoneUserSettingsOKOutboundCaller) SetNumber(val OptString) {
	s.Number = val
}

type PhoneUserSettingsOKOutboundCallerIdsItem struct {
	// Whether the outbound caller ID is the default or not. If `true`, the outbound caller ID is the
	// default caller ID.
	IsDefault OptBool `json:"is_default"`
	// The outbound caller name.
	Name OptString `json:"name"`
	// The outbound caller number.
	Number OptString `json:"number"`
}

// GetIsDefault returns the value of IsDefault.
func (s *PhoneUserSettingsOKOutboundCallerIdsItem) GetIsDefault() OptBool {
	return s.IsDefault
}

// GetName returns the value of Name.
func (s *PhoneUserSettingsOKOutboundCallerIdsItem) GetName() OptString {
	return s.Name
}

// GetNumber returns the value of Number.
func (s *PhoneUserSettingsOKOutboundCallerIdsItem) GetNumber() OptString {
	return s.Number
}

// SetIsDefault sets the value of IsDefault.
func (s *PhoneUserSettingsOKOutboundCallerIdsItem) SetIsDefault(val OptBool) {
	s.IsDefault = val
}

// SetName sets the value of Name.
func (s *PhoneUserSettingsOKOutboundCallerIdsItem) SetName(val OptString) {
	s.Name = val
}

// SetNumber sets the value of Number.
func (s *PhoneUserSettingsOKOutboundCallerIdsItem) SetNumber(val OptString) {
	s.Number = val
}

type PhoneUserSettingsOKVoiceMailItem struct {
	// The user can access voicemail messages for the extension.
	AccessUserID OptString `json:"access_user_id"`
	// Whether the user has delete permissions. The default is **false**.
	Delete OptBool `json:"delete"`
	// Whether the user has download permissions. The default is **false**.
	Download OptBool `json:"download"`
	// The unique identifier of the shared voicemail that the user can access.
	SharedID OptString `json:"shared_id"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *PhoneUserSettingsOKVoiceMailItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetDelete returns the value of Delete.
func (s *PhoneUserSettingsOKVoiceMailItem) GetDelete() OptBool {
	return s.Delete
}

// GetDownload returns the value of Download.
func (s *PhoneUserSettingsOKVoiceMailItem) GetDownload() OptBool {
	return s.Download
}

// GetSharedID returns the value of SharedID.
func (s *PhoneUserSettingsOKVoiceMailItem) GetSharedID() OptString {
	return s.SharedID
}

// SetAccessUserID sets the value of AccessUserID.
func (s *PhoneUserSettingsOKVoiceMailItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetDelete sets the value of Delete.
func (s *PhoneUserSettingsOKVoiceMailItem) SetDelete(val OptBool) {
	s.Delete = val
}

// SetDownload sets the value of Download.
func (s *PhoneUserSettingsOKVoiceMailItem) SetDownload(val OptBool) {
	s.Download = val
}

// SetSharedID sets the value of SharedID.
func (s *PhoneUserSettingsOKVoiceMailItem) SetSharedID(val OptString) {
	s.SharedID = val
}

// Phone user voicemails.
type PhoneUserVoiceMailsOK struct {
	// Start date of the query.
	From OptDate `json:"from"`
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString `json:"next_page_token"`
	// Total number of pages. This field is deprecated.
	PageCount OptInt `json:"page_count"`
	// Size of each page.
	PageSize OptInt `json:"page_size"`
	// End date of the query.
	To OptDate `json:"to"`
	// Total number of records.
	TotalRecords OptInt `json:"total_records"`
	// Voicemails.
	VoiceMails []PhoneUserVoiceMailsOKVoiceMailsItem `json:"voice_mails"`
}

// GetFrom returns the value of From.
func (s *PhoneUserVoiceMailsOK) GetFrom() OptDate {
	return s.From
}

// GetNextPageToken returns the value of NextPageToken.
func (s *PhoneUserVoiceMailsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageCount returns the value of PageCount.
func (s *PhoneUserVoiceMailsOK) GetPageCount() OptInt {
	return s.PageCount
}

// GetPageSize returns the value of PageSize.
func (s *PhoneUserVoiceMailsOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetTo returns the value of To.
func (s *PhoneUserVoiceMailsOK) GetTo() OptDate {
	return s.To
}

// GetTotalRecords returns the value of TotalRecords.
func (s *PhoneUserVoiceMailsOK) GetTotalRecords() OptInt {
	return s.TotalRecords
}

// GetVoiceMails returns the value of VoiceMails.
func (s *PhoneUserVoiceMailsOK) GetVoiceMails() []PhoneUserVoiceMailsOKVoiceMailsItem {
	return s.VoiceMails
}

// SetFrom sets the value of From.
func (s *PhoneUserVoiceMailsOK) SetFrom(val OptDate) {
	s.From = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *PhoneUserVoiceMailsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageCount sets the value of PageCount.
func (s *PhoneUserVoiceMailsOK) SetPageCount(val OptInt) {
	s.PageCount = val
}

// SetPageSize sets the value of PageSize.
func (s *PhoneUserVoiceMailsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetTo sets the value of To.
func (s *PhoneUserVoiceMailsOK) SetTo(val OptDate) {
	s.To = val
}

// SetTotalRecords sets the value of TotalRecords.
func (s *PhoneUserVoiceMailsOK) SetTotalRecords(val OptInt) {
	s.TotalRecords = val
}

// SetVoiceMails sets the value of VoiceMails.
func (s *PhoneUserVoiceMailsOK) SetVoiceMails(val []PhoneUserVoiceMailsOKVoiceMailsItem) {
	s.VoiceMails = val
}

type PhoneUserVoiceMailsOKVoiceMailsItem struct {
	// The phone call's unique ID.
	CallID OptString `json:"call_id"`
	// The phone call log's unique ID.
	CallLogID OptString `json:"call_log_id"`
	// Contact name of callee.
	CalleeName OptString `json:"callee_name"`
	// The number associated with the callee. Could be a phone number or an extension. Check the number
	// type to differentiate the two.
	CalleeNumber OptString `json:"callee_number"`
	// The callee's number type:
	// * `1` &mdash; Internal number.
	// * `2` &mdash; External number.
	// * `3` &mdash; Customized emergency number.
	CalleeNumberType OptInt `json:"callee_number_type"`
	// Contact name of the caller.
	CallerName OptString `json:"caller_name"`
	// The number associated with the caller. Could be a phone number or an extension. Check the number
	// type to differentiate the two.
	CallerNumber OptString `json:"caller_number"`
	// The caller's number type:
	// * `1` &mdash; Internal number.
	// * `2` &mdash; External number.
	CallerNumberType OptInt `json:"caller_number_type"`
	// Start time and date of the voicemail.
	DateTime OptString `json:"date_time"`
	// Download url of the attachment.
	DownloadURL OptString `json:"download_url"`
	// The duration of voicemail in seconds.
	Duration OptInt `json:"duration"`
	// Voicemail ID.
	ID OptString `json:"id"`
	// Status of the voice mail. Can be either 'read' or 'unread'.
	Status OptString `json:"status"`
}

// GetCallID returns the value of CallID.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) GetCallID() OptString {
	return s.CallID
}

// GetCallLogID returns the value of CallLogID.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) GetCallLogID() OptString {
	return s.CallLogID
}

// GetCalleeName returns the value of CalleeName.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) GetCalleeName() OptString {
	return s.CalleeName
}

// GetCalleeNumber returns the value of CalleeNumber.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) GetCalleeNumber() OptString {
	return s.CalleeNumber
}

// GetCalleeNumberType returns the value of CalleeNumberType.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) GetCalleeNumberType() OptInt {
	return s.CalleeNumberType
}

// GetCallerName returns the value of CallerName.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) GetCallerName() OptString {
	return s.CallerName
}

// GetCallerNumber returns the value of CallerNumber.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) GetCallerNumber() OptString {
	return s.CallerNumber
}

// GetCallerNumberType returns the value of CallerNumberType.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) GetCallerNumberType() OptInt {
	return s.CallerNumberType
}

// GetDateTime returns the value of DateTime.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) GetDateTime() OptString {
	return s.DateTime
}

// GetDownloadURL returns the value of DownloadURL.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) GetDownloadURL() OptString {
	return s.DownloadURL
}

// GetDuration returns the value of Duration.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) GetDuration() OptInt {
	return s.Duration
}

// GetID returns the value of ID.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) GetID() OptString {
	return s.ID
}

// GetStatus returns the value of Status.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) GetStatus() OptString {
	return s.Status
}

// SetCallID sets the value of CallID.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) SetCallID(val OptString) {
	s.CallID = val
}

// SetCallLogID sets the value of CallLogID.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) SetCallLogID(val OptString) {
	s.CallLogID = val
}

// SetCalleeName sets the value of CalleeName.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) SetCalleeName(val OptString) {
	s.CalleeName = val
}

// SetCalleeNumber sets the value of CalleeNumber.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) SetCalleeNumber(val OptString) {
	s.CalleeNumber = val
}

// SetCalleeNumberType sets the value of CalleeNumberType.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) SetCalleeNumberType(val OptInt) {
	s.CalleeNumberType = val
}

// SetCallerName sets the value of CallerName.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) SetCallerName(val OptString) {
	s.CallerName = val
}

// SetCallerNumber sets the value of CallerNumber.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) SetCallerNumber(val OptString) {
	s.CallerNumber = val
}

// SetCallerNumberType sets the value of CallerNumberType.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) SetCallerNumberType(val OptInt) {
	s.CallerNumberType = val
}

// SetDateTime sets the value of DateTime.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) SetDateTime(val OptString) {
	s.DateTime = val
}

// SetDownloadURL sets the value of DownloadURL.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) SetDownloadURL(val OptString) {
	s.DownloadURL = val
}

// SetDuration sets the value of Duration.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) SetDuration(val OptInt) {
	s.Duration = val
}

// SetID sets the value of ID.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) SetID(val OptString) {
	s.ID = val
}

// SetStatus sets the value of Status.
func (s *PhoneUserVoiceMailsOKVoiceMailsItem) SetStatus(val OptString) {
	s.Status = val
}

// Ref: #/components/schemas/PostCallHandlingSettingsCallForwarding
type PostCallHandlingSettingsCallForwarding struct {
	Settings OptPostCallHandlingSettingsCallForwardingSettings `json:"settings"`
	// The type of sub-setting:
	// * `call_forwarding`.
	SubSettingType OptString `json:"sub_setting_type"`
}

// GetSettings returns the value of Settings.
func (s *PostCallHandlingSettingsCallForwarding) GetSettings() OptPostCallHandlingSettingsCallForwardingSettings {
	return s.Settings
}

// GetSubSettingType returns the value of SubSettingType.
func (s *PostCallHandlingSettingsCallForwarding) GetSubSettingType() OptString {
	return s.SubSettingType
}

// SetSettings sets the value of Settings.
func (s *PostCallHandlingSettingsCallForwarding) SetSettings(val OptPostCallHandlingSettingsCallForwardingSettings) {
	s.Settings = val
}

// SetSubSettingType sets the value of SubSettingType.
func (s *PostCallHandlingSettingsCallForwarding) SetSubSettingType(val OptString) {
	s.SubSettingType = val
}

type PostCallHandlingSettingsCallForwardingSettings struct {
	// The holiday's ID. This field is only required for the `call_forwarding` sub-setting.
	HolidayID OptString `json:"holiday_id"`
	// The external phone number's description. This field is only required for the `call_forwarding`
	// sub-setting.
	Description OptString `json:"description"`
	// The external phone number, in [E.164 format](https://en.wikipedia.org/wiki/E.164). This field is
	// only required for the `call_forwarding` sub-setting.
	PhoneNumber OptString `json:"phone_number"`
}

// GetHolidayID returns the value of HolidayID.
func (s *PostCallHandlingSettingsCallForwardingSettings) GetHolidayID() OptString {
	return s.HolidayID
}

// GetDescription returns the value of Description.
func (s *PostCallHandlingSettingsCallForwardingSettings) GetDescription() OptString {
	return s.Description
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *PostCallHandlingSettingsCallForwardingSettings) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// SetHolidayID sets the value of HolidayID.
func (s *PostCallHandlingSettingsCallForwardingSettings) SetHolidayID(val OptString) {
	s.HolidayID = val
}

// SetDescription sets the value of Description.
func (s *PostCallHandlingSettingsCallForwardingSettings) SetDescription(val OptString) {
	s.Description = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *PostCallHandlingSettingsCallForwardingSettings) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// Ref: #/components/schemas/PostCallHandlingSettingsHoliday
type PostCallHandlingSettingsHoliday struct {
	Settings OptPostCallHandlingSettingsHolidaySettings `json:"settings"`
	// The type of sub-setting:
	// * `holiday`.
	SubSettingType OptString `json:"sub_setting_type"`
}

// GetSettings returns the value of Settings.
func (s *PostCallHandlingSettingsHoliday) GetSettings() OptPostCallHandlingSettingsHolidaySettings {
	return s.Settings
}

// GetSubSettingType returns the value of SubSettingType.
func (s *PostCallHandlingSettingsHoliday) GetSubSettingType() OptString {
	return s.SubSettingType
}

// SetSettings sets the value of Settings.
func (s *PostCallHandlingSettingsHoliday) SetSettings(val OptPostCallHandlingSettingsHolidaySettings) {
	s.Settings = val
}

// SetSubSettingType sets the value of SubSettingType.
func (s *PostCallHandlingSettingsHoliday) SetSubSettingType(val OptString) {
	s.SubSettingType = val
}

type PostCallHandlingSettingsHolidaySettings struct {
	// The name of the holiday. This field is only required for the `holiday` sub-setting.
	Name OptString `json:"name"`
	// The holiday's start date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. This field is only
	// required for the `holiday` sub-setting.
	From OptDateTime `json:"from"`
	// The holiday's end date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. It's only required for the
	// `holiday` sub-setting.
	To OptDateTime `json:"to"`
}

// GetName returns the value of Name.
func (s *PostCallHandlingSettingsHolidaySettings) GetName() OptString {
	return s.Name
}

// GetFrom returns the value of From.
func (s *PostCallHandlingSettingsHolidaySettings) GetFrom() OptDateTime {
	return s.From
}

// GetTo returns the value of To.
func (s *PostCallHandlingSettingsHolidaySettings) GetTo() OptDateTime {
	return s.To
}

// SetName sets the value of Name.
func (s *PostCallHandlingSettingsHolidaySettings) SetName(val OptString) {
	s.Name = val
}

// SetFrom sets the value of From.
func (s *PostCallHandlingSettingsHolidaySettings) SetFrom(val OptDateTime) {
	s.From = val
}

// SetTo sets the value of To.
func (s *PostCallHandlingSettingsHolidaySettings) SetTo(val OptDateTime) {
	s.To = val
}

// RebootPhoneDeviceAccepted is response for RebootPhoneDevice operation.
type RebootPhoneDeviceAccepted struct{}

// RemoveCQPolicySubSettingNoContent is response for RemoveCQPolicySubSetting operation.
type RemoveCQPolicySubSettingNoContent struct{}

// RemoveGCPMembersNoContent is response for RemoveGCPMembers operation.
type RemoveGCPMembersNoContent struct{}

// RemoveMemberNoContent is response for RemoveMember operation.
type RemoveMemberNoContent struct{}

// RemoveMembersNoContent is response for RemoveMembers operation.
type RemoveMembersNoContent struct{}

// RemoveSLGPolicySubSettingNoContent is response for RemoveSLGPolicySubSetting operation.
type RemoveSLGPolicySubSettingNoContent struct{}

// RemoveZoomRoomNoContent is response for RemoveZoomRoom operation.
type RemoveZoomRoomNoContent struct{}

type SmsByMessageIdOK struct {
	Attachments []SmsByMessageIdOKAttachmentsItem `json:"attachments"`
	// The UTC time the message was created.
	DateTime OptString `json:"date_time"`
	// The direction is either in or out.
	Direction OptString `json:"direction"`
	// The SMS text contents.
	Message OptString `json:"message"`
	// The message ID.
	MessageID OptString `json:"message_id"`
	// The message type:
	// 1 - SMS
	// 2 - MMS
	// 3 - GROUP_SMS
	// 4 - GROUP_MMS
	// 5 - SMS_INTER
	// 6 - MSG_ON_NET.
	MessageType OptInt                          `json:"message_type"`
	Sender      OptSmsByMessageIdOKSender       `json:"sender"`
	ToMembers   []SmsByMessageIdOKToMembersItem `json:"to_members"`
}

// GetAttachments returns the value of Attachments.
func (s *SmsByMessageIdOK) GetAttachments() []SmsByMessageIdOKAttachmentsItem {
	return s.Attachments
}

// GetDateTime returns the value of DateTime.
func (s *SmsByMessageIdOK) GetDateTime() OptString {
	return s.DateTime
}

// GetDirection returns the value of Direction.
func (s *SmsByMessageIdOK) GetDirection() OptString {
	return s.Direction
}

// GetMessage returns the value of Message.
func (s *SmsByMessageIdOK) GetMessage() OptString {
	return s.Message
}

// GetMessageID returns the value of MessageID.
func (s *SmsByMessageIdOK) GetMessageID() OptString {
	return s.MessageID
}

// GetMessageType returns the value of MessageType.
func (s *SmsByMessageIdOK) GetMessageType() OptInt {
	return s.MessageType
}

// GetSender returns the value of Sender.
func (s *SmsByMessageIdOK) GetSender() OptSmsByMessageIdOKSender {
	return s.Sender
}

// GetToMembers returns the value of ToMembers.
func (s *SmsByMessageIdOK) GetToMembers() []SmsByMessageIdOKToMembersItem {
	return s.ToMembers
}

// SetAttachments sets the value of Attachments.
func (s *SmsByMessageIdOK) SetAttachments(val []SmsByMessageIdOKAttachmentsItem) {
	s.Attachments = val
}

// SetDateTime sets the value of DateTime.
func (s *SmsByMessageIdOK) SetDateTime(val OptString) {
	s.DateTime = val
}

// SetDirection sets the value of Direction.
func (s *SmsByMessageIdOK) SetDirection(val OptString) {
	s.Direction = val
}

// SetMessage sets the value of Message.
func (s *SmsByMessageIdOK) SetMessage(val OptString) {
	s.Message = val
}

// SetMessageID sets the value of MessageID.
func (s *SmsByMessageIdOK) SetMessageID(val OptString) {
	s.MessageID = val
}

// SetMessageType sets the value of MessageType.
func (s *SmsByMessageIdOK) SetMessageType(val OptInt) {
	s.MessageType = val
}

// SetSender sets the value of Sender.
func (s *SmsByMessageIdOK) SetSender(val OptSmsByMessageIdOKSender) {
	s.Sender = val
}

// SetToMembers sets the value of ToMembers.
func (s *SmsByMessageIdOK) SetToMembers(val []SmsByMessageIdOKToMembersItem) {
	s.ToMembers = val
}

type SmsByMessageIdOKAttachmentsItem struct {
	// The download link for the media file.
	DownloadURL OptString `json:"download_url"`
	// The media file ID.
	ID OptString `json:"id"`
	// The file name.
	Name OptString `json:"name"`
	// The file size.
	Size OptInt `json:"size"`
	// The file type: OTHER, PNG, GIF, JPG, AUDIO, VIDEO.
	Type OptString `json:"type"`
}

// GetDownloadURL returns the value of DownloadURL.
func (s *SmsByMessageIdOKAttachmentsItem) GetDownloadURL() OptString {
	return s.DownloadURL
}

// GetID returns the value of ID.
func (s *SmsByMessageIdOKAttachmentsItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *SmsByMessageIdOKAttachmentsItem) GetName() OptString {
	return s.Name
}

// GetSize returns the value of Size.
func (s *SmsByMessageIdOKAttachmentsItem) GetSize() OptInt {
	return s.Size
}

// GetType returns the value of Type.
func (s *SmsByMessageIdOKAttachmentsItem) GetType() OptString {
	return s.Type
}

// SetDownloadURL sets the value of DownloadURL.
func (s *SmsByMessageIdOKAttachmentsItem) SetDownloadURL(val OptString) {
	s.DownloadURL = val
}

// SetID sets the value of ID.
func (s *SmsByMessageIdOKAttachmentsItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *SmsByMessageIdOKAttachmentsItem) SetName(val OptString) {
	s.Name = val
}

// SetSize sets the value of Size.
func (s *SmsByMessageIdOKAttachmentsItem) SetSize(val OptInt) {
	s.Size = val
}

// SetType sets the value of Type.
func (s *SmsByMessageIdOKAttachmentsItem) SetType(val OptString) {
	s.Type = val
}

type SmsByMessageIdOKSender struct {
	// The sender's name.
	DisplayName OptString                      `json:"display_name"`
	Owner       OptSmsByMessageIdOKSenderOwner `json:"owner"`
	// The sender's phone number.
	PhoneNumber string `json:"phone_number"`
}

// GetDisplayName returns the value of DisplayName.
func (s *SmsByMessageIdOKSender) GetDisplayName() OptString {
	return s.DisplayName
}

// GetOwner returns the value of Owner.
func (s *SmsByMessageIdOKSender) GetOwner() OptSmsByMessageIdOKSenderOwner {
	return s.Owner
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *SmsByMessageIdOKSender) GetPhoneNumber() string {
	return s.PhoneNumber
}

// SetDisplayName sets the value of DisplayName.
func (s *SmsByMessageIdOKSender) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetOwner sets the value of Owner.
func (s *SmsByMessageIdOKSender) SetOwner(val OptSmsByMessageIdOKSenderOwner) {
	s.Owner = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *SmsByMessageIdOKSender) SetPhoneNumber(val string) {
	s.PhoneNumber = val
}

type SmsByMessageIdOKSenderOwner struct {
	// The owner ID.
	ID OptString `json:"id"`
	// The owner type:
	// *`user`
	// *`callQueue`
	// *`autoReceptionist`
	// *`sharedLineGroup`.
	Type OptString `json:"type"`
}

// GetID returns the value of ID.
func (s *SmsByMessageIdOKSenderOwner) GetID() OptString {
	return s.ID
}

// GetType returns the value of Type.
func (s *SmsByMessageIdOKSenderOwner) GetType() OptString {
	return s.Type
}

// SetID sets the value of ID.
func (s *SmsByMessageIdOKSenderOwner) SetID(val OptString) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *SmsByMessageIdOKSenderOwner) SetType(val OptString) {
	s.Type = val
}

type SmsByMessageIdOKToMembersItem struct {
	// The participant name.
	DisplayName OptString                             `json:"display_name"`
	Owner       OptSmsByMessageIdOKToMembersItemOwner `json:"owner"`
	// The receiver's phone number.
	PhoneNumber string `json:"phone_number"`
}

// GetDisplayName returns the value of DisplayName.
func (s *SmsByMessageIdOKToMembersItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetOwner returns the value of Owner.
func (s *SmsByMessageIdOKToMembersItem) GetOwner() OptSmsByMessageIdOKToMembersItemOwner {
	return s.Owner
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *SmsByMessageIdOKToMembersItem) GetPhoneNumber() string {
	return s.PhoneNumber
}

// SetDisplayName sets the value of DisplayName.
func (s *SmsByMessageIdOKToMembersItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetOwner sets the value of Owner.
func (s *SmsByMessageIdOKToMembersItem) SetOwner(val OptSmsByMessageIdOKToMembersItemOwner) {
	s.Owner = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *SmsByMessageIdOKToMembersItem) SetPhoneNumber(val string) {
	s.PhoneNumber = val
}

type SmsByMessageIdOKToMembersItemOwner struct {
	// The owner ID.
	ID OptString `json:"id"`
	// The owner type:
	// *`user`
	// *`callQueue`
	// *`autoReceptionist`
	// *`sharedLineGroup`.
	Type OptString `json:"type"`
}

// GetID returns the value of ID.
func (s *SmsByMessageIdOKToMembersItemOwner) GetID() OptString {
	return s.ID
}

// GetType returns the value of Type.
func (s *SmsByMessageIdOKToMembersItemOwner) GetType() OptString {
	return s.Type
}

// SetID sets the value of ID.
func (s *SmsByMessageIdOKToMembersItemOwner) SetID(val OptString) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *SmsByMessageIdOKToMembersItemOwner) SetType(val OptString) {
	s.Type = val
}

type SmsSessionDetailsOK struct {
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of the available result list exceeds the page size.
	NextPageToken OptString `json:"next_page_token"`
	// The size of the page.
	PageSize     OptInt                                `json:"page_size"`
	SMSHistories []SmsSessionDetailsOKSMSHistoriesItem `json:"sms_histories"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *SmsSessionDetailsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *SmsSessionDetailsOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetSMSHistories returns the value of SMSHistories.
func (s *SmsSessionDetailsOK) GetSMSHistories() []SmsSessionDetailsOKSMSHistoriesItem {
	return s.SMSHistories
}

// SetNextPageToken sets the value of NextPageToken.
func (s *SmsSessionDetailsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *SmsSessionDetailsOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetSMSHistories sets the value of SMSHistories.
func (s *SmsSessionDetailsOK) SetSMSHistories(val []SmsSessionDetailsOKSMSHistoriesItem) {
	s.SMSHistories = val
}

type SmsSessionDetailsOKSMSHistoriesItem struct {
	Attachments []SmsSessionDetailsOKSMSHistoriesItemAttachmentsItem `json:"attachments"`
	// The UTC time the message was created.
	DateTime OptString `json:"date_time"`
	// In or Out.
	Direction OptString `json:"direction"`
	// The SMS text contents.
	Message OptString `json:"message"`
	// The message ID.
	MessageID OptString `json:"message_id"`
	// The message type:
	// 1 - SMS
	// 2 - MMS
	// 3 - GROUP_SMS
	// 4 - GROUP_MMS
	// 5 - SMS_INTER
	// 6 - MSG_ON_NET.
	MessageType OptInt                                             `json:"message_type"`
	Sender      OptSmsSessionDetailsOKSMSHistoriesItemSender       `json:"sender"`
	ToMembers   []SmsSessionDetailsOKSMSHistoriesItemToMembersItem `json:"to_members"`
}

// GetAttachments returns the value of Attachments.
func (s *SmsSessionDetailsOKSMSHistoriesItem) GetAttachments() []SmsSessionDetailsOKSMSHistoriesItemAttachmentsItem {
	return s.Attachments
}

// GetDateTime returns the value of DateTime.
func (s *SmsSessionDetailsOKSMSHistoriesItem) GetDateTime() OptString {
	return s.DateTime
}

// GetDirection returns the value of Direction.
func (s *SmsSessionDetailsOKSMSHistoriesItem) GetDirection() OptString {
	return s.Direction
}

// GetMessage returns the value of Message.
func (s *SmsSessionDetailsOKSMSHistoriesItem) GetMessage() OptString {
	return s.Message
}

// GetMessageID returns the value of MessageID.
func (s *SmsSessionDetailsOKSMSHistoriesItem) GetMessageID() OptString {
	return s.MessageID
}

// GetMessageType returns the value of MessageType.
func (s *SmsSessionDetailsOKSMSHistoriesItem) GetMessageType() OptInt {
	return s.MessageType
}

// GetSender returns the value of Sender.
func (s *SmsSessionDetailsOKSMSHistoriesItem) GetSender() OptSmsSessionDetailsOKSMSHistoriesItemSender {
	return s.Sender
}

// GetToMembers returns the value of ToMembers.
func (s *SmsSessionDetailsOKSMSHistoriesItem) GetToMembers() []SmsSessionDetailsOKSMSHistoriesItemToMembersItem {
	return s.ToMembers
}

// SetAttachments sets the value of Attachments.
func (s *SmsSessionDetailsOKSMSHistoriesItem) SetAttachments(val []SmsSessionDetailsOKSMSHistoriesItemAttachmentsItem) {
	s.Attachments = val
}

// SetDateTime sets the value of DateTime.
func (s *SmsSessionDetailsOKSMSHistoriesItem) SetDateTime(val OptString) {
	s.DateTime = val
}

// SetDirection sets the value of Direction.
func (s *SmsSessionDetailsOKSMSHistoriesItem) SetDirection(val OptString) {
	s.Direction = val
}

// SetMessage sets the value of Message.
func (s *SmsSessionDetailsOKSMSHistoriesItem) SetMessage(val OptString) {
	s.Message = val
}

// SetMessageID sets the value of MessageID.
func (s *SmsSessionDetailsOKSMSHistoriesItem) SetMessageID(val OptString) {
	s.MessageID = val
}

// SetMessageType sets the value of MessageType.
func (s *SmsSessionDetailsOKSMSHistoriesItem) SetMessageType(val OptInt) {
	s.MessageType = val
}

// SetSender sets the value of Sender.
func (s *SmsSessionDetailsOKSMSHistoriesItem) SetSender(val OptSmsSessionDetailsOKSMSHistoriesItemSender) {
	s.Sender = val
}

// SetToMembers sets the value of ToMembers.
func (s *SmsSessionDetailsOKSMSHistoriesItem) SetToMembers(val []SmsSessionDetailsOKSMSHistoriesItemToMembersItem) {
	s.ToMembers = val
}

type SmsSessionDetailsOKSMSHistoriesItemAttachmentsItem struct {
	// The download link for the media file.
	DownloadURL OptString `json:"download_url"`
	// The media file ID.
	ID OptString `json:"id"`
	// The file name.
	Name OptString `json:"name"`
	// The file size.
	Size OptInt `json:"size"`
	// The file type: OTHER, PNG, GIF, JPG, AUDIO, VIDEO.
	Type OptString `json:"type"`
}

// GetDownloadURL returns the value of DownloadURL.
func (s *SmsSessionDetailsOKSMSHistoriesItemAttachmentsItem) GetDownloadURL() OptString {
	return s.DownloadURL
}

// GetID returns the value of ID.
func (s *SmsSessionDetailsOKSMSHistoriesItemAttachmentsItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *SmsSessionDetailsOKSMSHistoriesItemAttachmentsItem) GetName() OptString {
	return s.Name
}

// GetSize returns the value of Size.
func (s *SmsSessionDetailsOKSMSHistoriesItemAttachmentsItem) GetSize() OptInt {
	return s.Size
}

// GetType returns the value of Type.
func (s *SmsSessionDetailsOKSMSHistoriesItemAttachmentsItem) GetType() OptString {
	return s.Type
}

// SetDownloadURL sets the value of DownloadURL.
func (s *SmsSessionDetailsOKSMSHistoriesItemAttachmentsItem) SetDownloadURL(val OptString) {
	s.DownloadURL = val
}

// SetID sets the value of ID.
func (s *SmsSessionDetailsOKSMSHistoriesItemAttachmentsItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *SmsSessionDetailsOKSMSHistoriesItemAttachmentsItem) SetName(val OptString) {
	s.Name = val
}

// SetSize sets the value of Size.
func (s *SmsSessionDetailsOKSMSHistoriesItemAttachmentsItem) SetSize(val OptInt) {
	s.Size = val
}

// SetType sets the value of Type.
func (s *SmsSessionDetailsOKSMSHistoriesItemAttachmentsItem) SetType(val OptString) {
	s.Type = val
}

type SmsSessionDetailsOKSMSHistoriesItemSender struct {
	// Sender's name.
	DisplayName OptString                                         `json:"display_name"`
	Owner       OptSmsSessionDetailsOKSMSHistoriesItemSenderOwner `json:"owner"`
	// Sender's phone number.
	PhoneNumber string `json:"phone_number"`
}

// GetDisplayName returns the value of DisplayName.
func (s *SmsSessionDetailsOKSMSHistoriesItemSender) GetDisplayName() OptString {
	return s.DisplayName
}

// GetOwner returns the value of Owner.
func (s *SmsSessionDetailsOKSMSHistoriesItemSender) GetOwner() OptSmsSessionDetailsOKSMSHistoriesItemSenderOwner {
	return s.Owner
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *SmsSessionDetailsOKSMSHistoriesItemSender) GetPhoneNumber() string {
	return s.PhoneNumber
}

// SetDisplayName sets the value of DisplayName.
func (s *SmsSessionDetailsOKSMSHistoriesItemSender) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetOwner sets the value of Owner.
func (s *SmsSessionDetailsOKSMSHistoriesItemSender) SetOwner(val OptSmsSessionDetailsOKSMSHistoriesItemSenderOwner) {
	s.Owner = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *SmsSessionDetailsOKSMSHistoriesItemSender) SetPhoneNumber(val string) {
	s.PhoneNumber = val
}

type SmsSessionDetailsOKSMSHistoriesItemSenderOwner struct {
	// The owner ID.
	ID OptString `json:"id"`
	// The owner type:
	// *`user`
	// *`callQueue`
	// *`autoReceptionist`
	// *`sharedLineGroup`.
	Type OptString `json:"type"`
}

// GetID returns the value of ID.
func (s *SmsSessionDetailsOKSMSHistoriesItemSenderOwner) GetID() OptString {
	return s.ID
}

// GetType returns the value of Type.
func (s *SmsSessionDetailsOKSMSHistoriesItemSenderOwner) GetType() OptString {
	return s.Type
}

// SetID sets the value of ID.
func (s *SmsSessionDetailsOKSMSHistoriesItemSenderOwner) SetID(val OptString) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *SmsSessionDetailsOKSMSHistoriesItemSenderOwner) SetType(val OptString) {
	s.Type = val
}

type SmsSessionDetailsOKSMSHistoriesItemToMembersItem struct {
	// The participant name.
	DisplayName OptString                                                `json:"display_name"`
	Owner       OptSmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner `json:"owner"`
	// Receiver's phone number.
	PhoneNumber string `json:"phone_number"`
}

// GetDisplayName returns the value of DisplayName.
func (s *SmsSessionDetailsOKSMSHistoriesItemToMembersItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetOwner returns the value of Owner.
func (s *SmsSessionDetailsOKSMSHistoriesItemToMembersItem) GetOwner() OptSmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner {
	return s.Owner
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *SmsSessionDetailsOKSMSHistoriesItemToMembersItem) GetPhoneNumber() string {
	return s.PhoneNumber
}

// SetDisplayName sets the value of DisplayName.
func (s *SmsSessionDetailsOKSMSHistoriesItemToMembersItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetOwner sets the value of Owner.
func (s *SmsSessionDetailsOKSMSHistoriesItemToMembersItem) SetOwner(val OptSmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner) {
	s.Owner = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *SmsSessionDetailsOKSMSHistoriesItemToMembersItem) SetPhoneNumber(val string) {
	s.PhoneNumber = val
}

type SmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner struct {
	// The owner ID.
	ID OptString `json:"id"`
	// The owner type:
	// *`user`
	// *`callQueue`
	// *`autoReceptionist`
	// *`sharedLineGroup`.
	Type OptString `json:"type"`
}

// GetID returns the value of ID.
func (s *SmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner) GetID() OptString {
	return s.ID
}

// GetType returns the value of Type.
func (s *SmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner) GetType() OptString {
	return s.Type
}

// SetID sets the value of ID.
func (s *SmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner) SetID(val OptString) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *SmsSessionDetailsOKSMSHistoriesItemToMembersItemOwner) SetType(val OptString) {
	s.Type = val
}

type SmsSessionSyncOK struct {
	SMSHistories []SmsSessionSyncOKSMSHistoriesItem `json:"sms_histories"`
	// The time range for returned records. Used for locating where the next retrieval will begin.
	SyncToken OptString `json:"sync_token"`
}

// GetSMSHistories returns the value of SMSHistories.
func (s *SmsSessionSyncOK) GetSMSHistories() []SmsSessionSyncOKSMSHistoriesItem {
	return s.SMSHistories
}

// GetSyncToken returns the value of SyncToken.
func (s *SmsSessionSyncOK) GetSyncToken() OptString {
	return s.SyncToken
}

// SetSMSHistories sets the value of SMSHistories.
func (s *SmsSessionSyncOK) SetSMSHistories(val []SmsSessionSyncOKSMSHistoriesItem) {
	s.SMSHistories = val
}

// SetSyncToken sets the value of SyncToken.
func (s *SmsSessionSyncOK) SetSyncToken(val OptString) {
	s.SyncToken = val
}

type SmsSessionSyncOKSMSHistoriesItem struct {
	Attachments []SmsSessionSyncOKSMSHistoriesItemAttachmentsItem `json:"attachments"`
	// The UTC time the message was created.
	DateTime OptString `json:"date_time"`
	// `In`(SMS received) or `Out`(SMS sent).
	Direction OptString `json:"direction"`
	// The content of the SMS.
	Message OptString `json:"message"`
	// The message ID.
	MessageID OptString `json:"message_id"`
	// The message type:
	// 1 - SMS
	// 2 - MMS
	// 3 - GROUP_SMS
	// 4 - GROUP_MMS
	// 5 - SMS_INTER
	// 6 - MSG_ON_NET.
	MessageType OptInt                                          `json:"message_type"`
	Sender      OptSmsSessionSyncOKSMSHistoriesItemSender       `json:"sender"`
	ToMembers   []SmsSessionSyncOKSMSHistoriesItemToMembersItem `json:"to_members"`
}

// GetAttachments returns the value of Attachments.
func (s *SmsSessionSyncOKSMSHistoriesItem) GetAttachments() []SmsSessionSyncOKSMSHistoriesItemAttachmentsItem {
	return s.Attachments
}

// GetDateTime returns the value of DateTime.
func (s *SmsSessionSyncOKSMSHistoriesItem) GetDateTime() OptString {
	return s.DateTime
}

// GetDirection returns the value of Direction.
func (s *SmsSessionSyncOKSMSHistoriesItem) GetDirection() OptString {
	return s.Direction
}

// GetMessage returns the value of Message.
func (s *SmsSessionSyncOKSMSHistoriesItem) GetMessage() OptString {
	return s.Message
}

// GetMessageID returns the value of MessageID.
func (s *SmsSessionSyncOKSMSHistoriesItem) GetMessageID() OptString {
	return s.MessageID
}

// GetMessageType returns the value of MessageType.
func (s *SmsSessionSyncOKSMSHistoriesItem) GetMessageType() OptInt {
	return s.MessageType
}

// GetSender returns the value of Sender.
func (s *SmsSessionSyncOKSMSHistoriesItem) GetSender() OptSmsSessionSyncOKSMSHistoriesItemSender {
	return s.Sender
}

// GetToMembers returns the value of ToMembers.
func (s *SmsSessionSyncOKSMSHistoriesItem) GetToMembers() []SmsSessionSyncOKSMSHistoriesItemToMembersItem {
	return s.ToMembers
}

// SetAttachments sets the value of Attachments.
func (s *SmsSessionSyncOKSMSHistoriesItem) SetAttachments(val []SmsSessionSyncOKSMSHistoriesItemAttachmentsItem) {
	s.Attachments = val
}

// SetDateTime sets the value of DateTime.
func (s *SmsSessionSyncOKSMSHistoriesItem) SetDateTime(val OptString) {
	s.DateTime = val
}

// SetDirection sets the value of Direction.
func (s *SmsSessionSyncOKSMSHistoriesItem) SetDirection(val OptString) {
	s.Direction = val
}

// SetMessage sets the value of Message.
func (s *SmsSessionSyncOKSMSHistoriesItem) SetMessage(val OptString) {
	s.Message = val
}

// SetMessageID sets the value of MessageID.
func (s *SmsSessionSyncOKSMSHistoriesItem) SetMessageID(val OptString) {
	s.MessageID = val
}

// SetMessageType sets the value of MessageType.
func (s *SmsSessionSyncOKSMSHistoriesItem) SetMessageType(val OptInt) {
	s.MessageType = val
}

// SetSender sets the value of Sender.
func (s *SmsSessionSyncOKSMSHistoriesItem) SetSender(val OptSmsSessionSyncOKSMSHistoriesItemSender) {
	s.Sender = val
}

// SetToMembers sets the value of ToMembers.
func (s *SmsSessionSyncOKSMSHistoriesItem) SetToMembers(val []SmsSessionSyncOKSMSHistoriesItemToMembersItem) {
	s.ToMembers = val
}

type SmsSessionSyncOKSMSHistoriesItemAttachmentsItem struct {
	// The download link for the media file.
	DownloadURL OptString `json:"download_url"`
	// The media file ID.
	ID OptString `json:"id"`
	// The file name.
	Name OptString `json:"name"`
	// The file size.
	Size OptInt `json:"size"`
	// The file type: OTHER, PNG, GIF, JPG, AUDIO, VIDEO.
	Type OptString `json:"type"`
}

// GetDownloadURL returns the value of DownloadURL.
func (s *SmsSessionSyncOKSMSHistoriesItemAttachmentsItem) GetDownloadURL() OptString {
	return s.DownloadURL
}

// GetID returns the value of ID.
func (s *SmsSessionSyncOKSMSHistoriesItemAttachmentsItem) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *SmsSessionSyncOKSMSHistoriesItemAttachmentsItem) GetName() OptString {
	return s.Name
}

// GetSize returns the value of Size.
func (s *SmsSessionSyncOKSMSHistoriesItemAttachmentsItem) GetSize() OptInt {
	return s.Size
}

// GetType returns the value of Type.
func (s *SmsSessionSyncOKSMSHistoriesItemAttachmentsItem) GetType() OptString {
	return s.Type
}

// SetDownloadURL sets the value of DownloadURL.
func (s *SmsSessionSyncOKSMSHistoriesItemAttachmentsItem) SetDownloadURL(val OptString) {
	s.DownloadURL = val
}

// SetID sets the value of ID.
func (s *SmsSessionSyncOKSMSHistoriesItemAttachmentsItem) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *SmsSessionSyncOKSMSHistoriesItemAttachmentsItem) SetName(val OptString) {
	s.Name = val
}

// SetSize sets the value of Size.
func (s *SmsSessionSyncOKSMSHistoriesItemAttachmentsItem) SetSize(val OptInt) {
	s.Size = val
}

// SetType sets the value of Type.
func (s *SmsSessionSyncOKSMSHistoriesItemAttachmentsItem) SetType(val OptString) {
	s.Type = val
}

type SmsSessionSyncOKSMSHistoriesItemSender struct {
	// Sender's name.
	DisplayName OptString                                      `json:"display_name"`
	Owner       OptSmsSessionSyncOKSMSHistoriesItemSenderOwner `json:"owner"`
	// Sender's phone number.
	PhoneNumber string `json:"phone_number"`
}

// GetDisplayName returns the value of DisplayName.
func (s *SmsSessionSyncOKSMSHistoriesItemSender) GetDisplayName() OptString {
	return s.DisplayName
}

// GetOwner returns the value of Owner.
func (s *SmsSessionSyncOKSMSHistoriesItemSender) GetOwner() OptSmsSessionSyncOKSMSHistoriesItemSenderOwner {
	return s.Owner
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *SmsSessionSyncOKSMSHistoriesItemSender) GetPhoneNumber() string {
	return s.PhoneNumber
}

// SetDisplayName sets the value of DisplayName.
func (s *SmsSessionSyncOKSMSHistoriesItemSender) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetOwner sets the value of Owner.
func (s *SmsSessionSyncOKSMSHistoriesItemSender) SetOwner(val OptSmsSessionSyncOKSMSHistoriesItemSenderOwner) {
	s.Owner = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *SmsSessionSyncOKSMSHistoriesItemSender) SetPhoneNumber(val string) {
	s.PhoneNumber = val
}

type SmsSessionSyncOKSMSHistoriesItemSenderOwner struct {
	// The owner ID.
	ID OptString `json:"id"`
	// The owner type:
	// *`user`
	// *`callQueue`
	// *`autoReceptionist`
	// *`sharedLineGroup`.
	Type OptString `json:"type"`
}

// GetID returns the value of ID.
func (s *SmsSessionSyncOKSMSHistoriesItemSenderOwner) GetID() OptString {
	return s.ID
}

// GetType returns the value of Type.
func (s *SmsSessionSyncOKSMSHistoriesItemSenderOwner) GetType() OptString {
	return s.Type
}

// SetID sets the value of ID.
func (s *SmsSessionSyncOKSMSHistoriesItemSenderOwner) SetID(val OptString) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *SmsSessionSyncOKSMSHistoriesItemSenderOwner) SetType(val OptString) {
	s.Type = val
}

type SmsSessionSyncOKSMSHistoriesItemToMembersItem struct {
	// SMS recipient name.
	DisplayName OptString                                             `json:"display_name"`
	Owner       OptSmsSessionSyncOKSMSHistoriesItemToMembersItemOwner `json:"owner"`
	// SMS recipient phone number.
	PhoneNumber string `json:"phone_number"`
}

// GetDisplayName returns the value of DisplayName.
func (s *SmsSessionSyncOKSMSHistoriesItemToMembersItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetOwner returns the value of Owner.
func (s *SmsSessionSyncOKSMSHistoriesItemToMembersItem) GetOwner() OptSmsSessionSyncOKSMSHistoriesItemToMembersItemOwner {
	return s.Owner
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *SmsSessionSyncOKSMSHistoriesItemToMembersItem) GetPhoneNumber() string {
	return s.PhoneNumber
}

// SetDisplayName sets the value of DisplayName.
func (s *SmsSessionSyncOKSMSHistoriesItemToMembersItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetOwner sets the value of Owner.
func (s *SmsSessionSyncOKSMSHistoriesItemToMembersItem) SetOwner(val OptSmsSessionSyncOKSMSHistoriesItemToMembersItemOwner) {
	s.Owner = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *SmsSessionSyncOKSMSHistoriesItemToMembersItem) SetPhoneNumber(val string) {
	s.PhoneNumber = val
}

type SmsSessionSyncOKSMSHistoriesItemToMembersItemOwner struct {
	// The owner ID.
	ID OptString `json:"id"`
	// The owner type:
	// *`user`
	// *`callQueue`
	// *`autoReceptionist`
	// *`sharedLineGroup`.
	Type OptString `json:"type"`
}

// GetID returns the value of ID.
func (s *SmsSessionSyncOKSMSHistoriesItemToMembersItemOwner) GetID() OptString {
	return s.ID
}

// GetType returns the value of Type.
func (s *SmsSessionSyncOKSMSHistoriesItemToMembersItemOwner) GetType() OptString {
	return s.Type
}

// SetID sets the value of ID.
func (s *SmsSessionSyncOKSMSHistoriesItemToMembersItemOwner) SetID(val OptString) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *SmsSessionSyncOKSMSHistoriesItemToMembersItemOwner) SetType(val OptString) {
	s.Type = val
}

// SyncPhoneDeviceNoContent is response for SyncPhoneDevice operation.
type SyncPhoneDeviceNoContent struct{}

type SyncPhoneDeviceReq struct {
	// Deskphone sync level: 1 - account level, 2 - site level.
	Level int `json:"level"`
	// Site ID.
	SiteID OptString `json:"site_id"`
}

// GetLevel returns the value of Level.
func (s *SyncPhoneDeviceReq) GetLevel() int {
	return s.Level
}

// GetSiteID returns the value of SiteID.
func (s *SyncPhoneDeviceReq) GetSiteID() OptString {
	return s.SiteID
}

// SetLevel sets the value of Level.
func (s *SyncPhoneDeviceReq) SetLevel(val int) {
	s.Level = val
}

// SetSiteID sets the value of SiteID.
func (s *SyncPhoneDeviceReq) SetSiteID(val OptString) {
	s.SiteID = val
}

// The sync user call logs.
type SyncUserCallLogsOK struct {
	// The call log.
	CallLogs []SyncUserCallLogsOKCallLogsItem `json:"call_logs"`
	// The time range for returned records. Used for locating where the next retrieval will begin.
	SyncToken OptString `json:"sync_token"`
}

// GetCallLogs returns the value of CallLogs.
func (s *SyncUserCallLogsOK) GetCallLogs() []SyncUserCallLogsOKCallLogsItem {
	return s.CallLogs
}

// GetSyncToken returns the value of SyncToken.
func (s *SyncUserCallLogsOK) GetSyncToken() OptString {
	return s.SyncToken
}

// SetCallLogs sets the value of CallLogs.
func (s *SyncUserCallLogsOK) SetCallLogs(val []SyncUserCallLogsOKCallLogsItem) {
	s.CallLogs = val
}

// SetSyncToken sets the value of SyncToken.
func (s *SyncUserCallLogsOK) SetSyncToken(val OptString) {
	s.SyncToken = val
}

type SyncUserCallLogsOKCallLogsItem struct {
	// This field indicates who accepted the call.
	AcceptedBy OptSyncUserCallLogsOKCallLogsItemAcceptedBy `json:"accepted_by"`
	// The time the call was answered in GMT `date-time` format. The API only displays this response if
	// the `direction` value is `inbound`.
	AnswerStartTime OptString `json:"answer_start_time"`
	// The call end time in GMT `date-time` format.
	CallEndTime OptString `json:"call_end_time"`
	// THe unique identifier of the phone call.
	CallID OptString `json:"call_id"`
	// The callee's user id.
	CalleeUserID OptString `json:"callee_user_id"`
	// The country calling code.
	CalleeCountryCode OptString `json:"callee_country_code"`
	// The ISO alpha2 country code.
	CalleeCountryIsoCode OptString `json:"callee_country_iso_code"`
	// The callee's DID (direct inward dial) number in e164 format.
	CalleeDidNumber OptString `json:"callee_did_number"`
	// The contact name of the callee.
	CalleeName OptString `json:"callee_name"`
	// The number associated with the callee. It can be an e164 number or an extension.
	CalleeNumber OptString `json:"callee_number"`
	// The callee number type:
	// * `1` &mdash; Extension number.
	// * `2` &mdash; Phone number.
	// * `3` &mdash; Customized emergency number.
	CalleeNumberType OptInt `json:"callee_number_type"`
	// This field indicates where the phone number comes from:
	// * `internal` &mdash; ZP native.
	// * `external` &mdash; BYOC or Provider Exchange.
	// * `byop` &mdash; Premise peering.
	// Not available when `callee_number_type = 1`.
	CalleeNumberSource OptString `json:"callee_number_source"`
	// The caller's user ID.
	CallerUserID OptString `json:"caller_user_id"`
	// The country calling code.
	CallerCountryCode OptString `json:"caller_country_code"`
	// ISO alpha2 country code.
	CallerCountryIsoCode OptString `json:"caller_country_iso_code"`
	// The caller's DID (direct inward dial) number in e164 format.
	CallerDidNumber OptString `json:"caller_did_number"`
	// The contact name of the caller.
	CallerName OptString `json:"caller_name"`
	// The number associated with the caller. It can be an e164 number or an extension.
	CallerNumber OptString `json:"caller_number"`
	// The caller number type:
	// * `1` &mdash; Extension number.
	// * `2` &mdash; Phone number.
	CallerNumberType OptInt `json:"caller_number_type"`
	// This field indicates where the phone number comes from:
	// * `internal` &mdash; ZP native.
	// * `external` &mdash; BYOC or Provider Exchange.
	// * `byop` &mdash; Premise peering.
	// Not available when `caller_number_type = 1`.
	CallerNumberSource OptString `json:"caller_number_source"`
	// The billing reference ID (for peering phone numbers).
	CallerBillingReferenceID OptString `json:"caller_billing_reference_id"`
	// The billing charge for the call.
	Charge OptString `json:"charge"`
	// The client code.
	ClientCode OptString `json:"client_code"`
	// The start time of the call.
	DateTime OptString `json:"date_time"`
	// The direction of the call: `inbound`or `outbound`.
	Direction OptString `json:"direction"`
	// The duration of the call in seconds.
	Duration OptInt `json:"duration"`
	// This field indicates where the call was forwarded from.
	ForwardedBy OptSyncUserCallLogsOKCallLogsItemForwardedBy `json:"forwarded_by"`
	// This field indicates who the call was forwarded to.
	ForwardedTo OptSyncUserCallLogsOKCallLogsItemForwardedTo `json:"forwarded_to"`
	// Whether the call has a recording. See [announcement](https://marketplace.zoom.
	// us/docs/guides/stay-up-to-date/announcements#deprecation-of-the-has_voicemail-and-has_recording-responses-in-phone-api) from July, 2021.
	//
	// Deprecated: schema marks this property as deprecated.
	HasRecording OptBool `json:"has_recording"`
	// Whether the call has a voicemail. See [announcement](https://marketplace.zoom.
	// us/docs/guides/stay-up-to-date/announcements#deprecation-of-the-has_voicemail-and-has_recording-responses-in-phone-api) from July, 2021.
	//
	// Deprecated: schema marks this property as deprecated.
	HasVoicemail OptBool `json:"has_voicemail"`
	// The call log ID.
	ID         OptString                                   `json:"id"`
	OutgoingBy OptSyncUserCallLogsOKCallLogsItemOutgoingBy `json:"outgoing_by"`
	// The path of the call log.
	Path OptString `json:"path"`
	// The billing rate for the call.
	Rate OptString `json:"rate"`
	// The recording type.
	// * `On-demand` recording.
	// * `Automatic` recording.
	RecordingType OptString `json:"recording_type"`
	// The result of the call: `Missed` | `Voicemail` | `Call connected` | `Rejected` | `Blocked`|
	// `Busy`| `Wrong Number`| `No Answer`| `International Disabled`| `Internal Error`| `Call failed` |
	// `Restricted Number`| `Call Cancel` | `Message`| `Answered by Other Member` | `Call Cancelled` |
	// `Park` | `Parked` | `Blocked by non-GAL` |  `Blocked by info-Barriers` | `Recording Failure`|
	// `Recorded`| `Auto Recorded`.
	Result OptString                             `json:"result"`
	Site   OptSyncUserCallLogsOKCallLogsItemSite `json:"site"`
	// The user ID or email.
	UserID OptString `json:"user_id"`
	// The hold time during a call in seconds.
	HoldTime OptInt `json:"hold_time"`
	// The time (in seconds) spent waiting for the call to be connected.
	WaitingTime OptInt `json:"waiting_time"`
}

// GetAcceptedBy returns the value of AcceptedBy.
func (s *SyncUserCallLogsOKCallLogsItem) GetAcceptedBy() OptSyncUserCallLogsOKCallLogsItemAcceptedBy {
	return s.AcceptedBy
}

// GetAnswerStartTime returns the value of AnswerStartTime.
func (s *SyncUserCallLogsOKCallLogsItem) GetAnswerStartTime() OptString {
	return s.AnswerStartTime
}

// GetCallEndTime returns the value of CallEndTime.
func (s *SyncUserCallLogsOKCallLogsItem) GetCallEndTime() OptString {
	return s.CallEndTime
}

// GetCallID returns the value of CallID.
func (s *SyncUserCallLogsOKCallLogsItem) GetCallID() OptString {
	return s.CallID
}

// GetCalleeUserID returns the value of CalleeUserID.
func (s *SyncUserCallLogsOKCallLogsItem) GetCalleeUserID() OptString {
	return s.CalleeUserID
}

// GetCalleeCountryCode returns the value of CalleeCountryCode.
func (s *SyncUserCallLogsOKCallLogsItem) GetCalleeCountryCode() OptString {
	return s.CalleeCountryCode
}

// GetCalleeCountryIsoCode returns the value of CalleeCountryIsoCode.
func (s *SyncUserCallLogsOKCallLogsItem) GetCalleeCountryIsoCode() OptString {
	return s.CalleeCountryIsoCode
}

// GetCalleeDidNumber returns the value of CalleeDidNumber.
func (s *SyncUserCallLogsOKCallLogsItem) GetCalleeDidNumber() OptString {
	return s.CalleeDidNumber
}

// GetCalleeName returns the value of CalleeName.
func (s *SyncUserCallLogsOKCallLogsItem) GetCalleeName() OptString {
	return s.CalleeName
}

// GetCalleeNumber returns the value of CalleeNumber.
func (s *SyncUserCallLogsOKCallLogsItem) GetCalleeNumber() OptString {
	return s.CalleeNumber
}

// GetCalleeNumberType returns the value of CalleeNumberType.
func (s *SyncUserCallLogsOKCallLogsItem) GetCalleeNumberType() OptInt {
	return s.CalleeNumberType
}

// GetCalleeNumberSource returns the value of CalleeNumberSource.
func (s *SyncUserCallLogsOKCallLogsItem) GetCalleeNumberSource() OptString {
	return s.CalleeNumberSource
}

// GetCallerUserID returns the value of CallerUserID.
func (s *SyncUserCallLogsOKCallLogsItem) GetCallerUserID() OptString {
	return s.CallerUserID
}

// GetCallerCountryCode returns the value of CallerCountryCode.
func (s *SyncUserCallLogsOKCallLogsItem) GetCallerCountryCode() OptString {
	return s.CallerCountryCode
}

// GetCallerCountryIsoCode returns the value of CallerCountryIsoCode.
func (s *SyncUserCallLogsOKCallLogsItem) GetCallerCountryIsoCode() OptString {
	return s.CallerCountryIsoCode
}

// GetCallerDidNumber returns the value of CallerDidNumber.
func (s *SyncUserCallLogsOKCallLogsItem) GetCallerDidNumber() OptString {
	return s.CallerDidNumber
}

// GetCallerName returns the value of CallerName.
func (s *SyncUserCallLogsOKCallLogsItem) GetCallerName() OptString {
	return s.CallerName
}

// GetCallerNumber returns the value of CallerNumber.
func (s *SyncUserCallLogsOKCallLogsItem) GetCallerNumber() OptString {
	return s.CallerNumber
}

// GetCallerNumberType returns the value of CallerNumberType.
func (s *SyncUserCallLogsOKCallLogsItem) GetCallerNumberType() OptInt {
	return s.CallerNumberType
}

// GetCallerNumberSource returns the value of CallerNumberSource.
func (s *SyncUserCallLogsOKCallLogsItem) GetCallerNumberSource() OptString {
	return s.CallerNumberSource
}

// GetCallerBillingReferenceID returns the value of CallerBillingReferenceID.
func (s *SyncUserCallLogsOKCallLogsItem) GetCallerBillingReferenceID() OptString {
	return s.CallerBillingReferenceID
}

// GetCharge returns the value of Charge.
func (s *SyncUserCallLogsOKCallLogsItem) GetCharge() OptString {
	return s.Charge
}

// GetClientCode returns the value of ClientCode.
func (s *SyncUserCallLogsOKCallLogsItem) GetClientCode() OptString {
	return s.ClientCode
}

// GetDateTime returns the value of DateTime.
func (s *SyncUserCallLogsOKCallLogsItem) GetDateTime() OptString {
	return s.DateTime
}

// GetDirection returns the value of Direction.
func (s *SyncUserCallLogsOKCallLogsItem) GetDirection() OptString {
	return s.Direction
}

// GetDuration returns the value of Duration.
func (s *SyncUserCallLogsOKCallLogsItem) GetDuration() OptInt {
	return s.Duration
}

// GetForwardedBy returns the value of ForwardedBy.
func (s *SyncUserCallLogsOKCallLogsItem) GetForwardedBy() OptSyncUserCallLogsOKCallLogsItemForwardedBy {
	return s.ForwardedBy
}

// GetForwardedTo returns the value of ForwardedTo.
func (s *SyncUserCallLogsOKCallLogsItem) GetForwardedTo() OptSyncUserCallLogsOKCallLogsItemForwardedTo {
	return s.ForwardedTo
}

// GetHasRecording returns the value of HasRecording.
func (s *SyncUserCallLogsOKCallLogsItem) GetHasRecording() OptBool {
	return s.HasRecording
}

// GetHasVoicemail returns the value of HasVoicemail.
func (s *SyncUserCallLogsOKCallLogsItem) GetHasVoicemail() OptBool {
	return s.HasVoicemail
}

// GetID returns the value of ID.
func (s *SyncUserCallLogsOKCallLogsItem) GetID() OptString {
	return s.ID
}

// GetOutgoingBy returns the value of OutgoingBy.
func (s *SyncUserCallLogsOKCallLogsItem) GetOutgoingBy() OptSyncUserCallLogsOKCallLogsItemOutgoingBy {
	return s.OutgoingBy
}

// GetPath returns the value of Path.
func (s *SyncUserCallLogsOKCallLogsItem) GetPath() OptString {
	return s.Path
}

// GetRate returns the value of Rate.
func (s *SyncUserCallLogsOKCallLogsItem) GetRate() OptString {
	return s.Rate
}

// GetRecordingType returns the value of RecordingType.
func (s *SyncUserCallLogsOKCallLogsItem) GetRecordingType() OptString {
	return s.RecordingType
}

// GetResult returns the value of Result.
func (s *SyncUserCallLogsOKCallLogsItem) GetResult() OptString {
	return s.Result
}

// GetSite returns the value of Site.
func (s *SyncUserCallLogsOKCallLogsItem) GetSite() OptSyncUserCallLogsOKCallLogsItemSite {
	return s.Site
}

// GetUserID returns the value of UserID.
func (s *SyncUserCallLogsOKCallLogsItem) GetUserID() OptString {
	return s.UserID
}

// GetHoldTime returns the value of HoldTime.
func (s *SyncUserCallLogsOKCallLogsItem) GetHoldTime() OptInt {
	return s.HoldTime
}

// GetWaitingTime returns the value of WaitingTime.
func (s *SyncUserCallLogsOKCallLogsItem) GetWaitingTime() OptInt {
	return s.WaitingTime
}

// SetAcceptedBy sets the value of AcceptedBy.
func (s *SyncUserCallLogsOKCallLogsItem) SetAcceptedBy(val OptSyncUserCallLogsOKCallLogsItemAcceptedBy) {
	s.AcceptedBy = val
}

// SetAnswerStartTime sets the value of AnswerStartTime.
func (s *SyncUserCallLogsOKCallLogsItem) SetAnswerStartTime(val OptString) {
	s.AnswerStartTime = val
}

// SetCallEndTime sets the value of CallEndTime.
func (s *SyncUserCallLogsOKCallLogsItem) SetCallEndTime(val OptString) {
	s.CallEndTime = val
}

// SetCallID sets the value of CallID.
func (s *SyncUserCallLogsOKCallLogsItem) SetCallID(val OptString) {
	s.CallID = val
}

// SetCalleeUserID sets the value of CalleeUserID.
func (s *SyncUserCallLogsOKCallLogsItem) SetCalleeUserID(val OptString) {
	s.CalleeUserID = val
}

// SetCalleeCountryCode sets the value of CalleeCountryCode.
func (s *SyncUserCallLogsOKCallLogsItem) SetCalleeCountryCode(val OptString) {
	s.CalleeCountryCode = val
}

// SetCalleeCountryIsoCode sets the value of CalleeCountryIsoCode.
func (s *SyncUserCallLogsOKCallLogsItem) SetCalleeCountryIsoCode(val OptString) {
	s.CalleeCountryIsoCode = val
}

// SetCalleeDidNumber sets the value of CalleeDidNumber.
func (s *SyncUserCallLogsOKCallLogsItem) SetCalleeDidNumber(val OptString) {
	s.CalleeDidNumber = val
}

// SetCalleeName sets the value of CalleeName.
func (s *SyncUserCallLogsOKCallLogsItem) SetCalleeName(val OptString) {
	s.CalleeName = val
}

// SetCalleeNumber sets the value of CalleeNumber.
func (s *SyncUserCallLogsOKCallLogsItem) SetCalleeNumber(val OptString) {
	s.CalleeNumber = val
}

// SetCalleeNumberType sets the value of CalleeNumberType.
func (s *SyncUserCallLogsOKCallLogsItem) SetCalleeNumberType(val OptInt) {
	s.CalleeNumberType = val
}

// SetCalleeNumberSource sets the value of CalleeNumberSource.
func (s *SyncUserCallLogsOKCallLogsItem) SetCalleeNumberSource(val OptString) {
	s.CalleeNumberSource = val
}

// SetCallerUserID sets the value of CallerUserID.
func (s *SyncUserCallLogsOKCallLogsItem) SetCallerUserID(val OptString) {
	s.CallerUserID = val
}

// SetCallerCountryCode sets the value of CallerCountryCode.
func (s *SyncUserCallLogsOKCallLogsItem) SetCallerCountryCode(val OptString) {
	s.CallerCountryCode = val
}

// SetCallerCountryIsoCode sets the value of CallerCountryIsoCode.
func (s *SyncUserCallLogsOKCallLogsItem) SetCallerCountryIsoCode(val OptString) {
	s.CallerCountryIsoCode = val
}

// SetCallerDidNumber sets the value of CallerDidNumber.
func (s *SyncUserCallLogsOKCallLogsItem) SetCallerDidNumber(val OptString) {
	s.CallerDidNumber = val
}

// SetCallerName sets the value of CallerName.
func (s *SyncUserCallLogsOKCallLogsItem) SetCallerName(val OptString) {
	s.CallerName = val
}

// SetCallerNumber sets the value of CallerNumber.
func (s *SyncUserCallLogsOKCallLogsItem) SetCallerNumber(val OptString) {
	s.CallerNumber = val
}

// SetCallerNumberType sets the value of CallerNumberType.
func (s *SyncUserCallLogsOKCallLogsItem) SetCallerNumberType(val OptInt) {
	s.CallerNumberType = val
}

// SetCallerNumberSource sets the value of CallerNumberSource.
func (s *SyncUserCallLogsOKCallLogsItem) SetCallerNumberSource(val OptString) {
	s.CallerNumberSource = val
}

// SetCallerBillingReferenceID sets the value of CallerBillingReferenceID.
func (s *SyncUserCallLogsOKCallLogsItem) SetCallerBillingReferenceID(val OptString) {
	s.CallerBillingReferenceID = val
}

// SetCharge sets the value of Charge.
func (s *SyncUserCallLogsOKCallLogsItem) SetCharge(val OptString) {
	s.Charge = val
}

// SetClientCode sets the value of ClientCode.
func (s *SyncUserCallLogsOKCallLogsItem) SetClientCode(val OptString) {
	s.ClientCode = val
}

// SetDateTime sets the value of DateTime.
func (s *SyncUserCallLogsOKCallLogsItem) SetDateTime(val OptString) {
	s.DateTime = val
}

// SetDirection sets the value of Direction.
func (s *SyncUserCallLogsOKCallLogsItem) SetDirection(val OptString) {
	s.Direction = val
}

// SetDuration sets the value of Duration.
func (s *SyncUserCallLogsOKCallLogsItem) SetDuration(val OptInt) {
	s.Duration = val
}

// SetForwardedBy sets the value of ForwardedBy.
func (s *SyncUserCallLogsOKCallLogsItem) SetForwardedBy(val OptSyncUserCallLogsOKCallLogsItemForwardedBy) {
	s.ForwardedBy = val
}

// SetForwardedTo sets the value of ForwardedTo.
func (s *SyncUserCallLogsOKCallLogsItem) SetForwardedTo(val OptSyncUserCallLogsOKCallLogsItemForwardedTo) {
	s.ForwardedTo = val
}

// SetHasRecording sets the value of HasRecording.
func (s *SyncUserCallLogsOKCallLogsItem) SetHasRecording(val OptBool) {
	s.HasRecording = val
}

// SetHasVoicemail sets the value of HasVoicemail.
func (s *SyncUserCallLogsOKCallLogsItem) SetHasVoicemail(val OptBool) {
	s.HasVoicemail = val
}

// SetID sets the value of ID.
func (s *SyncUserCallLogsOKCallLogsItem) SetID(val OptString) {
	s.ID = val
}

// SetOutgoingBy sets the value of OutgoingBy.
func (s *SyncUserCallLogsOKCallLogsItem) SetOutgoingBy(val OptSyncUserCallLogsOKCallLogsItemOutgoingBy) {
	s.OutgoingBy = val
}

// SetPath sets the value of Path.
func (s *SyncUserCallLogsOKCallLogsItem) SetPath(val OptString) {
	s.Path = val
}

// SetRate sets the value of Rate.
func (s *SyncUserCallLogsOKCallLogsItem) SetRate(val OptString) {
	s.Rate = val
}

// SetRecordingType sets the value of RecordingType.
func (s *SyncUserCallLogsOKCallLogsItem) SetRecordingType(val OptString) {
	s.RecordingType = val
}

// SetResult sets the value of Result.
func (s *SyncUserCallLogsOKCallLogsItem) SetResult(val OptString) {
	s.Result = val
}

// SetSite sets the value of Site.
func (s *SyncUserCallLogsOKCallLogsItem) SetSite(val OptSyncUserCallLogsOKCallLogsItemSite) {
	s.Site = val
}

// SetUserID sets the value of UserID.
func (s *SyncUserCallLogsOKCallLogsItem) SetUserID(val OptString) {
	s.UserID = val
}

// SetHoldTime sets the value of HoldTime.
func (s *SyncUserCallLogsOKCallLogsItem) SetHoldTime(val OptInt) {
	s.HoldTime = val
}

// SetWaitingTime sets the value of WaitingTime.
func (s *SyncUserCallLogsOKCallLogsItem) SetWaitingTime(val OptInt) {
	s.WaitingTime = val
}

// This field indicates who accepted the call.
type SyncUserCallLogsOKCallLogsItemAcceptedBy struct {
	ExtensionNumber OptString `json:"extension_number"`
	Location        OptString `json:"location"`
	Name            OptString `json:"name"`
	// The phone number types: `1` - Extension `2`- E164 number `3` - Custom number.
	NumberType  OptInt    `json:"number_type"`
	PhoneNumber OptString `json:"phone_number"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *SyncUserCallLogsOKCallLogsItemAcceptedBy) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetLocation returns the value of Location.
func (s *SyncUserCallLogsOKCallLogsItemAcceptedBy) GetLocation() OptString {
	return s.Location
}

// GetName returns the value of Name.
func (s *SyncUserCallLogsOKCallLogsItemAcceptedBy) GetName() OptString {
	return s.Name
}

// GetNumberType returns the value of NumberType.
func (s *SyncUserCallLogsOKCallLogsItemAcceptedBy) GetNumberType() OptInt {
	return s.NumberType
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *SyncUserCallLogsOKCallLogsItemAcceptedBy) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *SyncUserCallLogsOKCallLogsItemAcceptedBy) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetLocation sets the value of Location.
func (s *SyncUserCallLogsOKCallLogsItemAcceptedBy) SetLocation(val OptString) {
	s.Location = val
}

// SetName sets the value of Name.
func (s *SyncUserCallLogsOKCallLogsItemAcceptedBy) SetName(val OptString) {
	s.Name = val
}

// SetNumberType sets the value of NumberType.
func (s *SyncUserCallLogsOKCallLogsItemAcceptedBy) SetNumberType(val OptInt) {
	s.NumberType = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *SyncUserCallLogsOKCallLogsItemAcceptedBy) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// This field indicates where the call was forwarded from.
type SyncUserCallLogsOKCallLogsItemForwardedBy struct {
	ExtensionNumber OptString `json:"extension_number"`
	ExtensionType   OptString `json:"extension_type"`
	Location        OptString `json:"location"`
	Name            OptString `json:"name"`
	// The phone number types: `1` - Extension `2`- E164 number `3` - Custom number.
	NumberType  OptInt    `json:"number_type"`
	PhoneNumber OptString `json:"phone_number"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *SyncUserCallLogsOKCallLogsItemForwardedBy) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetExtensionType returns the value of ExtensionType.
func (s *SyncUserCallLogsOKCallLogsItemForwardedBy) GetExtensionType() OptString {
	return s.ExtensionType
}

// GetLocation returns the value of Location.
func (s *SyncUserCallLogsOKCallLogsItemForwardedBy) GetLocation() OptString {
	return s.Location
}

// GetName returns the value of Name.
func (s *SyncUserCallLogsOKCallLogsItemForwardedBy) GetName() OptString {
	return s.Name
}

// GetNumberType returns the value of NumberType.
func (s *SyncUserCallLogsOKCallLogsItemForwardedBy) GetNumberType() OptInt {
	return s.NumberType
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *SyncUserCallLogsOKCallLogsItemForwardedBy) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *SyncUserCallLogsOKCallLogsItemForwardedBy) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetExtensionType sets the value of ExtensionType.
func (s *SyncUserCallLogsOKCallLogsItemForwardedBy) SetExtensionType(val OptString) {
	s.ExtensionType = val
}

// SetLocation sets the value of Location.
func (s *SyncUserCallLogsOKCallLogsItemForwardedBy) SetLocation(val OptString) {
	s.Location = val
}

// SetName sets the value of Name.
func (s *SyncUserCallLogsOKCallLogsItemForwardedBy) SetName(val OptString) {
	s.Name = val
}

// SetNumberType sets the value of NumberType.
func (s *SyncUserCallLogsOKCallLogsItemForwardedBy) SetNumberType(val OptInt) {
	s.NumberType = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *SyncUserCallLogsOKCallLogsItemForwardedBy) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// This field indicates who the call was forwarded to.
type SyncUserCallLogsOKCallLogsItemForwardedTo struct {
	ExtensionNumber OptString `json:"extension_number"`
	Location        OptString `json:"location"`
	Name            OptString `json:"name"`
	// The phone number types: `1` - Extension `2`- E164 number `3` - Custom number.
	NumberType  OptInt    `json:"number_type"`
	PhoneNumber OptString `json:"phone_number"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *SyncUserCallLogsOKCallLogsItemForwardedTo) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetLocation returns the value of Location.
func (s *SyncUserCallLogsOKCallLogsItemForwardedTo) GetLocation() OptString {
	return s.Location
}

// GetName returns the value of Name.
func (s *SyncUserCallLogsOKCallLogsItemForwardedTo) GetName() OptString {
	return s.Name
}

// GetNumberType returns the value of NumberType.
func (s *SyncUserCallLogsOKCallLogsItemForwardedTo) GetNumberType() OptInt {
	return s.NumberType
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *SyncUserCallLogsOKCallLogsItemForwardedTo) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *SyncUserCallLogsOKCallLogsItemForwardedTo) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetLocation sets the value of Location.
func (s *SyncUserCallLogsOKCallLogsItemForwardedTo) SetLocation(val OptString) {
	s.Location = val
}

// SetName sets the value of Name.
func (s *SyncUserCallLogsOKCallLogsItemForwardedTo) SetName(val OptString) {
	s.Name = val
}

// SetNumberType sets the value of NumberType.
func (s *SyncUserCallLogsOKCallLogsItemForwardedTo) SetNumberType(val OptInt) {
	s.NumberType = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *SyncUserCallLogsOKCallLogsItemForwardedTo) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

type SyncUserCallLogsOKCallLogsItemOutgoingBy struct {
	ExtensionNumber OptString `json:"extension_number"`
	Location        OptString `json:"location"`
	Name            OptString `json:"name"`
	// The phone number types: `1` - Extension `2`- E164 number `3` - Custom number.
	NumberType  OptInt    `json:"number_type"`
	PhoneNumber OptString `json:"phone_number"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *SyncUserCallLogsOKCallLogsItemOutgoingBy) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetLocation returns the value of Location.
func (s *SyncUserCallLogsOKCallLogsItemOutgoingBy) GetLocation() OptString {
	return s.Location
}

// GetName returns the value of Name.
func (s *SyncUserCallLogsOKCallLogsItemOutgoingBy) GetName() OptString {
	return s.Name
}

// GetNumberType returns the value of NumberType.
func (s *SyncUserCallLogsOKCallLogsItemOutgoingBy) GetNumberType() OptInt {
	return s.NumberType
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *SyncUserCallLogsOKCallLogsItemOutgoingBy) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *SyncUserCallLogsOKCallLogsItemOutgoingBy) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetLocation sets the value of Location.
func (s *SyncUserCallLogsOKCallLogsItemOutgoingBy) SetLocation(val OptString) {
	s.Location = val
}

// SetName sets the value of Name.
func (s *SyncUserCallLogsOKCallLogsItemOutgoingBy) SetName(val OptString) {
	s.Name = val
}

// SetNumberType sets the value of NumberType.
func (s *SyncUserCallLogsOKCallLogsItemOutgoingBy) SetNumberType(val OptInt) {
	s.NumberType = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *SyncUserCallLogsOKCallLogsItemOutgoingBy) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

type SyncUserCallLogsOKCallLogsItemSite struct {
	// The target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites)
	// in which the phone number was assigned. Sites allow you to organize the phone users in your
	// organization. For example, your sites can be created based on different office locations.
	ID OptString `json:"id"`
	// The name of the site where the phone number is assigned.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *SyncUserCallLogsOKCallLogsItemSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *SyncUserCallLogsOKCallLogsItemSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *SyncUserCallLogsOKCallLogsItemSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *SyncUserCallLogsOKCallLogsItemSite) SetName(val OptString) {
	s.Name = val
}

// UnAssignPhoneNumCallQueueNoContent is response for UnAssignPhoneNumCallQueue operation.
type UnAssignPhoneNumCallQueueNoContent struct{}

// UnassignAPhoneNumAutoReceptionistNoContent is response for UnassignAPhoneNumAutoReceptionist operation.
type UnassignAPhoneNumAutoReceptionistNoContent struct{}

// UnassignAPhoneNumCallQueueNoContent is response for UnassignAPhoneNumCallQueue operation.
type UnassignAPhoneNumCallQueueNoContent struct{}

// UnassignAllMembersNoContent is response for UnassignAllMembers operation.
type UnassignAllMembersNoContent struct{}

// UnassignAllPhoneNumsAutoReceptionistNoContent is response for UnassignAllPhoneNumsAutoReceptionist operation.
type UnassignAllPhoneNumsAutoReceptionistNoContent struct{}

// UnassignCallingPlanFromRoomNoContent is response for UnassignCallingPlanFromRoom operation.
type UnassignCallingPlanFromRoomNoContent struct{}

// UnassignCallingPlanNoContent is response for UnassignCallingPlan operation.
type UnassignCallingPlanNoContent struct{}

// UnassignCallingPlansFromCommonAreaNoContent is response for UnassignCallingPlansFromCommonArea operation.
type UnassignCallingPlansFromCommonAreaNoContent struct{}

// UnassignCampaignPhoneNumberNoContent is response for UnassignCampaignPhoneNumber operation.
type UnassignCampaignPhoneNumberNoContent struct{}

// UnassignMemberFromCallQueueNoContent is response for UnassignMemberFromCallQueue operation.
type UnassignMemberFromCallQueueNoContent struct{}

// UnassignPhoneNumberFromZoomRoomNoContent is response for UnassignPhoneNumberFromZoomRoom operation.
type UnassignPhoneNumberFromZoomRoomNoContent struct{}

// UnassignPhoneNumberNoContent is response for UnassignPhoneNumber operation.
type UnassignPhoneNumberNoContent struct{}

// UnassignPhoneNumbersFromCommonAreaNoContent is response for UnassignPhoneNumbersFromCommonArea operation.
type UnassignPhoneNumbersFromCommonAreaNoContent struct{}

// UpdateADeviceNoContent is response for UpdateADevice operation.
type UpdateADeviceNoContent struct{}

type UpdateADeviceReq struct {
	// The user ID or email address of the user assigned to this device. To retrieve the user ID and the
	// email of the user, use the [List Users](https://marketplace.zoom.
	// us/docs/api-reference/zoom-api/methods#operation/users) API.
	AssignedTo OptString `json:"assigned_to"`
	// The display name of the desk phone.
	DisplayName OptString `json:"display_name"`
	// <b>Deprecated:</b> This field will be removed in June, 2025. Please refrain from updating the MAC
	// address.
	// The MAC address of the desk phone.
	// **Note**: If you're using a wireless phone, enter the wired MAC address, not the wireless MAC
	// address.
	//
	// Deprecated: schema marks this property as deprecated.
	MACAddress OptString `json:"mac_address"`
	// The provision template ID. It's supported only by some devices. An empty string represents 'No
	// value set'.
	ProvisionTemplateID OptString `json:"provision_template_id"`
}

// GetAssignedTo returns the value of AssignedTo.
func (s *UpdateADeviceReq) GetAssignedTo() OptString {
	return s.AssignedTo
}

// GetDisplayName returns the value of DisplayName.
func (s *UpdateADeviceReq) GetDisplayName() OptString {
	return s.DisplayName
}

// GetMACAddress returns the value of MACAddress.
func (s *UpdateADeviceReq) GetMACAddress() OptString {
	return s.MACAddress
}

// GetProvisionTemplateID returns the value of ProvisionTemplateID.
func (s *UpdateADeviceReq) GetProvisionTemplateID() OptString {
	return s.ProvisionTemplateID
}

// SetAssignedTo sets the value of AssignedTo.
func (s *UpdateADeviceReq) SetAssignedTo(val OptString) {
	s.AssignedTo = val
}

// SetDisplayName sets the value of DisplayName.
func (s *UpdateADeviceReq) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetMACAddress sets the value of MACAddress.
func (s *UpdateADeviceReq) SetMACAddress(val OptString) {
	s.MACAddress = val
}

// SetProvisionTemplateID sets the value of ProvisionTemplateID.
func (s *UpdateADeviceReq) SetProvisionTemplateID(val OptString) {
	s.ProvisionTemplateID = val
}

// UpdateAccountLevelInboundBlockRuleNoContent is response for UpdateAccountLevelInboundBlockRule operation.
type UpdateAccountLevelInboundBlockRuleNoContent struct{}

type UpdateAccountLevelInboundBlockRuleReq struct {
	// The match type for the block rule:
	// * `phoneNumber`: Indicates that only a specific phone number that is shown in the `blocked_number`
	// field is blocked.
	// * `prefix`: Indicates that all numbers starting with the prefix that is shown in the
	// `blocked_number` field are blocked.
	// * `SMS-shortCodes`:  Indicates that only a specific SMS short code that is shown in the
	// `blocked_number` field is blocked.
	MatchType string `json:"match_type"`
	// The block rule phone number prefix or SMS short code or pure phone number without the country code.
	BlockedNumber string `json:"blocked_number"`
	// The block type for the block rule:
	// * block_for_other_reasons
	// * block_as_threat
	// **Note**: The value of `block_as_threat` can be available if the `block_calls_as_threat` setting
	// is enabled in [account setting API](https://developers.zoom.
	// us/docs/zoom-phone/apis/#operation/listZoomPhoneAccountSettings).
	Type string `json:"type"`
	// The comment of the block rule.
	// Enter a comment to help you identify the blocked number or prefix.
	Comment OptString `json:"comment"`
	// Whether the block rule is active or inactive.
	// * `active`: The block rule is active.
	// * `inactive`: The block rule is inactive.
	Status OptString `json:"status"`
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	// This field is required when the value is as follows:
	// * `match_type` is `phoneNumber` or `prefix`.
	Country OptString `json:"country"`
}

// GetMatchType returns the value of MatchType.
func (s *UpdateAccountLevelInboundBlockRuleReq) GetMatchType() string {
	return s.MatchType
}

// GetBlockedNumber returns the value of BlockedNumber.
func (s *UpdateAccountLevelInboundBlockRuleReq) GetBlockedNumber() string {
	return s.BlockedNumber
}

// GetType returns the value of Type.
func (s *UpdateAccountLevelInboundBlockRuleReq) GetType() string {
	return s.Type
}

// GetComment returns the value of Comment.
func (s *UpdateAccountLevelInboundBlockRuleReq) GetComment() OptString {
	return s.Comment
}

// GetStatus returns the value of Status.
func (s *UpdateAccountLevelInboundBlockRuleReq) GetStatus() OptString {
	return s.Status
}

// GetCountry returns the value of Country.
func (s *UpdateAccountLevelInboundBlockRuleReq) GetCountry() OptString {
	return s.Country
}

// SetMatchType sets the value of MatchType.
func (s *UpdateAccountLevelInboundBlockRuleReq) SetMatchType(val string) {
	s.MatchType = val
}

// SetBlockedNumber sets the value of BlockedNumber.
func (s *UpdateAccountLevelInboundBlockRuleReq) SetBlockedNumber(val string) {
	s.BlockedNumber = val
}

// SetType sets the value of Type.
func (s *UpdateAccountLevelInboundBlockRuleReq) SetType(val string) {
	s.Type = val
}

// SetComment sets the value of Comment.
func (s *UpdateAccountLevelInboundBlockRuleReq) SetComment(val OptString) {
	s.Comment = val
}

// SetStatus sets the value of Status.
func (s *UpdateAccountLevelInboundBlockRuleReq) SetStatus(val OptString) {
	s.Status = val
}

// SetCountry sets the value of Country.
func (s *UpdateAccountLevelInboundBlockRuleReq) SetCountry(val OptString) {
	s.Country = val
}

// UpdateAccountOutboundCallingCountriesOrRegionsNoContent is response for UpdateAccountOutboundCallingCountriesOrRegions operation.
type UpdateAccountOutboundCallingCountriesOrRegionsNoContent struct{}

type UpdateAccountOutboundCallingCountriesOrRegionsReq struct {
	CountryRegions []UpdateAccountOutboundCallingCountriesOrRegionsReqCountryRegionsItem `json:"country_regions"`
}

// GetCountryRegions returns the value of CountryRegions.
func (s *UpdateAccountOutboundCallingCountriesOrRegionsReq) GetCountryRegions() []UpdateAccountOutboundCallingCountriesOrRegionsReqCountryRegionsItem {
	return s.CountryRegions
}

// SetCountryRegions sets the value of CountryRegions.
func (s *UpdateAccountOutboundCallingCountriesOrRegionsReq) SetCountryRegions(val []UpdateAccountOutboundCallingCountriesOrRegionsReqCountryRegionsItem) {
	s.CountryRegions = val
}

type UpdateAccountOutboundCallingCountriesOrRegionsReqCountryRegionsItem struct {
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	IsoCode OptString `json:"iso_code"`
	// The default outbound calling rule.
	// `1` - Allowed
	// `2` - Blocked
	// `3` - Requires local number, caller ID, or plan
	// `4` - Requires the extension number and PIN code.
	Rule OptInt `json:"rule"`
	// Whether to delete existing exception rules. This field only appears when the default outbound
	// calling rule is changed. The default value is `false`.
	DeleteExistingExceptionRules OptBool `json:"delete_existing_exception_rules"`
}

// GetIsoCode returns the value of IsoCode.
func (s *UpdateAccountOutboundCallingCountriesOrRegionsReqCountryRegionsItem) GetIsoCode() OptString {
	return s.IsoCode
}

// GetRule returns the value of Rule.
func (s *UpdateAccountOutboundCallingCountriesOrRegionsReqCountryRegionsItem) GetRule() OptInt {
	return s.Rule
}

// GetDeleteExistingExceptionRules returns the value of DeleteExistingExceptionRules.
func (s *UpdateAccountOutboundCallingCountriesOrRegionsReqCountryRegionsItem) GetDeleteExistingExceptionRules() OptBool {
	return s.DeleteExistingExceptionRules
}

// SetIsoCode sets the value of IsoCode.
func (s *UpdateAccountOutboundCallingCountriesOrRegionsReqCountryRegionsItem) SetIsoCode(val OptString) {
	s.IsoCode = val
}

// SetRule sets the value of Rule.
func (s *UpdateAccountOutboundCallingCountriesOrRegionsReqCountryRegionsItem) SetRule(val OptInt) {
	s.Rule = val
}

// SetDeleteExistingExceptionRules sets the value of DeleteExistingExceptionRules.
func (s *UpdateAccountOutboundCallingCountriesOrRegionsReqCountryRegionsItem) SetDeleteExistingExceptionRules(val OptBool) {
	s.DeleteExistingExceptionRules = val
}

// UpdateAccountOutboundCallingExceptionRuleNoContent is response for UpdateAccountOutboundCallingExceptionRule operation.
type UpdateAccountOutboundCallingExceptionRuleNoContent struct{}

type UpdateAccountOutboundCallingExceptionRuleReq struct {
	ExceptionRule OptUpdateAccountOutboundCallingExceptionRuleReqExceptionRule `json:"exception_rule"`
}

// GetExceptionRule returns the value of ExceptionRule.
func (s *UpdateAccountOutboundCallingExceptionRuleReq) GetExceptionRule() OptUpdateAccountOutboundCallingExceptionRuleReqExceptionRule {
	return s.ExceptionRule
}

// SetExceptionRule sets the value of ExceptionRule.
func (s *UpdateAccountOutboundCallingExceptionRuleReq) SetExceptionRule(val OptUpdateAccountOutboundCallingExceptionRuleReqExceptionRule) {
	s.ExceptionRule = val
}

type UpdateAccountOutboundCallingExceptionRuleReqExceptionRule struct {
	// The match type for the exception rule, The values are `phoneNumber` or `prefix`.
	MatchType string `json:"match_type"`
	// The exception rule phone number prefix or the phone number without country code.
	PrefixNumber string `json:"prefix_number"`
	// A comment to identify the exception rule number or prefix.
	Comment OptString `json:"comment"`
	// Whether the exception rule is active or inactive.
	// `active`: The exception rule is active.
	// `inactive`: The exception rule is inactive.
	Status string `json:"status"`
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	Country string `json:"country"`
}

// GetMatchType returns the value of MatchType.
func (s *UpdateAccountOutboundCallingExceptionRuleReqExceptionRule) GetMatchType() string {
	return s.MatchType
}

// GetPrefixNumber returns the value of PrefixNumber.
func (s *UpdateAccountOutboundCallingExceptionRuleReqExceptionRule) GetPrefixNumber() string {
	return s.PrefixNumber
}

// GetComment returns the value of Comment.
func (s *UpdateAccountOutboundCallingExceptionRuleReqExceptionRule) GetComment() OptString {
	return s.Comment
}

// GetStatus returns the value of Status.
func (s *UpdateAccountOutboundCallingExceptionRuleReqExceptionRule) GetStatus() string {
	return s.Status
}

// GetCountry returns the value of Country.
func (s *UpdateAccountOutboundCallingExceptionRuleReqExceptionRule) GetCountry() string {
	return s.Country
}

// SetMatchType sets the value of MatchType.
func (s *UpdateAccountOutboundCallingExceptionRuleReqExceptionRule) SetMatchType(val string) {
	s.MatchType = val
}

// SetPrefixNumber sets the value of PrefixNumber.
func (s *UpdateAccountOutboundCallingExceptionRuleReqExceptionRule) SetPrefixNumber(val string) {
	s.PrefixNumber = val
}

// SetComment sets the value of Comment.
func (s *UpdateAccountOutboundCallingExceptionRuleReqExceptionRule) SetComment(val OptString) {
	s.Comment = val
}

// SetStatus sets the value of Status.
func (s *UpdateAccountOutboundCallingExceptionRuleReqExceptionRule) SetStatus(val string) {
	s.Status = val
}

// SetCountry sets the value of Country.
func (s *UpdateAccountOutboundCallingExceptionRuleReqExceptionRule) SetCountry(val string) {
	s.Country = val
}

// UpdateAnAlertSettingNoContent is response for UpdateAnAlertSetting operation.
type UpdateAnAlertSettingNoContent struct{}

type UpdateAnAlertSettingReq struct {
	// The name of the alert setting.
	AlertSettingName OptString `json:"alert_setting_name"`
	// The rule conditions.
	RuleConditions []UpdateAnAlertSettingReqRuleConditionsItem `json:"rule_conditions"`
	// The target IDs of the alert.
	// When the rule is `Devices go offline` and the old value of this field does not represents
	// `Account`, it can be updated incrementally.
	// When the rule is `Devices go online` or `QoS Alert`, it can be updated incrementally.
	// In the case of `Devices go online` or `Devices go offline` rule, you should pass the `Device ID`
	// of the specific device and the number of Device is up to `5`
	// In the case of `QoS Alert` rule, you should pass the `Extension ID` of the specific user and the
	// number of User is up to `5`.
	TargetIds []string `json:"target_ids"`
	// The time frame type.
	// The available values: `all_day`, `specific_time`.
	TimeFrameType OptString `json:"time_frame_type"`
	// The start time of time frame in which the alert was triggered, in `HH:mm:ss` format.
	// When the `time_frame_type` is `all_day`, the value is `00:00:00`.
	// The value should be either at the whole hour or at half past the hour.
	TimeFrameFrom OptString `json:"time_frame_from"`
	// The end time of time frame in which the alert was triggered, in `HH:mm:ss` format.
	// When the `time_frame_type` is `all_day`, the value is `00:00:00`.
	// The value should be either at the whole hour or at half past the hour.
	TimeFrameTo OptString `json:"time_frame_to"`
	// The frequency of alert triggers. The unit is `minutes`.
	// When the value of `module` represents `Call Queue Management` or `Route Group Management` or
	// `Devices &amp; Phones Management` or `Call Quality Management`, it will be used.
	Frequency OptInt `json:"frequency"`
	// The email addresses of recipients. The number of the emails is up to `10`.
	EmailRecipients []string `json:"email_recipients"`
	// The chat channels.
	// This field applies when the value of `module` represents `Call Queue Management` or `Route Group
	// Management` or `Devices &amp; Phones Management` or `Call Quality Management`. The number of the
	// chat channels is up to `3`.
	ChatChannels []UpdateAnAlertSettingReqChatChannelsItem `json:"chat_channels"`
	// The alert's status:
	// * `0` &mdash; Inactive.
	// * `1` &mdash; Active.
	Status OptInt `json:"status"`
}

// GetAlertSettingName returns the value of AlertSettingName.
func (s *UpdateAnAlertSettingReq) GetAlertSettingName() OptString {
	return s.AlertSettingName
}

// GetRuleConditions returns the value of RuleConditions.
func (s *UpdateAnAlertSettingReq) GetRuleConditions() []UpdateAnAlertSettingReqRuleConditionsItem {
	return s.RuleConditions
}

// GetTargetIds returns the value of TargetIds.
func (s *UpdateAnAlertSettingReq) GetTargetIds() []string {
	return s.TargetIds
}

// GetTimeFrameType returns the value of TimeFrameType.
func (s *UpdateAnAlertSettingReq) GetTimeFrameType() OptString {
	return s.TimeFrameType
}

// GetTimeFrameFrom returns the value of TimeFrameFrom.
func (s *UpdateAnAlertSettingReq) GetTimeFrameFrom() OptString {
	return s.TimeFrameFrom
}

// GetTimeFrameTo returns the value of TimeFrameTo.
func (s *UpdateAnAlertSettingReq) GetTimeFrameTo() OptString {
	return s.TimeFrameTo
}

// GetFrequency returns the value of Frequency.
func (s *UpdateAnAlertSettingReq) GetFrequency() OptInt {
	return s.Frequency
}

// GetEmailRecipients returns the value of EmailRecipients.
func (s *UpdateAnAlertSettingReq) GetEmailRecipients() []string {
	return s.EmailRecipients
}

// GetChatChannels returns the value of ChatChannels.
func (s *UpdateAnAlertSettingReq) GetChatChannels() []UpdateAnAlertSettingReqChatChannelsItem {
	return s.ChatChannels
}

// GetStatus returns the value of Status.
func (s *UpdateAnAlertSettingReq) GetStatus() OptInt {
	return s.Status
}

// SetAlertSettingName sets the value of AlertSettingName.
func (s *UpdateAnAlertSettingReq) SetAlertSettingName(val OptString) {
	s.AlertSettingName = val
}

// SetRuleConditions sets the value of RuleConditions.
func (s *UpdateAnAlertSettingReq) SetRuleConditions(val []UpdateAnAlertSettingReqRuleConditionsItem) {
	s.RuleConditions = val
}

// SetTargetIds sets the value of TargetIds.
func (s *UpdateAnAlertSettingReq) SetTargetIds(val []string) {
	s.TargetIds = val
}

// SetTimeFrameType sets the value of TimeFrameType.
func (s *UpdateAnAlertSettingReq) SetTimeFrameType(val OptString) {
	s.TimeFrameType = val
}

// SetTimeFrameFrom sets the value of TimeFrameFrom.
func (s *UpdateAnAlertSettingReq) SetTimeFrameFrom(val OptString) {
	s.TimeFrameFrom = val
}

// SetTimeFrameTo sets the value of TimeFrameTo.
func (s *UpdateAnAlertSettingReq) SetTimeFrameTo(val OptString) {
	s.TimeFrameTo = val
}

// SetFrequency sets the value of Frequency.
func (s *UpdateAnAlertSettingReq) SetFrequency(val OptInt) {
	s.Frequency = val
}

// SetEmailRecipients sets the value of EmailRecipients.
func (s *UpdateAnAlertSettingReq) SetEmailRecipients(val []string) {
	s.EmailRecipients = val
}

// SetChatChannels sets the value of ChatChannels.
func (s *UpdateAnAlertSettingReq) SetChatChannels(val []UpdateAnAlertSettingReqChatChannelsItem) {
	s.ChatChannels = val
}

// SetStatus sets the value of Status.
func (s *UpdateAnAlertSettingReq) SetStatus(val OptInt) {
	s.Status = val
}

type UpdateAnAlertSettingReqChatChannelsItem struct {
	// The channel name.
	ChatChannelName OptString `json:"chat_channel_name"`
	// The verification token.
	Token OptString `json:"token"`
	// The end point.
	EndPoint OptString `json:"end_point"`
}

// GetChatChannelName returns the value of ChatChannelName.
func (s *UpdateAnAlertSettingReqChatChannelsItem) GetChatChannelName() OptString {
	return s.ChatChannelName
}

// GetToken returns the value of Token.
func (s *UpdateAnAlertSettingReqChatChannelsItem) GetToken() OptString {
	return s.Token
}

// GetEndPoint returns the value of EndPoint.
func (s *UpdateAnAlertSettingReqChatChannelsItem) GetEndPoint() OptString {
	return s.EndPoint
}

// SetChatChannelName sets the value of ChatChannelName.
func (s *UpdateAnAlertSettingReqChatChannelsItem) SetChatChannelName(val OptString) {
	s.ChatChannelName = val
}

// SetToken sets the value of Token.
func (s *UpdateAnAlertSettingReqChatChannelsItem) SetToken(val OptString) {
	s.Token = val
}

// SetEndPoint sets the value of EndPoint.
func (s *UpdateAnAlertSettingReqChatChannelsItem) SetEndPoint(val OptString) {
	s.EndPoint = val
}

type UpdateAnAlertSettingReqRuleConditionsItem struct {
	// The condition type.
	// * `1`-`Threshold`
	// * `2`-`Warning`
	// * `3`-`Critical`
	// * `4`-`Alert`
	// * `5`-`Severity`.
	// The `Threshold` is used for the `Service Level` rule.
	// The `Warning` or `Critical` is used for the `Service Level`, `Inbound Abandoned Calls`, `Inbound
	// Overflowed Calls`, `Number of Waiting Calls`, `Inbound Forwarded to Voicemail`, `Member
	// Availability (Active)`, `Member Availability (Opt-in/Opt-out)`, `Device offline rate`, `Inbound
	// Avg Call Waiting Time`, or `QoS Alert` rule.
	// The `Alert` is used for the `Devices go offline` or `device_online_time` rule.
	// The `Severity` is used for the `Emergency Call Alert` or `Route groups status change` rule.
	RuleConditionType OptInt `json:"rule_condition_type"`
	// The rule condition value.
	// In the case of the value of `rule_condition_type`  is `1`, the available values: `15`, `30`, `60`,
	// `120`, `180`, `240`, `300`.
	// In the case of the value of `rule_condition_type `is `2` or `3`, when the value of `rule`
	// represents `Service Level` or `Inbound Abandoned Calls` or `Inbound Overflowed Calls` or `Inbound
	// Forwarded to Voicemail` or `Member Availability (Active)` or `Member Availability
	// (Opt-in/Opt-out)` or `Device offline rate`, the unit is `percentage`, the value can only be in the
	// range of `1` to `100`, when the value of `rule` represents `Inbound Avg Call Waiting Time`, the
	// unit is `seconds`, the available values: `10`, `15`, `20`, `25`, `30`, `45`, `60`, `120`, `180`,
	// `240`, `300`, `600`, `900`, `1200`, `1500`, `1800`, when the value of `rule` represents `QoS
	// Alert`, the value can be only in the range of `0` to `5`.
	// In the case of the value of `rule_condition_type` is `4`, the available values:`5`, `10`, `15`,
	// `30`,`60`.
	// In the case of the value of `rule_condition_type` is `5`,the available values:`Warning`,`Critical`.
	RuleConditionValue OptString `json:"rule_condition_value"`
}

// GetRuleConditionType returns the value of RuleConditionType.
func (s *UpdateAnAlertSettingReqRuleConditionsItem) GetRuleConditionType() OptInt {
	return s.RuleConditionType
}

// GetRuleConditionValue returns the value of RuleConditionValue.
func (s *UpdateAnAlertSettingReqRuleConditionsItem) GetRuleConditionValue() OptString {
	return s.RuleConditionValue
}

// SetRuleConditionType sets the value of RuleConditionType.
func (s *UpdateAnAlertSettingReqRuleConditionsItem) SetRuleConditionType(val OptInt) {
	s.RuleConditionType = val
}

// SetRuleConditionValue sets the value of RuleConditionValue.
func (s *UpdateAnAlertSettingReqRuleConditionsItem) SetRuleConditionValue(val OptString) {
	s.RuleConditionValue = val
}

// UpdateAudioItemNoContent is response for UpdateAudioItem operation.
type UpdateAudioItemNoContent struct{}

type UpdateAudioItemReq struct {
	// The name of the audio item.
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *UpdateAudioItemReq) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *UpdateAudioItemReq) SetName(val string) {
	s.Name = val
}

// UpdateAutoDeleteFieldNoContent is response for UpdateAutoDeleteField operation.
type UpdateAutoDeleteFieldNoContent struct{}

type UpdateAutoDeleteFieldReq struct {
	// Whether to enable auto delete field in recording.
	AutoDeleteEnable OptBool `json:"auto_delete_enable"`
}

// GetAutoDeleteEnable returns the value of AutoDeleteEnable.
func (s *UpdateAutoDeleteFieldReq) GetAutoDeleteEnable() OptBool {
	return s.AutoDeleteEnable
}

// SetAutoDeleteEnable sets the value of AutoDeleteEnable.
func (s *UpdateAutoDeleteFieldReq) SetAutoDeleteEnable(val OptBool) {
	s.AutoDeleteEnable = val
}

// UpdateAutoReceptionistIVRNoContent is response for UpdateAutoReceptionistIVR operation.
type UpdateAutoReceptionistIVRNoContent struct{}

type UpdateAutoReceptionistIVRReq struct {
	// The audio prompt file ID.
	AudioPromptID OptString `json:"audio_prompt_id"`
	// The action if caller enters no action after the prompt played.
	CallerEntersNoAction OptUpdateAutoReceptionistIVRReqCallerEntersNoAction `json:"caller_enters_no_action"`
	// The auto receptionist holiday hours ID. If both `holiday_id` and `hours_type` are passed,
	// `holiday_id` has a high priority and `hours_type` is invalid.
	HolidayID OptString `json:"holiday_id"`
	// Hours type: `business_hours` (default) or `closed_hours`.
	HoursType OptString                                `json:"hours_type"`
	KeyAction OptUpdateAutoReceptionistIVRReqKeyAction `json:"key_action"`
}

// GetAudioPromptID returns the value of AudioPromptID.
func (s *UpdateAutoReceptionistIVRReq) GetAudioPromptID() OptString {
	return s.AudioPromptID
}

// GetCallerEntersNoAction returns the value of CallerEntersNoAction.
func (s *UpdateAutoReceptionistIVRReq) GetCallerEntersNoAction() OptUpdateAutoReceptionistIVRReqCallerEntersNoAction {
	return s.CallerEntersNoAction
}

// GetHolidayID returns the value of HolidayID.
func (s *UpdateAutoReceptionistIVRReq) GetHolidayID() OptString {
	return s.HolidayID
}

// GetHoursType returns the value of HoursType.
func (s *UpdateAutoReceptionistIVRReq) GetHoursType() OptString {
	return s.HoursType
}

// GetKeyAction returns the value of KeyAction.
func (s *UpdateAutoReceptionistIVRReq) GetKeyAction() OptUpdateAutoReceptionistIVRReqKeyAction {
	return s.KeyAction
}

// SetAudioPromptID sets the value of AudioPromptID.
func (s *UpdateAutoReceptionistIVRReq) SetAudioPromptID(val OptString) {
	s.AudioPromptID = val
}

// SetCallerEntersNoAction sets the value of CallerEntersNoAction.
func (s *UpdateAutoReceptionistIVRReq) SetCallerEntersNoAction(val OptUpdateAutoReceptionistIVRReqCallerEntersNoAction) {
	s.CallerEntersNoAction = val
}

// SetHolidayID sets the value of HolidayID.
func (s *UpdateAutoReceptionistIVRReq) SetHolidayID(val OptString) {
	s.HolidayID = val
}

// SetHoursType sets the value of HoursType.
func (s *UpdateAutoReceptionistIVRReq) SetHoursType(val OptString) {
	s.HoursType = val
}

// SetKeyAction sets the value of KeyAction.
func (s *UpdateAutoReceptionistIVRReq) SetKeyAction(val OptUpdateAutoReceptionistIVRReqKeyAction) {
	s.KeyAction = val
}

// The action if caller enters no action after the prompt played.
type UpdateAutoReceptionistIVRReqCallerEntersNoAction struct {
	// The action if caller enters no action after the prompt played.
	// -1 Disconnect the call
	// 2 Forward to the user
	// 4 Forward to the common area
	// 5 Forward to Cisco/Polycom Room
	// 6 Forward to the auto receptionist
	// 7 Forward to the call queue
	// 8 Forward to the shared line group
	// 15 Forward to the Contact Center.
	Action OptInt `json:"action"`
	// The number of times to repeat the audio prompt.
	AudioPromptRepeat OptInt `json:"audio_prompt_repeat"`
	// The extension ID or contact center setting ID.
	ForwardToExtensionID OptString `json:"forward_to_extension_id"`
}

// GetAction returns the value of Action.
func (s *UpdateAutoReceptionistIVRReqCallerEntersNoAction) GetAction() OptInt {
	return s.Action
}

// GetAudioPromptRepeat returns the value of AudioPromptRepeat.
func (s *UpdateAutoReceptionistIVRReqCallerEntersNoAction) GetAudioPromptRepeat() OptInt {
	return s.AudioPromptRepeat
}

// GetForwardToExtensionID returns the value of ForwardToExtensionID.
func (s *UpdateAutoReceptionistIVRReqCallerEntersNoAction) GetForwardToExtensionID() OptString {
	return s.ForwardToExtensionID
}

// SetAction sets the value of Action.
func (s *UpdateAutoReceptionistIVRReqCallerEntersNoAction) SetAction(val OptInt) {
	s.Action = val
}

// SetAudioPromptRepeat sets the value of AudioPromptRepeat.
func (s *UpdateAutoReceptionistIVRReqCallerEntersNoAction) SetAudioPromptRepeat(val OptInt) {
	s.AudioPromptRepeat = val
}

// SetForwardToExtensionID sets the value of ForwardToExtensionID.
func (s *UpdateAutoReceptionistIVRReqCallerEntersNoAction) SetForwardToExtensionID(val OptString) {
	s.ForwardToExtensionID = val
}

type UpdateAutoReceptionistIVRReqKeyAction struct {
	// The action after clicking the key.
	// For key `0`-`9`
	// 100 Leave voicemail to the current extension
	// 200 Leave voicemail to the user
	// 300 Leave voicemail to the auto receptionist
	// 400 Leave voicemail to the  call queue
	// 500 Leave voicemail to the shared line group
	// 2 Forward to the user
	// 3 Forward to Zoom Room
	// 4 Forward to the common area
	// 5 Forward to Cisco/Polycom Room
	// 6 Forward to the auto receptionist
	// 7 Forward to the call queue
	// 8 Forward to the shared line group
	// 9 Forward to external contacts
	// 10 Forward to a phone number
	// 15 Forward to the contact center
	// 16 Forward to the meeting service
	// 17 Forward to the meeting service number
	// -1 Disabled
	// For key * or #
	// 21 Repeat menu greeting
	// 22 Return to the root menu
	// 23 Return to the previous menu
	// -1 Disabled.
	Action OptInt `json:"action"`
	// The key. The following values are supported: numeric('0'-'9'), *, #.
	Key    OptString                                      `json:"key"`
	Target OptUpdateAutoReceptionistIVRReqKeyActionTarget `json:"target"`
	// The voicemail greeting file ID.
	VoicemailGreetingID OptString `json:"voicemail_greeting_id"`
}

// GetAction returns the value of Action.
func (s *UpdateAutoReceptionistIVRReqKeyAction) GetAction() OptInt {
	return s.Action
}

// GetKey returns the value of Key.
func (s *UpdateAutoReceptionistIVRReqKeyAction) GetKey() OptString {
	return s.Key
}

// GetTarget returns the value of Target.
func (s *UpdateAutoReceptionistIVRReqKeyAction) GetTarget() OptUpdateAutoReceptionistIVRReqKeyActionTarget {
	return s.Target
}

// GetVoicemailGreetingID returns the value of VoicemailGreetingID.
func (s *UpdateAutoReceptionistIVRReqKeyAction) GetVoicemailGreetingID() OptString {
	return s.VoicemailGreetingID
}

// SetAction sets the value of Action.
func (s *UpdateAutoReceptionistIVRReqKeyAction) SetAction(val OptInt) {
	s.Action = val
}

// SetKey sets the value of Key.
func (s *UpdateAutoReceptionistIVRReqKeyAction) SetKey(val OptString) {
	s.Key = val
}

// SetTarget sets the value of Target.
func (s *UpdateAutoReceptionistIVRReqKeyAction) SetTarget(val OptUpdateAutoReceptionistIVRReqKeyActionTarget) {
	s.Target = val
}

// SetVoicemailGreetingID sets the value of VoicemailGreetingID.
func (s *UpdateAutoReceptionistIVRReqKeyAction) SetVoicemailGreetingID(val OptString) {
	s.VoicemailGreetingID = val
}

type UpdateAutoReceptionistIVRReqKeyActionTarget struct {
	// The extension ID or contact center setting ID.
	ExtensionID OptString `json:"extension_id"`
	// The phone number to forward.
	PhoneNumber OptString `json:"phone_number"`
}

// GetExtensionID returns the value of ExtensionID.
func (s *UpdateAutoReceptionistIVRReqKeyActionTarget) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *UpdateAutoReceptionistIVRReqKeyActionTarget) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// SetExtensionID sets the value of ExtensionID.
func (s *UpdateAutoReceptionistIVRReqKeyActionTarget) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *UpdateAutoReceptionistIVRReqKeyActionTarget) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// UpdateAutoReceptionistNoContent is response for UpdateAutoReceptionist operation.
type UpdateAutoReceptionistNoContent struct{}

// UpdateAutoReceptionistPolicyNoContent is response for UpdateAutoReceptionistPolicy operation.
type UpdateAutoReceptionistPolicyNoContent struct{}

type UpdateAutoReceptionistPolicyReq struct {
	VoicemailTranscription OptUpdateAutoReceptionistPolicyReqVoicemailTranscription `json:"voicemail_transcription"`
	// Once enabled, users will receive email notifications when there is a new voicemail from users,
	// call queues, auto receptionists or shared line groups. Users who disabled the shared voicemail
	// notification by email policy will not receive notifications. Only displayed when the voicemail
	// policy is using the new policy framework.
	VoicemailNotificationByEmail OptUpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail `json:"voicemail_notification_by_email"`
	SMS                          OptUpdateAutoReceptionistPolicyReqSMS                          `json:"sms"`
}

// GetVoicemailTranscription returns the value of VoicemailTranscription.
func (s *UpdateAutoReceptionistPolicyReq) GetVoicemailTranscription() OptUpdateAutoReceptionistPolicyReqVoicemailTranscription {
	return s.VoicemailTranscription
}

// GetVoicemailNotificationByEmail returns the value of VoicemailNotificationByEmail.
func (s *UpdateAutoReceptionistPolicyReq) GetVoicemailNotificationByEmail() OptUpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail {
	return s.VoicemailNotificationByEmail
}

// GetSMS returns the value of SMS.
func (s *UpdateAutoReceptionistPolicyReq) GetSMS() OptUpdateAutoReceptionistPolicyReqSMS {
	return s.SMS
}

// SetVoicemailTranscription sets the value of VoicemailTranscription.
func (s *UpdateAutoReceptionistPolicyReq) SetVoicemailTranscription(val OptUpdateAutoReceptionistPolicyReqVoicemailTranscription) {
	s.VoicemailTranscription = val
}

// SetVoicemailNotificationByEmail sets the value of VoicemailNotificationByEmail.
func (s *UpdateAutoReceptionistPolicyReq) SetVoicemailNotificationByEmail(val OptUpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) {
	s.VoicemailNotificationByEmail = val
}

// SetSMS sets the value of SMS.
func (s *UpdateAutoReceptionistPolicyReq) SetSMS(val OptUpdateAutoReceptionistPolicyReqSMS) {
	s.SMS = val
}

type UpdateAutoReceptionistPolicyReqSMS struct {
	// Whether to allow users, call queues and auto receptionists to send and receive messages. You will
	// still need to assign a valid calling plan and phone number to each user in order for them to send
	// and receive messages.
	Enable OptBool `json:"enable"`
	// Whether the current settings will use the phone account's settings (applicable if the current
	// settings are using the new policy framework).
	Reset OptBool `json:"reset"`
	// Whether the user can send and receive international messages.
	InternationalSMS OptBool `json:"international_sms"`
	// The country which users can send and receive international messages. The [country ISO
	// code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	InternationalSMSCountries []string `json:"international_sms_countries"`
}

// GetEnable returns the value of Enable.
func (s *UpdateAutoReceptionistPolicyReqSMS) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateAutoReceptionistPolicyReqSMS) GetReset() OptBool {
	return s.Reset
}

// GetInternationalSMS returns the value of InternationalSMS.
func (s *UpdateAutoReceptionistPolicyReqSMS) GetInternationalSMS() OptBool {
	return s.InternationalSMS
}

// GetInternationalSMSCountries returns the value of InternationalSMSCountries.
func (s *UpdateAutoReceptionistPolicyReqSMS) GetInternationalSMSCountries() []string {
	return s.InternationalSMSCountries
}

// SetEnable sets the value of Enable.
func (s *UpdateAutoReceptionistPolicyReqSMS) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateAutoReceptionistPolicyReqSMS) SetReset(val OptBool) {
	s.Reset = val
}

// SetInternationalSMS sets the value of InternationalSMS.
func (s *UpdateAutoReceptionistPolicyReqSMS) SetInternationalSMS(val OptBool) {
	s.InternationalSMS = val
}

// SetInternationalSMSCountries sets the value of InternationalSMSCountries.
func (s *UpdateAutoReceptionistPolicyReqSMS) SetInternationalSMSCountries(val []string) {
	s.InternationalSMSCountries = val
}

// Once enabled, users will receive email notifications when there is a new voicemail from users,
// call queues, auto receptionists or shared line groups. Users who disabled the shared voicemail
// notification by email policy will not receive notifications. Only displayed when the voicemail
// policy is using the new policy framework.
type UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail struct {
	// Whether to include the voicemail file.
	IncludeVoicemailFile OptBool `json:"include_voicemail_file"`
	// Whether to include the voicemail transcription.
	IncludeVoicemailTranscription OptBool `json:"include_voicemail_transcription"`
	// Whether to forward the voicemail to email.
	ForwardVoicemailToEmail OptBool `json:"forward_voicemail_to_email"`
	Enable                  OptBool `json:"enable"`
	// Whether the current settings will use the phone account's settings (applicable if the current
	// settings are using the new policy framework).
	Reset OptBool `json:"reset"`
}

// GetIncludeVoicemailFile returns the value of IncludeVoicemailFile.
func (s *UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) GetIncludeVoicemailFile() OptBool {
	return s.IncludeVoicemailFile
}

// GetIncludeVoicemailTranscription returns the value of IncludeVoicemailTranscription.
func (s *UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) GetIncludeVoicemailTranscription() OptBool {
	return s.IncludeVoicemailTranscription
}

// GetForwardVoicemailToEmail returns the value of ForwardVoicemailToEmail.
func (s *UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) GetForwardVoicemailToEmail() OptBool {
	return s.ForwardVoicemailToEmail
}

// GetEnable returns the value of Enable.
func (s *UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) GetReset() OptBool {
	return s.Reset
}

// SetIncludeVoicemailFile sets the value of IncludeVoicemailFile.
func (s *UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) SetIncludeVoicemailFile(val OptBool) {
	s.IncludeVoicemailFile = val
}

// SetIncludeVoicemailTranscription sets the value of IncludeVoicemailTranscription.
func (s *UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) SetIncludeVoicemailTranscription(val OptBool) {
	s.IncludeVoicemailTranscription = val
}

// SetForwardVoicemailToEmail sets the value of ForwardVoicemailToEmail.
func (s *UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) SetForwardVoicemailToEmail(val OptBool) {
	s.ForwardVoicemailToEmail = val
}

// SetEnable sets the value of Enable.
func (s *UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateAutoReceptionistPolicyReqVoicemailNotificationByEmail) SetReset(val OptBool) {
	s.Reset = val
}

type UpdateAutoReceptionistPolicyReqVoicemailTranscription struct {
	// Whether to allow users to access transcriptions of voicemails from the Zoom client, the Zoom web
	// portal and email notifications.
	Enable OptBool `json:"enable"`
	// Whether the current settings will use the phone account's settings (applicable if the current
	// settings are using the new policy framework).
	Reset OptBool `json:"reset"`
}

// GetEnable returns the value of Enable.
func (s *UpdateAutoReceptionistPolicyReqVoicemailTranscription) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateAutoReceptionistPolicyReqVoicemailTranscription) GetReset() OptBool {
	return s.Reset
}

// SetEnable sets the value of Enable.
func (s *UpdateAutoReceptionistPolicyReqVoicemailTranscription) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateAutoReceptionistPolicyReqVoicemailTranscription) SetReset(val OptBool) {
	s.Reset = val
}

type UpdateAutoReceptionistReq struct {
	// Cost center name.
	CostCenter OptString `json:"cost_center"`
	// Department name.
	Department OptString `json:"department"`
	// Extension number to be assigned to the auto receptionist. If site code is enabled, provide the
	// short extension number instead.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// Display name of the auto receptionist.
	Name OptString `json:"name"`
	// The language for all default audio prompts for the auto receptionist.
	// * `en-US` : English (US)
	// * `en-GB` : English (UK)
	// * `es-US` : Spanish (US)
	// * `fr-CA` : French (Canada)
	// * `da-DK` : Danish (Denmark)
	// * `de-DE` : German (Germany)
	// * `es-ES` : Spanish (Spain)
	// * `fr-FR` : French (France)
	// * `it-IT` : Italian (Italy)
	// * `nl-NL` : Dutch (Netherlands)
	// * `pt-PT` : Portuguese (Portugal)
	// * `ja` : Japanese
	// * `ko-KR` : Korean (Korea)
	// * `pt-BR` : Portuguese (Brazil)
	// * `zh-CN` : Chinese (PRC).
	AudioPromptLanguage OptString `json:"audio_prompt_language"`
	// [Timezone](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#timezones) of the Auto Receptionist.
	Timezone OptString `json:"timezone"`
	// Determine where recording will be stored. Recording includes Phone recordings, voicemail,
	// voicemail transcripts, and custom greeting prompts.
	// * `US` : United States
	// * `AU` : Australia
	// * `CA` : Canada
	// * `DE` : Germany
	// * `IN` : India
	// * `JP` : Japan
	// * `SG` : Singapore
	// * `BR` : Brazil
	// * `CN` : China
	// * `MX` : Mexico
	// <b>Note:</b>
	// * If the setting is locked at the Account level, it can't be updated.
	RecordingStorageLocation OptString `json:"recording_storage_location"`
}

// GetCostCenter returns the value of CostCenter.
func (s *UpdateAutoReceptionistReq) GetCostCenter() OptString {
	return s.CostCenter
}

// GetDepartment returns the value of Department.
func (s *UpdateAutoReceptionistReq) GetDepartment() OptString {
	return s.Department
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *UpdateAutoReceptionistReq) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetName returns the value of Name.
func (s *UpdateAutoReceptionistReq) GetName() OptString {
	return s.Name
}

// GetAudioPromptLanguage returns the value of AudioPromptLanguage.
func (s *UpdateAutoReceptionistReq) GetAudioPromptLanguage() OptString {
	return s.AudioPromptLanguage
}

// GetTimezone returns the value of Timezone.
func (s *UpdateAutoReceptionistReq) GetTimezone() OptString {
	return s.Timezone
}

// GetRecordingStorageLocation returns the value of RecordingStorageLocation.
func (s *UpdateAutoReceptionistReq) GetRecordingStorageLocation() OptString {
	return s.RecordingStorageLocation
}

// SetCostCenter sets the value of CostCenter.
func (s *UpdateAutoReceptionistReq) SetCostCenter(val OptString) {
	s.CostCenter = val
}

// SetDepartment sets the value of Department.
func (s *UpdateAutoReceptionistReq) SetDepartment(val OptString) {
	s.Department = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *UpdateAutoReceptionistReq) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetName sets the value of Name.
func (s *UpdateAutoReceptionistReq) SetName(val OptString) {
	s.Name = val
}

// SetAudioPromptLanguage sets the value of AudioPromptLanguage.
func (s *UpdateAutoReceptionistReq) SetAudioPromptLanguage(val OptString) {
	s.AudioPromptLanguage = val
}

// SetTimezone sets the value of Timezone.
func (s *UpdateAutoReceptionistReq) SetTimezone(val OptString) {
	s.Timezone = val
}

// SetRecordingStorageLocation sets the value of RecordingStorageLocation.
func (s *UpdateAutoReceptionistReq) SetRecordingStorageLocation(val OptString) {
	s.RecordingStorageLocation = val
}

// UpdateCQPolicySubSettingNoContent is response for UpdateCQPolicySubSetting operation.
type UpdateCQPolicySubSettingNoContent struct{}

type UpdateCQPolicySubSettingReq struct {
	// The shared voicemail access member list. The maximum number of allowed access members follows the
	// setting in your account.
	VoicemailAccessMembers []UpdateCQPolicySubSettingReqVoicemailAccessMembersItem `json:"voicemail_access_members"`
}

// GetVoicemailAccessMembers returns the value of VoicemailAccessMembers.
func (s *UpdateCQPolicySubSettingReq) GetVoicemailAccessMembers() []UpdateCQPolicySubSettingReqVoicemailAccessMembersItem {
	return s.VoicemailAccessMembers
}

// SetVoicemailAccessMembers sets the value of VoicemailAccessMembers.
func (s *UpdateCQPolicySubSettingReq) SetVoicemailAccessMembers(val []UpdateCQPolicySubSettingReqVoicemailAccessMembersItem) {
	s.VoicemailAccessMembers = val
}

// Merged schema.
type UpdateCQPolicySubSettingReqVoicemailAccessMembersItem struct {
	// The Zoom user ID or email to share or update the access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// Specifies whether the member has download permissions. The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
	// Specifies whether the member has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// Specifies whether the member has the permission to share. The default is **false**.
	AllowSharing OptBool `json:"allow_sharing"`
	// The shared voicemail ID.
	SharedID OptString `json:"shared_id"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *UpdateCQPolicySubSettingReqVoicemailAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDownload returns the value of AllowDownload.
func (s *UpdateCQPolicySubSettingReqVoicemailAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowDelete returns the value of AllowDelete.
func (s *UpdateCQPolicySubSettingReqVoicemailAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowSharing returns the value of AllowSharing.
func (s *UpdateCQPolicySubSettingReqVoicemailAccessMembersItem) GetAllowSharing() OptBool {
	return s.AllowSharing
}

// GetSharedID returns the value of SharedID.
func (s *UpdateCQPolicySubSettingReqVoicemailAccessMembersItem) GetSharedID() OptString {
	return s.SharedID
}

// SetAccessUserID sets the value of AccessUserID.
func (s *UpdateCQPolicySubSettingReqVoicemailAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *UpdateCQPolicySubSettingReqVoicemailAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *UpdateCQPolicySubSettingReqVoicemailAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowSharing sets the value of AllowSharing.
func (s *UpdateCQPolicySubSettingReqVoicemailAccessMembersItem) SetAllowSharing(val OptBool) {
	s.AllowSharing = val
}

// SetSharedID sets the value of SharedID.
func (s *UpdateCQPolicySubSettingReqVoicemailAccessMembersItem) SetSharedID(val OptString) {
	s.SharedID = val
}

// UpdateCallHandlingNoContent is response for UpdateCallHandling operation.
type UpdateCallHandlingNoContent struct{}

// UpdateCallHandlingReq represents sum type.
type UpdateCallHandlingReq struct {
	Type                                    UpdateCallHandlingReqType // switch on this field
	PatchCallHandlingSettingsCallForwarding PatchCallHandlingSettingsCallForwarding
	PatchCallHandlingSettingsHoliday        PatchCallHandlingSettingsHoliday
	PatchCallHandlingSettingsCustomHours    PatchCallHandlingSettingsCustomHours
	PatchCallHandlingSettingsCallHandling   PatchCallHandlingSettingsCallHandling
}

// UpdateCallHandlingReqType is oneOf type of UpdateCallHandlingReq.
type UpdateCallHandlingReqType string

// Possible values for UpdateCallHandlingReqType.
const (
	PatchCallHandlingSettingsCallForwardingUpdateCallHandlingReq UpdateCallHandlingReqType = "call_forwarding"
	PatchCallHandlingSettingsHolidayUpdateCallHandlingReq        UpdateCallHandlingReqType = "holiday"
	PatchCallHandlingSettingsCustomHoursUpdateCallHandlingReq    UpdateCallHandlingReqType = "custom_hours"
	PatchCallHandlingSettingsCallHandlingUpdateCallHandlingReq   UpdateCallHandlingReqType = "call_handling"
)

// IsPatchCallHandlingSettingsCallForwarding reports whether UpdateCallHandlingReq is PatchCallHandlingSettingsCallForwarding.
func (s UpdateCallHandlingReq) IsPatchCallHandlingSettingsCallForwarding() bool {
	return s.Type == PatchCallHandlingSettingsCallForwardingUpdateCallHandlingReq
}

// IsPatchCallHandlingSettingsHoliday reports whether UpdateCallHandlingReq is PatchCallHandlingSettingsHoliday.
func (s UpdateCallHandlingReq) IsPatchCallHandlingSettingsHoliday() bool {
	return s.Type == PatchCallHandlingSettingsHolidayUpdateCallHandlingReq
}

// IsPatchCallHandlingSettingsCustomHours reports whether UpdateCallHandlingReq is PatchCallHandlingSettingsCustomHours.
func (s UpdateCallHandlingReq) IsPatchCallHandlingSettingsCustomHours() bool {
	return s.Type == PatchCallHandlingSettingsCustomHoursUpdateCallHandlingReq
}

// IsPatchCallHandlingSettingsCallHandling reports whether UpdateCallHandlingReq is PatchCallHandlingSettingsCallHandling.
func (s UpdateCallHandlingReq) IsPatchCallHandlingSettingsCallHandling() bool {
	return s.Type == PatchCallHandlingSettingsCallHandlingUpdateCallHandlingReq
}

// SetPatchCallHandlingSettingsCallForwarding sets UpdateCallHandlingReq to PatchCallHandlingSettingsCallForwarding.
func (s *UpdateCallHandlingReq) SetPatchCallHandlingSettingsCallForwarding(v PatchCallHandlingSettingsCallForwarding) {
	s.Type = PatchCallHandlingSettingsCallForwardingUpdateCallHandlingReq
	s.PatchCallHandlingSettingsCallForwarding = v
}

// GetPatchCallHandlingSettingsCallForwarding returns PatchCallHandlingSettingsCallForwarding and true boolean if UpdateCallHandlingReq is PatchCallHandlingSettingsCallForwarding.
func (s UpdateCallHandlingReq) GetPatchCallHandlingSettingsCallForwarding() (v PatchCallHandlingSettingsCallForwarding, ok bool) {
	if !s.IsPatchCallHandlingSettingsCallForwarding() {
		return v, false
	}
	return s.PatchCallHandlingSettingsCallForwarding, true
}

// NewPatchCallHandlingSettingsCallForwardingUpdateCallHandlingReq returns new UpdateCallHandlingReq from PatchCallHandlingSettingsCallForwarding.
func NewPatchCallHandlingSettingsCallForwardingUpdateCallHandlingReq(v PatchCallHandlingSettingsCallForwarding) UpdateCallHandlingReq {
	var s UpdateCallHandlingReq
	s.SetPatchCallHandlingSettingsCallForwarding(v)
	return s
}

// SetPatchCallHandlingSettingsHoliday sets UpdateCallHandlingReq to PatchCallHandlingSettingsHoliday.
func (s *UpdateCallHandlingReq) SetPatchCallHandlingSettingsHoliday(v PatchCallHandlingSettingsHoliday) {
	s.Type = PatchCallHandlingSettingsHolidayUpdateCallHandlingReq
	s.PatchCallHandlingSettingsHoliday = v
}

// GetPatchCallHandlingSettingsHoliday returns PatchCallHandlingSettingsHoliday and true boolean if UpdateCallHandlingReq is PatchCallHandlingSettingsHoliday.
func (s UpdateCallHandlingReq) GetPatchCallHandlingSettingsHoliday() (v PatchCallHandlingSettingsHoliday, ok bool) {
	if !s.IsPatchCallHandlingSettingsHoliday() {
		return v, false
	}
	return s.PatchCallHandlingSettingsHoliday, true
}

// NewPatchCallHandlingSettingsHolidayUpdateCallHandlingReq returns new UpdateCallHandlingReq from PatchCallHandlingSettingsHoliday.
func NewPatchCallHandlingSettingsHolidayUpdateCallHandlingReq(v PatchCallHandlingSettingsHoliday) UpdateCallHandlingReq {
	var s UpdateCallHandlingReq
	s.SetPatchCallHandlingSettingsHoliday(v)
	return s
}

// SetPatchCallHandlingSettingsCustomHours sets UpdateCallHandlingReq to PatchCallHandlingSettingsCustomHours.
func (s *UpdateCallHandlingReq) SetPatchCallHandlingSettingsCustomHours(v PatchCallHandlingSettingsCustomHours) {
	s.Type = PatchCallHandlingSettingsCustomHoursUpdateCallHandlingReq
	s.PatchCallHandlingSettingsCustomHours = v
}

// GetPatchCallHandlingSettingsCustomHours returns PatchCallHandlingSettingsCustomHours and true boolean if UpdateCallHandlingReq is PatchCallHandlingSettingsCustomHours.
func (s UpdateCallHandlingReq) GetPatchCallHandlingSettingsCustomHours() (v PatchCallHandlingSettingsCustomHours, ok bool) {
	if !s.IsPatchCallHandlingSettingsCustomHours() {
		return v, false
	}
	return s.PatchCallHandlingSettingsCustomHours, true
}

// NewPatchCallHandlingSettingsCustomHoursUpdateCallHandlingReq returns new UpdateCallHandlingReq from PatchCallHandlingSettingsCustomHours.
func NewPatchCallHandlingSettingsCustomHoursUpdateCallHandlingReq(v PatchCallHandlingSettingsCustomHours) UpdateCallHandlingReq {
	var s UpdateCallHandlingReq
	s.SetPatchCallHandlingSettingsCustomHours(v)
	return s
}

// SetPatchCallHandlingSettingsCallHandling sets UpdateCallHandlingReq to PatchCallHandlingSettingsCallHandling.
func (s *UpdateCallHandlingReq) SetPatchCallHandlingSettingsCallHandling(v PatchCallHandlingSettingsCallHandling) {
	s.Type = PatchCallHandlingSettingsCallHandlingUpdateCallHandlingReq
	s.PatchCallHandlingSettingsCallHandling = v
}

// GetPatchCallHandlingSettingsCallHandling returns PatchCallHandlingSettingsCallHandling and true boolean if UpdateCallHandlingReq is PatchCallHandlingSettingsCallHandling.
func (s UpdateCallHandlingReq) GetPatchCallHandlingSettingsCallHandling() (v PatchCallHandlingSettingsCallHandling, ok bool) {
	if !s.IsPatchCallHandlingSettingsCallHandling() {
		return v, false
	}
	return s.PatchCallHandlingSettingsCallHandling, true
}

// NewPatchCallHandlingSettingsCallHandlingUpdateCallHandlingReq returns new UpdateCallHandlingReq from PatchCallHandlingSettingsCallHandling.
func NewPatchCallHandlingSettingsCallHandlingUpdateCallHandlingReq(v PatchCallHandlingSettingsCallHandling) UpdateCallHandlingReq {
	var s UpdateCallHandlingReq
	s.SetPatchCallHandlingSettingsCallHandling(v)
	return s
}

// UpdateCallQueueNoContent is response for UpdateCallQueue operation.
type UpdateCallQueueNoContent struct{}

type UpdateCallQueueReq struct {
	// Cost center name.
	CostCenter OptString `json:"cost_center"`
	// Department name.
	Department OptString `json:"department"`
	// Description for the Call Queue.
	Description OptString `json:"description"`
	// Phone extension number for the site.
	// If a site code has been [assigned](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b)
	// to the site, provide the short extension number instead of the original extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// Name of the Call Queue.
	Name OptString `json:"name"`
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned.
	SiteID OptString `json:"site_id"`
	// Status of the Call Queue. Allowed values:
	// `active`
	// `inactive`.
	Status OptString `json:"status"`
	// [Timezone](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#timezones) of the Call Queue.
	Timezone OptString `json:"timezone"`
}

// GetCostCenter returns the value of CostCenter.
func (s *UpdateCallQueueReq) GetCostCenter() OptString {
	return s.CostCenter
}

// GetDepartment returns the value of Department.
func (s *UpdateCallQueueReq) GetDepartment() OptString {
	return s.Department
}

// GetDescription returns the value of Description.
func (s *UpdateCallQueueReq) GetDescription() OptString {
	return s.Description
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *UpdateCallQueueReq) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetName returns the value of Name.
func (s *UpdateCallQueueReq) GetName() OptString {
	return s.Name
}

// GetSiteID returns the value of SiteID.
func (s *UpdateCallQueueReq) GetSiteID() OptString {
	return s.SiteID
}

// GetStatus returns the value of Status.
func (s *UpdateCallQueueReq) GetStatus() OptString {
	return s.Status
}

// GetTimezone returns the value of Timezone.
func (s *UpdateCallQueueReq) GetTimezone() OptString {
	return s.Timezone
}

// SetCostCenter sets the value of CostCenter.
func (s *UpdateCallQueueReq) SetCostCenter(val OptString) {
	s.CostCenter = val
}

// SetDepartment sets the value of Department.
func (s *UpdateCallQueueReq) SetDepartment(val OptString) {
	s.Department = val
}

// SetDescription sets the value of Description.
func (s *UpdateCallQueueReq) SetDescription(val OptString) {
	s.Description = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *UpdateCallQueueReq) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetName sets the value of Name.
func (s *UpdateCallQueueReq) SetName(val OptString) {
	s.Name = val
}

// SetSiteID sets the value of SiteID.
func (s *UpdateCallQueueReq) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetStatus sets the value of Status.
func (s *UpdateCallQueueReq) SetStatus(val OptString) {
	s.Status = val
}

// SetTimezone sets the value of Timezone.
func (s *UpdateCallQueueReq) SetTimezone(val OptString) {
	s.Timezone = val
}

// UpdateCallingPlanNoContent is response for UpdateCallingPlan operation.
type UpdateCallingPlanNoContent struct{}

type UpdateCallingPlanReq struct {
	// The [type](https://marketplace.zoom.
	// us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan.
	SourceType int `json:"source_type"`
	// The [type](https://marketplace.zoom.
	// us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan.
	TargetType int `json:"target_type"`
}

// GetSourceType returns the value of SourceType.
func (s *UpdateCallingPlanReq) GetSourceType() int {
	return s.SourceType
}

// GetTargetType returns the value of TargetType.
func (s *UpdateCallingPlanReq) GetTargetType() int {
	return s.TargetType
}

// SetSourceType sets the value of SourceType.
func (s *UpdateCallingPlanReq) SetSourceType(val int) {
	s.SourceType = val
}

// SetTargetType sets the value of TargetType.
func (s *UpdateCallingPlanReq) SetTargetType(val int) {
	s.TargetType = val
}

// UpdateCommonAreaNoContent is response for UpdateCommonArea operation.
type UpdateCommonAreaNoContent struct{}

// UpdateCommonAreaOutboundCallingCountriesOrRegionsNoContent is response for UpdateCommonAreaOutboundCallingCountriesOrRegions operation.
type UpdateCommonAreaOutboundCallingCountriesOrRegionsNoContent struct{}

type UpdateCommonAreaOutboundCallingCountriesOrRegionsReq struct {
	CountryRegions []UpdateCommonAreaOutboundCallingCountriesOrRegionsReqCountryRegionsItem `json:"country_regions"`
}

// GetCountryRegions returns the value of CountryRegions.
func (s *UpdateCommonAreaOutboundCallingCountriesOrRegionsReq) GetCountryRegions() []UpdateCommonAreaOutboundCallingCountriesOrRegionsReqCountryRegionsItem {
	return s.CountryRegions
}

// SetCountryRegions sets the value of CountryRegions.
func (s *UpdateCommonAreaOutboundCallingCountriesOrRegionsReq) SetCountryRegions(val []UpdateCommonAreaOutboundCallingCountriesOrRegionsReqCountryRegionsItem) {
	s.CountryRegions = val
}

type UpdateCommonAreaOutboundCallingCountriesOrRegionsReqCountryRegionsItem struct {
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	IsoCode OptString `json:"iso_code"`
	// The default outbound calling rule.
	// `1` - Allowed
	// `2` - Blocked
	// `3` - Requires local number, caller ID, or plan
	// `4` - Requires the extension number and PIN code.
	Rule OptInt `json:"rule"`
	// Whether to delete existing exception rules. This field only appears when the default outbound
	// calling rule is changed. The default value is `false`.
	DeleteExistingExceptionRules OptBool `json:"delete_existing_exception_rules"`
}

// GetIsoCode returns the value of IsoCode.
func (s *UpdateCommonAreaOutboundCallingCountriesOrRegionsReqCountryRegionsItem) GetIsoCode() OptString {
	return s.IsoCode
}

// GetRule returns the value of Rule.
func (s *UpdateCommonAreaOutboundCallingCountriesOrRegionsReqCountryRegionsItem) GetRule() OptInt {
	return s.Rule
}

// GetDeleteExistingExceptionRules returns the value of DeleteExistingExceptionRules.
func (s *UpdateCommonAreaOutboundCallingCountriesOrRegionsReqCountryRegionsItem) GetDeleteExistingExceptionRules() OptBool {
	return s.DeleteExistingExceptionRules
}

// SetIsoCode sets the value of IsoCode.
func (s *UpdateCommonAreaOutboundCallingCountriesOrRegionsReqCountryRegionsItem) SetIsoCode(val OptString) {
	s.IsoCode = val
}

// SetRule sets the value of Rule.
func (s *UpdateCommonAreaOutboundCallingCountriesOrRegionsReqCountryRegionsItem) SetRule(val OptInt) {
	s.Rule = val
}

// SetDeleteExistingExceptionRules sets the value of DeleteExistingExceptionRules.
func (s *UpdateCommonAreaOutboundCallingCountriesOrRegionsReqCountryRegionsItem) SetDeleteExistingExceptionRules(val OptBool) {
	s.DeleteExistingExceptionRules = val
}

// UpdateCommonAreaOutboundCallingExceptionRuleNoContent is response for UpdateCommonAreaOutboundCallingExceptionRule operation.
type UpdateCommonAreaOutboundCallingExceptionRuleNoContent struct{}

type UpdateCommonAreaOutboundCallingExceptionRuleReq struct {
	ExceptionRule OptUpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule `json:"exception_rule"`
}

// GetExceptionRule returns the value of ExceptionRule.
func (s *UpdateCommonAreaOutboundCallingExceptionRuleReq) GetExceptionRule() OptUpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule {
	return s.ExceptionRule
}

// SetExceptionRule sets the value of ExceptionRule.
func (s *UpdateCommonAreaOutboundCallingExceptionRuleReq) SetExceptionRule(val OptUpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) {
	s.ExceptionRule = val
}

type UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule struct {
	// The match type for the exception rule. The values are `phoneNumber` or `prefix`.
	MatchType string `json:"match_type"`
	// The exception rule phone number prefix or the phone number without the country code.
	PrefixNumber string `json:"prefix_number"`
	// A comment to identify the exception rule number or prefix.
	Comment OptString `json:"comment"`
	// Whether the exception rule is active or inactive.
	// `active`: The exception rule is active.
	// `inactive`: The exception rule is inactive.
	Status string `json:"status"`
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	Country string `json:"country"`
}

// GetMatchType returns the value of MatchType.
func (s *UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) GetMatchType() string {
	return s.MatchType
}

// GetPrefixNumber returns the value of PrefixNumber.
func (s *UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) GetPrefixNumber() string {
	return s.PrefixNumber
}

// GetComment returns the value of Comment.
func (s *UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) GetComment() OptString {
	return s.Comment
}

// GetStatus returns the value of Status.
func (s *UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) GetStatus() string {
	return s.Status
}

// GetCountry returns the value of Country.
func (s *UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) GetCountry() string {
	return s.Country
}

// SetMatchType sets the value of MatchType.
func (s *UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) SetMatchType(val string) {
	s.MatchType = val
}

// SetPrefixNumber sets the value of PrefixNumber.
func (s *UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) SetPrefixNumber(val string) {
	s.PrefixNumber = val
}

// SetComment sets the value of Comment.
func (s *UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) SetComment(val OptString) {
	s.Comment = val
}

// SetStatus sets the value of Status.
func (s *UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) SetStatus(val string) {
	s.Status = val
}

// SetCountry sets the value of Country.
func (s *UpdateCommonAreaOutboundCallingExceptionRuleReqExceptionRule) SetCountry(val string) {
	s.Country = val
}

type UpdateCommonAreaReq struct {
	// Area code of the common area.
	AreaCode OptString `json:"area_code"`
	// The cost center the common area belongs to.
	CostCenter OptString `json:"cost_center"`
	// Two-lettered country [code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	CountryIsoCode OptString `json:"country_iso_code"`
	// The department the common area belongs to.
	Department OptString `json:"department"`
	// Display name of the common area.
	DisplayName OptString `json:"display_name"`
	// The emergency location's address ID.
	EmergencyAddressID OptString `json:"emergency_address_id"`
	// Extension number of the phone. If the site code is enabled, provide the short extension number
	// instead.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The user's outbound caller ID phone number in E164 format.
	OutboundCallerID OptString `json:"outbound_caller_id"`
	// A list of the common area's policies.
	Policy OptUpdateCommonAreaReqPolicy `json:"policy"`
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is
	// assigned.
	SiteID OptString `json:"site_id"`
	// [Timezone ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists)
	// for the common area.
	Timezone OptString `json:"timezone"`
}

// GetAreaCode returns the value of AreaCode.
func (s *UpdateCommonAreaReq) GetAreaCode() OptString {
	return s.AreaCode
}

// GetCostCenter returns the value of CostCenter.
func (s *UpdateCommonAreaReq) GetCostCenter() OptString {
	return s.CostCenter
}

// GetCountryIsoCode returns the value of CountryIsoCode.
func (s *UpdateCommonAreaReq) GetCountryIsoCode() OptString {
	return s.CountryIsoCode
}

// GetDepartment returns the value of Department.
func (s *UpdateCommonAreaReq) GetDepartment() OptString {
	return s.Department
}

// GetDisplayName returns the value of DisplayName.
func (s *UpdateCommonAreaReq) GetDisplayName() OptString {
	return s.DisplayName
}

// GetEmergencyAddressID returns the value of EmergencyAddressID.
func (s *UpdateCommonAreaReq) GetEmergencyAddressID() OptString {
	return s.EmergencyAddressID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *UpdateCommonAreaReq) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetOutboundCallerID returns the value of OutboundCallerID.
func (s *UpdateCommonAreaReq) GetOutboundCallerID() OptString {
	return s.OutboundCallerID
}

// GetPolicy returns the value of Policy.
func (s *UpdateCommonAreaReq) GetPolicy() OptUpdateCommonAreaReqPolicy {
	return s.Policy
}

// GetSiteID returns the value of SiteID.
func (s *UpdateCommonAreaReq) GetSiteID() OptString {
	return s.SiteID
}

// GetTimezone returns the value of Timezone.
func (s *UpdateCommonAreaReq) GetTimezone() OptString {
	return s.Timezone
}

// SetAreaCode sets the value of AreaCode.
func (s *UpdateCommonAreaReq) SetAreaCode(val OptString) {
	s.AreaCode = val
}

// SetCostCenter sets the value of CostCenter.
func (s *UpdateCommonAreaReq) SetCostCenter(val OptString) {
	s.CostCenter = val
}

// SetCountryIsoCode sets the value of CountryIsoCode.
func (s *UpdateCommonAreaReq) SetCountryIsoCode(val OptString) {
	s.CountryIsoCode = val
}

// SetDepartment sets the value of Department.
func (s *UpdateCommonAreaReq) SetDepartment(val OptString) {
	s.Department = val
}

// SetDisplayName sets the value of DisplayName.
func (s *UpdateCommonAreaReq) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetEmergencyAddressID sets the value of EmergencyAddressID.
func (s *UpdateCommonAreaReq) SetEmergencyAddressID(val OptString) {
	s.EmergencyAddressID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *UpdateCommonAreaReq) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetOutboundCallerID sets the value of OutboundCallerID.
func (s *UpdateCommonAreaReq) SetOutboundCallerID(val OptString) {
	s.OutboundCallerID = val
}

// SetPolicy sets the value of Policy.
func (s *UpdateCommonAreaReq) SetPolicy(val OptUpdateCommonAreaReqPolicy) {
	s.Policy = val
}

// SetSiteID sets the value of SiteID.
func (s *UpdateCommonAreaReq) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetTimezone sets the value of Timezone.
func (s *UpdateCommonAreaReq) SetTimezone(val OptString) {
	s.Timezone = val
}

// A list of the common area's policies.
type UpdateCommonAreaReqPolicy struct {
	// Whether the current extension can make international calls outside of their calling plan.
	InternationalCalling OptUpdateCommonAreaReqPolicyInternationalCalling `json:"international_calling"`
}

// GetInternationalCalling returns the value of InternationalCalling.
func (s *UpdateCommonAreaReqPolicy) GetInternationalCalling() OptUpdateCommonAreaReqPolicyInternationalCalling {
	return s.InternationalCalling
}

// SetInternationalCalling sets the value of InternationalCalling.
func (s *UpdateCommonAreaReqPolicy) SetInternationalCalling(val OptUpdateCommonAreaReqPolicyInternationalCalling) {
	s.InternationalCalling = val
}

// Whether the current extension can make international calls outside of their calling plan.
type UpdateCommonAreaReqPolicyInternationalCalling struct {
	// If enabled, the common area can use international calling.
	Enable OptBool `json:"enable"`
	// If reset, the common area international calling setting resets to the default setting.
	Reset OptBool `json:"reset"`
}

// GetEnable returns the value of Enable.
func (s *UpdateCommonAreaReqPolicyInternationalCalling) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateCommonAreaReqPolicyInternationalCalling) GetReset() OptBool {
	return s.Reset
}

// SetEnable sets the value of Enable.
func (s *UpdateCommonAreaReqPolicyInternationalCalling) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateCommonAreaReqPolicyInternationalCalling) SetReset(val OptBool) {
	s.Reset = val
}

// UpdateCommonAreaSettingNoContent is response for UpdateCommonAreaSetting operation.
type UpdateCommonAreaSettingNoContent struct{}

type UpdateCommonAreaSettingReq struct {
	DeskPhones []UpdateCommonAreaSettingReqDeskPhonesItem `json:"desk_phones"`
}

// GetDeskPhones returns the value of DeskPhones.
func (s *UpdateCommonAreaSettingReq) GetDeskPhones() []UpdateCommonAreaSettingReqDeskPhonesItem {
	return s.DeskPhones
}

// SetDeskPhones sets the value of DeskPhones.
func (s *UpdateCommonAreaSettingReq) SetDeskPhones(val []UpdateCommonAreaSettingReqDeskPhonesItem) {
	s.DeskPhones = val
}

type UpdateCommonAreaSettingReqDeskPhonesItem struct {
	// Desk phone ID.
	ID         OptString                                             `json:"id"`
	HotDesking OptUpdateCommonAreaSettingReqDeskPhonesItemHotDesking `json:"hot_desking"`
}

// GetID returns the value of ID.
func (s *UpdateCommonAreaSettingReqDeskPhonesItem) GetID() OptString {
	return s.ID
}

// GetHotDesking returns the value of HotDesking.
func (s *UpdateCommonAreaSettingReqDeskPhonesItem) GetHotDesking() OptUpdateCommonAreaSettingReqDeskPhonesItemHotDesking {
	return s.HotDesking
}

// SetID sets the value of ID.
func (s *UpdateCommonAreaSettingReqDeskPhonesItem) SetID(val OptString) {
	s.ID = val
}

// SetHotDesking sets the value of HotDesking.
func (s *UpdateCommonAreaSettingReqDeskPhonesItem) SetHotDesking(val OptUpdateCommonAreaSettingReqDeskPhonesItemHotDesking) {
	s.HotDesking = val
}

type UpdateCommonAreaSettingReqDeskPhonesItemHotDesking struct {
	// Allow hot desking feature to the current device: letting the guest user sign in to the desk phone.
	// You can't use the desk phone until the guest user signs out.
	// Options include:
	// * `on`
	// * `off`.
	Status OptString `json:"status"`
}

// GetStatus returns the value of Status.
func (s *UpdateCommonAreaSettingReqDeskPhonesItemHotDesking) GetStatus() OptString {
	return s.Status
}

// SetStatus sets the value of Status.
func (s *UpdateCommonAreaSettingReqDeskPhonesItemHotDesking) SetStatus(val OptString) {
	s.Status = val
}

type UpdateEmergencyAddressOK struct {
	// The emergency address line 1.
	AddressLine1 OptString `json:"address_line1"`
	// The emergency address line 2.
	AddressLine2 OptString `json:"address_line2"`
	// The emergency address city.
	City OptString `json:"city"`
	// The emergency address country.
	Country OptString `json:"country"`
	// The emergency address ID.
	ID OptString `json:"id"`
	// Whether the emergency address is default or not.
	IsDefault OptBool `json:"is_default"`
	// The emergency address owner level:
	// * `0` - Account/Company-level emergency address.
	// * `1` - User/Personal-level emergency address.
	// * `2` - Unknown company/pending emergency address.
	Level OptInt `json:"level"`
	// The emergency address owner information for a user-level emergency address.
	Owner OptUpdateEmergencyAddressOKOwner `json:"owner"`
	// The information about the emergency address site.
	Site OptUpdateEmergencyAddressOKSite `json:"site"`
	// The emergency address state code.
	StateCode OptString `json:"state_code"`
	// The emergency address verification status:
	// * `1` &mdash; Verification not required.
	// * `2` &mdash; Unverified.
	// * `3` &mdash; Verification requested.
	// * `4` &mdash; Verified.
	// * `5` &mdash; Rejected.
	// * `6` &mdash; Verification failed.
	Status OptInt `json:"status"`
	// The emergency address zip code.
	Zip OptString `json:"zip"`
}

// GetAddressLine1 returns the value of AddressLine1.
func (s *UpdateEmergencyAddressOK) GetAddressLine1() OptString {
	return s.AddressLine1
}

// GetAddressLine2 returns the value of AddressLine2.
func (s *UpdateEmergencyAddressOK) GetAddressLine2() OptString {
	return s.AddressLine2
}

// GetCity returns the value of City.
func (s *UpdateEmergencyAddressOK) GetCity() OptString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *UpdateEmergencyAddressOK) GetCountry() OptString {
	return s.Country
}

// GetID returns the value of ID.
func (s *UpdateEmergencyAddressOK) GetID() OptString {
	return s.ID
}

// GetIsDefault returns the value of IsDefault.
func (s *UpdateEmergencyAddressOK) GetIsDefault() OptBool {
	return s.IsDefault
}

// GetLevel returns the value of Level.
func (s *UpdateEmergencyAddressOK) GetLevel() OptInt {
	return s.Level
}

// GetOwner returns the value of Owner.
func (s *UpdateEmergencyAddressOK) GetOwner() OptUpdateEmergencyAddressOKOwner {
	return s.Owner
}

// GetSite returns the value of Site.
func (s *UpdateEmergencyAddressOK) GetSite() OptUpdateEmergencyAddressOKSite {
	return s.Site
}

// GetStateCode returns the value of StateCode.
func (s *UpdateEmergencyAddressOK) GetStateCode() OptString {
	return s.StateCode
}

// GetStatus returns the value of Status.
func (s *UpdateEmergencyAddressOK) GetStatus() OptInt {
	return s.Status
}

// GetZip returns the value of Zip.
func (s *UpdateEmergencyAddressOK) GetZip() OptString {
	return s.Zip
}

// SetAddressLine1 sets the value of AddressLine1.
func (s *UpdateEmergencyAddressOK) SetAddressLine1(val OptString) {
	s.AddressLine1 = val
}

// SetAddressLine2 sets the value of AddressLine2.
func (s *UpdateEmergencyAddressOK) SetAddressLine2(val OptString) {
	s.AddressLine2 = val
}

// SetCity sets the value of City.
func (s *UpdateEmergencyAddressOK) SetCity(val OptString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *UpdateEmergencyAddressOK) SetCountry(val OptString) {
	s.Country = val
}

// SetID sets the value of ID.
func (s *UpdateEmergencyAddressOK) SetID(val OptString) {
	s.ID = val
}

// SetIsDefault sets the value of IsDefault.
func (s *UpdateEmergencyAddressOK) SetIsDefault(val OptBool) {
	s.IsDefault = val
}

// SetLevel sets the value of Level.
func (s *UpdateEmergencyAddressOK) SetLevel(val OptInt) {
	s.Level = val
}

// SetOwner sets the value of Owner.
func (s *UpdateEmergencyAddressOK) SetOwner(val OptUpdateEmergencyAddressOKOwner) {
	s.Owner = val
}

// SetSite sets the value of Site.
func (s *UpdateEmergencyAddressOK) SetSite(val OptUpdateEmergencyAddressOKSite) {
	s.Site = val
}

// SetStateCode sets the value of StateCode.
func (s *UpdateEmergencyAddressOK) SetStateCode(val OptString) {
	s.StateCode = val
}

// SetStatus sets the value of Status.
func (s *UpdateEmergencyAddressOK) SetStatus(val OptInt) {
	s.Status = val
}

// SetZip sets the value of Zip.
func (s *UpdateEmergencyAddressOK) SetZip(val OptString) {
	s.Zip = val
}

// The emergency address owner information for a user-level emergency address.
type UpdateEmergencyAddressOKOwner struct {
	// The extension number of the emergency address owner.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// The ID of the emergency address owner.
	ID OptString `json:"id"`
	// The name of the emergency address owner.
	Name OptString `json:"name"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *UpdateEmergencyAddressOKOwner) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *UpdateEmergencyAddressOKOwner) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *UpdateEmergencyAddressOKOwner) GetName() OptString {
	return s.Name
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *UpdateEmergencyAddressOKOwner) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *UpdateEmergencyAddressOKOwner) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UpdateEmergencyAddressOKOwner) SetName(val OptString) {
	s.Name = val
}

// The information about the emergency address site.
type UpdateEmergencyAddressOKSite struct {
	// The site's ID.
	ID OptString `json:"id"`
	// The site's name.
	Name OptString `json:"name"`
}

// GetID returns the value of ID.
func (s *UpdateEmergencyAddressOKSite) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *UpdateEmergencyAddressOKSite) GetName() OptString {
	return s.Name
}

// SetID sets the value of ID.
func (s *UpdateEmergencyAddressOKSite) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UpdateEmergencyAddressOKSite) SetName(val OptString) {
	s.Name = val
}

type UpdateEmergencyAddressReq struct {
	// The emergency address line 1.
	AddressLine1 OptString `json:"address_line1"`
	// The emergency address line 2.
	AddressLine2 OptString `json:"address_line2"`
	// The emergency address city.
	City OptString `json:"city"`
	// The emergency address country.
	Country OptString `json:"country"`
	// Whether the emergency address is default or not.
	IsDefault OptBool `json:"is_default"`
	// The emergency address state code.
	StateCode OptString `json:"state_code"`
	// The emergency address zip code.
	Zip OptString `json:"zip"`
}

// GetAddressLine1 returns the value of AddressLine1.
func (s *UpdateEmergencyAddressReq) GetAddressLine1() OptString {
	return s.AddressLine1
}

// GetAddressLine2 returns the value of AddressLine2.
func (s *UpdateEmergencyAddressReq) GetAddressLine2() OptString {
	return s.AddressLine2
}

// GetCity returns the value of City.
func (s *UpdateEmergencyAddressReq) GetCity() OptString {
	return s.City
}

// GetCountry returns the value of Country.
func (s *UpdateEmergencyAddressReq) GetCountry() OptString {
	return s.Country
}

// GetIsDefault returns the value of IsDefault.
func (s *UpdateEmergencyAddressReq) GetIsDefault() OptBool {
	return s.IsDefault
}

// GetStateCode returns the value of StateCode.
func (s *UpdateEmergencyAddressReq) GetStateCode() OptString {
	return s.StateCode
}

// GetZip returns the value of Zip.
func (s *UpdateEmergencyAddressReq) GetZip() OptString {
	return s.Zip
}

// SetAddressLine1 sets the value of AddressLine1.
func (s *UpdateEmergencyAddressReq) SetAddressLine1(val OptString) {
	s.AddressLine1 = val
}

// SetAddressLine2 sets the value of AddressLine2.
func (s *UpdateEmergencyAddressReq) SetAddressLine2(val OptString) {
	s.AddressLine2 = val
}

// SetCity sets the value of City.
func (s *UpdateEmergencyAddressReq) SetCity(val OptString) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *UpdateEmergencyAddressReq) SetCountry(val OptString) {
	s.Country = val
}

// SetIsDefault sets the value of IsDefault.
func (s *UpdateEmergencyAddressReq) SetIsDefault(val OptBool) {
	s.IsDefault = val
}

// SetStateCode sets the value of StateCode.
func (s *UpdateEmergencyAddressReq) SetStateCode(val OptString) {
	s.StateCode = val
}

// SetZip sets the value of Zip.
func (s *UpdateEmergencyAddressReq) SetZip(val OptString) {
	s.Zip = val
}

// UpdateExternalContactNoContent is response for UpdateExternalContact operation.
type UpdateExternalContactNoContent struct{}

type UpdateExternalContactReq struct {
	// The external contact's description.
	Description OptString `json:"description"`
	// The external contact's email address.
	Email OptString `json:"email"`
	// The external contact's extension number in the original phone system. Make certain that this
	// extension number is **not** duplicated with an existing extension number in the account.
	ExtensionNumber OptString `json:"extension_number"`
	// The customer-configured external contact ID. We recommend that you use a primary key from the
	// original phone system.
	// If you do **not** use this parameter, the API automatically generates an `externalContactId`.
	ID OptString `json:"id"`
	// The external contact's username or extension display name.
	Name OptString `json:"name"`
	// A comma-separated list of the external contact's phone numbers. This value **must** be in [E.
	// 164](https://en.wikipedia.org/wiki/E.164) format. If you do not provide an extension number, you
	// **must** provide this value.
	PhoneNumbers []string `json:"phone_numbers"`
	// The external contact's SIP group, to define the call routing path. This is for customers that use
	// SIP trunking.
	RoutingPath OptString `json:"routing_path"`
	// Whether to allow the automatic call recording.
	AutoCallRecorded OptBool `json:"auto_call_recorded"`
}

// GetDescription returns the value of Description.
func (s *UpdateExternalContactReq) GetDescription() OptString {
	return s.Description
}

// GetEmail returns the value of Email.
func (s *UpdateExternalContactReq) GetEmail() OptString {
	return s.Email
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *UpdateExternalContactReq) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetID returns the value of ID.
func (s *UpdateExternalContactReq) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *UpdateExternalContactReq) GetName() OptString {
	return s.Name
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *UpdateExternalContactReq) GetPhoneNumbers() []string {
	return s.PhoneNumbers
}

// GetRoutingPath returns the value of RoutingPath.
func (s *UpdateExternalContactReq) GetRoutingPath() OptString {
	return s.RoutingPath
}

// GetAutoCallRecorded returns the value of AutoCallRecorded.
func (s *UpdateExternalContactReq) GetAutoCallRecorded() OptBool {
	return s.AutoCallRecorded
}

// SetDescription sets the value of Description.
func (s *UpdateExternalContactReq) SetDescription(val OptString) {
	s.Description = val
}

// SetEmail sets the value of Email.
func (s *UpdateExternalContactReq) SetEmail(val OptString) {
	s.Email = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *UpdateExternalContactReq) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetID sets the value of ID.
func (s *UpdateExternalContactReq) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UpdateExternalContactReq) SetName(val OptString) {
	s.Name = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *UpdateExternalContactReq) SetPhoneNumbers(val []string) {
	s.PhoneNumbers = val
}

// SetRoutingPath sets the value of RoutingPath.
func (s *UpdateExternalContactReq) SetRoutingPath(val OptString) {
	s.RoutingPath = val
}

// SetAutoCallRecorded sets the value of AutoCallRecorded.
func (s *UpdateExternalContactReq) SetAutoCallRecorded(val OptBool) {
	s.AutoCallRecorded = val
}

// UpdateFirmwareRuleNoContent is response for UpdateFirmwareRule operation.
type UpdateFirmwareRuleNoContent struct{}

type UpdateFirmwareRuleReq struct {
	// Firmware version.
	Version string `json:"version"`
	// Device type.
	DeviceType string `json:"device_type"`
	// Device model name.
	DeviceModel string `json:"device_model"`
	// Restart type: `1` - Restart the devices immediately. `2` - Restart with the next resync or auto
	// pull.
	RestartType OptInt `json:"restart_type"`
}

// GetVersion returns the value of Version.
func (s *UpdateFirmwareRuleReq) GetVersion() string {
	return s.Version
}

// GetDeviceType returns the value of DeviceType.
func (s *UpdateFirmwareRuleReq) GetDeviceType() string {
	return s.DeviceType
}

// GetDeviceModel returns the value of DeviceModel.
func (s *UpdateFirmwareRuleReq) GetDeviceModel() string {
	return s.DeviceModel
}

// GetRestartType returns the value of RestartType.
func (s *UpdateFirmwareRuleReq) GetRestartType() OptInt {
	return s.RestartType
}

// SetVersion sets the value of Version.
func (s *UpdateFirmwareRuleReq) SetVersion(val string) {
	s.Version = val
}

// SetDeviceType sets the value of DeviceType.
func (s *UpdateFirmwareRuleReq) SetDeviceType(val string) {
	s.DeviceType = val
}

// SetDeviceModel sets the value of DeviceModel.
func (s *UpdateFirmwareRuleReq) SetDeviceModel(val string) {
	s.DeviceModel = val
}

// SetRestartType sets the value of RestartType.
func (s *UpdateFirmwareRuleReq) SetRestartType(val OptInt) {
	s.RestartType = val
}

// UpdateGCPNoContent is response for UpdateGCP operation.
type UpdateGCPNoContent struct{}

type UpdateGCPReq struct {
	// Name of the group.
	DisplayName OptString `json:"display_name"`
	// Short extension number.
	ExtensionNumber OptInt64 `json:"extension_number"`
	// Description for the group.
	Description OptString `json:"description"`
	// Determines after how much time (in seconds) the group should be notified.
	Delay OptInt `json:"delay"`
	// Cost center name.
	CostCenter OptString `json:"cost_center"`
	// Department name.
	Department OptString `json:"department"`
	// This field is not available when `enable=false`.
	PlayIncomingCallsSound OptUpdateGCPReqPlayIncomingCallsSound `json:"play_incoming_calls_sound"`
	// Whether the ringtone is on.
	DirectedCallPickup OptBool `json:"directed_call_pickup"`
}

// GetDisplayName returns the value of DisplayName.
func (s *UpdateGCPReq) GetDisplayName() OptString {
	return s.DisplayName
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *UpdateGCPReq) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetDescription returns the value of Description.
func (s *UpdateGCPReq) GetDescription() OptString {
	return s.Description
}

// GetDelay returns the value of Delay.
func (s *UpdateGCPReq) GetDelay() OptInt {
	return s.Delay
}

// GetCostCenter returns the value of CostCenter.
func (s *UpdateGCPReq) GetCostCenter() OptString {
	return s.CostCenter
}

// GetDepartment returns the value of Department.
func (s *UpdateGCPReq) GetDepartment() OptString {
	return s.Department
}

// GetPlayIncomingCallsSound returns the value of PlayIncomingCallsSound.
func (s *UpdateGCPReq) GetPlayIncomingCallsSound() OptUpdateGCPReqPlayIncomingCallsSound {
	return s.PlayIncomingCallsSound
}

// GetDirectedCallPickup returns the value of DirectedCallPickup.
func (s *UpdateGCPReq) GetDirectedCallPickup() OptBool {
	return s.DirectedCallPickup
}

// SetDisplayName sets the value of DisplayName.
func (s *UpdateGCPReq) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *UpdateGCPReq) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetDescription sets the value of Description.
func (s *UpdateGCPReq) SetDescription(val OptString) {
	s.Description = val
}

// SetDelay sets the value of Delay.
func (s *UpdateGCPReq) SetDelay(val OptInt) {
	s.Delay = val
}

// SetCostCenter sets the value of CostCenter.
func (s *UpdateGCPReq) SetCostCenter(val OptString) {
	s.CostCenter = val
}

// SetDepartment sets the value of Department.
func (s *UpdateGCPReq) SetDepartment(val OptString) {
	s.Department = val
}

// SetPlayIncomingCallsSound sets the value of PlayIncomingCallsSound.
func (s *UpdateGCPReq) SetPlayIncomingCallsSound(val OptUpdateGCPReqPlayIncomingCallsSound) {
	s.PlayIncomingCallsSound = val
}

// SetDirectedCallPickup sets the value of DirectedCallPickup.
func (s *UpdateGCPReq) SetDirectedCallPickup(val OptBool) {
	s.DirectedCallPickup = val
}

// This field is not available when `enable=false`.
type UpdateGCPReqPlayIncomingCallsSound struct {
	// Whether to play incoming call sound in Zoom clients.
	Enable OptBool `json:"enable"`
	// Incoming call sound in Zoom clients.
	RingTone OptString `json:"ring_tone"`
	// Duration (in seconds) between ring tones.
	Duration OptInt `json:"duration"`
}

// GetEnable returns the value of Enable.
func (s *UpdateGCPReqPlayIncomingCallsSound) GetEnable() OptBool {
	return s.Enable
}

// GetRingTone returns the value of RingTone.
func (s *UpdateGCPReqPlayIncomingCallsSound) GetRingTone() OptString {
	return s.RingTone
}

// GetDuration returns the value of Duration.
func (s *UpdateGCPReqPlayIncomingCallsSound) GetDuration() OptInt {
	return s.Duration
}

// SetEnable sets the value of Enable.
func (s *UpdateGCPReqPlayIncomingCallsSound) SetEnable(val OptBool) {
	s.Enable = val
}

// SetRingTone sets the value of RingTone.
func (s *UpdateGCPReqPlayIncomingCallsSound) SetRingTone(val OptString) {
	s.RingTone = val
}

// SetDuration sets the value of Duration.
func (s *UpdateGCPReqPlayIncomingCallsSound) SetDuration(val OptInt) {
	s.Duration = val
}

// UpdateLocationNoContent is response for UpdateLocation operation.
type UpdateLocationNoContent struct{}

type UpdateLocationReq struct {
	// A comma-separated list of the emergency service location's BSSIDs (Basic Service Set Identifiers).
	Bssid OptString `json:"bssid"`
	// The ELIN (Emergency Location Identification Number). This value must be a phone number ID or phone
	// number in [E.164](https://en.wikipedia.org/wiki/E.164) format.
	ElinPhoneNumberID OptString `json:"elin_phone_number_id"`
	// The emergency location's address ID.
	EmergencyAddressID OptString `json:"emergency_address_id"`
	// The emergency location's name.
	Name            OptString                              `json:"name"`
	NetworkSwitches []UpdateLocationReqNetworkSwitchesItem `json:"network_switches"`
	// A comma-separated list of the emergency service location's subnet or private IP addresses. This
	// field is required if `minimum_match_criteria` is true.
	PrivateIP OptString `json:"private_ip"`
	// A comma-separated list of the emergency service location's public IP addresses. This parameter is
	// **required** for top locations.
	PublicIP OptString `json:"public_ip"`
	// The SIP group ID to assign to the emergency service location. This value is not required for
	// non-top locations.
	SipGroupID OptString `json:"sip_group_id"`
	// If true, it requires a user's location match on both public and private IP address, or BSSID, or
	// network switch; detecting only a public IP address is not enough to detect the location.
	MinimumMatchCriteria OptBool `json:"minimum_match_criteria"`
}

// GetBssid returns the value of Bssid.
func (s *UpdateLocationReq) GetBssid() OptString {
	return s.Bssid
}

// GetElinPhoneNumberID returns the value of ElinPhoneNumberID.
func (s *UpdateLocationReq) GetElinPhoneNumberID() OptString {
	return s.ElinPhoneNumberID
}

// GetEmergencyAddressID returns the value of EmergencyAddressID.
func (s *UpdateLocationReq) GetEmergencyAddressID() OptString {
	return s.EmergencyAddressID
}

// GetName returns the value of Name.
func (s *UpdateLocationReq) GetName() OptString {
	return s.Name
}

// GetNetworkSwitches returns the value of NetworkSwitches.
func (s *UpdateLocationReq) GetNetworkSwitches() []UpdateLocationReqNetworkSwitchesItem {
	return s.NetworkSwitches
}

// GetPrivateIP returns the value of PrivateIP.
func (s *UpdateLocationReq) GetPrivateIP() OptString {
	return s.PrivateIP
}

// GetPublicIP returns the value of PublicIP.
func (s *UpdateLocationReq) GetPublicIP() OptString {
	return s.PublicIP
}

// GetSipGroupID returns the value of SipGroupID.
func (s *UpdateLocationReq) GetSipGroupID() OptString {
	return s.SipGroupID
}

// GetMinimumMatchCriteria returns the value of MinimumMatchCriteria.
func (s *UpdateLocationReq) GetMinimumMatchCriteria() OptBool {
	return s.MinimumMatchCriteria
}

// SetBssid sets the value of Bssid.
func (s *UpdateLocationReq) SetBssid(val OptString) {
	s.Bssid = val
}

// SetElinPhoneNumberID sets the value of ElinPhoneNumberID.
func (s *UpdateLocationReq) SetElinPhoneNumberID(val OptString) {
	s.ElinPhoneNumberID = val
}

// SetEmergencyAddressID sets the value of EmergencyAddressID.
func (s *UpdateLocationReq) SetEmergencyAddressID(val OptString) {
	s.EmergencyAddressID = val
}

// SetName sets the value of Name.
func (s *UpdateLocationReq) SetName(val OptString) {
	s.Name = val
}

// SetNetworkSwitches sets the value of NetworkSwitches.
func (s *UpdateLocationReq) SetNetworkSwitches(val []UpdateLocationReqNetworkSwitchesItem) {
	s.NetworkSwitches = val
}

// SetPrivateIP sets the value of PrivateIP.
func (s *UpdateLocationReq) SetPrivateIP(val OptString) {
	s.PrivateIP = val
}

// SetPublicIP sets the value of PublicIP.
func (s *UpdateLocationReq) SetPublicIP(val OptString) {
	s.PublicIP = val
}

// SetSipGroupID sets the value of SipGroupID.
func (s *UpdateLocationReq) SetSipGroupID(val OptString) {
	s.SipGroupID = val
}

// SetMinimumMatchCriteria sets the value of MinimumMatchCriteria.
func (s *UpdateLocationReq) SetMinimumMatchCriteria(val OptBool) {
	s.MinimumMatchCriteria = val
}

type UpdateLocationReqNetworkSwitchesItem struct {
	// The emergency location's assigned MAC address.
	MACAddress OptString `json:"mac_address"`
	// The emergency location's port label. You **cannot** pass this parameter with the `port_prefix` and
	// `port_range` parameter.
	Port OptString `json:"port"`
	// The emergency location's port prefix. The prefix value **cannot** end with a digit.
	// This parameter passes with the `port_range_from` and `port_range_to` parameters.
	PortPrefix OptString `json:"port_prefix"`
	// The emergency location's port starting range number. This can be a non-negative integer value.
	// This value **must** be less than or equal to the `port_range_to` value.
	PortRangeFrom OptString `json:"port_range_from"`
	// The emergency location's port ending range number. This can be a non-negative integer value.
	// This value **cannot** be less than the `port_range_from` value.
	PortRangeTo OptString `json:"port_range_to"`
}

// GetMACAddress returns the value of MACAddress.
func (s *UpdateLocationReqNetworkSwitchesItem) GetMACAddress() OptString {
	return s.MACAddress
}

// GetPort returns the value of Port.
func (s *UpdateLocationReqNetworkSwitchesItem) GetPort() OptString {
	return s.Port
}

// GetPortPrefix returns the value of PortPrefix.
func (s *UpdateLocationReqNetworkSwitchesItem) GetPortPrefix() OptString {
	return s.PortPrefix
}

// GetPortRangeFrom returns the value of PortRangeFrom.
func (s *UpdateLocationReqNetworkSwitchesItem) GetPortRangeFrom() OptString {
	return s.PortRangeFrom
}

// GetPortRangeTo returns the value of PortRangeTo.
func (s *UpdateLocationReqNetworkSwitchesItem) GetPortRangeTo() OptString {
	return s.PortRangeTo
}

// SetMACAddress sets the value of MACAddress.
func (s *UpdateLocationReqNetworkSwitchesItem) SetMACAddress(val OptString) {
	s.MACAddress = val
}

// SetPort sets the value of Port.
func (s *UpdateLocationReqNetworkSwitchesItem) SetPort(val OptString) {
	s.Port = val
}

// SetPortPrefix sets the value of PortPrefix.
func (s *UpdateLocationReqNetworkSwitchesItem) SetPortPrefix(val OptString) {
	s.PortPrefix = val
}

// SetPortRangeFrom sets the value of PortRangeFrom.
func (s *UpdateLocationReqNetworkSwitchesItem) SetPortRangeFrom(val OptString) {
	s.PortRangeFrom = val
}

// SetPortRangeTo sets the value of PortRangeTo.
func (s *UpdateLocationReqNetworkSwitchesItem) SetPortRangeTo(val OptString) {
	s.PortRangeTo = val
}

// UpdateMonitoringGroupNoContent is response for UpdateMonitoringGroup operation.
type UpdateMonitoringGroupNoContent struct{}

type UpdateMonitoringGroupReq struct {
	// Set of monitoring group's privileges.
	MonitoringPrivileges []string `json:"monitoring_privileges"`
	// Monitoring group's name.
	Name OptString `json:"name"`
	// Whether Play a disclaimer prompt to the call participants.
	Prompt OptBool `json:"prompt"`
	// Unique identifier of the monitoring group's site.
	SiteID OptString `json:"site_id"`
}

// GetMonitoringPrivileges returns the value of MonitoringPrivileges.
func (s *UpdateMonitoringGroupReq) GetMonitoringPrivileges() []string {
	return s.MonitoringPrivileges
}

// GetName returns the value of Name.
func (s *UpdateMonitoringGroupReq) GetName() OptString {
	return s.Name
}

// GetPrompt returns the value of Prompt.
func (s *UpdateMonitoringGroupReq) GetPrompt() OptBool {
	return s.Prompt
}

// GetSiteID returns the value of SiteID.
func (s *UpdateMonitoringGroupReq) GetSiteID() OptString {
	return s.SiteID
}

// SetMonitoringPrivileges sets the value of MonitoringPrivileges.
func (s *UpdateMonitoringGroupReq) SetMonitoringPrivileges(val []string) {
	s.MonitoringPrivileges = val
}

// SetName sets the value of Name.
func (s *UpdateMonitoringGroupReq) SetName(val OptString) {
	s.Name = val
}

// SetPrompt sets the value of Prompt.
func (s *UpdateMonitoringGroupReq) SetPrompt(val OptBool) {
	s.Prompt = val
}

// SetSiteID sets the value of SiteID.
func (s *UpdateMonitoringGroupReq) SetSiteID(val OptString) {
	s.SiteID = val
}

type UpdatePeeringPhoneNumbersOK struct {
	// The information about unprocessed phone numbers.
	UnprocessedNumbers []UpdatePeeringPhoneNumbersOKUnprocessedNumbersItem `json:"unprocessed_numbers"`
}

// GetUnprocessedNumbers returns the value of UnprocessedNumbers.
func (s *UpdatePeeringPhoneNumbersOK) GetUnprocessedNumbers() []UpdatePeeringPhoneNumbersOKUnprocessedNumbersItem {
	return s.UnprocessedNumbers
}

// SetUnprocessedNumbers sets the value of UnprocessedNumbers.
func (s *UpdatePeeringPhoneNumbersOK) SetUnprocessedNumbers(val []UpdatePeeringPhoneNumbersOKUnprocessedNumbersItem) {
	s.UnprocessedNumbers = val
}

type UpdatePeeringPhoneNumbersOKUnprocessedNumbersItem struct {
	// The reason for processing failures.
	FailureReason OptString `json:"failure_reason"`
	// The phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
	PhoneNumber OptString `json:"phone_number"`
}

// GetFailureReason returns the value of FailureReason.
func (s *UpdatePeeringPhoneNumbersOKUnprocessedNumbersItem) GetFailureReason() OptString {
	return s.FailureReason
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *UpdatePeeringPhoneNumbersOKUnprocessedNumbersItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// SetFailureReason sets the value of FailureReason.
func (s *UpdatePeeringPhoneNumbersOKUnprocessedNumbersItem) SetFailureReason(val OptString) {
	s.FailureReason = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *UpdatePeeringPhoneNumbersOKUnprocessedNumbersItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

type UpdatePeeringPhoneNumbersReq struct {
	// The carrier's code. The `clientId` maps to a carrier peered with Zoom.
	// This parameter is required if you do **not** use an OAuth token or the OAuth token does not
	// contain the `clientId`.
	CarrierCode OptInt `json:"carrier_code"`
	// Maximum of 200.
	PhoneNumbers []UpdatePeeringPhoneNumbersReqPhoneNumbersItem `json:"phone_numbers"`
}

// GetCarrierCode returns the value of CarrierCode.
func (s *UpdatePeeringPhoneNumbersReq) GetCarrierCode() OptInt {
	return s.CarrierCode
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *UpdatePeeringPhoneNumbersReq) GetPhoneNumbers() []UpdatePeeringPhoneNumbersReqPhoneNumbersItem {
	return s.PhoneNumbers
}

// SetCarrierCode sets the value of CarrierCode.
func (s *UpdatePeeringPhoneNumbersReq) SetCarrierCode(val OptInt) {
	s.CarrierCode = val
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *UpdatePeeringPhoneNumbersReq) SetPhoneNumbers(val []UpdatePeeringPhoneNumbersReqPhoneNumbersItem) {
	s.PhoneNumbers = val
}

type UpdatePeeringPhoneNumbersReqPhoneNumbersItem struct {
	// The carrier's billing reference ID. Maximum of 32 characters.
	BillingReferenceID OptString `json:"billing_reference_id"`
	// The phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
	PhoneNumber string `json:"phone_number"`
	// The carrier's service information. Maximum of 255 characters.
	ServiceInfo OptString `json:"service_info"`
	// The SIP trunk for the number.
	SipTrunkName OptString `json:"sip_trunk_name"`
	// The phone number's status:
	// * `0` &mdash; Inactive.
	// * `1` &mdash; Active.
	Status OptInt `json:"status"`
}

// GetBillingReferenceID returns the value of BillingReferenceID.
func (s *UpdatePeeringPhoneNumbersReqPhoneNumbersItem) GetBillingReferenceID() OptString {
	return s.BillingReferenceID
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *UpdatePeeringPhoneNumbersReqPhoneNumbersItem) GetPhoneNumber() string {
	return s.PhoneNumber
}

// GetServiceInfo returns the value of ServiceInfo.
func (s *UpdatePeeringPhoneNumbersReqPhoneNumbersItem) GetServiceInfo() OptString {
	return s.ServiceInfo
}

// GetSipTrunkName returns the value of SipTrunkName.
func (s *UpdatePeeringPhoneNumbersReqPhoneNumbersItem) GetSipTrunkName() OptString {
	return s.SipTrunkName
}

// GetStatus returns the value of Status.
func (s *UpdatePeeringPhoneNumbersReqPhoneNumbersItem) GetStatus() OptInt {
	return s.Status
}

// SetBillingReferenceID sets the value of BillingReferenceID.
func (s *UpdatePeeringPhoneNumbersReqPhoneNumbersItem) SetBillingReferenceID(val OptString) {
	s.BillingReferenceID = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *UpdatePeeringPhoneNumbersReqPhoneNumbersItem) SetPhoneNumber(val string) {
	s.PhoneNumber = val
}

// SetServiceInfo sets the value of ServiceInfo.
func (s *UpdatePeeringPhoneNumbersReqPhoneNumbersItem) SetServiceInfo(val OptString) {
	s.ServiceInfo = val
}

// SetSipTrunkName sets the value of SipTrunkName.
func (s *UpdatePeeringPhoneNumbersReqPhoneNumbersItem) SetSipTrunkName(val OptString) {
	s.SipTrunkName = val
}

// SetStatus sets the value of Status.
func (s *UpdatePeeringPhoneNumbersReqPhoneNumbersItem) SetStatus(val OptInt) {
	s.Status = val
}

// UpdatePhoneNumberDetailsNoContent is response for UpdatePhoneNumberDetails operation.
type UpdatePhoneNumberDetailsNoContent struct{}

type UpdatePhoneNumberDetailsReq struct {
	// Phone number capability. Values: `outgoing` or `incoming`. Add one or both.
	Capability []string `json:"capability"`
	// Phone number display name.
	DisplayName OptString `json:"display_name"`
	// Confirm byoc phone number's emergency address status. 2-confirmed.
	EmergencyAddressStatus OptInt `json:"emergency_address_status"`
	// Sip group id, only used for byoc phone number update.
	SipGroupID OptString `json:"sip_group_id"`
}

// GetCapability returns the value of Capability.
func (s *UpdatePhoneNumberDetailsReq) GetCapability() []string {
	return s.Capability
}

// GetDisplayName returns the value of DisplayName.
func (s *UpdatePhoneNumberDetailsReq) GetDisplayName() OptString {
	return s.DisplayName
}

// GetEmergencyAddressStatus returns the value of EmergencyAddressStatus.
func (s *UpdatePhoneNumberDetailsReq) GetEmergencyAddressStatus() OptInt {
	return s.EmergencyAddressStatus
}

// GetSipGroupID returns the value of SipGroupID.
func (s *UpdatePhoneNumberDetailsReq) GetSipGroupID() OptString {
	return s.SipGroupID
}

// SetCapability sets the value of Capability.
func (s *UpdatePhoneNumberDetailsReq) SetCapability(val []string) {
	s.Capability = val
}

// SetDisplayName sets the value of DisplayName.
func (s *UpdatePhoneNumberDetailsReq) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetEmergencyAddressStatus sets the value of EmergencyAddressStatus.
func (s *UpdatePhoneNumberDetailsReq) SetEmergencyAddressStatus(val OptInt) {
	s.EmergencyAddressStatus = val
}

// SetSipGroupID sets the value of SipGroupID.
func (s *UpdatePhoneNumberDetailsReq) SetSipGroupID(val OptString) {
	s.SipGroupID = val
}

// UpdatePhoneRoleNoContent is response for UpdatePhoneRole operation.
type UpdatePhoneRoleNoContent struct{}

type UpdatePhoneRoleReq struct {
	// User's [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control)
	// name. Name length can be up to 128 characters.
	Name OptString `json:"name"`
	// Role description. Description length can be up to 255 characters.
	Description OptString `json:"description"`
}

// GetName returns the value of Name.
func (s *UpdatePhoneRoleReq) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *UpdatePhoneRoleReq) GetDescription() OptString {
	return s.Description
}

// SetName sets the value of Name.
func (s *UpdatePhoneRoleReq) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *UpdatePhoneRoleReq) SetDescription(val OptString) {
	s.Description = val
}

// UpdatePhoneSettingsNoContent is response for UpdatePhoneSettings operation.
type UpdatePhoneSettingsNoContent struct{}

type UpdatePhoneSettingsReq struct {
	// Only [master account owners](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
	// can use this MA API to enable BYOC(Bring your own carrier) option for a sub account.
	// **Scope**:
	// * `phone:master`
	// **Prerequisites**:
	// * Business or enterprise Account.
	Byoc                   OptUpdatePhoneSettingsReqByoc                   `json:"byoc"`
	MultipleSites          OptUpdatePhoneSettingsReqMultipleSites          `json:"multiple_sites"`
	ShowDeviceIPForCallLog OptUpdatePhoneSettingsReqShowDeviceIPForCallLog `json:"show_device_ip_for_call_log"`
	// The billing account setting.
	BillingAccount OptUpdatePhoneSettingsReqBillingAccount `json:"billing_account"`
}

// GetByoc returns the value of Byoc.
func (s *UpdatePhoneSettingsReq) GetByoc() OptUpdatePhoneSettingsReqByoc {
	return s.Byoc
}

// GetMultipleSites returns the value of MultipleSites.
func (s *UpdatePhoneSettingsReq) GetMultipleSites() OptUpdatePhoneSettingsReqMultipleSites {
	return s.MultipleSites
}

// GetShowDeviceIPForCallLog returns the value of ShowDeviceIPForCallLog.
func (s *UpdatePhoneSettingsReq) GetShowDeviceIPForCallLog() OptUpdatePhoneSettingsReqShowDeviceIPForCallLog {
	return s.ShowDeviceIPForCallLog
}

// GetBillingAccount returns the value of BillingAccount.
func (s *UpdatePhoneSettingsReq) GetBillingAccount() OptUpdatePhoneSettingsReqBillingAccount {
	return s.BillingAccount
}

// SetByoc sets the value of Byoc.
func (s *UpdatePhoneSettingsReq) SetByoc(val OptUpdatePhoneSettingsReqByoc) {
	s.Byoc = val
}

// SetMultipleSites sets the value of MultipleSites.
func (s *UpdatePhoneSettingsReq) SetMultipleSites(val OptUpdatePhoneSettingsReqMultipleSites) {
	s.MultipleSites = val
}

// SetShowDeviceIPForCallLog sets the value of ShowDeviceIPForCallLog.
func (s *UpdatePhoneSettingsReq) SetShowDeviceIPForCallLog(val OptUpdatePhoneSettingsReqShowDeviceIPForCallLog) {
	s.ShowDeviceIPForCallLog = val
}

// SetBillingAccount sets the value of BillingAccount.
func (s *UpdatePhoneSettingsReq) SetBillingAccount(val OptUpdatePhoneSettingsReqBillingAccount) {
	s.BillingAccount = val
}

// The billing account setting.
type UpdatePhoneSettingsReqBillingAccount struct {
	// The billing account ID.
	ID OptString `json:"id"`
}

// GetID returns the value of ID.
func (s *UpdatePhoneSettingsReqBillingAccount) GetID() OptString {
	return s.ID
}

// SetID sets the value of ID.
func (s *UpdatePhoneSettingsReqBillingAccount) SetID(val OptString) {
	s.ID = val
}

// Only [master account owners](https://marketplace.zoom.us/docs/api-reference/master-account-apis)
// can use this MA API to enable BYOC(Bring your own carrier) option for a sub account.
// **Scope**:
// * `phone:master`
// **Prerequisites**:
// * Business or enterprise Account.
type UpdatePhoneSettingsReqByoc struct {
	// Setting the value of this field to `true` allows a sub account to add BYOC numbers from the Zoom
	// web admin portal.
	Enable OptBool `json:"enable"`
}

// GetEnable returns the value of Enable.
func (s *UpdatePhoneSettingsReqByoc) GetEnable() OptBool {
	return s.Enable
}

// SetEnable sets the value of Enable.
func (s *UpdatePhoneSettingsReqByoc) SetEnable(val OptBool) {
	s.Enable = val
}

type UpdatePhoneSettingsReqMultipleSites struct {
	// When the value is set to `true` for [site management](https://support.zoom.
	// us/hc/en-us/articles/360020809672), your current site defaults to your Main Site.
	Enabled  OptBool                                        `json:"enabled"`
	SiteCode OptUpdatePhoneSettingsReqMultipleSitesSiteCode `json:"site_code"`
}

// GetEnabled returns the value of Enabled.
func (s *UpdatePhoneSettingsReqMultipleSites) GetEnabled() OptBool {
	return s.Enabled
}

// GetSiteCode returns the value of SiteCode.
func (s *UpdatePhoneSettingsReqMultipleSites) GetSiteCode() OptUpdatePhoneSettingsReqMultipleSitesSiteCode {
	return s.SiteCode
}

// SetEnabled sets the value of Enabled.
func (s *UpdatePhoneSettingsReqMultipleSites) SetEnabled(val OptBool) {
	s.Enabled = val
}

// SetSiteCode sets the value of SiteCode.
func (s *UpdatePhoneSettingsReqMultipleSites) SetSiteCode(val OptUpdatePhoneSettingsReqMultipleSitesSiteCode) {
	s.SiteCode = val
}

type UpdatePhoneSettingsReqMultipleSitesSiteCode struct {
	// You must enable multiple sites before you can set this value to `true`.
	Enable OptBool `json:"enable"`
	// This field must be configured before you can set the site code to `true`. The range is [2, 10] if
	// the account's `15-Digit Max Length Extensions` feature is enabled; if not, [2, 5].
	ShortExtensionLength OptInt `json:"short_extension_length"`
}

// GetEnable returns the value of Enable.
func (s *UpdatePhoneSettingsReqMultipleSitesSiteCode) GetEnable() OptBool {
	return s.Enable
}

// GetShortExtensionLength returns the value of ShortExtensionLength.
func (s *UpdatePhoneSettingsReqMultipleSitesSiteCode) GetShortExtensionLength() OptInt {
	return s.ShortExtensionLength
}

// SetEnable sets the value of Enable.
func (s *UpdatePhoneSettingsReqMultipleSitesSiteCode) SetEnable(val OptBool) {
	s.Enable = val
}

// SetShortExtensionLength sets the value of ShortExtensionLength.
func (s *UpdatePhoneSettingsReqMultipleSitesSiteCode) SetShortExtensionLength(val OptInt) {
	s.ShortExtensionLength = val
}

type UpdatePhoneSettingsReqShowDeviceIPForCallLog struct {
	// This field must be set to `true` to allow `/phone/call_logs` and `/phone/call_logs/{callLogId}`
	// APIs to show `device_public_ip` and `device_private_ip` in the response.
	Enable OptBool `json:"enable"`
}

// GetEnable returns the value of Enable.
func (s *UpdatePhoneSettingsReqShowDeviceIPForCallLog) GetEnable() OptBool {
	return s.Enable
}

// SetEnable sets the value of Enable.
func (s *UpdatePhoneSettingsReqShowDeviceIPForCallLog) SetEnable(val OptBool) {
	s.Enable = val
}

// UpdatePolicyNoContent is response for UpdatePolicy operation.
type UpdatePolicyNoContent struct{}

type UpdatePolicyReq struct {
	// The setting for voicemail access members.
	VoicemailAccessMember OptUpdatePolicyReqVoicemailAccessMember `json:"voicemail_access_member"`
}

// GetVoicemailAccessMember returns the value of VoicemailAccessMember.
func (s *UpdatePolicyReq) GetVoicemailAccessMember() OptUpdatePolicyReqVoicemailAccessMember {
	return s.VoicemailAccessMember
}

// SetVoicemailAccessMember sets the value of VoicemailAccessMember.
func (s *UpdatePolicyReq) SetVoicemailAccessMember(val OptUpdatePolicyReqVoicemailAccessMember) {
	s.VoicemailAccessMember = val
}

// The setting for voicemail access members.
type UpdatePolicyReqVoicemailAccessMember struct {
	// The Zoom user ID whose voicemail permissions need to be updated.
	AccessUserID OptString `json:"access_user_id"`
	// This field specifies whether the user has delete permissions. The default is **false**.
	Delete OptBool `json:"delete"`
	// This field specifies whether the user has download permissions. The default is **false**.
	Download OptBool `json:"download"`
	// This field is an unique identifier of the shared voicemail that the user can access.
	SharedID OptString `json:"shared_id"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *UpdatePolicyReqVoicemailAccessMember) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetDelete returns the value of Delete.
func (s *UpdatePolicyReqVoicemailAccessMember) GetDelete() OptBool {
	return s.Delete
}

// GetDownload returns the value of Download.
func (s *UpdatePolicyReqVoicemailAccessMember) GetDownload() OptBool {
	return s.Download
}

// GetSharedID returns the value of SharedID.
func (s *UpdatePolicyReqVoicemailAccessMember) GetSharedID() OptString {
	return s.SharedID
}

// SetAccessUserID sets the value of AccessUserID.
func (s *UpdatePolicyReqVoicemailAccessMember) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetDelete sets the value of Delete.
func (s *UpdatePolicyReqVoicemailAccessMember) SetDelete(val OptBool) {
	s.Delete = val
}

// SetDownload sets the value of Download.
func (s *UpdatePolicyReqVoicemailAccessMember) SetDownload(val OptBool) {
	s.Download = val
}

// SetSharedID sets the value of SharedID.
func (s *UpdatePolicyReqVoicemailAccessMember) SetSharedID(val OptString) {
	s.SharedID = val
}

// UpdateProvisionTemplateNoContent is response for UpdateProvisionTemplate operation.
type UpdateProvisionTemplateNoContent struct{}

type UpdateProvisionTemplateReq struct {
	// The name of the template.
	Name OptString `json:"name"`
	// The provision template description.
	Description OptString `json:"description"`
	// The [provision template content](https://support.zoom.
	// us/hc/en-us/articles/360035817952#h_6ef0cbf5-8d10-4237-91f0-e70f7b73a590).
	Content OptString `json:"content"`
}

// GetName returns the value of Name.
func (s *UpdateProvisionTemplateReq) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *UpdateProvisionTemplateReq) GetDescription() OptString {
	return s.Description
}

// GetContent returns the value of Content.
func (s *UpdateProvisionTemplateReq) GetContent() OptString {
	return s.Content
}

// SetName sets the value of Name.
func (s *UpdateProvisionTemplateReq) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *UpdateProvisionTemplateReq) SetDescription(val OptString) {
	s.Description = val
}

// SetContent sets the value of Content.
func (s *UpdateProvisionTemplateReq) SetContent(val OptString) {
	s.Content = val
}

// UpdateProvisionTemplateToDeviceNoContent is response for UpdateProvisionTemplateToDevice operation.
type UpdateProvisionTemplateToDeviceNoContent struct{}

type UpdateProvisionTemplateToDeviceReq struct {
	// The provision template ID. The provision template will be removed when this field is left empty.
	ProvisionTemplateID OptString `json:"provision_template_id"`
}

// GetProvisionTemplateID returns the value of ProvisionTemplateID.
func (s *UpdateProvisionTemplateToDeviceReq) GetProvisionTemplateID() OptString {
	return s.ProvisionTemplateID
}

// SetProvisionTemplateID sets the value of ProvisionTemplateID.
func (s *UpdateProvisionTemplateToDeviceReq) SetProvisionTemplateID(val OptString) {
	s.ProvisionTemplateID = val
}

// UpdateRecordingStatusNoContent is response for UpdateRecordingStatus operation.
type UpdateRecordingStatusNoContent struct{}

type UpdateRecordingStatusReq struct {
	// This field corresponds to actions that you can use to update recording status. Example: recovering
	// recordings from trash.
	// Allowed values: `recover`.
	Action OptString `json:"action"`
}

// GetAction returns the value of Action.
func (s *UpdateRecordingStatusReq) GetAction() OptString {
	return s.Action
}

// SetAction sets the value of Action.
func (s *UpdateRecordingStatusReq) SetAction(val OptString) {
	s.Action = val
}

// UpdateRoutingRuleNoContent is response for UpdateRoutingRule operation.
type UpdateRoutingRuleNoContent struct{}

type UpdateRoutingRuleReq struct {
	// The routing rule name.
	Name OptString `json:"name"`
	// The Perl-compatible number_pattern expression.
	NumberPattern OptString `json:"number_pattern"`
	// TherRouting rule order to be applied: '1' being the highest. Order inserting occurs when this
	// field is filled. It will automatically readjust the order of rules between the target order and
	// the current order.
	Order OptInt `json:"order"`
	// The unique identifier of the SIP Group: must not be null when 'type' = 'sip_group'.
	SipGroupID OptString `json:"sip_group_id"`
	// Optional replacement pattern: must be in E.164 format. `nullable`.
	Translation OptString `json:"translation"`
	// The routing path type.
	Type OptString `json:"type"`
}

// GetName returns the value of Name.
func (s *UpdateRoutingRuleReq) GetName() OptString {
	return s.Name
}

// GetNumberPattern returns the value of NumberPattern.
func (s *UpdateRoutingRuleReq) GetNumberPattern() OptString {
	return s.NumberPattern
}

// GetOrder returns the value of Order.
func (s *UpdateRoutingRuleReq) GetOrder() OptInt {
	return s.Order
}

// GetSipGroupID returns the value of SipGroupID.
func (s *UpdateRoutingRuleReq) GetSipGroupID() OptString {
	return s.SipGroupID
}

// GetTranslation returns the value of Translation.
func (s *UpdateRoutingRuleReq) GetTranslation() OptString {
	return s.Translation
}

// GetType returns the value of Type.
func (s *UpdateRoutingRuleReq) GetType() OptString {
	return s.Type
}

// SetName sets the value of Name.
func (s *UpdateRoutingRuleReq) SetName(val OptString) {
	s.Name = val
}

// SetNumberPattern sets the value of NumberPattern.
func (s *UpdateRoutingRuleReq) SetNumberPattern(val OptString) {
	s.NumberPattern = val
}

// SetOrder sets the value of Order.
func (s *UpdateRoutingRuleReq) SetOrder(val OptInt) {
	s.Order = val
}

// SetSipGroupID sets the value of SipGroupID.
func (s *UpdateRoutingRuleReq) SetSipGroupID(val OptString) {
	s.SipGroupID = val
}

// SetTranslation sets the value of Translation.
func (s *UpdateRoutingRuleReq) SetTranslation(val OptString) {
	s.Translation = val
}

// SetType sets the value of Type.
func (s *UpdateRoutingRuleReq) SetType(val OptString) {
	s.Type = val
}

// UpdateSLGPolicySubSettingNoContent is response for UpdateSLGPolicySubSetting operation.
type UpdateSLGPolicySubSettingNoContent struct{}

type UpdateSLGPolicySubSettingReq struct {
	// The shared voicemail access member list.
	VoicemailAccessMembers []UpdateSLGPolicySubSettingReqVoicemailAccessMembersItem `json:"voicemail_access_members"`
}

// GetVoicemailAccessMembers returns the value of VoicemailAccessMembers.
func (s *UpdateSLGPolicySubSettingReq) GetVoicemailAccessMembers() []UpdateSLGPolicySubSettingReqVoicemailAccessMembersItem {
	return s.VoicemailAccessMembers
}

// SetVoicemailAccessMembers sets the value of VoicemailAccessMembers.
func (s *UpdateSLGPolicySubSettingReq) SetVoicemailAccessMembers(val []UpdateSLGPolicySubSettingReqVoicemailAccessMembersItem) {
	s.VoicemailAccessMembers = val
}

// Merged schema.
type UpdateSLGPolicySubSettingReqVoicemailAccessMembersItem struct {
	// The Zoom user ID, email, or common area ID of which to share or update the access permissions.
	AccessUserID OptString `json:"access_user_id"`
	// Whether the member has download permissions. Not applicable to `commonArea`. The default is
	// **false**.
	AllowDownload OptBool `json:"allow_download"`
	// Whether the member has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// Whether the member has permission to share. The default is **false**.
	AllowSharing OptBool `json:"allow_sharing"`
	// The shared voicemail ID that the member can access.
	SharedID OptString `json:"shared_id"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *UpdateSLGPolicySubSettingReqVoicemailAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDownload returns the value of AllowDownload.
func (s *UpdateSLGPolicySubSettingReqVoicemailAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowDelete returns the value of AllowDelete.
func (s *UpdateSLGPolicySubSettingReqVoicemailAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowSharing returns the value of AllowSharing.
func (s *UpdateSLGPolicySubSettingReqVoicemailAccessMembersItem) GetAllowSharing() OptBool {
	return s.AllowSharing
}

// GetSharedID returns the value of SharedID.
func (s *UpdateSLGPolicySubSettingReqVoicemailAccessMembersItem) GetSharedID() OptString {
	return s.SharedID
}

// SetAccessUserID sets the value of AccessUserID.
func (s *UpdateSLGPolicySubSettingReqVoicemailAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *UpdateSLGPolicySubSettingReqVoicemailAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *UpdateSLGPolicySubSettingReqVoicemailAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowSharing sets the value of AllowSharing.
func (s *UpdateSLGPolicySubSettingReqVoicemailAccessMembersItem) SetAllowSharing(val OptBool) {
	s.AllowSharing = val
}

// SetSharedID sets the value of SharedID.
func (s *UpdateSLGPolicySubSettingReqVoicemailAccessMembersItem) SetSharedID(val OptString) {
	s.SharedID = val
}

// UpdateSettingTemplateNoContent is response for UpdateSettingTemplate operation.
type UpdateSettingTemplateNoContent struct{}

type UpdateSettingTemplateReq struct {
	// The description of the template.
	Description OptString `json:"description"`
	// This field specifies the name of the template.
	Name         OptString                               `json:"name"`
	Policy       OptUpdateSettingTemplateReqPolicy       `json:"policy"`
	Profile      OptUpdateSettingTemplateReqProfile      `json:"profile"`
	UserSettings OptUpdateSettingTemplateReqUserSettings `json:"user_settings"`
}

// GetDescription returns the value of Description.
func (s *UpdateSettingTemplateReq) GetDescription() OptString {
	return s.Description
}

// GetName returns the value of Name.
func (s *UpdateSettingTemplateReq) GetName() OptString {
	return s.Name
}

// GetPolicy returns the value of Policy.
func (s *UpdateSettingTemplateReq) GetPolicy() OptUpdateSettingTemplateReqPolicy {
	return s.Policy
}

// GetProfile returns the value of Profile.
func (s *UpdateSettingTemplateReq) GetProfile() OptUpdateSettingTemplateReqProfile {
	return s.Profile
}

// GetUserSettings returns the value of UserSettings.
func (s *UpdateSettingTemplateReq) GetUserSettings() OptUpdateSettingTemplateReqUserSettings {
	return s.UserSettings
}

// SetDescription sets the value of Description.
func (s *UpdateSettingTemplateReq) SetDescription(val OptString) {
	s.Description = val
}

// SetName sets the value of Name.
func (s *UpdateSettingTemplateReq) SetName(val OptString) {
	s.Name = val
}

// SetPolicy sets the value of Policy.
func (s *UpdateSettingTemplateReq) SetPolicy(val OptUpdateSettingTemplateReqPolicy) {
	s.Policy = val
}

// SetProfile sets the value of Profile.
func (s *UpdateSettingTemplateReq) SetProfile(val OptUpdateSettingTemplateReqProfile) {
	s.Profile = val
}

// SetUserSettings sets the value of UserSettings.
func (s *UpdateSettingTemplateReq) SetUserSettings(val OptUpdateSettingTemplateReqUserSettings) {
	s.UserSettings = val
}

type UpdateSettingTemplateReqPolicy struct {
	AdHocCallRecording OptUpdateSettingTemplateReqPolicyAdHocCallRecording `json:"ad_hoc_call_recording"`
	AutoCallRecording  OptUpdateSettingTemplateReqPolicyAutoCallRecording  `json:"auto_call_recording"`
	SMS                OptUpdateSettingTemplateReqPolicySMS                `json:"sms"`
	Voicemail          OptUpdateSettingTemplateReqPolicyVoicemail          `json:"voicemail"`
	CallForwarding     OptUpdateSettingTemplateReqPolicyCallForwarding     `json:"call_forwarding"`
	CallOverflow       OptUpdateSettingTemplateReqPolicyCallOverflow       `json:"call_overflow"`
}

// GetAdHocCallRecording returns the value of AdHocCallRecording.
func (s *UpdateSettingTemplateReqPolicy) GetAdHocCallRecording() OptUpdateSettingTemplateReqPolicyAdHocCallRecording {
	return s.AdHocCallRecording
}

// GetAutoCallRecording returns the value of AutoCallRecording.
func (s *UpdateSettingTemplateReqPolicy) GetAutoCallRecording() OptUpdateSettingTemplateReqPolicyAutoCallRecording {
	return s.AutoCallRecording
}

// GetSMS returns the value of SMS.
func (s *UpdateSettingTemplateReqPolicy) GetSMS() OptUpdateSettingTemplateReqPolicySMS {
	return s.SMS
}

// GetVoicemail returns the value of Voicemail.
func (s *UpdateSettingTemplateReqPolicy) GetVoicemail() OptUpdateSettingTemplateReqPolicyVoicemail {
	return s.Voicemail
}

// GetCallForwarding returns the value of CallForwarding.
func (s *UpdateSettingTemplateReqPolicy) GetCallForwarding() OptUpdateSettingTemplateReqPolicyCallForwarding {
	return s.CallForwarding
}

// GetCallOverflow returns the value of CallOverflow.
func (s *UpdateSettingTemplateReqPolicy) GetCallOverflow() OptUpdateSettingTemplateReqPolicyCallOverflow {
	return s.CallOverflow
}

// SetAdHocCallRecording sets the value of AdHocCallRecording.
func (s *UpdateSettingTemplateReqPolicy) SetAdHocCallRecording(val OptUpdateSettingTemplateReqPolicyAdHocCallRecording) {
	s.AdHocCallRecording = val
}

// SetAutoCallRecording sets the value of AutoCallRecording.
func (s *UpdateSettingTemplateReqPolicy) SetAutoCallRecording(val OptUpdateSettingTemplateReqPolicyAutoCallRecording) {
	s.AutoCallRecording = val
}

// SetSMS sets the value of SMS.
func (s *UpdateSettingTemplateReqPolicy) SetSMS(val OptUpdateSettingTemplateReqPolicySMS) {
	s.SMS = val
}

// SetVoicemail sets the value of Voicemail.
func (s *UpdateSettingTemplateReqPolicy) SetVoicemail(val OptUpdateSettingTemplateReqPolicyVoicemail) {
	s.Voicemail = val
}

// SetCallForwarding sets the value of CallForwarding.
func (s *UpdateSettingTemplateReqPolicy) SetCallForwarding(val OptUpdateSettingTemplateReqPolicyCallForwarding) {
	s.CallForwarding = val
}

// SetCallOverflow sets the value of CallOverflow.
func (s *UpdateSettingTemplateReqPolicy) SetCallOverflow(val OptUpdateSettingTemplateReqPolicyCallOverflow) {
	s.CallOverflow = val
}

type UpdateSettingTemplateReqPolicyAdHocCallRecording struct {
	// Whether to allow the current extension to record and save calls in the cloud.
	Enable OptBool `json:"enable"`
	// Whether to play a prompt to call participants when the recording has started.
	RecordingStartPrompt OptBool `json:"recording_start_prompt"`
	// Whether to allow call recording transcription.
	RecordingTranscription OptBool `json:"recording_transcription"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSettingTemplateReqPolicyAdHocCallRecording) GetEnable() OptBool {
	return s.Enable
}

// GetRecordingStartPrompt returns the value of RecordingStartPrompt.
func (s *UpdateSettingTemplateReqPolicyAdHocCallRecording) GetRecordingStartPrompt() OptBool {
	return s.RecordingStartPrompt
}

// GetRecordingTranscription returns the value of RecordingTranscription.
func (s *UpdateSettingTemplateReqPolicyAdHocCallRecording) GetRecordingTranscription() OptBool {
	return s.RecordingTranscription
}

// SetEnable sets the value of Enable.
func (s *UpdateSettingTemplateReqPolicyAdHocCallRecording) SetEnable(val OptBool) {
	s.Enable = val
}

// SetRecordingStartPrompt sets the value of RecordingStartPrompt.
func (s *UpdateSettingTemplateReqPolicyAdHocCallRecording) SetRecordingStartPrompt(val OptBool) {
	s.RecordingStartPrompt = val
}

// SetRecordingTranscription sets the value of RecordingTranscription.
func (s *UpdateSettingTemplateReqPolicyAdHocCallRecording) SetRecordingTranscription(val OptBool) {
	s.RecordingTranscription = val
}

type UpdateSettingTemplateReqPolicyAutoCallRecording struct {
	// The automatic call recording.
	Enable OptBool `json:"enable"`
	// Values: inbound, outbound, both.
	RecordingCalls OptString `json:"recording_calls"`
	// Whether to play a prompt to call participants when the recording has started.
	RecordingStartPrompt OptBool `json:"recording_start_prompt"`
	// Whether to allow call recording transcription.
	RecordingTranscription OptBool `json:"recording_transcription"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSettingTemplateReqPolicyAutoCallRecording) GetEnable() OptBool {
	return s.Enable
}

// GetRecordingCalls returns the value of RecordingCalls.
func (s *UpdateSettingTemplateReqPolicyAutoCallRecording) GetRecordingCalls() OptString {
	return s.RecordingCalls
}

// GetRecordingStartPrompt returns the value of RecordingStartPrompt.
func (s *UpdateSettingTemplateReqPolicyAutoCallRecording) GetRecordingStartPrompt() OptBool {
	return s.RecordingStartPrompt
}

// GetRecordingTranscription returns the value of RecordingTranscription.
func (s *UpdateSettingTemplateReqPolicyAutoCallRecording) GetRecordingTranscription() OptBool {
	return s.RecordingTranscription
}

// SetEnable sets the value of Enable.
func (s *UpdateSettingTemplateReqPolicyAutoCallRecording) SetEnable(val OptBool) {
	s.Enable = val
}

// SetRecordingCalls sets the value of RecordingCalls.
func (s *UpdateSettingTemplateReqPolicyAutoCallRecording) SetRecordingCalls(val OptString) {
	s.RecordingCalls = val
}

// SetRecordingStartPrompt sets the value of RecordingStartPrompt.
func (s *UpdateSettingTemplateReqPolicyAutoCallRecording) SetRecordingStartPrompt(val OptBool) {
	s.RecordingStartPrompt = val
}

// SetRecordingTranscription sets the value of RecordingTranscription.
func (s *UpdateSettingTemplateReqPolicyAutoCallRecording) SetRecordingTranscription(val OptBool) {
	s.RecordingTranscription = val
}

type UpdateSettingTemplateReqPolicyCallForwarding struct {
	// Whether to allow users to forward their calls to other numbers.
	Enable OptBool `json:"enable"`
	// `1` - Low restriction (external numbers not allowed)
	// `2` - Medium restriction (external numbers and external contacts not allowed)
	// `3` - High restriction (external numbers, external contacts and internal extensions without
	// inbound automatic call recording not allowed)
	// `4` - No restriction.
	CallForwardingType OptInt `json:"call_forwarding_type"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSettingTemplateReqPolicyCallForwarding) GetEnable() OptBool {
	return s.Enable
}

// GetCallForwardingType returns the value of CallForwardingType.
func (s *UpdateSettingTemplateReqPolicyCallForwarding) GetCallForwardingType() OptInt {
	return s.CallForwardingType
}

// SetEnable sets the value of Enable.
func (s *UpdateSettingTemplateReqPolicyCallForwarding) SetEnable(val OptBool) {
	s.Enable = val
}

// SetCallForwardingType sets the value of CallForwardingType.
func (s *UpdateSettingTemplateReqPolicyCallForwarding) SetCallForwardingType(val OptInt) {
	s.CallForwardingType = val
}

type UpdateSettingTemplateReqPolicyCallOverflow struct {
	// Whether to allow users to forward their calls to other numbers when a call is not answered.
	Enable OptBool `json:"enable"`
	// `1` - Low restriction (external numbers not allowed)
	// `2` - Medium restriction (external numbers and external contacts not allowed)
	// `3` - High restriction (external numbers, external contacts and internal extensions without
	// inbound automatic call recording not allowed)
	// `4` - No restriction.
	CallOverflowType OptInt `json:"call_overflow_type"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSettingTemplateReqPolicyCallOverflow) GetEnable() OptBool {
	return s.Enable
}

// GetCallOverflowType returns the value of CallOverflowType.
func (s *UpdateSettingTemplateReqPolicyCallOverflow) GetCallOverflowType() OptInt {
	return s.CallOverflowType
}

// SetEnable sets the value of Enable.
func (s *UpdateSettingTemplateReqPolicyCallOverflow) SetEnable(val OptBool) {
	s.Enable = val
}

// SetCallOverflowType sets the value of CallOverflowType.
func (s *UpdateSettingTemplateReqPolicyCallOverflow) SetCallOverflowType(val OptInt) {
	s.CallOverflowType = val
}

type UpdateSettingTemplateReqPolicySMS struct {
	// Whether to allow user to send and receive messages.
	Enable OptBool `json:"enable"`
	// Whether or not the SMS is international.
	InternationalSMS OptBool `json:"international_sms"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSettingTemplateReqPolicySMS) GetEnable() OptBool {
	return s.Enable
}

// GetInternationalSMS returns the value of InternationalSMS.
func (s *UpdateSettingTemplateReqPolicySMS) GetInternationalSMS() OptBool {
	return s.InternationalSMS
}

// SetEnable sets the value of Enable.
func (s *UpdateSettingTemplateReqPolicySMS) SetEnable(val OptBool) {
	s.Enable = val
}

// SetInternationalSMS sets the value of InternationalSMS.
func (s *UpdateSettingTemplateReqPolicySMS) SetInternationalSMS(val OptBool) {
	s.InternationalSMS = val
}

type UpdateSettingTemplateReqPolicyVoicemail struct {
	// Whether to allow voicemail transcription.
	AllowTranscription OptBool `json:"allow_transcription"`
	// Whether to allow the current extension to access, receive, or share voicemail.
	Enable OptBool `json:"enable"`
}

// GetAllowTranscription returns the value of AllowTranscription.
func (s *UpdateSettingTemplateReqPolicyVoicemail) GetAllowTranscription() OptBool {
	return s.AllowTranscription
}

// GetEnable returns the value of Enable.
func (s *UpdateSettingTemplateReqPolicyVoicemail) GetEnable() OptBool {
	return s.Enable
}

// SetAllowTranscription sets the value of AllowTranscription.
func (s *UpdateSettingTemplateReqPolicyVoicemail) SetAllowTranscription(val OptBool) {
	s.AllowTranscription = val
}

// SetEnable sets the value of Enable.
func (s *UpdateSettingTemplateReqPolicyVoicemail) SetEnable(val OptBool) {
	s.Enable = val
}

type UpdateSettingTemplateReqProfile struct {
	// The area code from which the phone account was created.
	AreaCode OptString `json:"area_code"`
	// Name of the country where the template was created.
	Country OptString `json:"country"`
}

// GetAreaCode returns the value of AreaCode.
func (s *UpdateSettingTemplateReqProfile) GetAreaCode() OptString {
	return s.AreaCode
}

// GetCountry returns the value of Country.
func (s *UpdateSettingTemplateReqProfile) GetCountry() OptString {
	return s.Country
}

// SetAreaCode sets the value of AreaCode.
func (s *UpdateSettingTemplateReqProfile) SetAreaCode(val OptString) {
	s.AreaCode = val
}

// SetCountry sets the value of Country.
func (s *UpdateSettingTemplateReqProfile) SetCountry(val OptString) {
	s.Country = val
}

type UpdateSettingTemplateReqUserSettings struct {
	// Audio prompt language code.
	// American English: `en-US`
	// British English: `en-GB`
	// Espa&ntilde;ol americano: `es-US`
	// Fran&ccedil;ais canadien: `fr-CA`
	// Dansk: `da-DK`
	// Deutsch: `de-DE`
	// Espa&ntilde;ol: `es-ES`
	// Fran&ccedil;ais: `fr-FR`
	// Italiano: `it-IT`
	// Nederlands: `nl-NL`
	// Portugues portugal: `pt-PT`
	// Japanese: `ja-JP`
	// Korean: `ko-KO`
	// Portugues brasil: `pt-BR`
	// Chinese: `zh-CN`
	// Taiwanese: `zh-TW`.
	AudioPromptLanguage OptString `json:"audio_prompt_language"`
	// The block calls without caller ID.
	BlockCallsWithoutCallerID OptBool                                             `json:"block_calls_without_caller_id"`
	CallHandling              OptUpdateSettingTemplateReqUserSettingsCallHandling `json:"call_handling"`
	DeskPhone                 OptUpdateSettingTemplateReqUserSettingsDeskPhone    `json:"desk_phone"`
	// The value of this field can be either `default` or `disable`.
	// * `default`: This means that the hold music can be set using the [audio library](https://support.
	// zoom.
	// us/hc/en-us/articles/360028212652-Using-the-audio-library-to-customize-greetings-and-hold-music).
	// * `disable`: This means that the hold music is disabled.
	HoldMusic OptString `json:"hold_music"`
}

// GetAudioPromptLanguage returns the value of AudioPromptLanguage.
func (s *UpdateSettingTemplateReqUserSettings) GetAudioPromptLanguage() OptString {
	return s.AudioPromptLanguage
}

// GetBlockCallsWithoutCallerID returns the value of BlockCallsWithoutCallerID.
func (s *UpdateSettingTemplateReqUserSettings) GetBlockCallsWithoutCallerID() OptBool {
	return s.BlockCallsWithoutCallerID
}

// GetCallHandling returns the value of CallHandling.
func (s *UpdateSettingTemplateReqUserSettings) GetCallHandling() OptUpdateSettingTemplateReqUserSettingsCallHandling {
	return s.CallHandling
}

// GetDeskPhone returns the value of DeskPhone.
func (s *UpdateSettingTemplateReqUserSettings) GetDeskPhone() OptUpdateSettingTemplateReqUserSettingsDeskPhone {
	return s.DeskPhone
}

// GetHoldMusic returns the value of HoldMusic.
func (s *UpdateSettingTemplateReqUserSettings) GetHoldMusic() OptString {
	return s.HoldMusic
}

// SetAudioPromptLanguage sets the value of AudioPromptLanguage.
func (s *UpdateSettingTemplateReqUserSettings) SetAudioPromptLanguage(val OptString) {
	s.AudioPromptLanguage = val
}

// SetBlockCallsWithoutCallerID sets the value of BlockCallsWithoutCallerID.
func (s *UpdateSettingTemplateReqUserSettings) SetBlockCallsWithoutCallerID(val OptBool) {
	s.BlockCallsWithoutCallerID = val
}

// SetCallHandling sets the value of CallHandling.
func (s *UpdateSettingTemplateReqUserSettings) SetCallHandling(val OptUpdateSettingTemplateReqUserSettingsCallHandling) {
	s.CallHandling = val
}

// SetDeskPhone sets the value of DeskPhone.
func (s *UpdateSettingTemplateReqUserSettings) SetDeskPhone(val OptUpdateSettingTemplateReqUserSettingsDeskPhone) {
	s.DeskPhone = val
}

// SetHoldMusic sets the value of HoldMusic.
func (s *UpdateSettingTemplateReqUserSettings) SetHoldMusic(val OptString) {
	s.HoldMusic = val
}

type UpdateSettingTemplateReqUserSettingsCallHandling struct {
	BusinessHours OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours `json:"business_hours"`
	CloseHours    OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHours    `json:"close_hours"`
}

// GetBusinessHours returns the value of BusinessHours.
func (s *UpdateSettingTemplateReqUserSettingsCallHandling) GetBusinessHours() OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours {
	return s.BusinessHours
}

// GetCloseHours returns the value of CloseHours.
func (s *UpdateSettingTemplateReqUserSettingsCallHandling) GetCloseHours() OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHours {
	return s.CloseHours
}

// SetBusinessHours sets the value of BusinessHours.
func (s *UpdateSettingTemplateReqUserSettingsCallHandling) SetBusinessHours(val OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) {
	s.BusinessHours = val
}

// SetCloseHours sets the value of CloseHours.
func (s *UpdateSettingTemplateReqUserSettingsCallHandling) SetCloseHours(val OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) {
	s.CloseHours = val
}

type UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours struct {
	// When a call is not answered:
	// 0-Forward to a voicemail;
	// 1-Play a message, then disconnect;
	// 9-Disconnect;
	// 11-Forward to an external number;
	// 26-Forward to External Contacts;
	// 50-Forward to another extension.
	BusinessHourAction OptInt `json:"business_hour_action"`
	// Whether to allow callers to press zero to reach an operator or press One to leave a message, or
	// allow neither of these options.
	ConnectToOperator OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator `json:"connect_to_operator"`
	// When the user is busy on another call:
	// 0-Forward to a voicemail;
	// 1-Play a message, then disconnect;
	// 11-Forward to an external number;
	// 12-Call waiting;
	// 13-Play a busy signal;
	// 26-Forward to External Contacts;
	// 50-Forward to another extension.
	BusyAction OptInt `json:"busy_action"`
	// Whether to allow callers to press zero to reach an operator or press one to leave a message, or
	// allow neither of these options.
	BusyConnectOperator OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator `json:"busy_connect_operator"`
	CustomHours         []UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursCustomHoursItem      `json:"custom_hours"`
	// The call handling ring mode:
	// 0-Simultaneous,
	// 1-Sequential.
	RingType OptString `json:"ring_type"`
	// Ringing duration for each device, in seconds. Values:
	// 10,15,20,25,30,35,40,45,50,55,60.
	RingingDuration OptString `json:"ringing_duration"`
	// Values:
	// 1-24 Hours, 7 Days a Week;
	// 2-Custom Hours.
	Type OptInt `json:"type"`
}

// GetBusinessHourAction returns the value of BusinessHourAction.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) GetBusinessHourAction() OptInt {
	return s.BusinessHourAction
}

// GetConnectToOperator returns the value of ConnectToOperator.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) GetConnectToOperator() OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator {
	return s.ConnectToOperator
}

// GetBusyAction returns the value of BusyAction.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) GetBusyAction() OptInt {
	return s.BusyAction
}

// GetBusyConnectOperator returns the value of BusyConnectOperator.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) GetBusyConnectOperator() OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator {
	return s.BusyConnectOperator
}

// GetCustomHours returns the value of CustomHours.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) GetCustomHours() []UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursCustomHoursItem {
	return s.CustomHours
}

// GetRingType returns the value of RingType.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) GetRingType() OptString {
	return s.RingType
}

// GetRingingDuration returns the value of RingingDuration.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) GetRingingDuration() OptString {
	return s.RingingDuration
}

// GetType returns the value of Type.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) GetType() OptInt {
	return s.Type
}

// SetBusinessHourAction sets the value of BusinessHourAction.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) SetBusinessHourAction(val OptInt) {
	s.BusinessHourAction = val
}

// SetConnectToOperator sets the value of ConnectToOperator.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) SetConnectToOperator(val OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) {
	s.ConnectToOperator = val
}

// SetBusyAction sets the value of BusyAction.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) SetBusyAction(val OptInt) {
	s.BusyAction = val
}

// SetBusyConnectOperator sets the value of BusyConnectOperator.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) SetBusyConnectOperator(val OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) {
	s.BusyConnectOperator = val
}

// SetCustomHours sets the value of CustomHours.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) SetCustomHours(val []UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursCustomHoursItem) {
	s.CustomHours = val
}

// SetRingType sets the value of RingType.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) SetRingType(val OptString) {
	s.RingType = val
}

// SetRingingDuration sets the value of RingingDuration.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) SetRingingDuration(val OptString) {
	s.RingingDuration = val
}

// SetType sets the value of Type.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHours) SetType(val OptInt) {
	s.Type = val
}

// Whether to allow callers to press zero to reach an operator or press one to leave a message, or
// allow neither of these options.
type UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator struct {
	// Whether to enable a connection to an operator. It requires the user to input the `ID` if you want
	// to enable. It's available only when the `busy_action` is `0`.
	Enable OptBool `json:"enable"`
	// The extension ID of user, zoomRoom, commonArea, autoReceptionist, callQueue, or sharedLineGroup.
	// It's available only when the `busy_action` is `0`, `26` or `50`.
	ID OptString `json:"id"`
	// The forwarding external number when a call is not answered. Make available only when the
	// `busy_action` is `11`.
	ExternalNumber OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber `json:"external_number"`
	// Whether to play the callee's voicemail greeting when the caller reaches the end of forwarding
	// sequence. Make available only when the `busy_action` is `0` or `50`.
	PlayCalleeVoicemailGreeting OptBool `json:"play_callee_voicemail_greeting"`
	// Whether to require pressing 1 before connecting the call. Make available only when the
	// `busy_action` is `11` or '26'.
	RequirePress1BeforeConnecting OptBool `json:"require_press_1_before_connecting"`
	// Whether to allow callers to check their voicemail. Make available only when the `busy_action` is
	// `0`.
	AllowCallerCheckVoicemail OptBool `json:"allow_caller_check_voicemail"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) GetEnable() OptBool {
	return s.Enable
}

// GetID returns the value of ID.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) GetID() OptString {
	return s.ID
}

// GetExternalNumber returns the value of ExternalNumber.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) GetExternalNumber() OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber {
	return s.ExternalNumber
}

// GetPlayCalleeVoicemailGreeting returns the value of PlayCalleeVoicemailGreeting.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) GetPlayCalleeVoicemailGreeting() OptBool {
	return s.PlayCalleeVoicemailGreeting
}

// GetRequirePress1BeforeConnecting returns the value of RequirePress1BeforeConnecting.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) GetRequirePress1BeforeConnecting() OptBool {
	return s.RequirePress1BeforeConnecting
}

// GetAllowCallerCheckVoicemail returns the value of AllowCallerCheckVoicemail.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) GetAllowCallerCheckVoicemail() OptBool {
	return s.AllowCallerCheckVoicemail
}

// SetEnable sets the value of Enable.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) SetEnable(val OptBool) {
	s.Enable = val
}

// SetID sets the value of ID.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) SetID(val OptString) {
	s.ID = val
}

// SetExternalNumber sets the value of ExternalNumber.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) SetExternalNumber(val OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) {
	s.ExternalNumber = val
}

// SetPlayCalleeVoicemailGreeting sets the value of PlayCalleeVoicemailGreeting.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) SetPlayCalleeVoicemailGreeting(val OptBool) {
	s.PlayCalleeVoicemailGreeting = val
}

// SetRequirePress1BeforeConnecting sets the value of RequirePress1BeforeConnecting.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) SetRequirePress1BeforeConnecting(val OptBool) {
	s.RequirePress1BeforeConnecting = val
}

// SetAllowCallerCheckVoicemail sets the value of AllowCallerCheckVoicemail.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperator) SetAllowCallerCheckVoicemail(val OptBool) {
	s.AllowCallerCheckVoicemail = val
}

// The forwarding external number when a call is not answered. Make available only when the
// `busy_action` is `11`.
type UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber struct {
	// The phone number in E164 format.
	Number OptString `json:"number"`
	// The description for the phone number.
	Description OptString `json:"description"`
}

// GetNumber returns the value of Number.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) GetNumber() OptString {
	return s.Number
}

// GetDescription returns the value of Description.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) GetDescription() OptString {
	return s.Description
}

// SetNumber sets the value of Number.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) SetNumber(val OptString) {
	s.Number = val
}

// SetDescription sets the value of Description.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursBusyConnectOperatorExternalNumber) SetDescription(val OptString) {
	s.Description = val
}

// Whether to allow callers to press zero to reach an operator or press One to leave a message, or
// allow neither of these options.
type UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator struct {
	// Whether to enable connect to the operator. You must input the `id` if you want to enable. It's
	// available only when the `business_hour_action` is `0`.
	Enable OptBool `json:"enable"`
	// The extension ID of user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue, or
	// sharedLineGroup. It's available only when the `business_hour_action` is `0` or `50`.
	ID OptString `json:"id"`
	// The forwarding external number when a call is not answered. Available only when the
	// `business_hour_action` is `11`.
	ExternalNumber OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber `json:"external_number"`
	// Whether to play the callee's voicemail greeting when the caller reaches the end of forwarding
	// sequence. Make available only when the `business_hour_action` is `0` or `50`.
	PlayCalleeVoicemailGreeting OptBool `json:"play_callee_voicemail_greeting"`
	// Whether to require pressing 1 before connecting the call. Make available only when the
	// `business_hour_action` is `11` or '26'.
	RequirePress1BeforeConnecting OptBool `json:"require_press_1_before_connecting"`
	// Whether to allow callers to check their voicemail. Make available only when the
	// `business_hour_action` is `0`.
	AllowCallerCheckVoicemail OptBool `json:"allow_caller_check_voicemail"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) GetEnable() OptBool {
	return s.Enable
}

// GetID returns the value of ID.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) GetID() OptString {
	return s.ID
}

// GetExternalNumber returns the value of ExternalNumber.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) GetExternalNumber() OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber {
	return s.ExternalNumber
}

// GetPlayCalleeVoicemailGreeting returns the value of PlayCalleeVoicemailGreeting.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) GetPlayCalleeVoicemailGreeting() OptBool {
	return s.PlayCalleeVoicemailGreeting
}

// GetRequirePress1BeforeConnecting returns the value of RequirePress1BeforeConnecting.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) GetRequirePress1BeforeConnecting() OptBool {
	return s.RequirePress1BeforeConnecting
}

// GetAllowCallerCheckVoicemail returns the value of AllowCallerCheckVoicemail.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) GetAllowCallerCheckVoicemail() OptBool {
	return s.AllowCallerCheckVoicemail
}

// SetEnable sets the value of Enable.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) SetEnable(val OptBool) {
	s.Enable = val
}

// SetID sets the value of ID.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) SetID(val OptString) {
	s.ID = val
}

// SetExternalNumber sets the value of ExternalNumber.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) SetExternalNumber(val OptUpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) {
	s.ExternalNumber = val
}

// SetPlayCalleeVoicemailGreeting sets the value of PlayCalleeVoicemailGreeting.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) SetPlayCalleeVoicemailGreeting(val OptBool) {
	s.PlayCalleeVoicemailGreeting = val
}

// SetRequirePress1BeforeConnecting sets the value of RequirePress1BeforeConnecting.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) SetRequirePress1BeforeConnecting(val OptBool) {
	s.RequirePress1BeforeConnecting = val
}

// SetAllowCallerCheckVoicemail sets the value of AllowCallerCheckVoicemail.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperator) SetAllowCallerCheckVoicemail(val OptBool) {
	s.AllowCallerCheckVoicemail = val
}

// The forwarding external number when a call is not answered. Available only when the
// `business_hour_action` is `11`.
type UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber struct {
	// The phone number in E164 format.
	Number OptString `json:"number"`
	// The description for the phone number.
	Description OptString `json:"description"`
}

// GetNumber returns the value of Number.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) GetNumber() OptString {
	return s.Number
}

// GetDescription returns the value of Description.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) GetDescription() OptString {
	return s.Description
}

// SetNumber sets the value of Number.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) SetNumber(val OptString) {
	s.Number = val
}

// SetDescription sets the value of Description.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursConnectToOperatorExternalNumber) SetDescription(val OptString) {
	s.Description = val
}

type UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursCustomHoursItem struct {
	// Values:
	// hh:mm.
	From OptTime `json:"from"`
	// Values:
	// hh:mm.
	To OptTime `json:"to"`
	// Values:
	// 1-24 Hours,
	// 2-customized hours.
	Type OptInt `json:"type"`
	// Values: 1-7 sun-sat.
	Weekday OptInt `json:"weekday"`
}

// GetFrom returns the value of From.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursCustomHoursItem) GetFrom() OptTime {
	return s.From
}

// GetTo returns the value of To.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursCustomHoursItem) GetTo() OptTime {
	return s.To
}

// GetType returns the value of Type.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursCustomHoursItem) GetType() OptInt {
	return s.Type
}

// GetWeekday returns the value of Weekday.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursCustomHoursItem) GetWeekday() OptInt {
	return s.Weekday
}

// SetFrom sets the value of From.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursCustomHoursItem) SetFrom(val OptTime) {
	s.From = val
}

// SetTo sets the value of To.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursCustomHoursItem) SetTo(val OptTime) {
	s.To = val
}

// SetType sets the value of Type.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursCustomHoursItem) SetType(val OptInt) {
	s.Type = val
}

// SetWeekday sets the value of Weekday.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingBusinessHoursCustomHoursItem) SetWeekday(val OptInt) {
	s.Weekday = val
}

type UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours struct {
	// The action to take when a call is not answered:
	// 0-Forward to a voicemail;
	// 1-Play a message, then disconnect;
	// 9-Disconnect;
	// 11-Forward to an external number;
	// 26-Forward to External Contacts;
	// 50-Forward to another extension.
	CloseHourAction OptInt `json:"close_hour_action"`
	// Whether to allow callers to press Zero to reach an operator or press One to leave a message, or
	// allow neither of these options.
	ConnectToOperator OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator `json:"connect_to_operator"`
	// The action to take when a call is not answered:
	// 0-Forward to a voicemail;
	// 1-Play a message, then disconnect;
	// 11-Forward to an external number;
	// 12-Call waiting;
	// 13-Play a busy signal;
	// 26-Forward to External Contacts;
	// 50-Forward to another extension
	// .
	BusyAction OptInt `json:"busy_action"`
	// Whether to allow callers to press 0 to reach an operator or press 1 to leave a message, or allow
	// neither of these options.
	BusyConnectOperator OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator `json:"busy_connect_operator"`
	// The maximum wait time, in seconds. Values:
	// 10,15,20,25,30,35,40,45,50,55,60.
	MaxWaitTime OptString `json:"max_wait_time"`
}

// GetCloseHourAction returns the value of CloseHourAction.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) GetCloseHourAction() OptInt {
	return s.CloseHourAction
}

// GetConnectToOperator returns the value of ConnectToOperator.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) GetConnectToOperator() OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator {
	return s.ConnectToOperator
}

// GetBusyAction returns the value of BusyAction.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) GetBusyAction() OptInt {
	return s.BusyAction
}

// GetBusyConnectOperator returns the value of BusyConnectOperator.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) GetBusyConnectOperator() OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator {
	return s.BusyConnectOperator
}

// GetMaxWaitTime returns the value of MaxWaitTime.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) GetMaxWaitTime() OptString {
	return s.MaxWaitTime
}

// SetCloseHourAction sets the value of CloseHourAction.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) SetCloseHourAction(val OptInt) {
	s.CloseHourAction = val
}

// SetConnectToOperator sets the value of ConnectToOperator.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) SetConnectToOperator(val OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) {
	s.ConnectToOperator = val
}

// SetBusyAction sets the value of BusyAction.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) SetBusyAction(val OptInt) {
	s.BusyAction = val
}

// SetBusyConnectOperator sets the value of BusyConnectOperator.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) SetBusyConnectOperator(val OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) {
	s.BusyConnectOperator = val
}

// SetMaxWaitTime sets the value of MaxWaitTime.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHours) SetMaxWaitTime(val OptString) {
	s.MaxWaitTime = val
}

// Whether to allow callers to press 0 to reach an operator or press 1 to leave a message, or allow
// neither of these options.
type UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator struct {
	// Whether to enable a connection to an operator. It requires the user to input the `ID` if you want
	// to enable. It's available only when the `busy_action` is `0`.
	Enable OptBool `json:"enable"`
	// The extension ID of user, zoomRoom, commonArea, autoReceptionist, callQueue, or sharedLineGroup.
	// It's available only when the `busy_action` is `0`, `26` or `50`.
	ID OptString `json:"id"`
	// The forwarding external number when a call is not answered. It's available only when the
	// `busy_action` is `11`.
	ExternalNumber OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber `json:"external_number"`
	// Whether to play the callee's voicemail greeting when the caller reaches the end of forwarding
	// sequence. Make available only when the `busy_action` is `0` or `50`.
	PlayCalleeVoicemailGreeting OptBool `json:"play_callee_voicemail_greeting"`
	// Whether to require pressing 1 before connecting the call. Mkae available only when the
	// `busy_action` is `11` or '26'.
	RequirePress1BeforeConnecting OptBool `json:"require_press_1_before_connecting"`
	// Whether to allow callers to check their voicemail. Make available only when the `busy_action` is
	// `0`.
	AllowCallerCheckVoicemail OptBool `json:"allow_caller_check_voicemail"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) GetEnable() OptBool {
	return s.Enable
}

// GetID returns the value of ID.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) GetID() OptString {
	return s.ID
}

// GetExternalNumber returns the value of ExternalNumber.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) GetExternalNumber() OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber {
	return s.ExternalNumber
}

// GetPlayCalleeVoicemailGreeting returns the value of PlayCalleeVoicemailGreeting.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) GetPlayCalleeVoicemailGreeting() OptBool {
	return s.PlayCalleeVoicemailGreeting
}

// GetRequirePress1BeforeConnecting returns the value of RequirePress1BeforeConnecting.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) GetRequirePress1BeforeConnecting() OptBool {
	return s.RequirePress1BeforeConnecting
}

// GetAllowCallerCheckVoicemail returns the value of AllowCallerCheckVoicemail.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) GetAllowCallerCheckVoicemail() OptBool {
	return s.AllowCallerCheckVoicemail
}

// SetEnable sets the value of Enable.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) SetEnable(val OptBool) {
	s.Enable = val
}

// SetID sets the value of ID.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) SetID(val OptString) {
	s.ID = val
}

// SetExternalNumber sets the value of ExternalNumber.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) SetExternalNumber(val OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) {
	s.ExternalNumber = val
}

// SetPlayCalleeVoicemailGreeting sets the value of PlayCalleeVoicemailGreeting.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) SetPlayCalleeVoicemailGreeting(val OptBool) {
	s.PlayCalleeVoicemailGreeting = val
}

// SetRequirePress1BeforeConnecting sets the value of RequirePress1BeforeConnecting.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) SetRequirePress1BeforeConnecting(val OptBool) {
	s.RequirePress1BeforeConnecting = val
}

// SetAllowCallerCheckVoicemail sets the value of AllowCallerCheckVoicemail.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperator) SetAllowCallerCheckVoicemail(val OptBool) {
	s.AllowCallerCheckVoicemail = val
}

// The forwarding external number when a call is not answered. It's available only when the
// `busy_action` is `11`.
type UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber struct {
	// The phone number in E164 format.
	Number OptString `json:"number"`
	// The description for the phone number.
	Description OptString `json:"description"`
}

// GetNumber returns the value of Number.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) GetNumber() OptString {
	return s.Number
}

// GetDescription returns the value of Description.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) GetDescription() OptString {
	return s.Description
}

// SetNumber sets the value of Number.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) SetNumber(val OptString) {
	s.Number = val
}

// SetDescription sets the value of Description.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursBusyConnectOperatorExternalNumber) SetDescription(val OptString) {
	s.Description = val
}

// Whether to allow callers to press Zero to reach an operator or press One to leave a message, or
// allow neither of these options.
type UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator struct {
	// Whether to enable connect to the operator, and you must input the `id` if you want to enable.
	// Available only when the `close_hour_action` is `0`.
	Enable OptBool `json:"enable"`
	// The extension ID of user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue, or
	// sharedLineGroup. It's available only when the `close_hour_action` is `0` or `50`.
	ID OptString `json:"id"`
	// The forwarding external number when a call is not answered. Available only when the
	// `close_hour_action` is `11`.
	ExternalNumber OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber `json:"external_number"`
	// Whether to play the callee's voicemail greeting when the caller reaches the end of forwarding
	// sequence. Make available only when the `close_hour_action` is `0` or `50`.
	PlayCalleeVoicemailGreeting OptBool `json:"play_callee_voicemail_greeting"`
	// Whether to require pressing 1 before connecting the call. Make available only when the
	// `close_hour_action` is `11` or '26'.
	RequirePress1BeforeConnecting OptBool `json:"require_press_1_before_connecting"`
	// Whether to allow callers to check their voicemail. Make available only when the
	// `close_hour_action` is `0`.
	AllowCallerCheckVoicemail OptBool `json:"allow_caller_check_voicemail"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) GetEnable() OptBool {
	return s.Enable
}

// GetID returns the value of ID.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) GetID() OptString {
	return s.ID
}

// GetExternalNumber returns the value of ExternalNumber.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) GetExternalNumber() OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber {
	return s.ExternalNumber
}

// GetPlayCalleeVoicemailGreeting returns the value of PlayCalleeVoicemailGreeting.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) GetPlayCalleeVoicemailGreeting() OptBool {
	return s.PlayCalleeVoicemailGreeting
}

// GetRequirePress1BeforeConnecting returns the value of RequirePress1BeforeConnecting.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) GetRequirePress1BeforeConnecting() OptBool {
	return s.RequirePress1BeforeConnecting
}

// GetAllowCallerCheckVoicemail returns the value of AllowCallerCheckVoicemail.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) GetAllowCallerCheckVoicemail() OptBool {
	return s.AllowCallerCheckVoicemail
}

// SetEnable sets the value of Enable.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) SetEnable(val OptBool) {
	s.Enable = val
}

// SetID sets the value of ID.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) SetID(val OptString) {
	s.ID = val
}

// SetExternalNumber sets the value of ExternalNumber.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) SetExternalNumber(val OptUpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) {
	s.ExternalNumber = val
}

// SetPlayCalleeVoicemailGreeting sets the value of PlayCalleeVoicemailGreeting.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) SetPlayCalleeVoicemailGreeting(val OptBool) {
	s.PlayCalleeVoicemailGreeting = val
}

// SetRequirePress1BeforeConnecting sets the value of RequirePress1BeforeConnecting.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) SetRequirePress1BeforeConnecting(val OptBool) {
	s.RequirePress1BeforeConnecting = val
}

// SetAllowCallerCheckVoicemail sets the value of AllowCallerCheckVoicemail.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperator) SetAllowCallerCheckVoicemail(val OptBool) {
	s.AllowCallerCheckVoicemail = val
}

// The forwarding external number when a call is not answered. Available only when the
// `close_hour_action` is `11`.
type UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber struct {
	// The phone number in E164 format.
	Number OptString `json:"number"`
	// The description for the phone number.
	Description OptString `json:"description"`
}

// GetNumber returns the value of Number.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) GetNumber() OptString {
	return s.Number
}

// GetDescription returns the value of Description.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) GetDescription() OptString {
	return s.Description
}

// SetNumber sets the value of Number.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) SetNumber(val OptString) {
	s.Number = val
}

// SetDescription sets the value of Description.
func (s *UpdateSettingTemplateReqUserSettingsCallHandlingCloseHoursConnectToOperatorExternalNumber) SetDescription(val OptString) {
	s.Description = val
}

type UpdateSettingTemplateReqUserSettingsDeskPhone struct {
	// The pin code.
	PinCode OptString `json:"pin_code"`
}

// GetPinCode returns the value of PinCode.
func (s *UpdateSettingTemplateReqUserSettingsDeskPhone) GetPinCode() OptString {
	return s.PinCode
}

// SetPinCode sets the value of PinCode.
func (s *UpdateSettingTemplateReqUserSettingsDeskPhone) SetPinCode(val OptString) {
	s.PinCode = val
}

// UpdateSharedLineGroupPolicyNoContent is response for UpdateSharedLineGroupPolicy operation.
type UpdateSharedLineGroupPolicyNoContent struct{}

type UpdateSharedLineGroupPolicyReq struct {
	CheckVoicemailsOverPhone OptUpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone `json:"check_voicemails_over_phone"`
}

// GetCheckVoicemailsOverPhone returns the value of CheckVoicemailsOverPhone.
func (s *UpdateSharedLineGroupPolicyReq) GetCheckVoicemailsOverPhone() OptUpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone {
	return s.CheckVoicemailsOverPhone
}

// SetCheckVoicemailsOverPhone sets the value of CheckVoicemailsOverPhone.
func (s *UpdateSharedLineGroupPolicyReq) SetCheckVoicemailsOverPhone(val OptUpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone) {
	s.CheckVoicemailsOverPhone = val
}

type UpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone struct {
	// Whether to allow members in this shared line group to check voicemails for this group over phone
	// using a PIN code.
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings (applicable if the current settings
	// are using the new policy framework).
	Reset OptBool `json:"reset"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone) GetReset() OptBool {
	return s.Reset
}

// SetEnable sets the value of Enable.
func (s *UpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSharedLineGroupPolicyReqCheckVoicemailsOverPhone) SetReset(val OptBool) {
	s.Reset = val
}

// UpdateSiteDetailsNoContent is response for UpdateSiteDetails operation.
type UpdateSiteDetailsNoContent struct{}

type UpdateSiteDetailsReq struct {
	// The name of the site.
	Name OptString `json:"name"`
	// The [site code](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b).
	SiteCode OptInt `json:"site_code"`
	// The short extension of the phone site.
	ShortExtension OptUpdateSiteDetailsReqShortExtension `json:"short_extension"`
	// The default emergency address. If the address is not an exact match, we use the system generated
	// corrected address.
	DefaultEmergencyAddress OptUpdateSiteDetailsReqDefaultEmergencyAddress `json:"default_emergency_address"`
	// If the account enabled the `Display Custom SIP Zone Options on Web Portal` feature, then selecting
	// a SIP zone nearest to your site helps reduce latency and improve call quality.
	SipZone OptUpdateSiteDetailsReqSipZone `json:"sip_zone"`
	// When an outbound call uses a number as the caller ID, the caller ID name and the number display to
	// the called party. The caller ID name can be up to 15 characters. The user can reset the caller ID
	// name by setting it to  &quot;&quot;.
	CallerIDName OptString `json:"caller_id_name"`
	// The [site policy setting](https://support.zoom.
	// us/hc/en-us/articles/360033511872-Changing-Zoom-Phone-policy-settings#h_af4d1935-9cb1-44d2-9a10-9bfba10d58a7).
	Policy OptUpdateSiteDetailsReqPolicy `json:"policy"`
}

// GetName returns the value of Name.
func (s *UpdateSiteDetailsReq) GetName() OptString {
	return s.Name
}

// GetSiteCode returns the value of SiteCode.
func (s *UpdateSiteDetailsReq) GetSiteCode() OptInt {
	return s.SiteCode
}

// GetShortExtension returns the value of ShortExtension.
func (s *UpdateSiteDetailsReq) GetShortExtension() OptUpdateSiteDetailsReqShortExtension {
	return s.ShortExtension
}

// GetDefaultEmergencyAddress returns the value of DefaultEmergencyAddress.
func (s *UpdateSiteDetailsReq) GetDefaultEmergencyAddress() OptUpdateSiteDetailsReqDefaultEmergencyAddress {
	return s.DefaultEmergencyAddress
}

// GetSipZone returns the value of SipZone.
func (s *UpdateSiteDetailsReq) GetSipZone() OptUpdateSiteDetailsReqSipZone {
	return s.SipZone
}

// GetCallerIDName returns the value of CallerIDName.
func (s *UpdateSiteDetailsReq) GetCallerIDName() OptString {
	return s.CallerIDName
}

// GetPolicy returns the value of Policy.
func (s *UpdateSiteDetailsReq) GetPolicy() OptUpdateSiteDetailsReqPolicy {
	return s.Policy
}

// SetName sets the value of Name.
func (s *UpdateSiteDetailsReq) SetName(val OptString) {
	s.Name = val
}

// SetSiteCode sets the value of SiteCode.
func (s *UpdateSiteDetailsReq) SetSiteCode(val OptInt) {
	s.SiteCode = val
}

// SetShortExtension sets the value of ShortExtension.
func (s *UpdateSiteDetailsReq) SetShortExtension(val OptUpdateSiteDetailsReqShortExtension) {
	s.ShortExtension = val
}

// SetDefaultEmergencyAddress sets the value of DefaultEmergencyAddress.
func (s *UpdateSiteDetailsReq) SetDefaultEmergencyAddress(val OptUpdateSiteDetailsReqDefaultEmergencyAddress) {
	s.DefaultEmergencyAddress = val
}

// SetSipZone sets the value of SipZone.
func (s *UpdateSiteDetailsReq) SetSipZone(val OptUpdateSiteDetailsReqSipZone) {
	s.SipZone = val
}

// SetCallerIDName sets the value of CallerIDName.
func (s *UpdateSiteDetailsReq) SetCallerIDName(val OptString) {
	s.CallerIDName = val
}

// SetPolicy sets the value of Policy.
func (s *UpdateSiteDetailsReq) SetPolicy(val OptUpdateSiteDetailsReqPolicy) {
	s.Policy = val
}

// The default emergency address. If the address is not an exact match, we use the system generated
// corrected address.
type UpdateSiteDetailsReqDefaultEmergencyAddress struct {
	// The address Line 1 of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that contains the house number and
	// street name.
	AddressLine1 string `json:"address_line1"`
	// The address Line 2 of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that contains the building number,
	// floor number, unit, and others.
	AddressLine2 OptString `json:"address_line2"`
	// The city of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	City string `json:"city"`
	// The two-lettered country code (Aplha-2 code in ISO-3166 format) of the site's [emergency
	// address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	Country string `json:"country"`
	// The state code of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	StateCode string `json:"state_code"`
	// The zip code of the [emergency address](https://support.zoom.
	// us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).
	Zip string `json:"zip"`
}

// GetAddressLine1 returns the value of AddressLine1.
func (s *UpdateSiteDetailsReqDefaultEmergencyAddress) GetAddressLine1() string {
	return s.AddressLine1
}

// GetAddressLine2 returns the value of AddressLine2.
func (s *UpdateSiteDetailsReqDefaultEmergencyAddress) GetAddressLine2() OptString {
	return s.AddressLine2
}

// GetCity returns the value of City.
func (s *UpdateSiteDetailsReqDefaultEmergencyAddress) GetCity() string {
	return s.City
}

// GetCountry returns the value of Country.
func (s *UpdateSiteDetailsReqDefaultEmergencyAddress) GetCountry() string {
	return s.Country
}

// GetStateCode returns the value of StateCode.
func (s *UpdateSiteDetailsReqDefaultEmergencyAddress) GetStateCode() string {
	return s.StateCode
}

// GetZip returns the value of Zip.
func (s *UpdateSiteDetailsReqDefaultEmergencyAddress) GetZip() string {
	return s.Zip
}

// SetAddressLine1 sets the value of AddressLine1.
func (s *UpdateSiteDetailsReqDefaultEmergencyAddress) SetAddressLine1(val string) {
	s.AddressLine1 = val
}

// SetAddressLine2 sets the value of AddressLine2.
func (s *UpdateSiteDetailsReqDefaultEmergencyAddress) SetAddressLine2(val OptString) {
	s.AddressLine2 = val
}

// SetCity sets the value of City.
func (s *UpdateSiteDetailsReqDefaultEmergencyAddress) SetCity(val string) {
	s.City = val
}

// SetCountry sets the value of Country.
func (s *UpdateSiteDetailsReqDefaultEmergencyAddress) SetCountry(val string) {
	s.Country = val
}

// SetStateCode sets the value of StateCode.
func (s *UpdateSiteDetailsReqDefaultEmergencyAddress) SetStateCode(val string) {
	s.StateCode = val
}

// SetZip sets the value of Zip.
func (s *UpdateSiteDetailsReqDefaultEmergencyAddress) SetZip(val string) {
	s.Zip = val
}

// The [site policy setting](https://support.zoom.
// us/hc/en-us/articles/360033511872-Changing-Zoom-Phone-policy-settings#h_af4d1935-9cb1-44d2-9a10-9bfba10d58a7).
type UpdateSiteDetailsReqPolicy struct {
	SelectOutboundCallerID OptUpdateSiteDetailsReqPolicySelectOutboundCallerID `json:"select_outbound_caller_id"`
	PersonalAudioLibrary   OptUpdateSiteDetailsReqPolicyPersonalAudioLibrary   `json:"personal_audio_library"`
	Voicemail              OptUpdateSiteDetailsReqPolicyVoicemail              `json:"voicemail"`
	VoicemailTranscription OptUpdateSiteDetailsReqPolicyVoicemailTranscription `json:"voicemail_transcription"`
	// Once enabled, users receive email notifications when there is a new voicemail from users, call
	// queues, auto receptionists, or shared line groups. Users who disabled the shared voicemail
	// notification by email policy will not receive notifications. This setting only displays when the
	// voicemail policy uses the new policy framework.
	VoicemailNotificationByEmail OptUpdateSiteDetailsReqPolicyVoicemailNotificationByEmail `json:"voicemail_notification_by_email"`
	// Once enabled, users receive email notification when there is a new shared voicemail or videomail.
	// If the extension that shares the voicemail or videomail has disabled the voicemail or videomail
	// notification by email policy, users will not receive notifications. This setting only displays
	// when the voicemail policy uses the new policy framework.
	SharedVoicemailNotificationByEmail OptUpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail `json:"shared_voicemail_notification_by_email"`
	// Whether to allow extensions to place international calls outside of the calling plan.
	InternationalCalling  OptUpdateSiteDetailsReqPolicyInternationalCalling  `json:"international_calling"`
	ZoomPhoneOnMobile     OptUpdateSiteDetailsReqPolicyZoomPhoneOnMobile     `json:"zoom_phone_on_mobile"`
	SMS                   OptUpdateSiteDetailsReqPolicySMS                   `json:"sms"`
	ElevateToMeeting      OptUpdateSiteDetailsReqPolicyElevateToMeeting      `json:"elevate_to_meeting"`
	HandOffToRoom         OptUpdateSiteDetailsReqPolicyHandOffToRoom         `json:"hand_off_to_room"`
	MobileSwitchToCarrier OptUpdateSiteDetailsReqPolicyMobileSwitchToCarrier `json:"mobile_switch_to_carrier"`
	// Whether the user can use [call delegation](https://support.zoom.
	// us/hc/en-us/articles/360032881731-Setting-up-call-delegation-shared-lines-appearance-).
	Delegation OptUpdateSiteDetailsReqPolicyDelegation `json:"delegation"`
	// A list of ad hoc call recording settings.
	AdHocCallRecording OptUpdateSiteDetailsReqPolicyAdHocCallRecording `json:"ad_hoc_call_recording"`
	// A list of the site's automatic call recording settings.
	AutoCallRecording OptUpdateSiteDetailsReqPolicyAutoCallRecording `json:"auto_call_recording"`
	// Whether to allow users to forward their calls to other numbers.
	CallHandlingForwardingToOtherUsers OptUpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers `json:"call_handling_forwarding_to_other_users"`
	// Whether to allow extension owners or members of a shared line group to check voicemails for
	// extension numbers over the phone using PIN code.
	CheckVoicemailsOverPhone OptUpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone `json:"check_voicemails_over_phone"`
	// After enabling the feature, a unique pickup code generates for each queue, which can be customized
	// in the Call Queue profile. Queue calls can be answered with the pickup code by the users under the
	// same site.
	CallQueuePickupCode OptUpdateSiteDetailsReqPolicyCallQueuePickupCode `json:"call_queue_pickup_code"`
	// The opt-out reasons for call queues. When enabled, call queue members need to select an opt-out
	// reason when they turn off the `receive queue call` feature.
	CallQueueOptOutReason OptUpdateSiteDetailsReqPolicyCallQueueOptOutReason `json:"call_queue_opt_out_reason"`
	// Whether to show the user who last transferred the call. Viewing preferences display on the
	// incoming call panel. Selections made here will not affect the information shown in call logs.
	ShowUserLastTransferredCall          OptBool                                                           `json:"show_user_last_transferred_call"`
	AutoDeleteDataAfterRetentionDuration OptUpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration `json:"auto_delete_data_after_retention_duration"`
	CallPark                             OptUpdateSiteDetailsReqPolicyCallPark                             `json:"call_park"`
	CallOverflow                         OptUpdateSiteDetailsReqPolicyCallOverflow                         `json:"call_overflow"`
	CallTransferring                     OptUpdateSiteDetailsReqPolicyCallTransferring                     `json:"call_transferring"`
	// Whether to allow hands-free peer-to-peer conversations. When an intercom call is received, the
	// phone beeps to notify the user of the incoming intercom call, and the user's phone automatically
	// answers the intercom call.
	AudioIntercom OptUpdateSiteDetailsReqPolicyAudioIntercom `json:"audio_intercom"`
	// Whether to calls without a caller ID are blocked.
	BlockCallsWithoutCallerID OptUpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID `json:"block_calls_without_caller_id"`
	// The rules for blocking external calls during business, closed, and holiday hours. This feature is
	// only available for User, Zoom Room and Common Area.
	BlockExternalCalls OptUpdateSiteDetailsReqPolicyBlockExternalCalls `json:"block_external_calls"`
	// It requires the account to enable the `Force Calls out to the PSTN network` feature.
	ForceOffNet OptUpdateSiteDetailsReqPolicyForceOffNet `json:"force_off_net"`
}

// GetSelectOutboundCallerID returns the value of SelectOutboundCallerID.
func (s *UpdateSiteDetailsReqPolicy) GetSelectOutboundCallerID() OptUpdateSiteDetailsReqPolicySelectOutboundCallerID {
	return s.SelectOutboundCallerID
}

// GetPersonalAudioLibrary returns the value of PersonalAudioLibrary.
func (s *UpdateSiteDetailsReqPolicy) GetPersonalAudioLibrary() OptUpdateSiteDetailsReqPolicyPersonalAudioLibrary {
	return s.PersonalAudioLibrary
}

// GetVoicemail returns the value of Voicemail.
func (s *UpdateSiteDetailsReqPolicy) GetVoicemail() OptUpdateSiteDetailsReqPolicyVoicemail {
	return s.Voicemail
}

// GetVoicemailTranscription returns the value of VoicemailTranscription.
func (s *UpdateSiteDetailsReqPolicy) GetVoicemailTranscription() OptUpdateSiteDetailsReqPolicyVoicemailTranscription {
	return s.VoicemailTranscription
}

// GetVoicemailNotificationByEmail returns the value of VoicemailNotificationByEmail.
func (s *UpdateSiteDetailsReqPolicy) GetVoicemailNotificationByEmail() OptUpdateSiteDetailsReqPolicyVoicemailNotificationByEmail {
	return s.VoicemailNotificationByEmail
}

// GetSharedVoicemailNotificationByEmail returns the value of SharedVoicemailNotificationByEmail.
func (s *UpdateSiteDetailsReqPolicy) GetSharedVoicemailNotificationByEmail() OptUpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail {
	return s.SharedVoicemailNotificationByEmail
}

// GetInternationalCalling returns the value of InternationalCalling.
func (s *UpdateSiteDetailsReqPolicy) GetInternationalCalling() OptUpdateSiteDetailsReqPolicyInternationalCalling {
	return s.InternationalCalling
}

// GetZoomPhoneOnMobile returns the value of ZoomPhoneOnMobile.
func (s *UpdateSiteDetailsReqPolicy) GetZoomPhoneOnMobile() OptUpdateSiteDetailsReqPolicyZoomPhoneOnMobile {
	return s.ZoomPhoneOnMobile
}

// GetSMS returns the value of SMS.
func (s *UpdateSiteDetailsReqPolicy) GetSMS() OptUpdateSiteDetailsReqPolicySMS {
	return s.SMS
}

// GetElevateToMeeting returns the value of ElevateToMeeting.
func (s *UpdateSiteDetailsReqPolicy) GetElevateToMeeting() OptUpdateSiteDetailsReqPolicyElevateToMeeting {
	return s.ElevateToMeeting
}

// GetHandOffToRoom returns the value of HandOffToRoom.
func (s *UpdateSiteDetailsReqPolicy) GetHandOffToRoom() OptUpdateSiteDetailsReqPolicyHandOffToRoom {
	return s.HandOffToRoom
}

// GetMobileSwitchToCarrier returns the value of MobileSwitchToCarrier.
func (s *UpdateSiteDetailsReqPolicy) GetMobileSwitchToCarrier() OptUpdateSiteDetailsReqPolicyMobileSwitchToCarrier {
	return s.MobileSwitchToCarrier
}

// GetDelegation returns the value of Delegation.
func (s *UpdateSiteDetailsReqPolicy) GetDelegation() OptUpdateSiteDetailsReqPolicyDelegation {
	return s.Delegation
}

// GetAdHocCallRecording returns the value of AdHocCallRecording.
func (s *UpdateSiteDetailsReqPolicy) GetAdHocCallRecording() OptUpdateSiteDetailsReqPolicyAdHocCallRecording {
	return s.AdHocCallRecording
}

// GetAutoCallRecording returns the value of AutoCallRecording.
func (s *UpdateSiteDetailsReqPolicy) GetAutoCallRecording() OptUpdateSiteDetailsReqPolicyAutoCallRecording {
	return s.AutoCallRecording
}

// GetCallHandlingForwardingToOtherUsers returns the value of CallHandlingForwardingToOtherUsers.
func (s *UpdateSiteDetailsReqPolicy) GetCallHandlingForwardingToOtherUsers() OptUpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers {
	return s.CallHandlingForwardingToOtherUsers
}

// GetCheckVoicemailsOverPhone returns the value of CheckVoicemailsOverPhone.
func (s *UpdateSiteDetailsReqPolicy) GetCheckVoicemailsOverPhone() OptUpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone {
	return s.CheckVoicemailsOverPhone
}

// GetCallQueuePickupCode returns the value of CallQueuePickupCode.
func (s *UpdateSiteDetailsReqPolicy) GetCallQueuePickupCode() OptUpdateSiteDetailsReqPolicyCallQueuePickupCode {
	return s.CallQueuePickupCode
}

// GetCallQueueOptOutReason returns the value of CallQueueOptOutReason.
func (s *UpdateSiteDetailsReqPolicy) GetCallQueueOptOutReason() OptUpdateSiteDetailsReqPolicyCallQueueOptOutReason {
	return s.CallQueueOptOutReason
}

// GetShowUserLastTransferredCall returns the value of ShowUserLastTransferredCall.
func (s *UpdateSiteDetailsReqPolicy) GetShowUserLastTransferredCall() OptBool {
	return s.ShowUserLastTransferredCall
}

// GetAutoDeleteDataAfterRetentionDuration returns the value of AutoDeleteDataAfterRetentionDuration.
func (s *UpdateSiteDetailsReqPolicy) GetAutoDeleteDataAfterRetentionDuration() OptUpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration {
	return s.AutoDeleteDataAfterRetentionDuration
}

// GetCallPark returns the value of CallPark.
func (s *UpdateSiteDetailsReqPolicy) GetCallPark() OptUpdateSiteDetailsReqPolicyCallPark {
	return s.CallPark
}

// GetCallOverflow returns the value of CallOverflow.
func (s *UpdateSiteDetailsReqPolicy) GetCallOverflow() OptUpdateSiteDetailsReqPolicyCallOverflow {
	return s.CallOverflow
}

// GetCallTransferring returns the value of CallTransferring.
func (s *UpdateSiteDetailsReqPolicy) GetCallTransferring() OptUpdateSiteDetailsReqPolicyCallTransferring {
	return s.CallTransferring
}

// GetAudioIntercom returns the value of AudioIntercom.
func (s *UpdateSiteDetailsReqPolicy) GetAudioIntercom() OptUpdateSiteDetailsReqPolicyAudioIntercom {
	return s.AudioIntercom
}

// GetBlockCallsWithoutCallerID returns the value of BlockCallsWithoutCallerID.
func (s *UpdateSiteDetailsReqPolicy) GetBlockCallsWithoutCallerID() OptUpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID {
	return s.BlockCallsWithoutCallerID
}

// GetBlockExternalCalls returns the value of BlockExternalCalls.
func (s *UpdateSiteDetailsReqPolicy) GetBlockExternalCalls() OptUpdateSiteDetailsReqPolicyBlockExternalCalls {
	return s.BlockExternalCalls
}

// GetForceOffNet returns the value of ForceOffNet.
func (s *UpdateSiteDetailsReqPolicy) GetForceOffNet() OptUpdateSiteDetailsReqPolicyForceOffNet {
	return s.ForceOffNet
}

// SetSelectOutboundCallerID sets the value of SelectOutboundCallerID.
func (s *UpdateSiteDetailsReqPolicy) SetSelectOutboundCallerID(val OptUpdateSiteDetailsReqPolicySelectOutboundCallerID) {
	s.SelectOutboundCallerID = val
}

// SetPersonalAudioLibrary sets the value of PersonalAudioLibrary.
func (s *UpdateSiteDetailsReqPolicy) SetPersonalAudioLibrary(val OptUpdateSiteDetailsReqPolicyPersonalAudioLibrary) {
	s.PersonalAudioLibrary = val
}

// SetVoicemail sets the value of Voicemail.
func (s *UpdateSiteDetailsReqPolicy) SetVoicemail(val OptUpdateSiteDetailsReqPolicyVoicemail) {
	s.Voicemail = val
}

// SetVoicemailTranscription sets the value of VoicemailTranscription.
func (s *UpdateSiteDetailsReqPolicy) SetVoicemailTranscription(val OptUpdateSiteDetailsReqPolicyVoicemailTranscription) {
	s.VoicemailTranscription = val
}

// SetVoicemailNotificationByEmail sets the value of VoicemailNotificationByEmail.
func (s *UpdateSiteDetailsReqPolicy) SetVoicemailNotificationByEmail(val OptUpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) {
	s.VoicemailNotificationByEmail = val
}

// SetSharedVoicemailNotificationByEmail sets the value of SharedVoicemailNotificationByEmail.
func (s *UpdateSiteDetailsReqPolicy) SetSharedVoicemailNotificationByEmail(val OptUpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail) {
	s.SharedVoicemailNotificationByEmail = val
}

// SetInternationalCalling sets the value of InternationalCalling.
func (s *UpdateSiteDetailsReqPolicy) SetInternationalCalling(val OptUpdateSiteDetailsReqPolicyInternationalCalling) {
	s.InternationalCalling = val
}

// SetZoomPhoneOnMobile sets the value of ZoomPhoneOnMobile.
func (s *UpdateSiteDetailsReqPolicy) SetZoomPhoneOnMobile(val OptUpdateSiteDetailsReqPolicyZoomPhoneOnMobile) {
	s.ZoomPhoneOnMobile = val
}

// SetSMS sets the value of SMS.
func (s *UpdateSiteDetailsReqPolicy) SetSMS(val OptUpdateSiteDetailsReqPolicySMS) {
	s.SMS = val
}

// SetElevateToMeeting sets the value of ElevateToMeeting.
func (s *UpdateSiteDetailsReqPolicy) SetElevateToMeeting(val OptUpdateSiteDetailsReqPolicyElevateToMeeting) {
	s.ElevateToMeeting = val
}

// SetHandOffToRoom sets the value of HandOffToRoom.
func (s *UpdateSiteDetailsReqPolicy) SetHandOffToRoom(val OptUpdateSiteDetailsReqPolicyHandOffToRoom) {
	s.HandOffToRoom = val
}

// SetMobileSwitchToCarrier sets the value of MobileSwitchToCarrier.
func (s *UpdateSiteDetailsReqPolicy) SetMobileSwitchToCarrier(val OptUpdateSiteDetailsReqPolicyMobileSwitchToCarrier) {
	s.MobileSwitchToCarrier = val
}

// SetDelegation sets the value of Delegation.
func (s *UpdateSiteDetailsReqPolicy) SetDelegation(val OptUpdateSiteDetailsReqPolicyDelegation) {
	s.Delegation = val
}

// SetAdHocCallRecording sets the value of AdHocCallRecording.
func (s *UpdateSiteDetailsReqPolicy) SetAdHocCallRecording(val OptUpdateSiteDetailsReqPolicyAdHocCallRecording) {
	s.AdHocCallRecording = val
}

// SetAutoCallRecording sets the value of AutoCallRecording.
func (s *UpdateSiteDetailsReqPolicy) SetAutoCallRecording(val OptUpdateSiteDetailsReqPolicyAutoCallRecording) {
	s.AutoCallRecording = val
}

// SetCallHandlingForwardingToOtherUsers sets the value of CallHandlingForwardingToOtherUsers.
func (s *UpdateSiteDetailsReqPolicy) SetCallHandlingForwardingToOtherUsers(val OptUpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers) {
	s.CallHandlingForwardingToOtherUsers = val
}

// SetCheckVoicemailsOverPhone sets the value of CheckVoicemailsOverPhone.
func (s *UpdateSiteDetailsReqPolicy) SetCheckVoicemailsOverPhone(val OptUpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone) {
	s.CheckVoicemailsOverPhone = val
}

// SetCallQueuePickupCode sets the value of CallQueuePickupCode.
func (s *UpdateSiteDetailsReqPolicy) SetCallQueuePickupCode(val OptUpdateSiteDetailsReqPolicyCallQueuePickupCode) {
	s.CallQueuePickupCode = val
}

// SetCallQueueOptOutReason sets the value of CallQueueOptOutReason.
func (s *UpdateSiteDetailsReqPolicy) SetCallQueueOptOutReason(val OptUpdateSiteDetailsReqPolicyCallQueueOptOutReason) {
	s.CallQueueOptOutReason = val
}

// SetShowUserLastTransferredCall sets the value of ShowUserLastTransferredCall.
func (s *UpdateSiteDetailsReqPolicy) SetShowUserLastTransferredCall(val OptBool) {
	s.ShowUserLastTransferredCall = val
}

// SetAutoDeleteDataAfterRetentionDuration sets the value of AutoDeleteDataAfterRetentionDuration.
func (s *UpdateSiteDetailsReqPolicy) SetAutoDeleteDataAfterRetentionDuration(val OptUpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) {
	s.AutoDeleteDataAfterRetentionDuration = val
}

// SetCallPark sets the value of CallPark.
func (s *UpdateSiteDetailsReqPolicy) SetCallPark(val OptUpdateSiteDetailsReqPolicyCallPark) {
	s.CallPark = val
}

// SetCallOverflow sets the value of CallOverflow.
func (s *UpdateSiteDetailsReqPolicy) SetCallOverflow(val OptUpdateSiteDetailsReqPolicyCallOverflow) {
	s.CallOverflow = val
}

// SetCallTransferring sets the value of CallTransferring.
func (s *UpdateSiteDetailsReqPolicy) SetCallTransferring(val OptUpdateSiteDetailsReqPolicyCallTransferring) {
	s.CallTransferring = val
}

// SetAudioIntercom sets the value of AudioIntercom.
func (s *UpdateSiteDetailsReqPolicy) SetAudioIntercom(val OptUpdateSiteDetailsReqPolicyAudioIntercom) {
	s.AudioIntercom = val
}

// SetBlockCallsWithoutCallerID sets the value of BlockCallsWithoutCallerID.
func (s *UpdateSiteDetailsReqPolicy) SetBlockCallsWithoutCallerID(val OptUpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID) {
	s.BlockCallsWithoutCallerID = val
}

// SetBlockExternalCalls sets the value of BlockExternalCalls.
func (s *UpdateSiteDetailsReqPolicy) SetBlockExternalCalls(val OptUpdateSiteDetailsReqPolicyBlockExternalCalls) {
	s.BlockExternalCalls = val
}

// SetForceOffNet sets the value of ForceOffNet.
func (s *UpdateSiteDetailsReqPolicy) SetForceOffNet(val OptUpdateSiteDetailsReqPolicyForceOffNet) {
	s.ForceOffNet = val
}

// A list of ad hoc call recording settings.
type UpdateSiteDetailsReqPolicyAdHocCallRecording struct {
	// Whether the current extension can record and save calls to the cloud.
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Whether a prompt plays to call participants when the recording has started.
	RecordingStartPrompt OptBool `json:"recording_start_prompt"`
	// Whether call recording transcription is enabled.
	RecordingTranscription OptBool                                                              `json:"recording_transcription"`
	PlayRecordingBeepTone  OptUpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone `json:"play_recording_beep_tone"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecording) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecording) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecording) GetLocked() OptBool {
	return s.Locked
}

// GetRecordingStartPrompt returns the value of RecordingStartPrompt.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecording) GetRecordingStartPrompt() OptBool {
	return s.RecordingStartPrompt
}

// GetRecordingTranscription returns the value of RecordingTranscription.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecording) GetRecordingTranscription() OptBool {
	return s.RecordingTranscription
}

// GetPlayRecordingBeepTone returns the value of PlayRecordingBeepTone.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecording) GetPlayRecordingBeepTone() OptUpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone {
	return s.PlayRecordingBeepTone
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecording) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecording) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecording) SetLocked(val OptBool) {
	s.Locked = val
}

// SetRecordingStartPrompt sets the value of RecordingStartPrompt.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecording) SetRecordingStartPrompt(val OptBool) {
	s.RecordingStartPrompt = val
}

// SetRecordingTranscription sets the value of RecordingTranscription.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecording) SetRecordingTranscription(val OptBool) {
	s.RecordingTranscription = val
}

// SetPlayRecordingBeepTone sets the value of PlayRecordingBeepTone.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecording) SetPlayRecordingBeepTone(val OptUpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone) {
	s.PlayRecordingBeepTone = val
}

type UpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone struct {
	// Whether to play a side tone beep for recorded users while recording. It displays only when ad hoc
	// call recording policy uses the new framework.
	Enable OptBool `json:"enable"`
	// The volume of the side tone beep. It displays only when `enable` is set to `true`.
	PlayBeepVolume OptInt `json:"play_beep_volume"`
	// The beep time interval in seconds. It displays only when `enable` is true.
	PlayBeepTimeInterval OptInt `json:"play_beep_time_interval"`
	// The beep sides. It displays only when `enable` is true.
	PlayBeepMember OptString `json:"play_beep_member"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone) GetEnable() OptBool {
	return s.Enable
}

// GetPlayBeepVolume returns the value of PlayBeepVolume.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone) GetPlayBeepVolume() OptInt {
	return s.PlayBeepVolume
}

// GetPlayBeepTimeInterval returns the value of PlayBeepTimeInterval.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone) GetPlayBeepTimeInterval() OptInt {
	return s.PlayBeepTimeInterval
}

// GetPlayBeepMember returns the value of PlayBeepMember.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone) GetPlayBeepMember() OptString {
	return s.PlayBeepMember
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone) SetEnable(val OptBool) {
	s.Enable = val
}

// SetPlayBeepVolume sets the value of PlayBeepVolume.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone) SetPlayBeepVolume(val OptInt) {
	s.PlayBeepVolume = val
}

// SetPlayBeepTimeInterval sets the value of PlayBeepTimeInterval.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone) SetPlayBeepTimeInterval(val OptInt) {
	s.PlayBeepTimeInterval = val
}

// SetPlayBeepMember sets the value of PlayBeepMember.
func (s *UpdateSiteDetailsReqPolicyAdHocCallRecordingPlayRecordingBeepTone) SetPlayBeepMember(val OptString) {
	s.PlayBeepMember = val
}

// Whether to allow hands-free peer-to-peer conversations. When an intercom call is received, the
// phone beeps to notify the user of the incoming intercom call, and the user's phone automatically
// answers the intercom call.
type UpdateSiteDetailsReqPolicyAudioIntercom struct {
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyAudioIntercom) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyAudioIntercom) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyAudioIntercom) GetLocked() OptBool {
	return s.Locked
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyAudioIntercom) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyAudioIntercom) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyAudioIntercom) SetLocked(val OptBool) {
	s.Locked = val
}

// A list of the site's automatic call recording settings.
type UpdateSiteDetailsReqPolicyAutoCallRecording struct {
	// Whether the stop and resume of automatic call recording is enabled.
	AllowStopResumeRecording OptBool `json:"allow_stop_resume_recording"`
	// Whether a call disconnects when there is an issue with the automatic call recording and the call
	// cannot reconnect after five seconds. This does **not** include emergency calls.
	DisconnectOnRecordingFailure OptBool `json:"disconnect_on_recording_failure"`
	// Whether automatic call recording is enabled.
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// The type of calls automatically recorded:
	// * `inbound`
	// * `outbound`
	// * `both`.
	RecordingCalls OptString `json:"recording_calls"`
	// Whether the `Press 1 to provide recording consent` is enabled.
	RecordingExplicitConsent OptBool `json:"recording_explicit_consent"`
	// Whether a prompt plays to call participants when the recording has started.
	RecordingStartPrompt OptBool `json:"recording_start_prompt"`
	// Whether call recording transcription is enabled.
	RecordingTranscription OptBool                                                             `json:"recording_transcription"`
	PlayRecordingBeepTone  OptUpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone `json:"play_recording_beep_tone"`
}

// GetAllowStopResumeRecording returns the value of AllowStopResumeRecording.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) GetAllowStopResumeRecording() OptBool {
	return s.AllowStopResumeRecording
}

// GetDisconnectOnRecordingFailure returns the value of DisconnectOnRecordingFailure.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) GetDisconnectOnRecordingFailure() OptBool {
	return s.DisconnectOnRecordingFailure
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) GetLocked() OptBool {
	return s.Locked
}

// GetRecordingCalls returns the value of RecordingCalls.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) GetRecordingCalls() OptString {
	return s.RecordingCalls
}

// GetRecordingExplicitConsent returns the value of RecordingExplicitConsent.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) GetRecordingExplicitConsent() OptBool {
	return s.RecordingExplicitConsent
}

// GetRecordingStartPrompt returns the value of RecordingStartPrompt.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) GetRecordingStartPrompt() OptBool {
	return s.RecordingStartPrompt
}

// GetRecordingTranscription returns the value of RecordingTranscription.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) GetRecordingTranscription() OptBool {
	return s.RecordingTranscription
}

// GetPlayRecordingBeepTone returns the value of PlayRecordingBeepTone.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) GetPlayRecordingBeepTone() OptUpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone {
	return s.PlayRecordingBeepTone
}

// SetAllowStopResumeRecording sets the value of AllowStopResumeRecording.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) SetAllowStopResumeRecording(val OptBool) {
	s.AllowStopResumeRecording = val
}

// SetDisconnectOnRecordingFailure sets the value of DisconnectOnRecordingFailure.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) SetDisconnectOnRecordingFailure(val OptBool) {
	s.DisconnectOnRecordingFailure = val
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) SetLocked(val OptBool) {
	s.Locked = val
}

// SetRecordingCalls sets the value of RecordingCalls.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) SetRecordingCalls(val OptString) {
	s.RecordingCalls = val
}

// SetRecordingExplicitConsent sets the value of RecordingExplicitConsent.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) SetRecordingExplicitConsent(val OptBool) {
	s.RecordingExplicitConsent = val
}

// SetRecordingStartPrompt sets the value of RecordingStartPrompt.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) SetRecordingStartPrompt(val OptBool) {
	s.RecordingStartPrompt = val
}

// SetRecordingTranscription sets the value of RecordingTranscription.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) SetRecordingTranscription(val OptBool) {
	s.RecordingTranscription = val
}

// SetPlayRecordingBeepTone sets the value of PlayRecordingBeepTone.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecording) SetPlayRecordingBeepTone(val OptUpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone) {
	s.PlayRecordingBeepTone = val
}

type UpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone struct {
	// Whether to play a side tone beep for recorded users while recording. It only displays when auto
	// call recording policy uses the new framework.
	Enable OptBool `json:"enable"`
	// The volume of the side tone beep. It displays only when `enable` is set to `true`.
	PlayBeepVolume OptInt `json:"play_beep_volume"`
	// The beep time interval in seconds. It displays only when `enable` is true.
	PlayBeepTimeInterval OptInt `json:"play_beep_time_interval"`
	// The beep sides. It displays only when `enable` is true.
	PlayBeepMember OptString `json:"play_beep_member"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone) GetEnable() OptBool {
	return s.Enable
}

// GetPlayBeepVolume returns the value of PlayBeepVolume.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone) GetPlayBeepVolume() OptInt {
	return s.PlayBeepVolume
}

// GetPlayBeepTimeInterval returns the value of PlayBeepTimeInterval.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone) GetPlayBeepTimeInterval() OptInt {
	return s.PlayBeepTimeInterval
}

// GetPlayBeepMember returns the value of PlayBeepMember.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone) GetPlayBeepMember() OptString {
	return s.PlayBeepMember
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone) SetEnable(val OptBool) {
	s.Enable = val
}

// SetPlayBeepVolume sets the value of PlayBeepVolume.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone) SetPlayBeepVolume(val OptInt) {
	s.PlayBeepVolume = val
}

// SetPlayBeepTimeInterval sets the value of PlayBeepTimeInterval.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone) SetPlayBeepTimeInterval(val OptInt) {
	s.PlayBeepTimeInterval = val
}

// SetPlayBeepMember sets the value of PlayBeepMember.
func (s *UpdateSiteDetailsReqPolicyAutoCallRecordingPlayRecordingBeepTone) SetPlayBeepMember(val OptString) {
	s.PlayBeepMember = val
}

type UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration struct {
	// This setting allows Zoom to automatically delete data after the retention duration has lapsed.
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool                                                                   `json:"locked"`
	Items  []UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDurationItemsItem `json:"items"`
	// The delete policy.
	// * 1 - soft delete
	// * 2 - permanent delete.
	DeleteType OptInt `json:"delete_type"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) GetLocked() OptBool {
	return s.Locked
}

// GetItems returns the value of Items.
func (s *UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) GetItems() []UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDurationItemsItem {
	return s.Items
}

// GetDeleteType returns the value of DeleteType.
func (s *UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) GetDeleteType() OptInt {
	return s.DeleteType
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) SetLocked(val OptBool) {
	s.Locked = val
}

// SetItems sets the value of Items.
func (s *UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) SetItems(val []UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDurationItemsItem) {
	s.Items = val
}

// SetDeleteType sets the value of DeleteType.
func (s *UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDuration) SetDeleteType(val OptInt) {
	s.DeleteType = val
}

type UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDurationItemsItem struct {
	// The data types.
	Type OptString `json:"type"`
	// The retention duration where -1 means unlimited. For units of time, see the `time_unit` below. For
	// `year`, the duration:-1, 1-10; for `day`, the duration:-1, 1-60; for `month`, the duration:-1,
	// 1-18.
	Duration OptInt `json:"duration"`
	// The unit of time.
	TimeUnit OptString `json:"time_unit"`
}

// GetType returns the value of Type.
func (s *UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDurationItemsItem) GetType() OptString {
	return s.Type
}

// GetDuration returns the value of Duration.
func (s *UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDurationItemsItem) GetDuration() OptInt {
	return s.Duration
}

// GetTimeUnit returns the value of TimeUnit.
func (s *UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDurationItemsItem) GetTimeUnit() OptString {
	return s.TimeUnit
}

// SetType sets the value of Type.
func (s *UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDurationItemsItem) SetType(val OptString) {
	s.Type = val
}

// SetDuration sets the value of Duration.
func (s *UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDurationItemsItem) SetDuration(val OptInt) {
	s.Duration = val
}

// SetTimeUnit sets the value of TimeUnit.
func (s *UpdateSiteDetailsReqPolicyAutoDeleteDataAfterRetentionDurationItemsItem) SetTimeUnit(val OptString) {
	s.TimeUnit = val
}

// Whether to calls without a caller ID are blocked.
type UpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID struct {
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID) GetLocked() OptBool {
	return s.Locked
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyBlockCallsWithoutCallerID) SetLocked(val OptBool) {
	s.Locked = val
}

// The rules for blocking external calls during business, closed, and holiday hours. This feature is
// only available for User, Zoom Room and Common Area.
type UpdateSiteDetailsReqPolicyBlockExternalCalls struct {
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings, which are compatible with the old
	// or new policy frameworks.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked             OptBool `json:"locked"`
	BlockBusinessHours OptBool `json:"block_business_hours"`
	BlockClosedHours   OptBool `json:"block_closed_hours"`
	BlockHolidayHours  OptBool `json:"block_holiday_hours"`
	// The action when a call is blocked. 9-Disconnect, 0-Forward to voicemail/videomail.
	BlockCallAction OptInt `json:"block_call_action"`
	// This setting applies only in the old policy framework. It applies changes to new extensions or all
	// extensions. `1` - All extension, `0` - New extensions.
	BlockCallChangeType OptInt                                                       `json:"block_call_change_type"`
	E2eEncryption       OptUpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption `json:"e2e_encryption"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCalls) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCalls) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCalls) GetLocked() OptBool {
	return s.Locked
}

// GetBlockBusinessHours returns the value of BlockBusinessHours.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCalls) GetBlockBusinessHours() OptBool {
	return s.BlockBusinessHours
}

// GetBlockClosedHours returns the value of BlockClosedHours.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCalls) GetBlockClosedHours() OptBool {
	return s.BlockClosedHours
}

// GetBlockHolidayHours returns the value of BlockHolidayHours.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCalls) GetBlockHolidayHours() OptBool {
	return s.BlockHolidayHours
}

// GetBlockCallAction returns the value of BlockCallAction.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCalls) GetBlockCallAction() OptInt {
	return s.BlockCallAction
}

// GetBlockCallChangeType returns the value of BlockCallChangeType.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCalls) GetBlockCallChangeType() OptInt {
	return s.BlockCallChangeType
}

// GetE2eEncryption returns the value of E2eEncryption.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCalls) GetE2eEncryption() OptUpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption {
	return s.E2eEncryption
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCalls) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCalls) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCalls) SetLocked(val OptBool) {
	s.Locked = val
}

// SetBlockBusinessHours sets the value of BlockBusinessHours.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCalls) SetBlockBusinessHours(val OptBool) {
	s.BlockBusinessHours = val
}

// SetBlockClosedHours sets the value of BlockClosedHours.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCalls) SetBlockClosedHours(val OptBool) {
	s.BlockClosedHours = val
}

// SetBlockHolidayHours sets the value of BlockHolidayHours.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCalls) SetBlockHolidayHours(val OptBool) {
	s.BlockHolidayHours = val
}

// SetBlockCallAction sets the value of BlockCallAction.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCalls) SetBlockCallAction(val OptInt) {
	s.BlockCallAction = val
}

// SetBlockCallChangeType sets the value of BlockCallChangeType.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCalls) SetBlockCallChangeType(val OptInt) {
	s.BlockCallChangeType = val
}

// SetE2eEncryption sets the value of E2eEncryption.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCalls) SetE2eEncryption(val OptUpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption) {
	s.E2eEncryption = val
}

type UpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption struct {
	// Whether to allow users to switch their calls to `End-to-End Encryption`. If users have `Automatic
	// Call Recording` turned on, they cannot use `End-to-End Encryption`.
	Enable OptBool `json:"enable"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Which level of administrator prohibits modifying the current settings.
	LockedBy OptString `json:"locked_by"`
	// Whether the current settings have been modified. If modified, they can be reset. The settings
	// display in the new policy framework.
	Modified OptBool `json:"modified"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption) GetEnable() OptBool {
	return s.Enable
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption) GetLocked() OptBool {
	return s.Locked
}

// GetLockedBy returns the value of LockedBy.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption) GetLockedBy() OptString {
	return s.LockedBy
}

// GetModified returns the value of Modified.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption) GetModified() OptBool {
	return s.Modified
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption) SetEnable(val OptBool) {
	s.Enable = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption) SetLocked(val OptBool) {
	s.Locked = val
}

// SetLockedBy sets the value of LockedBy.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption) SetLockedBy(val OptString) {
	s.LockedBy = val
}

// SetModified sets the value of Modified.
func (s *UpdateSiteDetailsReqPolicyBlockExternalCallsE2eEncryption) SetModified(val OptBool) {
	s.Modified = val
}

// Whether to allow users to forward their calls to other numbers.
type UpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers struct {
	Enable OptBool `json:"enable"`
	// `1` - Low restriction (external numbers not allowed)
	// `2` - Medium restriction (external numbers and external contacts not allowed)
	// `3` - High restriction (external numbers, external contacts and internal extensions without
	// inbound automatic call recording not allowed)
	// `4` - No restriction.
	CallForwardingType OptInt `json:"call_forwarding_type"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers) GetEnable() OptBool {
	return s.Enable
}

// GetCallForwardingType returns the value of CallForwardingType.
func (s *UpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers) GetCallForwardingType() OptInt {
	return s.CallForwardingType
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers) GetLocked() OptBool {
	return s.Locked
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers) SetEnable(val OptBool) {
	s.Enable = val
}

// SetCallForwardingType sets the value of CallForwardingType.
func (s *UpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers) SetCallForwardingType(val OptInt) {
	s.CallForwardingType = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyCallHandlingForwardingToOtherUsers) SetLocked(val OptBool) {
	s.Locked = val
}

type UpdateSiteDetailsReqPolicyCallOverflow struct {
	// `1` - Can forward to internal extensions and to external contacts
	// `2` - Can forward only to internal extensions
	// `3` - Can forward only to internal extensions that require inbound Automatic Call Recording
	// `4` - Can forward to internal extensions, external contacts, and external numbers.
	CallOverflowType OptInt `json:"call_overflow_type"`
	// Whether to allow users to forward their calls to other numbers.
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
}

// GetCallOverflowType returns the value of CallOverflowType.
func (s *UpdateSiteDetailsReqPolicyCallOverflow) GetCallOverflowType() OptInt {
	return s.CallOverflowType
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyCallOverflow) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyCallOverflow) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyCallOverflow) GetLocked() OptBool {
	return s.Locked
}

// SetCallOverflowType sets the value of CallOverflowType.
func (s *UpdateSiteDetailsReqPolicyCallOverflow) SetCallOverflowType(val OptInt) {
	s.CallOverflowType = val
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyCallOverflow) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyCallOverflow) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyCallOverflow) SetLocked(val OptBool) {
	s.Locked = val
}

type UpdateSiteDetailsReqPolicyCallPark struct {
	// The action when a parked call is not picked up.
	// `100` - Ring back to parker
	// `0` - Forward to voicemail of the parker
	// `9` - Disconnect
	// `50` - Forward to another extension.
	CallNotPickedUpAction OptInt `json:"call_not_picked_up_action"`
	// Whether to allow calls on hold to be resumed from another location with a retrieval code.
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// A time limit for parked calls in minutes. After the expiration period ends, the retrieval code is
	// no longer valid and a new code generates.
	ExpirationPeriod OptInt `json:"expiration_period"`
	// The extension's forwarding information when `call_not_picked_up_action` uses the `50` - Forward to
	// another extension.
	ForwardToExtensionID OptString `json:"forward_to_extension_id"`
	// This field chooses how parked calls are assigned to a BLF (Busy Lamp Field) key. Sequential
	// assignment parks the call at the next available BLF key. Random assignment parks the call at a
	// randomly selected BLF key.
	// `0` - Random
	// `1` - Sequential.
	Sequence OptInt `json:"sequence"`
}

// GetCallNotPickedUpAction returns the value of CallNotPickedUpAction.
func (s *UpdateSiteDetailsReqPolicyCallPark) GetCallNotPickedUpAction() OptInt {
	return s.CallNotPickedUpAction
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyCallPark) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyCallPark) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyCallPark) GetLocked() OptBool {
	return s.Locked
}

// GetExpirationPeriod returns the value of ExpirationPeriod.
func (s *UpdateSiteDetailsReqPolicyCallPark) GetExpirationPeriod() OptInt {
	return s.ExpirationPeriod
}

// GetForwardToExtensionID returns the value of ForwardToExtensionID.
func (s *UpdateSiteDetailsReqPolicyCallPark) GetForwardToExtensionID() OptString {
	return s.ForwardToExtensionID
}

// GetSequence returns the value of Sequence.
func (s *UpdateSiteDetailsReqPolicyCallPark) GetSequence() OptInt {
	return s.Sequence
}

// SetCallNotPickedUpAction sets the value of CallNotPickedUpAction.
func (s *UpdateSiteDetailsReqPolicyCallPark) SetCallNotPickedUpAction(val OptInt) {
	s.CallNotPickedUpAction = val
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyCallPark) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyCallPark) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyCallPark) SetLocked(val OptBool) {
	s.Locked = val
}

// SetExpirationPeriod sets the value of ExpirationPeriod.
func (s *UpdateSiteDetailsReqPolicyCallPark) SetExpirationPeriod(val OptInt) {
	s.ExpirationPeriod = val
}

// SetForwardToExtensionID sets the value of ForwardToExtensionID.
func (s *UpdateSiteDetailsReqPolicyCallPark) SetForwardToExtensionID(val OptString) {
	s.ForwardToExtensionID = val
}

// SetSequence sets the value of Sequence.
func (s *UpdateSiteDetailsReqPolicyCallPark) SetSequence(val OptInt) {
	s.Sequence = val
}

// The opt-out reasons for call queues. When enabled, call queue members need to select an opt-out
// reason when they turn off the `receive queue call` feature.
type UpdateSiteDetailsReqPolicyCallQueueOptOutReason struct {
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked                     OptBool                                                                         `json:"locked"`
	CallQueueOptOutReasonsList []UpdateSiteDetailsReqPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem `json:"call_queue_opt_out_reasons_list"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyCallQueueOptOutReason) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyCallQueueOptOutReason) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyCallQueueOptOutReason) GetLocked() OptBool {
	return s.Locked
}

// GetCallQueueOptOutReasonsList returns the value of CallQueueOptOutReasonsList.
func (s *UpdateSiteDetailsReqPolicyCallQueueOptOutReason) GetCallQueueOptOutReasonsList() []UpdateSiteDetailsReqPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem {
	return s.CallQueueOptOutReasonsList
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyCallQueueOptOutReason) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyCallQueueOptOutReason) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyCallQueueOptOutReason) SetLocked(val OptBool) {
	s.Locked = val
}

// SetCallQueueOptOutReasonsList sets the value of CallQueueOptOutReasonsList.
func (s *UpdateSiteDetailsReqPolicyCallQueueOptOutReason) SetCallQueueOptOutReasonsList(val []UpdateSiteDetailsReqPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem) {
	s.CallQueueOptOutReasonsList = val
}

type UpdateSiteDetailsReqPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem struct {
	Code OptString `json:"code"`
	// The reason for the system default. It cannot be edited.
	System OptBool `json:"system"`
	Enable OptBool `json:"enable"`
}

// GetCode returns the value of Code.
func (s *UpdateSiteDetailsReqPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem) GetCode() OptString {
	return s.Code
}

// GetSystem returns the value of System.
func (s *UpdateSiteDetailsReqPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem) GetSystem() OptBool {
	return s.System
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem) GetEnable() OptBool {
	return s.Enable
}

// SetCode sets the value of Code.
func (s *UpdateSiteDetailsReqPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem) SetCode(val OptString) {
	s.Code = val
}

// SetSystem sets the value of System.
func (s *UpdateSiteDetailsReqPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem) SetSystem(val OptBool) {
	s.System = val
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyCallQueueOptOutReasonCallQueueOptOutReasonsListItem) SetEnable(val OptBool) {
	s.Enable = val
}

// After enabling the feature, a unique pickup code generates for each queue, which can be customized
// in the Call Queue profile. Queue calls can be answered with the pickup code by the users under the
// same site.
type UpdateSiteDetailsReqPolicyCallQueuePickupCode struct {
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyCallQueuePickupCode) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyCallQueuePickupCode) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyCallQueuePickupCode) GetLocked() OptBool {
	return s.Locked
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyCallQueuePickupCode) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyCallQueuePickupCode) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyCallQueuePickupCode) SetLocked(val OptBool) {
	s.Locked = val
}

type UpdateSiteDetailsReqPolicyCallTransferring struct {
	// 1-No restriction
	// 2-Medium restriction (external numbers and external contacts not allowed)
	// 3-High restriction (external numbers, unrecorded external contacts, and internal extensions
	// without inbound automatic recording not allowed)
	// 4-Low restriction (external numbers not allowed).
	CallTransferringType OptInt `json:"call_transferring_type"`
	// Whether to allow users to warm or blind transfer their calls. This does not apply to warm transfer
	// on IP Phones except for Yealink.
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
}

// GetCallTransferringType returns the value of CallTransferringType.
func (s *UpdateSiteDetailsReqPolicyCallTransferring) GetCallTransferringType() OptInt {
	return s.CallTransferringType
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyCallTransferring) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyCallTransferring) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyCallTransferring) GetLocked() OptBool {
	return s.Locked
}

// SetCallTransferringType sets the value of CallTransferringType.
func (s *UpdateSiteDetailsReqPolicyCallTransferring) SetCallTransferringType(val OptInt) {
	s.CallTransferringType = val
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyCallTransferring) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyCallTransferring) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyCallTransferring) SetLocked(val OptBool) {
	s.Locked = val
}

// Whether to allow extension owners or members of a shared line group to check voicemails for
// extension numbers over the phone using PIN code.
type UpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone struct {
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone) GetLocked() OptBool {
	return s.Locked
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyCheckVoicemailsOverPhone) SetLocked(val OptBool) {
	s.Locked = val
}

// Whether the user can use [call delegation](https://support.zoom.
// us/hc/en-us/articles/360032881731-Setting-up-call-delegation-shared-lines-appearance-).
type UpdateSiteDetailsReqPolicyDelegation struct {
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyDelegation) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyDelegation) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyDelegation) GetLocked() OptBool {
	return s.Locked
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyDelegation) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyDelegation) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyDelegation) SetLocked(val OptBool) {
	s.Locked = val
}

type UpdateSiteDetailsReqPolicyElevateToMeeting struct {
	// Whether to allow users to elevate their phone calls to a meeting.
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyElevateToMeeting) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyElevateToMeeting) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyElevateToMeeting) GetLocked() OptBool {
	return s.Locked
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyElevateToMeeting) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyElevateToMeeting) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyElevateToMeeting) SetLocked(val OptBool) {
	s.Locked = val
}

// It requires the account to enable the `Force Calls out to the PSTN network` feature.
type UpdateSiteDetailsReqPolicyForceOffNet struct {
	// By enabling Force Off-Net, calls from users or extensions between sites route through the PSTN
	// network. Users in this site can only be allowed to be part of advanced functionality (eg. Auto
	// Receptionists, Call Queues) that is configured in this site. Users require a paid Zoom license and
	// BYOC-P phone numbers to call between sites.
	Enable OptBool `json:"enable"`
	// This setting allows extension only users to call to users outside the site.
	AllowExtensionOnlyUsersCallUsersOutsideSite OptBool `json:"allow_extension_only_users_call_users_outside_site"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyForceOffNet) GetEnable() OptBool {
	return s.Enable
}

// GetAllowExtensionOnlyUsersCallUsersOutsideSite returns the value of AllowExtensionOnlyUsersCallUsersOutsideSite.
func (s *UpdateSiteDetailsReqPolicyForceOffNet) GetAllowExtensionOnlyUsersCallUsersOutsideSite() OptBool {
	return s.AllowExtensionOnlyUsersCallUsersOutsideSite
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyForceOffNet) SetEnable(val OptBool) {
	s.Enable = val
}

// SetAllowExtensionOnlyUsersCallUsersOutsideSite sets the value of AllowExtensionOnlyUsersCallUsersOutsideSite.
func (s *UpdateSiteDetailsReqPolicyForceOffNet) SetAllowExtensionOnlyUsersCallUsersOutsideSite(val OptBool) {
	s.AllowExtensionOnlyUsersCallUsersOutsideSite = val
}

type UpdateSiteDetailsReqPolicyHandOffToRoom struct {
	// Whether to allow users to send a call to a Zoom Room.
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyHandOffToRoom) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyHandOffToRoom) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyHandOffToRoom) GetLocked() OptBool {
	return s.Locked
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyHandOffToRoom) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyHandOffToRoom) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyHandOffToRoom) SetLocked(val OptBool) {
	s.Locked = val
}

// Whether to allow extensions to place international calls outside of the calling plan.
type UpdateSiteDetailsReqPolicyInternationalCalling struct {
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyInternationalCalling) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyInternationalCalling) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyInternationalCalling) GetLocked() OptBool {
	return s.Locked
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyInternationalCalling) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyInternationalCalling) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyInternationalCalling) SetLocked(val OptBool) {
	s.Locked = val
}

type UpdateSiteDetailsReqPolicyMobileSwitchToCarrier struct {
	// Whether to allow the user to switch from a Zoom Phone to their native carrier.
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyMobileSwitchToCarrier) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyMobileSwitchToCarrier) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyMobileSwitchToCarrier) GetLocked() OptBool {
	return s.Locked
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyMobileSwitchToCarrier) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyMobileSwitchToCarrier) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyMobileSwitchToCarrier) SetLocked(val OptBool) {
	s.Locked = val
}

type UpdateSiteDetailsReqPolicyPersonalAudioLibrary struct {
	// This setting allows users to access, share, download, or delete voicemail or videomail.
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Whether to allow music on hold customization.
	AllowMusicOnHoldCustomization OptBool `json:"allow_music_on_hold_customization"`
	// Whether to allow voicemail and message greeting customization.
	AllowVoicemailAndMessageGreetingCustomization OptBool `json:"allow_voicemail_and_message_greeting_customization"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyPersonalAudioLibrary) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyPersonalAudioLibrary) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyPersonalAudioLibrary) GetLocked() OptBool {
	return s.Locked
}

// GetAllowMusicOnHoldCustomization returns the value of AllowMusicOnHoldCustomization.
func (s *UpdateSiteDetailsReqPolicyPersonalAudioLibrary) GetAllowMusicOnHoldCustomization() OptBool {
	return s.AllowMusicOnHoldCustomization
}

// GetAllowVoicemailAndMessageGreetingCustomization returns the value of AllowVoicemailAndMessageGreetingCustomization.
func (s *UpdateSiteDetailsReqPolicyPersonalAudioLibrary) GetAllowVoicemailAndMessageGreetingCustomization() OptBool {
	return s.AllowVoicemailAndMessageGreetingCustomization
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyPersonalAudioLibrary) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyPersonalAudioLibrary) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyPersonalAudioLibrary) SetLocked(val OptBool) {
	s.Locked = val
}

// SetAllowMusicOnHoldCustomization sets the value of AllowMusicOnHoldCustomization.
func (s *UpdateSiteDetailsReqPolicyPersonalAudioLibrary) SetAllowMusicOnHoldCustomization(val OptBool) {
	s.AllowMusicOnHoldCustomization = val
}

// SetAllowVoicemailAndMessageGreetingCustomization sets the value of AllowVoicemailAndMessageGreetingCustomization.
func (s *UpdateSiteDetailsReqPolicyPersonalAudioLibrary) SetAllowVoicemailAndMessageGreetingCustomization(val OptBool) {
	s.AllowVoicemailAndMessageGreetingCustomization = val
}

type UpdateSiteDetailsReqPolicySMS struct {
	// Whether to allow users, call queues, and auto receptionists to send and receive messages. You need
	// to assign a valid calling plan and phone number to each user for them to send and receive messages.
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Whether the user can send and receive international messages.
	InternationalSMS OptBool `json:"international_sms"`
	// The country which users can send and receive international messages. The [country ISO
	// code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	InternationalSMSCountries []string `json:"international_sms_countries"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicySMS) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicySMS) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicySMS) GetLocked() OptBool {
	return s.Locked
}

// GetInternationalSMS returns the value of InternationalSMS.
func (s *UpdateSiteDetailsReqPolicySMS) GetInternationalSMS() OptBool {
	return s.InternationalSMS
}

// GetInternationalSMSCountries returns the value of InternationalSMSCountries.
func (s *UpdateSiteDetailsReqPolicySMS) GetInternationalSMSCountries() []string {
	return s.InternationalSMSCountries
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicySMS) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicySMS) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicySMS) SetLocked(val OptBool) {
	s.Locked = val
}

// SetInternationalSMS sets the value of InternationalSMS.
func (s *UpdateSiteDetailsReqPolicySMS) SetInternationalSMS(val OptBool) {
	s.InternationalSMS = val
}

// SetInternationalSMSCountries sets the value of InternationalSMSCountries.
func (s *UpdateSiteDetailsReqPolicySMS) SetInternationalSMSCountries(val []string) {
	s.InternationalSMSCountries = val
}

type UpdateSiteDetailsReqPolicySelectOutboundCallerID struct {
	// Whether to allow the current extension to change the outbound caller ID when placing calls.
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
	// Whether to allow the current extension to hide outbound caller ID.
	AllowHideOutboundCallerID OptBool `json:"allow_hide_outbound_caller_id"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicySelectOutboundCallerID) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicySelectOutboundCallerID) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicySelectOutboundCallerID) GetLocked() OptBool {
	return s.Locked
}

// GetAllowHideOutboundCallerID returns the value of AllowHideOutboundCallerID.
func (s *UpdateSiteDetailsReqPolicySelectOutboundCallerID) GetAllowHideOutboundCallerID() OptBool {
	return s.AllowHideOutboundCallerID
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicySelectOutboundCallerID) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicySelectOutboundCallerID) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicySelectOutboundCallerID) SetLocked(val OptBool) {
	s.Locked = val
}

// SetAllowHideOutboundCallerID sets the value of AllowHideOutboundCallerID.
func (s *UpdateSiteDetailsReqPolicySelectOutboundCallerID) SetAllowHideOutboundCallerID(val OptBool) {
	s.AllowHideOutboundCallerID = val
}

// Once enabled, users receive email notification when there is a new shared voicemail or videomail.
// If the extension that shares the voicemail or videomail has disabled the voicemail or videomail
// notification by email policy, users will not receive notifications. This setting only displays
// when the voicemail policy uses the new policy framework.
type UpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail struct {
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail) GetLocked() OptBool {
	return s.Locked
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicySharedVoicemailNotificationByEmail) SetLocked(val OptBool) {
	s.Locked = val
}

type UpdateSiteDetailsReqPolicyVoicemail struct {
	// This setting allows users to delete their own voicemail. It displays only when using the new
	// policy framework.
	AllowDelete OptBool `json:"allow_delete"`
	// This setting allows users to download their own voicemail. It displays only when using the new
	// policy framework.
	AllowDownload OptBool `json:"allow_download"`
	// Whether to allow users to access, share, download, or delete the videomail.
	AllowVideomail OptBool `json:"allow_videomail"`
	// Whether to allow users to access, receive, or share voicemail and videomail.
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
}

// GetAllowDelete returns the value of AllowDelete.
func (s *UpdateSiteDetailsReqPolicyVoicemail) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *UpdateSiteDetailsReqPolicyVoicemail) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowVideomail returns the value of AllowVideomail.
func (s *UpdateSiteDetailsReqPolicyVoicemail) GetAllowVideomail() OptBool {
	return s.AllowVideomail
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyVoicemail) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyVoicemail) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyVoicemail) GetLocked() OptBool {
	return s.Locked
}

// SetAllowDelete sets the value of AllowDelete.
func (s *UpdateSiteDetailsReqPolicyVoicemail) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *UpdateSiteDetailsReqPolicyVoicemail) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowVideomail sets the value of AllowVideomail.
func (s *UpdateSiteDetailsReqPolicyVoicemail) SetAllowVideomail(val OptBool) {
	s.AllowVideomail = val
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyVoicemail) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyVoicemail) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyVoicemail) SetLocked(val OptBool) {
	s.Locked = val
}

// Once enabled, users receive email notifications when there is a new voicemail from users, call
// queues, auto receptionists, or shared line groups. Users who disabled the shared voicemail
// notification by email policy will not receive notifications. This setting only displays when the
// voicemail policy uses the new policy framework.
type UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail struct {
	// Whether to include the voicemail file.
	IncludeVoicemailFile OptBool `json:"include_voicemail_file"`
	// Whether to include the voicemail transcription.
	IncludeVoicemailTranscription OptBool `json:"include_voicemail_transcription"`
	// Whether to forward the voicemail to email.
	ForwardVoicemailToEmail OptBool `json:"forward_voicemail_to_email"`
	Enable                  OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
}

// GetIncludeVoicemailFile returns the value of IncludeVoicemailFile.
func (s *UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) GetIncludeVoicemailFile() OptBool {
	return s.IncludeVoicemailFile
}

// GetIncludeVoicemailTranscription returns the value of IncludeVoicemailTranscription.
func (s *UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) GetIncludeVoicemailTranscription() OptBool {
	return s.IncludeVoicemailTranscription
}

// GetForwardVoicemailToEmail returns the value of ForwardVoicemailToEmail.
func (s *UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) GetForwardVoicemailToEmail() OptBool {
	return s.ForwardVoicemailToEmail
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) GetLocked() OptBool {
	return s.Locked
}

// SetIncludeVoicemailFile sets the value of IncludeVoicemailFile.
func (s *UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) SetIncludeVoicemailFile(val OptBool) {
	s.IncludeVoicemailFile = val
}

// SetIncludeVoicemailTranscription sets the value of IncludeVoicemailTranscription.
func (s *UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) SetIncludeVoicemailTranscription(val OptBool) {
	s.IncludeVoicemailTranscription = val
}

// SetForwardVoicemailToEmail sets the value of ForwardVoicemailToEmail.
func (s *UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) SetForwardVoicemailToEmail(val OptBool) {
	s.ForwardVoicemailToEmail = val
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyVoicemailNotificationByEmail) SetLocked(val OptBool) {
	s.Locked = val
}

type UpdateSiteDetailsReqPolicyVoicemailTranscription struct {
	// Whether to allow users to access transcriptions of voicemails from the Zoom client, Zoom web
	// portal, and email notifications.
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyVoicemailTranscription) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyVoicemailTranscription) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyVoicemailTranscription) GetLocked() OptBool {
	return s.Locked
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyVoicemailTranscription) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyVoicemailTranscription) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyVoicemailTranscription) SetLocked(val OptBool) {
	s.Locked = val
}

type UpdateSiteDetailsReqPolicyZoomPhoneOnMobile struct {
	// Whether to allow calling and SMS/MMS functions on mobile.
	AllowCallingSMSMms OptBool `json:"allow_calling_sms_mms"`
	// Whether to allow users to use Zoom Phone on mobile clients (iOS, iPad OS and Android).
	Enable OptBool `json:"enable"`
	// Whether the current settings use the phone account's settings if the current settings use the new
	// policy framework.
	Reset OptBool `json:"reset"`
	// Whether the senior administrator allows users to modify the current settings.
	Locked OptBool `json:"locked"`
}

// GetAllowCallingSMSMms returns the value of AllowCallingSMSMms.
func (s *UpdateSiteDetailsReqPolicyZoomPhoneOnMobile) GetAllowCallingSMSMms() OptBool {
	return s.AllowCallingSMSMms
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteDetailsReqPolicyZoomPhoneOnMobile) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateSiteDetailsReqPolicyZoomPhoneOnMobile) GetReset() OptBool {
	return s.Reset
}

// GetLocked returns the value of Locked.
func (s *UpdateSiteDetailsReqPolicyZoomPhoneOnMobile) GetLocked() OptBool {
	return s.Locked
}

// SetAllowCallingSMSMms sets the value of AllowCallingSMSMms.
func (s *UpdateSiteDetailsReqPolicyZoomPhoneOnMobile) SetAllowCallingSMSMms(val OptBool) {
	s.AllowCallingSMSMms = val
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteDetailsReqPolicyZoomPhoneOnMobile) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateSiteDetailsReqPolicyZoomPhoneOnMobile) SetReset(val OptBool) {
	s.Reset = val
}

// SetLocked sets the value of Locked.
func (s *UpdateSiteDetailsReqPolicyZoomPhoneOnMobile) SetLocked(val OptBool) {
	s.Locked = val
}

// The short extension of the phone site.
type UpdateSiteDetailsReqShortExtension struct {
	// This setting specifies the length of short extension numbers for the site.
	Length OptInt `json:"length"`
	// The range list. After adding a short extension range, the newly assigned extension numbers start
	// from the `range_from` value.
	Ranges []UpdateSiteDetailsReqShortExtensionRangesItem `json:"ranges"`
}

// GetLength returns the value of Length.
func (s *UpdateSiteDetailsReqShortExtension) GetLength() OptInt {
	return s.Length
}

// GetRanges returns the value of Ranges.
func (s *UpdateSiteDetailsReqShortExtension) GetRanges() []UpdateSiteDetailsReqShortExtensionRangesItem {
	return s.Ranges
}

// SetLength sets the value of Length.
func (s *UpdateSiteDetailsReqShortExtension) SetLength(val OptInt) {
	s.Length = val
}

// SetRanges sets the value of Ranges.
func (s *UpdateSiteDetailsReqShortExtension) SetRanges(val []UpdateSiteDetailsReqShortExtensionRangesItem) {
	s.Ranges = val
}

type UpdateSiteDetailsReqShortExtensionRangesItem struct {
	// The short extension's starting range number, which can be a non-negative value. This value
	// **must** be less than the `range_to` value.
	RangeFrom OptString `json:"range_from"`
	// The short extension's ending range number, which can be a non-negative value. This value
	// **cannot** be less than or equal to  the `range_from` value.
	RangeTo OptString `json:"range_to"`
}

// GetRangeFrom returns the value of RangeFrom.
func (s *UpdateSiteDetailsReqShortExtensionRangesItem) GetRangeFrom() OptString {
	return s.RangeFrom
}

// GetRangeTo returns the value of RangeTo.
func (s *UpdateSiteDetailsReqShortExtensionRangesItem) GetRangeTo() OptString {
	return s.RangeTo
}

// SetRangeFrom sets the value of RangeFrom.
func (s *UpdateSiteDetailsReqShortExtensionRangesItem) SetRangeFrom(val OptString) {
	s.RangeFrom = val
}

// SetRangeTo sets the value of RangeTo.
func (s *UpdateSiteDetailsReqShortExtensionRangesItem) SetRangeTo(val OptString) {
	s.RangeTo = val
}

// If the account enabled the `Display Custom SIP Zone Options on Web Portal` feature, then selecting
// a SIP zone nearest to your site helps reduce latency and improve call quality.
type UpdateSiteDetailsReqSipZone struct {
	// The SIP zone ID.
	ID OptString `json:"id"`
}

// GetID returns the value of ID.
func (s *UpdateSiteDetailsReqSipZone) GetID() OptString {
	return s.ID
}

// SetID sets the value of ID.
func (s *UpdateSiteDetailsReqSipZone) SetID(val OptString) {
	s.ID = val
}

// UpdateSiteForUnassignedPhoneNumbersNoContent is response for UpdateSiteForUnassignedPhoneNumbers operation.
type UpdateSiteForUnassignedPhoneNumbersNoContent struct{}

type UpdateSiteForUnassignedPhoneNumbersReq struct {
	// The phone number ID or a phone number in E164 format.
	PhoneNumbers []string `json:"phone_numbers"`
}

// GetPhoneNumbers returns the value of PhoneNumbers.
func (s *UpdateSiteForUnassignedPhoneNumbersReq) GetPhoneNumbers() []string {
	return s.PhoneNumbers
}

// SetPhoneNumbers sets the value of PhoneNumbers.
func (s *UpdateSiteForUnassignedPhoneNumbersReq) SetPhoneNumbers(val []string) {
	s.PhoneNumbers = val
}

// UpdateSiteOutboundCallingCountriesOrRegionsNoContent is response for UpdateSiteOutboundCallingCountriesOrRegions operation.
type UpdateSiteOutboundCallingCountriesOrRegionsNoContent struct{}

type UpdateSiteOutboundCallingCountriesOrRegionsReq struct {
	CountryRegions []UpdateSiteOutboundCallingCountriesOrRegionsReqCountryRegionsItem `json:"country_regions"`
}

// GetCountryRegions returns the value of CountryRegions.
func (s *UpdateSiteOutboundCallingCountriesOrRegionsReq) GetCountryRegions() []UpdateSiteOutboundCallingCountriesOrRegionsReqCountryRegionsItem {
	return s.CountryRegions
}

// SetCountryRegions sets the value of CountryRegions.
func (s *UpdateSiteOutboundCallingCountriesOrRegionsReq) SetCountryRegions(val []UpdateSiteOutboundCallingCountriesOrRegionsReqCountryRegionsItem) {
	s.CountryRegions = val
}

type UpdateSiteOutboundCallingCountriesOrRegionsReqCountryRegionsItem struct {
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	IsoCode OptString `json:"iso_code"`
	// The default outbound calling rule.
	// `1` - Allowed
	// `2` - Blocked
	// `3` - Requires local number, caller ID, or plan
	// `4` - Requires the extension number and PIN code.
	Rule OptInt `json:"rule"`
	// Whether to delete existing exception rules. This field only appears when the default outbound
	// calling rule is changed. The default value is `false`.
	DeleteExistingExceptionRules OptBool `json:"delete_existing_exception_rules"`
}

// GetIsoCode returns the value of IsoCode.
func (s *UpdateSiteOutboundCallingCountriesOrRegionsReqCountryRegionsItem) GetIsoCode() OptString {
	return s.IsoCode
}

// GetRule returns the value of Rule.
func (s *UpdateSiteOutboundCallingCountriesOrRegionsReqCountryRegionsItem) GetRule() OptInt {
	return s.Rule
}

// GetDeleteExistingExceptionRules returns the value of DeleteExistingExceptionRules.
func (s *UpdateSiteOutboundCallingCountriesOrRegionsReqCountryRegionsItem) GetDeleteExistingExceptionRules() OptBool {
	return s.DeleteExistingExceptionRules
}

// SetIsoCode sets the value of IsoCode.
func (s *UpdateSiteOutboundCallingCountriesOrRegionsReqCountryRegionsItem) SetIsoCode(val OptString) {
	s.IsoCode = val
}

// SetRule sets the value of Rule.
func (s *UpdateSiteOutboundCallingCountriesOrRegionsReqCountryRegionsItem) SetRule(val OptInt) {
	s.Rule = val
}

// SetDeleteExistingExceptionRules sets the value of DeleteExistingExceptionRules.
func (s *UpdateSiteOutboundCallingCountriesOrRegionsReqCountryRegionsItem) SetDeleteExistingExceptionRules(val OptBool) {
	s.DeleteExistingExceptionRules = val
}

// UpdateSiteOutboundCallingExceptionRuleNoContent is response for UpdateSiteOutboundCallingExceptionRule operation.
type UpdateSiteOutboundCallingExceptionRuleNoContent struct{}

type UpdateSiteOutboundCallingExceptionRuleReq struct {
	ExceptionRule OptUpdateSiteOutboundCallingExceptionRuleReqExceptionRule `json:"exception_rule"`
}

// GetExceptionRule returns the value of ExceptionRule.
func (s *UpdateSiteOutboundCallingExceptionRuleReq) GetExceptionRule() OptUpdateSiteOutboundCallingExceptionRuleReqExceptionRule {
	return s.ExceptionRule
}

// SetExceptionRule sets the value of ExceptionRule.
func (s *UpdateSiteOutboundCallingExceptionRuleReq) SetExceptionRule(val OptUpdateSiteOutboundCallingExceptionRuleReqExceptionRule) {
	s.ExceptionRule = val
}

type UpdateSiteOutboundCallingExceptionRuleReqExceptionRule struct {
	// The match type for the exception rule. The values are `phoneNumber` or `prefix`.
	MatchType string `json:"match_type"`
	// The exception rule phone number prefix or the phone number without the country code.
	PrefixNumber string `json:"prefix_number"`
	// A comment to identify the exception rule number or prefix.
	Comment OptString `json:"comment"`
	// Whether the exception rule is active or inactive.
	// `active`: The exception rule is active.
	// `inactive`: The exception rule is inactive.
	Status string `json:"status"`
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	Country string `json:"country"`
}

// GetMatchType returns the value of MatchType.
func (s *UpdateSiteOutboundCallingExceptionRuleReqExceptionRule) GetMatchType() string {
	return s.MatchType
}

// GetPrefixNumber returns the value of PrefixNumber.
func (s *UpdateSiteOutboundCallingExceptionRuleReqExceptionRule) GetPrefixNumber() string {
	return s.PrefixNumber
}

// GetComment returns the value of Comment.
func (s *UpdateSiteOutboundCallingExceptionRuleReqExceptionRule) GetComment() OptString {
	return s.Comment
}

// GetStatus returns the value of Status.
func (s *UpdateSiteOutboundCallingExceptionRuleReqExceptionRule) GetStatus() string {
	return s.Status
}

// GetCountry returns the value of Country.
func (s *UpdateSiteOutboundCallingExceptionRuleReqExceptionRule) GetCountry() string {
	return s.Country
}

// SetMatchType sets the value of MatchType.
func (s *UpdateSiteOutboundCallingExceptionRuleReqExceptionRule) SetMatchType(val string) {
	s.MatchType = val
}

// SetPrefixNumber sets the value of PrefixNumber.
func (s *UpdateSiteOutboundCallingExceptionRuleReqExceptionRule) SetPrefixNumber(val string) {
	s.PrefixNumber = val
}

// SetComment sets the value of Comment.
func (s *UpdateSiteOutboundCallingExceptionRuleReqExceptionRule) SetComment(val OptString) {
	s.Comment = val
}

// SetStatus sets the value of Status.
func (s *UpdateSiteOutboundCallingExceptionRuleReqExceptionRule) SetStatus(val string) {
	s.Status = val
}

// SetCountry sets the value of Country.
func (s *UpdateSiteOutboundCallingExceptionRuleReqExceptionRule) SetCountry(val string) {
	s.Country = val
}

// UpdateSiteSettingNoContent is response for UpdateSiteSetting operation.
type UpdateSiteSettingNoContent struct{}

type UpdateSiteSettingReq struct {
	// Location-based routing setting of the site. Used for `local_based_routing` setting type.
	LocationBasedRouting OptUpdateSiteSettingReqLocationBasedRouting `json:"location_based_routing"`
	// Set the default business hours for all users, Zoom Rooms and Common Areas for the site. Used for
	// `business_hours` setting type.
	BusinessHours OptUpdateSiteSettingReqBusinessHours `json:"business_hours"`
	// Set the default closed hours for all users, Zoom Rooms, Common Areas, Auto Receptionists, Call
	// Queues and Shared Line Groups for the site. Used for `closed_hours` setting type.
	ClosedHours OptUpdateSiteSettingReqClosedHours `json:"closed_hours"`
	// Set the default holiday hours for all users, Zoom Rooms, Common Areas, Auto Receptionists, Call
	// Queues and Shared Line Groups for the site. Used for `holiday_hours` setting type.
	HolidayHours OptUpdateSiteSettingReqHolidayHours `json:"holiday_hours"`
	// The outbound caller ID setting. Used for `outbound_caller_id` setting type.
	OutboundCallerID OptUpdateSiteSettingReqOutboundCallerID `json:"outbound_caller_id"`
	// The audio prompt setting. Used for `audio_prompt` setting type.
	AudioPrompt OptUpdateSiteSettingReqAudioPrompt `json:"audio_prompt"`
	// The desk phone setting.
	DeskPhone jx.Raw `json:"desk_phone"`
	// The dial by name directory setting.
	DialByName OptUpdateSiteSettingReqDialByName `json:"dial_by_name"`
	// Billing account setting.
	BillingAccount OptUpdateSiteSettingReqBillingAccount `json:"billing_account"`
}

// GetLocationBasedRouting returns the value of LocationBasedRouting.
func (s *UpdateSiteSettingReq) GetLocationBasedRouting() OptUpdateSiteSettingReqLocationBasedRouting {
	return s.LocationBasedRouting
}

// GetBusinessHours returns the value of BusinessHours.
func (s *UpdateSiteSettingReq) GetBusinessHours() OptUpdateSiteSettingReqBusinessHours {
	return s.BusinessHours
}

// GetClosedHours returns the value of ClosedHours.
func (s *UpdateSiteSettingReq) GetClosedHours() OptUpdateSiteSettingReqClosedHours {
	return s.ClosedHours
}

// GetHolidayHours returns the value of HolidayHours.
func (s *UpdateSiteSettingReq) GetHolidayHours() OptUpdateSiteSettingReqHolidayHours {
	return s.HolidayHours
}

// GetOutboundCallerID returns the value of OutboundCallerID.
func (s *UpdateSiteSettingReq) GetOutboundCallerID() OptUpdateSiteSettingReqOutboundCallerID {
	return s.OutboundCallerID
}

// GetAudioPrompt returns the value of AudioPrompt.
func (s *UpdateSiteSettingReq) GetAudioPrompt() OptUpdateSiteSettingReqAudioPrompt {
	return s.AudioPrompt
}

// GetDeskPhone returns the value of DeskPhone.
func (s *UpdateSiteSettingReq) GetDeskPhone() jx.Raw {
	return s.DeskPhone
}

// GetDialByName returns the value of DialByName.
func (s *UpdateSiteSettingReq) GetDialByName() OptUpdateSiteSettingReqDialByName {
	return s.DialByName
}

// GetBillingAccount returns the value of BillingAccount.
func (s *UpdateSiteSettingReq) GetBillingAccount() OptUpdateSiteSettingReqBillingAccount {
	return s.BillingAccount
}

// SetLocationBasedRouting sets the value of LocationBasedRouting.
func (s *UpdateSiteSettingReq) SetLocationBasedRouting(val OptUpdateSiteSettingReqLocationBasedRouting) {
	s.LocationBasedRouting = val
}

// SetBusinessHours sets the value of BusinessHours.
func (s *UpdateSiteSettingReq) SetBusinessHours(val OptUpdateSiteSettingReqBusinessHours) {
	s.BusinessHours = val
}

// SetClosedHours sets the value of ClosedHours.
func (s *UpdateSiteSettingReq) SetClosedHours(val OptUpdateSiteSettingReqClosedHours) {
	s.ClosedHours = val
}

// SetHolidayHours sets the value of HolidayHours.
func (s *UpdateSiteSettingReq) SetHolidayHours(val OptUpdateSiteSettingReqHolidayHours) {
	s.HolidayHours = val
}

// SetOutboundCallerID sets the value of OutboundCallerID.
func (s *UpdateSiteSettingReq) SetOutboundCallerID(val OptUpdateSiteSettingReqOutboundCallerID) {
	s.OutboundCallerID = val
}

// SetAudioPrompt sets the value of AudioPrompt.
func (s *UpdateSiteSettingReq) SetAudioPrompt(val OptUpdateSiteSettingReqAudioPrompt) {
	s.AudioPrompt = val
}

// SetDeskPhone sets the value of DeskPhone.
func (s *UpdateSiteSettingReq) SetDeskPhone(val jx.Raw) {
	s.DeskPhone = val
}

// SetDialByName sets the value of DialByName.
func (s *UpdateSiteSettingReq) SetDialByName(val OptUpdateSiteSettingReqDialByName) {
	s.DialByName = val
}

// SetBillingAccount sets the value of BillingAccount.
func (s *UpdateSiteSettingReq) SetBillingAccount(val OptUpdateSiteSettingReqBillingAccount) {
	s.BillingAccount = val
}

// The audio prompt setting. Used for `audio_prompt` setting type.
type UpdateSiteSettingReqAudioPrompt struct {
	// Audio prompt language code.
	// American English: `en-US`
	// British English: `en-GB`
	// Espa&ntilde;ol americano: `es-US`
	// Fran&ccedil;ais canadien: `fr-CA`
	// Dansk: `da-DK`
	// Deutsch: `de-DE`
	// Espa&ntilde;ol: `es-ES`
	// Fran&ccedil;ais: `fr-FR`
	// Italiano: `it-IT`
	// Nederlands: `nl-NL`
	// Portugues portugal: `pt-PT`
	// Japanese: `ja-JP`
	// Korean: `ko-KO`
	// Portugues brasil: `pt-BR`
	// Chinese: `zh-CN`
	// Taiwanese: `zh-TW`.
	Language                                           OptString                                                                            `json:"language"`
	GreetingLeaveVoicemailInstruction                  OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction                  `json:"greeting_leave_voicemail_instruction"`
	GreetingMenuLeaveOrCheckVoicemail                  OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail                  `json:"greeting_menu_leave_or_check_voicemail"`
	GreetingMenuConnectToOperatorOrLeaveVoicemail      OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail      `json:"greeting_menu_connect_to_operator_or_leave_voicemail"`
	GreetingMenuConnectToOperatorLeaveOrCheckVoicemail OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail `json:"greeting_menu_connect_to_operator_leave_or_check_voicemail"`
	LeaveVoicemailIntroduction                         OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction                         `json:"leave_voicemail_introduction"`
	MessageGreeting                                    OptUpdateSiteSettingReqAudioPromptMessageGreeting                                    `json:"message_greeting"`
	// The audio prompt setting for respective hours.
	AudioWhileConnecting OptUpdateSiteSettingReqAudioPromptAudioWhileConnecting `json:"audio_while_connecting"`
	// The audio prompt setting for respective hours.
	HoldMusic OptUpdateSiteSettingReqAudioPromptHoldMusic `json:"hold_music"`
}

// GetLanguage returns the value of Language.
func (s *UpdateSiteSettingReqAudioPrompt) GetLanguage() OptString {
	return s.Language
}

// GetGreetingLeaveVoicemailInstruction returns the value of GreetingLeaveVoicemailInstruction.
func (s *UpdateSiteSettingReqAudioPrompt) GetGreetingLeaveVoicemailInstruction() OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction {
	return s.GreetingLeaveVoicemailInstruction
}

// GetGreetingMenuLeaveOrCheckVoicemail returns the value of GreetingMenuLeaveOrCheckVoicemail.
func (s *UpdateSiteSettingReqAudioPrompt) GetGreetingMenuLeaveOrCheckVoicemail() OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail {
	return s.GreetingMenuLeaveOrCheckVoicemail
}

// GetGreetingMenuConnectToOperatorOrLeaveVoicemail returns the value of GreetingMenuConnectToOperatorOrLeaveVoicemail.
func (s *UpdateSiteSettingReqAudioPrompt) GetGreetingMenuConnectToOperatorOrLeaveVoicemail() OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail {
	return s.GreetingMenuConnectToOperatorOrLeaveVoicemail
}

// GetGreetingMenuConnectToOperatorLeaveOrCheckVoicemail returns the value of GreetingMenuConnectToOperatorLeaveOrCheckVoicemail.
func (s *UpdateSiteSettingReqAudioPrompt) GetGreetingMenuConnectToOperatorLeaveOrCheckVoicemail() OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail {
	return s.GreetingMenuConnectToOperatorLeaveOrCheckVoicemail
}

// GetLeaveVoicemailIntroduction returns the value of LeaveVoicemailIntroduction.
func (s *UpdateSiteSettingReqAudioPrompt) GetLeaveVoicemailIntroduction() OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction {
	return s.LeaveVoicemailIntroduction
}

// GetMessageGreeting returns the value of MessageGreeting.
func (s *UpdateSiteSettingReqAudioPrompt) GetMessageGreeting() OptUpdateSiteSettingReqAudioPromptMessageGreeting {
	return s.MessageGreeting
}

// GetAudioWhileConnecting returns the value of AudioWhileConnecting.
func (s *UpdateSiteSettingReqAudioPrompt) GetAudioWhileConnecting() OptUpdateSiteSettingReqAudioPromptAudioWhileConnecting {
	return s.AudioWhileConnecting
}

// GetHoldMusic returns the value of HoldMusic.
func (s *UpdateSiteSettingReqAudioPrompt) GetHoldMusic() OptUpdateSiteSettingReqAudioPromptHoldMusic {
	return s.HoldMusic
}

// SetLanguage sets the value of Language.
func (s *UpdateSiteSettingReqAudioPrompt) SetLanguage(val OptString) {
	s.Language = val
}

// SetGreetingLeaveVoicemailInstruction sets the value of GreetingLeaveVoicemailInstruction.
func (s *UpdateSiteSettingReqAudioPrompt) SetGreetingLeaveVoicemailInstruction(val OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction) {
	s.GreetingLeaveVoicemailInstruction = val
}

// SetGreetingMenuLeaveOrCheckVoicemail sets the value of GreetingMenuLeaveOrCheckVoicemail.
func (s *UpdateSiteSettingReqAudioPrompt) SetGreetingMenuLeaveOrCheckVoicemail(val OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail) {
	s.GreetingMenuLeaveOrCheckVoicemail = val
}

// SetGreetingMenuConnectToOperatorOrLeaveVoicemail sets the value of GreetingMenuConnectToOperatorOrLeaveVoicemail.
func (s *UpdateSiteSettingReqAudioPrompt) SetGreetingMenuConnectToOperatorOrLeaveVoicemail(val OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) {
	s.GreetingMenuConnectToOperatorOrLeaveVoicemail = val
}

// SetGreetingMenuConnectToOperatorLeaveOrCheckVoicemail sets the value of GreetingMenuConnectToOperatorLeaveOrCheckVoicemail.
func (s *UpdateSiteSettingReqAudioPrompt) SetGreetingMenuConnectToOperatorLeaveOrCheckVoicemail(val OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) {
	s.GreetingMenuConnectToOperatorLeaveOrCheckVoicemail = val
}

// SetLeaveVoicemailIntroduction sets the value of LeaveVoicemailIntroduction.
func (s *UpdateSiteSettingReqAudioPrompt) SetLeaveVoicemailIntroduction(val OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction) {
	s.LeaveVoicemailIntroduction = val
}

// SetMessageGreeting sets the value of MessageGreeting.
func (s *UpdateSiteSettingReqAudioPrompt) SetMessageGreeting(val OptUpdateSiteSettingReqAudioPromptMessageGreeting) {
	s.MessageGreeting = val
}

// SetAudioWhileConnecting sets the value of AudioWhileConnecting.
func (s *UpdateSiteSettingReqAudioPrompt) SetAudioWhileConnecting(val OptUpdateSiteSettingReqAudioPromptAudioWhileConnecting) {
	s.AudioWhileConnecting = val
}

// SetHoldMusic sets the value of HoldMusic.
func (s *UpdateSiteSettingReqAudioPrompt) SetHoldMusic(val OptUpdateSiteSettingReqAudioPromptHoldMusic) {
	s.HoldMusic = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptAudioWhileConnecting struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptAudioWhileConnecting) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptAudioWhileConnecting) SetAudioID(val OptString) {
	s.AudioID = val
}

type UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction struct {
	// The audio prompt setting for respective hours.
	BusinessHours OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours `json:"business_hours"`
	// The audio prompt setting for respective hours.
	ClosedHours OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours `json:"closed_hours"`
	// The audio prompt setting for respective hours.
	HolidayHours OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours `json:"holiday_hours"`
}

// GetBusinessHours returns the value of BusinessHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction) GetBusinessHours() OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours {
	return s.BusinessHours
}

// GetClosedHours returns the value of ClosedHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction) GetClosedHours() OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours {
	return s.ClosedHours
}

// GetHolidayHours returns the value of HolidayHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction) GetHolidayHours() OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours {
	return s.HolidayHours
}

// SetBusinessHours sets the value of BusinessHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction) SetBusinessHours(val OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) {
	s.BusinessHours = val
}

// SetClosedHours sets the value of ClosedHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction) SetClosedHours(val OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours) {
	s.ClosedHours = val
}

// SetHolidayHours sets the value of HolidayHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstruction) SetHolidayHours(val OptUpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) {
	s.HolidayHours = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionBusinessHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionClosedHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingLeaveVoicemailInstructionHolidayHours) SetAudioID(val OptString) {
	s.AudioID = val
}

type UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail struct {
	// The audio prompt setting for respective hours.
	BusinessHours OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours `json:"business_hours"`
	// The audio prompt setting for respective hours.
	ClosedHours OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours `json:"closed_hours"`
	// The audio prompt setting for respective hours.
	HolidayHours OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours `json:"holiday_hours"`
}

// GetBusinessHours returns the value of BusinessHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) GetBusinessHours() OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours {
	return s.BusinessHours
}

// GetClosedHours returns the value of ClosedHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) GetClosedHours() OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours {
	return s.ClosedHours
}

// GetHolidayHours returns the value of HolidayHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) GetHolidayHours() OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours {
	return s.HolidayHours
}

// SetBusinessHours sets the value of BusinessHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) SetBusinessHours(val OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) {
	s.BusinessHours = val
}

// SetClosedHours sets the value of ClosedHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) SetClosedHours(val OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) {
	s.ClosedHours = val
}

// SetHolidayHours sets the value of HolidayHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemail) SetHolidayHours(val OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) {
	s.HolidayHours = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailBusinessHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailClosedHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorLeaveOrCheckVoicemailHolidayHours) SetAudioID(val OptString) {
	s.AudioID = val
}

type UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail struct {
	// The audio prompt setting for respective hours.
	BusinessHours OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours `json:"business_hours"`
	// The audio prompt setting for respective hours.
	ClosedHours OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours `json:"closed_hours"`
	// The audio prompt setting for respective hours.
	HolidayHours OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours `json:"holiday_hours"`
}

// GetBusinessHours returns the value of BusinessHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) GetBusinessHours() OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours {
	return s.BusinessHours
}

// GetClosedHours returns the value of ClosedHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) GetClosedHours() OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours {
	return s.ClosedHours
}

// GetHolidayHours returns the value of HolidayHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) GetHolidayHours() OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours {
	return s.HolidayHours
}

// SetBusinessHours sets the value of BusinessHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) SetBusinessHours(val OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) {
	s.BusinessHours = val
}

// SetClosedHours sets the value of ClosedHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) SetClosedHours(val OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) {
	s.ClosedHours = val
}

// SetHolidayHours sets the value of HolidayHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemail) SetHolidayHours(val OptUpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) {
	s.HolidayHours = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailBusinessHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailClosedHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuConnectToOperatorOrLeaveVoicemailHolidayHours) SetAudioID(val OptString) {
	s.AudioID = val
}

type UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail struct {
	// The audio prompt setting for respective hours.
	BusinessHours OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours `json:"business_hours"`
	// The audio prompt setting for respective hours.
	ClosedHours OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours `json:"closed_hours"`
	// The audio prompt setting for respective hours.
	HolidayHours OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours `json:"holiday_hours"`
}

// GetBusinessHours returns the value of BusinessHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail) GetBusinessHours() OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours {
	return s.BusinessHours
}

// GetClosedHours returns the value of ClosedHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail) GetClosedHours() OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours {
	return s.ClosedHours
}

// GetHolidayHours returns the value of HolidayHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail) GetHolidayHours() OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours {
	return s.HolidayHours
}

// SetBusinessHours sets the value of BusinessHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail) SetBusinessHours(val OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) {
	s.BusinessHours = val
}

// SetClosedHours sets the value of ClosedHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail) SetClosedHours(val OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) {
	s.ClosedHours = val
}

// SetHolidayHours sets the value of HolidayHours.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemail) SetHolidayHours(val OptUpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) {
	s.HolidayHours = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailBusinessHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailClosedHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptGreetingMenuLeaveOrCheckVoicemailHolidayHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptHoldMusic struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptHoldMusic) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptHoldMusic) SetAudioID(val OptString) {
	s.AudioID = val
}

type UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction struct {
	// The audio prompt setting for respective hours.
	BusinessHours OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours `json:"business_hours"`
	// The audio prompt setting for respective hours.
	ClosedHours OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours `json:"closed_hours"`
	// The audio prompt setting for respective hours.
	HolidayHours OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours `json:"holiday_hours"`
}

// GetBusinessHours returns the value of BusinessHours.
func (s *UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction) GetBusinessHours() OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours {
	return s.BusinessHours
}

// GetClosedHours returns the value of ClosedHours.
func (s *UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction) GetClosedHours() OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours {
	return s.ClosedHours
}

// GetHolidayHours returns the value of HolidayHours.
func (s *UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction) GetHolidayHours() OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours {
	return s.HolidayHours
}

// SetBusinessHours sets the value of BusinessHours.
func (s *UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction) SetBusinessHours(val OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours) {
	s.BusinessHours = val
}

// SetClosedHours sets the value of ClosedHours.
func (s *UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction) SetClosedHours(val OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours) {
	s.ClosedHours = val
}

// SetHolidayHours sets the value of HolidayHours.
func (s *UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroduction) SetHolidayHours(val OptUpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours) {
	s.HolidayHours = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionBusinessHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionClosedHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptLeaveVoicemailIntroductionHolidayHours) SetAudioID(val OptString) {
	s.AudioID = val
}

type UpdateSiteSettingReqAudioPromptMessageGreeting struct {
	// The audio prompt setting for respective hours.
	BusinessHours OptUpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours `json:"business_hours"`
	// The audio prompt setting for respective hours.
	ClosedHours OptUpdateSiteSettingReqAudioPromptMessageGreetingClosedHours `json:"closed_hours"`
	// The audio prompt setting for respective hours.
	HolidayHours OptUpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours `json:"holiday_hours"`
}

// GetBusinessHours returns the value of BusinessHours.
func (s *UpdateSiteSettingReqAudioPromptMessageGreeting) GetBusinessHours() OptUpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours {
	return s.BusinessHours
}

// GetClosedHours returns the value of ClosedHours.
func (s *UpdateSiteSettingReqAudioPromptMessageGreeting) GetClosedHours() OptUpdateSiteSettingReqAudioPromptMessageGreetingClosedHours {
	return s.ClosedHours
}

// GetHolidayHours returns the value of HolidayHours.
func (s *UpdateSiteSettingReqAudioPromptMessageGreeting) GetHolidayHours() OptUpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours {
	return s.HolidayHours
}

// SetBusinessHours sets the value of BusinessHours.
func (s *UpdateSiteSettingReqAudioPromptMessageGreeting) SetBusinessHours(val OptUpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours) {
	s.BusinessHours = val
}

// SetClosedHours sets the value of ClosedHours.
func (s *UpdateSiteSettingReqAudioPromptMessageGreeting) SetClosedHours(val OptUpdateSiteSettingReqAudioPromptMessageGreetingClosedHours) {
	s.ClosedHours = val
}

// SetHolidayHours sets the value of HolidayHours.
func (s *UpdateSiteSettingReqAudioPromptMessageGreeting) SetHolidayHours(val OptUpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours) {
	s.HolidayHours = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptMessageGreetingBusinessHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptMessageGreetingClosedHours struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptMessageGreetingClosedHours) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptMessageGreetingClosedHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// The audio prompt setting for respective hours.
type UpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours struct {
	// The unique identifier of the audio item.
	AudioID OptString `json:"audio_id"`
}

// GetAudioID returns the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours) GetAudioID() OptString {
	return s.AudioID
}

// SetAudioID sets the value of AudioID.
func (s *UpdateSiteSettingReqAudioPromptMessageGreetingHolidayHours) SetAudioID(val OptString) {
	s.AudioID = val
}

// Billing account setting.
type UpdateSiteSettingReqBillingAccount struct {
	// Billing account ID.
	ID OptString `json:"id"`
}

// GetID returns the value of ID.
func (s *UpdateSiteSettingReqBillingAccount) GetID() OptString {
	return s.ID
}

// SetID sets the value of ID.
func (s *UpdateSiteSettingReqBillingAccount) SetID(val OptString) {
	s.ID = val
}

// Set the default business hours for all users, Zoom Rooms and Common Areas for the site. Used for
// `business_hours` setting type.
type UpdateSiteSettingReqBusinessHours struct {
	// Business Hour Type `1`- 24 hours a Day, 7 days a week, `2`- Custom hours.
	CustomHourType OptInt `json:"custom_hour_type"`
	// The settings for custom business hours.
	CustomHours []UpdateSiteSettingReqBusinessHoursCustomHoursItem `json:"custom_hours"`
	// Set the default overflow for business hours for users, Call Queues and Shared Line Groups.
	Overflow OptUpdateSiteSettingReqBusinessHoursOverflow `json:"overflow"`
}

// GetCustomHourType returns the value of CustomHourType.
func (s *UpdateSiteSettingReqBusinessHours) GetCustomHourType() OptInt {
	return s.CustomHourType
}

// GetCustomHours returns the value of CustomHours.
func (s *UpdateSiteSettingReqBusinessHours) GetCustomHours() []UpdateSiteSettingReqBusinessHoursCustomHoursItem {
	return s.CustomHours
}

// GetOverflow returns the value of Overflow.
func (s *UpdateSiteSettingReqBusinessHours) GetOverflow() OptUpdateSiteSettingReqBusinessHoursOverflow {
	return s.Overflow
}

// SetCustomHourType sets the value of CustomHourType.
func (s *UpdateSiteSettingReqBusinessHours) SetCustomHourType(val OptInt) {
	s.CustomHourType = val
}

// SetCustomHours sets the value of CustomHours.
func (s *UpdateSiteSettingReqBusinessHours) SetCustomHours(val []UpdateSiteSettingReqBusinessHoursCustomHoursItem) {
	s.CustomHours = val
}

// SetOverflow sets the value of Overflow.
func (s *UpdateSiteSettingReqBusinessHours) SetOverflow(val OptUpdateSiteSettingReqBusinessHoursOverflow) {
	s.Overflow = val
}

type UpdateSiteSettingReqBusinessHoursCustomHoursItem struct {
	// The start time for custom hours in `HH:mm` format.
	From OptString `json:"from"`
	// The end time custom hours in `HH:mm` format.
	To OptString `json:"to"`
	// The type of custom hours:
	// * `0` &mdash; Disabled.
	// * `1` &mdash; 24 hours.
	// * `2` &mdash; Customized hours.
	Type OptInt `json:"type"`
	// The day of the week:
	// * `1` &mdash; Sunday
	// * `2` &mdash; Monday
	// * `3` &mdash; Tuesday
	// * `4` &mdash; Wednesday
	// * `5` &mdash; Thursday
	// * `6` &mdash; Friday
	// * `7` &mdash; Saturday.
	Weekday OptInt `json:"weekday"`
}

// GetFrom returns the value of From.
func (s *UpdateSiteSettingReqBusinessHoursCustomHoursItem) GetFrom() OptString {
	return s.From
}

// GetTo returns the value of To.
func (s *UpdateSiteSettingReqBusinessHoursCustomHoursItem) GetTo() OptString {
	return s.To
}

// GetType returns the value of Type.
func (s *UpdateSiteSettingReqBusinessHoursCustomHoursItem) GetType() OptInt {
	return s.Type
}

// GetWeekday returns the value of Weekday.
func (s *UpdateSiteSettingReqBusinessHoursCustomHoursItem) GetWeekday() OptInt {
	return s.Weekday
}

// SetFrom sets the value of From.
func (s *UpdateSiteSettingReqBusinessHoursCustomHoursItem) SetFrom(val OptString) {
	s.From = val
}

// SetTo sets the value of To.
func (s *UpdateSiteSettingReqBusinessHoursCustomHoursItem) SetTo(val OptString) {
	s.To = val
}

// SetType sets the value of Type.
func (s *UpdateSiteSettingReqBusinessHoursCustomHoursItem) SetType(val OptInt) {
	s.Type = val
}

// SetWeekday sets the value of Weekday.
func (s *UpdateSiteSettingReqBusinessHoursCustomHoursItem) SetWeekday(val OptInt) {
	s.Weekday = val
}

// Set the default overflow for business hours for users, Call Queues and Shared Line Groups.
type UpdateSiteSettingReqBusinessHoursOverflow struct {
	// Option to allow callers to reach an operator.
	AllowCallerToReachOperator OptBool `json:"allow_caller_to_reach_operator"`
	// The operator to allow callers to reach.
	Operator OptUpdateSiteSettingReqBusinessHoursOverflowOperator `json:"operator"`
	// Option to allow callers to check voicemail.
	AllowCallerToCheckVoicemail OptBool `json:"allow_caller_to_check_voicemail"`
}

// GetAllowCallerToReachOperator returns the value of AllowCallerToReachOperator.
func (s *UpdateSiteSettingReqBusinessHoursOverflow) GetAllowCallerToReachOperator() OptBool {
	return s.AllowCallerToReachOperator
}

// GetOperator returns the value of Operator.
func (s *UpdateSiteSettingReqBusinessHoursOverflow) GetOperator() OptUpdateSiteSettingReqBusinessHoursOverflowOperator {
	return s.Operator
}

// GetAllowCallerToCheckVoicemail returns the value of AllowCallerToCheckVoicemail.
func (s *UpdateSiteSettingReqBusinessHoursOverflow) GetAllowCallerToCheckVoicemail() OptBool {
	return s.AllowCallerToCheckVoicemail
}

// SetAllowCallerToReachOperator sets the value of AllowCallerToReachOperator.
func (s *UpdateSiteSettingReqBusinessHoursOverflow) SetAllowCallerToReachOperator(val OptBool) {
	s.AllowCallerToReachOperator = val
}

// SetOperator sets the value of Operator.
func (s *UpdateSiteSettingReqBusinessHoursOverflow) SetOperator(val OptUpdateSiteSettingReqBusinessHoursOverflowOperator) {
	s.Operator = val
}

// SetAllowCallerToCheckVoicemail sets the value of AllowCallerToCheckVoicemail.
func (s *UpdateSiteSettingReqBusinessHoursOverflow) SetAllowCallerToCheckVoicemail(val OptBool) {
	s.AllowCallerToCheckVoicemail = val
}

// The operator to allow callers to reach.
type UpdateSiteSettingReqBusinessHoursOverflowOperator struct {
	// The extension id.
	ExtensionID OptString `json:"extension_id"`
}

// GetExtensionID returns the value of ExtensionID.
func (s *UpdateSiteSettingReqBusinessHoursOverflowOperator) GetExtensionID() OptString {
	return s.ExtensionID
}

// SetExtensionID sets the value of ExtensionID.
func (s *UpdateSiteSettingReqBusinessHoursOverflowOperator) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// Set the default closed hours for all users, Zoom Rooms, Common Areas, Auto Receptionists, Call
// Queues and Shared Line Groups for the site. Used for `closed_hours` setting type.
type UpdateSiteSettingReqClosedHours struct {
	// Set the default overflow for business hours for users, Call Queues and Shared Line Groups.
	Overflow OptUpdateSiteSettingReqClosedHoursOverflow `json:"overflow"`
}

// GetOverflow returns the value of Overflow.
func (s *UpdateSiteSettingReqClosedHours) GetOverflow() OptUpdateSiteSettingReqClosedHoursOverflow {
	return s.Overflow
}

// SetOverflow sets the value of Overflow.
func (s *UpdateSiteSettingReqClosedHours) SetOverflow(val OptUpdateSiteSettingReqClosedHoursOverflow) {
	s.Overflow = val
}

// Set the default overflow for business hours for users, Call Queues and Shared Line Groups.
type UpdateSiteSettingReqClosedHoursOverflow struct {
	// Option to allow callers to reach an operator.
	AllowCallerToReachOperator OptBool `json:"allow_caller_to_reach_operator"`
	// The operator to allow callers to reach.
	Operator OptUpdateSiteSettingReqClosedHoursOverflowOperator `json:"operator"`
	// Option to allow callers to check voicemail.
	AllowCallerToCheckVoicemail OptBool `json:"allow_caller_to_check_voicemail"`
}

// GetAllowCallerToReachOperator returns the value of AllowCallerToReachOperator.
func (s *UpdateSiteSettingReqClosedHoursOverflow) GetAllowCallerToReachOperator() OptBool {
	return s.AllowCallerToReachOperator
}

// GetOperator returns the value of Operator.
func (s *UpdateSiteSettingReqClosedHoursOverflow) GetOperator() OptUpdateSiteSettingReqClosedHoursOverflowOperator {
	return s.Operator
}

// GetAllowCallerToCheckVoicemail returns the value of AllowCallerToCheckVoicemail.
func (s *UpdateSiteSettingReqClosedHoursOverflow) GetAllowCallerToCheckVoicemail() OptBool {
	return s.AllowCallerToCheckVoicemail
}

// SetAllowCallerToReachOperator sets the value of AllowCallerToReachOperator.
func (s *UpdateSiteSettingReqClosedHoursOverflow) SetAllowCallerToReachOperator(val OptBool) {
	s.AllowCallerToReachOperator = val
}

// SetOperator sets the value of Operator.
func (s *UpdateSiteSettingReqClosedHoursOverflow) SetOperator(val OptUpdateSiteSettingReqClosedHoursOverflowOperator) {
	s.Operator = val
}

// SetAllowCallerToCheckVoicemail sets the value of AllowCallerToCheckVoicemail.
func (s *UpdateSiteSettingReqClosedHoursOverflow) SetAllowCallerToCheckVoicemail(val OptBool) {
	s.AllowCallerToCheckVoicemail = val
}

// The operator to allow callers to reach.
type UpdateSiteSettingReqClosedHoursOverflowOperator struct {
	// The extension id.
	ExtensionID OptString `json:"extension_id"`
}

// GetExtensionID returns the value of ExtensionID.
func (s *UpdateSiteSettingReqClosedHoursOverflowOperator) GetExtensionID() OptString {
	return s.ExtensionID
}

// SetExtensionID sets the value of ExtensionID.
func (s *UpdateSiteSettingReqClosedHoursOverflowOperator) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// The dial by name directory setting.
type UpdateSiteSettingReqDialByName struct {
	// Whether to allow callers to search for an extension by the first or last name. Currently supports
	// English only.
	Status OptBool `json:"status"`
	// Whether to inherit the dial by name directory maintained at the account level. This directory is
	// read-only to sites.
	Inherit OptBool `json:"inherit"`
	// Search extensions by first or last name. Callers must enter at least 2 characters to perform a
	// name search.
	Rule OptString `json:"rule"`
}

// GetStatus returns the value of Status.
func (s *UpdateSiteSettingReqDialByName) GetStatus() OptBool {
	return s.Status
}

// GetInherit returns the value of Inherit.
func (s *UpdateSiteSettingReqDialByName) GetInherit() OptBool {
	return s.Inherit
}

// GetRule returns the value of Rule.
func (s *UpdateSiteSettingReqDialByName) GetRule() OptString {
	return s.Rule
}

// SetStatus sets the value of Status.
func (s *UpdateSiteSettingReqDialByName) SetStatus(val OptBool) {
	s.Status = val
}

// SetInherit sets the value of Inherit.
func (s *UpdateSiteSettingReqDialByName) SetInherit(val OptBool) {
	s.Inherit = val
}

// SetRule sets the value of Rule.
func (s *UpdateSiteSettingReqDialByName) SetRule(val OptString) {
	s.Rule = val
}

// Set the default holiday hours for all users, Zoom Rooms, Common Areas, Auto Receptionists, Call
// Queues and Shared Line Groups for the site. Used for `holiday_hours` setting type.
type UpdateSiteSettingReqHolidayHours struct {
	// The settings for holiday hours.
	Holidays []UpdateSiteSettingReqHolidayHoursHolidaysItem `json:"holidays"`
	// Set the default overflow for business hours for users, Call Queues and Shared Line Groups.
	Overflow OptUpdateSiteSettingReqHolidayHoursOverflow `json:"overflow"`
}

// GetHolidays returns the value of Holidays.
func (s *UpdateSiteSettingReqHolidayHours) GetHolidays() []UpdateSiteSettingReqHolidayHoursHolidaysItem {
	return s.Holidays
}

// GetOverflow returns the value of Overflow.
func (s *UpdateSiteSettingReqHolidayHours) GetOverflow() OptUpdateSiteSettingReqHolidayHoursOverflow {
	return s.Overflow
}

// SetHolidays sets the value of Holidays.
func (s *UpdateSiteSettingReqHolidayHours) SetHolidays(val []UpdateSiteSettingReqHolidayHoursHolidaysItem) {
	s.Holidays = val
}

// SetOverflow sets the value of Overflow.
func (s *UpdateSiteSettingReqHolidayHours) SetOverflow(val OptUpdateSiteSettingReqHolidayHoursOverflow) {
	s.Overflow = val
}

type UpdateSiteSettingReqHolidayHoursHolidaysItem struct {
	// The holiday ID.
	HolidayID OptString `json:"holiday_id"`
	// The name of the holiday.
	Name OptString `json:"name"`
	// The holiday start date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.
	From OptDateTime `json:"from"`
	// The holiday end date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.
	To OptDateTime `json:"to"`
}

// GetHolidayID returns the value of HolidayID.
func (s *UpdateSiteSettingReqHolidayHoursHolidaysItem) GetHolidayID() OptString {
	return s.HolidayID
}

// GetName returns the value of Name.
func (s *UpdateSiteSettingReqHolidayHoursHolidaysItem) GetName() OptString {
	return s.Name
}

// GetFrom returns the value of From.
func (s *UpdateSiteSettingReqHolidayHoursHolidaysItem) GetFrom() OptDateTime {
	return s.From
}

// GetTo returns the value of To.
func (s *UpdateSiteSettingReqHolidayHoursHolidaysItem) GetTo() OptDateTime {
	return s.To
}

// SetHolidayID sets the value of HolidayID.
func (s *UpdateSiteSettingReqHolidayHoursHolidaysItem) SetHolidayID(val OptString) {
	s.HolidayID = val
}

// SetName sets the value of Name.
func (s *UpdateSiteSettingReqHolidayHoursHolidaysItem) SetName(val OptString) {
	s.Name = val
}

// SetFrom sets the value of From.
func (s *UpdateSiteSettingReqHolidayHoursHolidaysItem) SetFrom(val OptDateTime) {
	s.From = val
}

// SetTo sets the value of To.
func (s *UpdateSiteSettingReqHolidayHoursHolidaysItem) SetTo(val OptDateTime) {
	s.To = val
}

// Set the default overflow for business hours for users, Call Queues and Shared Line Groups.
type UpdateSiteSettingReqHolidayHoursOverflow struct {
	// Option to allow callers to reach an operator.
	AllowCallerToReachOperator OptBool `json:"allow_caller_to_reach_operator"`
	// The operator to allow callers to reach.
	Operator OptUpdateSiteSettingReqHolidayHoursOverflowOperator `json:"operator"`
	// Option to allow callers to check voicemail.
	AllowCallerToCheckVoicemail OptBool `json:"allow_caller_to_check_voicemail"`
}

// GetAllowCallerToReachOperator returns the value of AllowCallerToReachOperator.
func (s *UpdateSiteSettingReqHolidayHoursOverflow) GetAllowCallerToReachOperator() OptBool {
	return s.AllowCallerToReachOperator
}

// GetOperator returns the value of Operator.
func (s *UpdateSiteSettingReqHolidayHoursOverflow) GetOperator() OptUpdateSiteSettingReqHolidayHoursOverflowOperator {
	return s.Operator
}

// GetAllowCallerToCheckVoicemail returns the value of AllowCallerToCheckVoicemail.
func (s *UpdateSiteSettingReqHolidayHoursOverflow) GetAllowCallerToCheckVoicemail() OptBool {
	return s.AllowCallerToCheckVoicemail
}

// SetAllowCallerToReachOperator sets the value of AllowCallerToReachOperator.
func (s *UpdateSiteSettingReqHolidayHoursOverflow) SetAllowCallerToReachOperator(val OptBool) {
	s.AllowCallerToReachOperator = val
}

// SetOperator sets the value of Operator.
func (s *UpdateSiteSettingReqHolidayHoursOverflow) SetOperator(val OptUpdateSiteSettingReqHolidayHoursOverflowOperator) {
	s.Operator = val
}

// SetAllowCallerToCheckVoicemail sets the value of AllowCallerToCheckVoicemail.
func (s *UpdateSiteSettingReqHolidayHoursOverflow) SetAllowCallerToCheckVoicemail(val OptBool) {
	s.AllowCallerToCheckVoicemail = val
}

// The operator to allow callers to reach.
type UpdateSiteSettingReqHolidayHoursOverflowOperator struct {
	// The extension id.
	ExtensionID OptString `json:"extension_id"`
}

// GetExtensionID returns the value of ExtensionID.
func (s *UpdateSiteSettingReqHolidayHoursOverflowOperator) GetExtensionID() OptString {
	return s.ExtensionID
}

// SetExtensionID sets the value of ExtensionID.
func (s *UpdateSiteSettingReqHolidayHoursOverflowOperator) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// Location-based routing setting of the site. Used for `local_based_routing` setting type.
type UpdateSiteSettingReqLocationBasedRouting struct {
	// When the policy is enabled, Zoom Phone calls will be subject to the policy options defined.
	Enable OptBool `json:"enable"`
	// Place and receive PSTN (Public Switched Telephone Network) calls only when inside the locations.
	PlaceReceivePstnCalls OptBool `json:"place_receive_pstn_calls"`
	// Enable media offload for extensions to PSTN (Public Switched Telephone Network) calls.
	EnableMediaOffLoadPstnCalls OptBool `json:"enable_media_off_load_pstn_calls"`
}

// GetEnable returns the value of Enable.
func (s *UpdateSiteSettingReqLocationBasedRouting) GetEnable() OptBool {
	return s.Enable
}

// GetPlaceReceivePstnCalls returns the value of PlaceReceivePstnCalls.
func (s *UpdateSiteSettingReqLocationBasedRouting) GetPlaceReceivePstnCalls() OptBool {
	return s.PlaceReceivePstnCalls
}

// GetEnableMediaOffLoadPstnCalls returns the value of EnableMediaOffLoadPstnCalls.
func (s *UpdateSiteSettingReqLocationBasedRouting) GetEnableMediaOffLoadPstnCalls() OptBool {
	return s.EnableMediaOffLoadPstnCalls
}

// SetEnable sets the value of Enable.
func (s *UpdateSiteSettingReqLocationBasedRouting) SetEnable(val OptBool) {
	s.Enable = val
}

// SetPlaceReceivePstnCalls sets the value of PlaceReceivePstnCalls.
func (s *UpdateSiteSettingReqLocationBasedRouting) SetPlaceReceivePstnCalls(val OptBool) {
	s.PlaceReceivePstnCalls = val
}

// SetEnableMediaOffLoadPstnCalls sets the value of EnableMediaOffLoadPstnCalls.
func (s *UpdateSiteSettingReqLocationBasedRouting) SetEnableMediaOffLoadPstnCalls(val OptBool) {
	s.EnableMediaOffLoadPstnCalls = val
}

// The outbound caller ID setting. Used for `outbound_caller_id` setting type.
type UpdateSiteSettingReqOutboundCallerID struct {
	// When checked, auto receptionists members will use the numbers as the outbound caller ID.
	AutoReceptionistsNumbers OptBool `json:"auto_receptionists_numbers"`
	// When checked, call queue members will use the numbers as the outbound caller ID.
	CallQueueNumbers OptBool `json:"call_queue_numbers"`
	// When checked, share line group members will use the numbers as the outbound caller ID.
	ShareLineGroupNumbers OptBool `json:"share_line_group_numbers"`
	// When a call is made to an internal extension that uses the numbers associated with Auto
	// Receptionist or Call Queue as the caller ID, the receiver will see an outbound caller ID selected
	// by the caller.
	ShowOutboundCallerIDForInternalCall OptBool `json:"show_outbound_caller_id_for_internal_call"`
}

// GetAutoReceptionistsNumbers returns the value of AutoReceptionistsNumbers.
func (s *UpdateSiteSettingReqOutboundCallerID) GetAutoReceptionistsNumbers() OptBool {
	return s.AutoReceptionistsNumbers
}

// GetCallQueueNumbers returns the value of CallQueueNumbers.
func (s *UpdateSiteSettingReqOutboundCallerID) GetCallQueueNumbers() OptBool {
	return s.CallQueueNumbers
}

// GetShareLineGroupNumbers returns the value of ShareLineGroupNumbers.
func (s *UpdateSiteSettingReqOutboundCallerID) GetShareLineGroupNumbers() OptBool {
	return s.ShareLineGroupNumbers
}

// GetShowOutboundCallerIDForInternalCall returns the value of ShowOutboundCallerIDForInternalCall.
func (s *UpdateSiteSettingReqOutboundCallerID) GetShowOutboundCallerIDForInternalCall() OptBool {
	return s.ShowOutboundCallerIDForInternalCall
}

// SetAutoReceptionistsNumbers sets the value of AutoReceptionistsNumbers.
func (s *UpdateSiteSettingReqOutboundCallerID) SetAutoReceptionistsNumbers(val OptBool) {
	s.AutoReceptionistsNumbers = val
}

// SetCallQueueNumbers sets the value of CallQueueNumbers.
func (s *UpdateSiteSettingReqOutboundCallerID) SetCallQueueNumbers(val OptBool) {
	s.CallQueueNumbers = val
}

// SetShareLineGroupNumbers sets the value of ShareLineGroupNumbers.
func (s *UpdateSiteSettingReqOutboundCallerID) SetShareLineGroupNumbers(val OptBool) {
	s.ShareLineGroupNumbers = val
}

// SetShowOutboundCallerIDForInternalCall sets the value of ShowOutboundCallerIDForInternalCall.
func (s *UpdateSiteSettingReqOutboundCallerID) SetShowOutboundCallerIDForInternalCall(val OptBool) {
	s.ShowOutboundCallerIDForInternalCall = val
}

// UpdateUserOutboundCallingCountriesOrRegionsNoContent is response for UpdateUserOutboundCallingCountriesOrRegions operation.
type UpdateUserOutboundCallingCountriesOrRegionsNoContent struct{}

type UpdateUserOutboundCallingCountriesOrRegionsReq struct {
	CountryRegions []UpdateUserOutboundCallingCountriesOrRegionsReqCountryRegionsItem `json:"country_regions"`
}

// GetCountryRegions returns the value of CountryRegions.
func (s *UpdateUserOutboundCallingCountriesOrRegionsReq) GetCountryRegions() []UpdateUserOutboundCallingCountriesOrRegionsReqCountryRegionsItem {
	return s.CountryRegions
}

// SetCountryRegions sets the value of CountryRegions.
func (s *UpdateUserOutboundCallingCountriesOrRegionsReq) SetCountryRegions(val []UpdateUserOutboundCallingCountriesOrRegionsReqCountryRegionsItem) {
	s.CountryRegions = val
}

type UpdateUserOutboundCallingCountriesOrRegionsReqCountryRegionsItem struct {
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	IsoCode OptString `json:"iso_code"`
	// The default outbound calling rule.
	// `1` - Allowed
	// `2` - Blocked
	// `3` - Requires local number, caller ID, or plan
	// `4` - Requires the extension number and PIN code.
	Rule OptInt `json:"rule"`
	// Whether to delete existing exception rules. This field only appears when the default outbound
	// calling rule is changed. The default value is `false`.
	DeleteExistingExceptionRules OptBool `json:"delete_existing_exception_rules"`
}

// GetIsoCode returns the value of IsoCode.
func (s *UpdateUserOutboundCallingCountriesOrRegionsReqCountryRegionsItem) GetIsoCode() OptString {
	return s.IsoCode
}

// GetRule returns the value of Rule.
func (s *UpdateUserOutboundCallingCountriesOrRegionsReqCountryRegionsItem) GetRule() OptInt {
	return s.Rule
}

// GetDeleteExistingExceptionRules returns the value of DeleteExistingExceptionRules.
func (s *UpdateUserOutboundCallingCountriesOrRegionsReqCountryRegionsItem) GetDeleteExistingExceptionRules() OptBool {
	return s.DeleteExistingExceptionRules
}

// SetIsoCode sets the value of IsoCode.
func (s *UpdateUserOutboundCallingCountriesOrRegionsReqCountryRegionsItem) SetIsoCode(val OptString) {
	s.IsoCode = val
}

// SetRule sets the value of Rule.
func (s *UpdateUserOutboundCallingCountriesOrRegionsReqCountryRegionsItem) SetRule(val OptInt) {
	s.Rule = val
}

// SetDeleteExistingExceptionRules sets the value of DeleteExistingExceptionRules.
func (s *UpdateUserOutboundCallingCountriesOrRegionsReqCountryRegionsItem) SetDeleteExistingExceptionRules(val OptBool) {
	s.DeleteExistingExceptionRules = val
}

// UpdateUserOutboundCallingExceptionRuleNoContent is response for UpdateUserOutboundCallingExceptionRule operation.
type UpdateUserOutboundCallingExceptionRuleNoContent struct{}

type UpdateUserOutboundCallingExceptionRuleReq struct {
	ExceptionRule OptUpdateUserOutboundCallingExceptionRuleReqExceptionRule `json:"exception_rule"`
}

// GetExceptionRule returns the value of ExceptionRule.
func (s *UpdateUserOutboundCallingExceptionRuleReq) GetExceptionRule() OptUpdateUserOutboundCallingExceptionRuleReqExceptionRule {
	return s.ExceptionRule
}

// SetExceptionRule sets the value of ExceptionRule.
func (s *UpdateUserOutboundCallingExceptionRuleReq) SetExceptionRule(val OptUpdateUserOutboundCallingExceptionRuleReqExceptionRule) {
	s.ExceptionRule = val
}

type UpdateUserOutboundCallingExceptionRuleReqExceptionRule struct {
	// The match type for the exception rule, The values are `phoneNumber` or `prefix`.
	MatchType string `json:"match_type"`
	// The exception rule phone number prefix or the phone number without country code.
	PrefixNumber string `json:"prefix_number"`
	// A comment to identify the exception rule number or prefix.
	Comment OptString `json:"comment"`
	// Whether the exception rule is active or inactive.
	// `active`: The exception rule is active.
	// `inactive`: The exception rule is inactive.
	Status string `json:"status"`
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	Country string `json:"country"`
}

// GetMatchType returns the value of MatchType.
func (s *UpdateUserOutboundCallingExceptionRuleReqExceptionRule) GetMatchType() string {
	return s.MatchType
}

// GetPrefixNumber returns the value of PrefixNumber.
func (s *UpdateUserOutboundCallingExceptionRuleReqExceptionRule) GetPrefixNumber() string {
	return s.PrefixNumber
}

// GetComment returns the value of Comment.
func (s *UpdateUserOutboundCallingExceptionRuleReqExceptionRule) GetComment() OptString {
	return s.Comment
}

// GetStatus returns the value of Status.
func (s *UpdateUserOutboundCallingExceptionRuleReqExceptionRule) GetStatus() string {
	return s.Status
}

// GetCountry returns the value of Country.
func (s *UpdateUserOutboundCallingExceptionRuleReqExceptionRule) GetCountry() string {
	return s.Country
}

// SetMatchType sets the value of MatchType.
func (s *UpdateUserOutboundCallingExceptionRuleReqExceptionRule) SetMatchType(val string) {
	s.MatchType = val
}

// SetPrefixNumber sets the value of PrefixNumber.
func (s *UpdateUserOutboundCallingExceptionRuleReqExceptionRule) SetPrefixNumber(val string) {
	s.PrefixNumber = val
}

// SetComment sets the value of Comment.
func (s *UpdateUserOutboundCallingExceptionRuleReqExceptionRule) SetComment(val OptString) {
	s.Comment = val
}

// SetStatus sets the value of Status.
func (s *UpdateUserOutboundCallingExceptionRuleReqExceptionRule) SetStatus(val string) {
	s.Status = val
}

// SetCountry sets the value of Country.
func (s *UpdateUserOutboundCallingExceptionRuleReqExceptionRule) SetCountry(val string) {
	s.Country = val
}

// UpdateUserProfileNoContent is response for UpdateUserProfile operation.
type UpdateUserProfileNoContent struct{}

type UpdateUserProfileReq struct {
	// The emergency address ID.
	EmergencyAddressID OptString `json:"emergency_address_id"`
	// The extension number of the user. The number must be complete (i.e. site number + short extension).
	ExtensionNumber OptString `json:"extension_number"`
	// A list of the user's policies.
	Policy OptUpdateUserProfileReqPolicy `json:"policy"`
	// The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672) where
	// the user should be moved or assigned.
	SiteID OptString `json:"site_id"`
	// The settings template ID. If the `site_id` field is set, look for the template site with the value
	// of the `site_id` field. The template ID has precedence and the policy will be ignored even if the
	// `policy` field is set.
	TemplateID OptString `json:"template_id"`
}

// GetEmergencyAddressID returns the value of EmergencyAddressID.
func (s *UpdateUserProfileReq) GetEmergencyAddressID() OptString {
	return s.EmergencyAddressID
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *UpdateUserProfileReq) GetExtensionNumber() OptString {
	return s.ExtensionNumber
}

// GetPolicy returns the value of Policy.
func (s *UpdateUserProfileReq) GetPolicy() OptUpdateUserProfileReqPolicy {
	return s.Policy
}

// GetSiteID returns the value of SiteID.
func (s *UpdateUserProfileReq) GetSiteID() OptString {
	return s.SiteID
}

// GetTemplateID returns the value of TemplateID.
func (s *UpdateUserProfileReq) GetTemplateID() OptString {
	return s.TemplateID
}

// SetEmergencyAddressID sets the value of EmergencyAddressID.
func (s *UpdateUserProfileReq) SetEmergencyAddressID(val OptString) {
	s.EmergencyAddressID = val
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *UpdateUserProfileReq) SetExtensionNumber(val OptString) {
	s.ExtensionNumber = val
}

// SetPolicy sets the value of Policy.
func (s *UpdateUserProfileReq) SetPolicy(val OptUpdateUserProfileReqPolicy) {
	s.Policy = val
}

// SetSiteID sets the value of SiteID.
func (s *UpdateUserProfileReq) SetSiteID(val OptString) {
	s.SiteID = val
}

// SetTemplateID sets the value of TemplateID.
func (s *UpdateUserProfileReq) SetTemplateID(val OptString) {
	s.TemplateID = val
}

// A list of the user's policies.
type UpdateUserProfileReqPolicy struct {
	// A list of ad hoc call recording settings.
	AdHocCallRecording OptUpdateUserProfileReqPolicyAdHocCallRecording `json:"ad_hoc_call_recording"`
	// A list of the user's automatic call recording settings.
	AutoCallRecording OptUpdateUserProfileReqPolicyAutoCallRecording `json:"auto_call_recording"`
	CallOverflow      OptUpdateUserProfileReqPolicyCallOverflow      `json:"call_overflow"`
	CallPark          OptUpdateUserProfileReqPolicyCallPark          `json:"call_park"`
	CallTransferring  OptUpdateUserProfileReqPolicyCallTransferring  `json:"call_transferring"`
	// Whether the user can use [call delegation](https://support.zoom.
	// us/hc/en-us/articles/360032881731-Setting-up-call-delegation-shared-lines-appearance-).
	Delegation OptBool `json:"delegation"`
	// Whether the user can elevate their phone calls to a meeting.
	ElevateToMeeting           OptBool                                                 `json:"elevate_to_meeting"`
	EmergencyAddressManagement OptUpdateUserProfileReqPolicyEmergencyAddressManagement `json:"emergency_address_management"`
	// When disabled, emergency calls placed by the user will not be delivered to the Public Safety
	// Answering Point(PSAP), but still will be delivered to the Internal Safety Response Team based on
	// the settings.
	EmergencyCallsToPsap OptBool `json:"emergency_calls_to_psap"`
	// Whether to allow call forwarding to external numbers. Use the
	// `call_handling_forwarding_to_other_users` instead.
	//
	// Deprecated: schema marks this property as deprecated.
	ForwardingToExternalNumbers OptBool `json:"forwarding_to_external_numbers"`
	// Whether to allow user to forward calls to other numbers.
	CallHandlingForwardingToOtherUsers OptUpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers `json:"call_handling_forwarding_to_other_users"`
	HandOffToRoom                      OptUpdateUserProfileReqPolicyHandOffToRoom                      `json:"hand_off_to_room"`
	// Whether the current extension can make international calls outside of their calling plan.
	InternationalCalling   OptBool                                             `json:"international_calling"`
	MobileSwitchToCarrier  OptUpdateUserProfileReqPolicyMobileSwitchToCarrier  `json:"mobile_switch_to_carrier"`
	SelectOutboundCallerID OptUpdateUserProfileReqPolicySelectOutboundCallerID `json:"select_outbound_caller_id"`
	SMS                    OptUpdateUserProfileReqPolicySMS                    `json:"sms"`
	Voicemail              OptUpdateUserProfileReqPolicyVoicemail              `json:"voicemail"`
	// This field updates a voicemail setting. &lt;b&gt;Deprecated:&lt;/b&gt; we will completely
	// deprecate this property in a future release. Use `Add/Update/Delete a user's shared access
	// setting` API instead, with settingType 'voice-mail' to manage the voicemail access members.
	VoicemailAccessMembers             []UpdateUserProfileReqPolicyVoicemailAccessMembersItem          `json:"voicemail_access_members"`
	ZoomPhoneOnMobile                  OptUpdateUserProfileReqPolicyZoomPhoneOnMobile                  `json:"zoom_phone_on_mobile"`
	PersonalAudioLibrary               OptUpdateUserProfileReqPolicyPersonalAudioLibrary               `json:"personal_audio_library"`
	VoicemailTranscription             OptUpdateUserProfileReqPolicyVoicemailTranscription             `json:"voicemail_transcription"`
	VoicemailNotificationByEmail       OptUpdateUserProfileReqPolicyVoicemailNotificationByEmail       `json:"voicemail_notification_by_email"`
	SharedVoicemailNotificationByEmail OptUpdateUserProfileReqPolicySharedVoicemailNotificationByEmail `json:"shared_voicemail_notification_by_email"`
	CheckVoicemailsOverPhone           OptUpdateUserProfileReqPolicyCheckVoicemailsOverPhone           `json:"check_voicemails_over_phone"`
	AudioIntercom                      OptUpdateUserProfileReqPolicyAudioIntercom                      `json:"audio_intercom"`
	E2eEncryption                      OptUpdateUserProfileReqPolicyE2eEncryption                      `json:"e2e_encryption"`
}

// GetAdHocCallRecording returns the value of AdHocCallRecording.
func (s *UpdateUserProfileReqPolicy) GetAdHocCallRecording() OptUpdateUserProfileReqPolicyAdHocCallRecording {
	return s.AdHocCallRecording
}

// GetAutoCallRecording returns the value of AutoCallRecording.
func (s *UpdateUserProfileReqPolicy) GetAutoCallRecording() OptUpdateUserProfileReqPolicyAutoCallRecording {
	return s.AutoCallRecording
}

// GetCallOverflow returns the value of CallOverflow.
func (s *UpdateUserProfileReqPolicy) GetCallOverflow() OptUpdateUserProfileReqPolicyCallOverflow {
	return s.CallOverflow
}

// GetCallPark returns the value of CallPark.
func (s *UpdateUserProfileReqPolicy) GetCallPark() OptUpdateUserProfileReqPolicyCallPark {
	return s.CallPark
}

// GetCallTransferring returns the value of CallTransferring.
func (s *UpdateUserProfileReqPolicy) GetCallTransferring() OptUpdateUserProfileReqPolicyCallTransferring {
	return s.CallTransferring
}

// GetDelegation returns the value of Delegation.
func (s *UpdateUserProfileReqPolicy) GetDelegation() OptBool {
	return s.Delegation
}

// GetElevateToMeeting returns the value of ElevateToMeeting.
func (s *UpdateUserProfileReqPolicy) GetElevateToMeeting() OptBool {
	return s.ElevateToMeeting
}

// GetEmergencyAddressManagement returns the value of EmergencyAddressManagement.
func (s *UpdateUserProfileReqPolicy) GetEmergencyAddressManagement() OptUpdateUserProfileReqPolicyEmergencyAddressManagement {
	return s.EmergencyAddressManagement
}

// GetEmergencyCallsToPsap returns the value of EmergencyCallsToPsap.
func (s *UpdateUserProfileReqPolicy) GetEmergencyCallsToPsap() OptBool {
	return s.EmergencyCallsToPsap
}

// GetForwardingToExternalNumbers returns the value of ForwardingToExternalNumbers.
func (s *UpdateUserProfileReqPolicy) GetForwardingToExternalNumbers() OptBool {
	return s.ForwardingToExternalNumbers
}

// GetCallHandlingForwardingToOtherUsers returns the value of CallHandlingForwardingToOtherUsers.
func (s *UpdateUserProfileReqPolicy) GetCallHandlingForwardingToOtherUsers() OptUpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers {
	return s.CallHandlingForwardingToOtherUsers
}

// GetHandOffToRoom returns the value of HandOffToRoom.
func (s *UpdateUserProfileReqPolicy) GetHandOffToRoom() OptUpdateUserProfileReqPolicyHandOffToRoom {
	return s.HandOffToRoom
}

// GetInternationalCalling returns the value of InternationalCalling.
func (s *UpdateUserProfileReqPolicy) GetInternationalCalling() OptBool {
	return s.InternationalCalling
}

// GetMobileSwitchToCarrier returns the value of MobileSwitchToCarrier.
func (s *UpdateUserProfileReqPolicy) GetMobileSwitchToCarrier() OptUpdateUserProfileReqPolicyMobileSwitchToCarrier {
	return s.MobileSwitchToCarrier
}

// GetSelectOutboundCallerID returns the value of SelectOutboundCallerID.
func (s *UpdateUserProfileReqPolicy) GetSelectOutboundCallerID() OptUpdateUserProfileReqPolicySelectOutboundCallerID {
	return s.SelectOutboundCallerID
}

// GetSMS returns the value of SMS.
func (s *UpdateUserProfileReqPolicy) GetSMS() OptUpdateUserProfileReqPolicySMS {
	return s.SMS
}

// GetVoicemail returns the value of Voicemail.
func (s *UpdateUserProfileReqPolicy) GetVoicemail() OptUpdateUserProfileReqPolicyVoicemail {
	return s.Voicemail
}

// GetVoicemailAccessMembers returns the value of VoicemailAccessMembers.
func (s *UpdateUserProfileReqPolicy) GetVoicemailAccessMembers() []UpdateUserProfileReqPolicyVoicemailAccessMembersItem {
	return s.VoicemailAccessMembers
}

// GetZoomPhoneOnMobile returns the value of ZoomPhoneOnMobile.
func (s *UpdateUserProfileReqPolicy) GetZoomPhoneOnMobile() OptUpdateUserProfileReqPolicyZoomPhoneOnMobile {
	return s.ZoomPhoneOnMobile
}

// GetPersonalAudioLibrary returns the value of PersonalAudioLibrary.
func (s *UpdateUserProfileReqPolicy) GetPersonalAudioLibrary() OptUpdateUserProfileReqPolicyPersonalAudioLibrary {
	return s.PersonalAudioLibrary
}

// GetVoicemailTranscription returns the value of VoicemailTranscription.
func (s *UpdateUserProfileReqPolicy) GetVoicemailTranscription() OptUpdateUserProfileReqPolicyVoicemailTranscription {
	return s.VoicemailTranscription
}

// GetVoicemailNotificationByEmail returns the value of VoicemailNotificationByEmail.
func (s *UpdateUserProfileReqPolicy) GetVoicemailNotificationByEmail() OptUpdateUserProfileReqPolicyVoicemailNotificationByEmail {
	return s.VoicemailNotificationByEmail
}

// GetSharedVoicemailNotificationByEmail returns the value of SharedVoicemailNotificationByEmail.
func (s *UpdateUserProfileReqPolicy) GetSharedVoicemailNotificationByEmail() OptUpdateUserProfileReqPolicySharedVoicemailNotificationByEmail {
	return s.SharedVoicemailNotificationByEmail
}

// GetCheckVoicemailsOverPhone returns the value of CheckVoicemailsOverPhone.
func (s *UpdateUserProfileReqPolicy) GetCheckVoicemailsOverPhone() OptUpdateUserProfileReqPolicyCheckVoicemailsOverPhone {
	return s.CheckVoicemailsOverPhone
}

// GetAudioIntercom returns the value of AudioIntercom.
func (s *UpdateUserProfileReqPolicy) GetAudioIntercom() OptUpdateUserProfileReqPolicyAudioIntercom {
	return s.AudioIntercom
}

// GetE2eEncryption returns the value of E2eEncryption.
func (s *UpdateUserProfileReqPolicy) GetE2eEncryption() OptUpdateUserProfileReqPolicyE2eEncryption {
	return s.E2eEncryption
}

// SetAdHocCallRecording sets the value of AdHocCallRecording.
func (s *UpdateUserProfileReqPolicy) SetAdHocCallRecording(val OptUpdateUserProfileReqPolicyAdHocCallRecording) {
	s.AdHocCallRecording = val
}

// SetAutoCallRecording sets the value of AutoCallRecording.
func (s *UpdateUserProfileReqPolicy) SetAutoCallRecording(val OptUpdateUserProfileReqPolicyAutoCallRecording) {
	s.AutoCallRecording = val
}

// SetCallOverflow sets the value of CallOverflow.
func (s *UpdateUserProfileReqPolicy) SetCallOverflow(val OptUpdateUserProfileReqPolicyCallOverflow) {
	s.CallOverflow = val
}

// SetCallPark sets the value of CallPark.
func (s *UpdateUserProfileReqPolicy) SetCallPark(val OptUpdateUserProfileReqPolicyCallPark) {
	s.CallPark = val
}

// SetCallTransferring sets the value of CallTransferring.
func (s *UpdateUserProfileReqPolicy) SetCallTransferring(val OptUpdateUserProfileReqPolicyCallTransferring) {
	s.CallTransferring = val
}

// SetDelegation sets the value of Delegation.
func (s *UpdateUserProfileReqPolicy) SetDelegation(val OptBool) {
	s.Delegation = val
}

// SetElevateToMeeting sets the value of ElevateToMeeting.
func (s *UpdateUserProfileReqPolicy) SetElevateToMeeting(val OptBool) {
	s.ElevateToMeeting = val
}

// SetEmergencyAddressManagement sets the value of EmergencyAddressManagement.
func (s *UpdateUserProfileReqPolicy) SetEmergencyAddressManagement(val OptUpdateUserProfileReqPolicyEmergencyAddressManagement) {
	s.EmergencyAddressManagement = val
}

// SetEmergencyCallsToPsap sets the value of EmergencyCallsToPsap.
func (s *UpdateUserProfileReqPolicy) SetEmergencyCallsToPsap(val OptBool) {
	s.EmergencyCallsToPsap = val
}

// SetForwardingToExternalNumbers sets the value of ForwardingToExternalNumbers.
func (s *UpdateUserProfileReqPolicy) SetForwardingToExternalNumbers(val OptBool) {
	s.ForwardingToExternalNumbers = val
}

// SetCallHandlingForwardingToOtherUsers sets the value of CallHandlingForwardingToOtherUsers.
func (s *UpdateUserProfileReqPolicy) SetCallHandlingForwardingToOtherUsers(val OptUpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers) {
	s.CallHandlingForwardingToOtherUsers = val
}

// SetHandOffToRoom sets the value of HandOffToRoom.
func (s *UpdateUserProfileReqPolicy) SetHandOffToRoom(val OptUpdateUserProfileReqPolicyHandOffToRoom) {
	s.HandOffToRoom = val
}

// SetInternationalCalling sets the value of InternationalCalling.
func (s *UpdateUserProfileReqPolicy) SetInternationalCalling(val OptBool) {
	s.InternationalCalling = val
}

// SetMobileSwitchToCarrier sets the value of MobileSwitchToCarrier.
func (s *UpdateUserProfileReqPolicy) SetMobileSwitchToCarrier(val OptUpdateUserProfileReqPolicyMobileSwitchToCarrier) {
	s.MobileSwitchToCarrier = val
}

// SetSelectOutboundCallerID sets the value of SelectOutboundCallerID.
func (s *UpdateUserProfileReqPolicy) SetSelectOutboundCallerID(val OptUpdateUserProfileReqPolicySelectOutboundCallerID) {
	s.SelectOutboundCallerID = val
}

// SetSMS sets the value of SMS.
func (s *UpdateUserProfileReqPolicy) SetSMS(val OptUpdateUserProfileReqPolicySMS) {
	s.SMS = val
}

// SetVoicemail sets the value of Voicemail.
func (s *UpdateUserProfileReqPolicy) SetVoicemail(val OptUpdateUserProfileReqPolicyVoicemail) {
	s.Voicemail = val
}

// SetVoicemailAccessMembers sets the value of VoicemailAccessMembers.
func (s *UpdateUserProfileReqPolicy) SetVoicemailAccessMembers(val []UpdateUserProfileReqPolicyVoicemailAccessMembersItem) {
	s.VoicemailAccessMembers = val
}

// SetZoomPhoneOnMobile sets the value of ZoomPhoneOnMobile.
func (s *UpdateUserProfileReqPolicy) SetZoomPhoneOnMobile(val OptUpdateUserProfileReqPolicyZoomPhoneOnMobile) {
	s.ZoomPhoneOnMobile = val
}

// SetPersonalAudioLibrary sets the value of PersonalAudioLibrary.
func (s *UpdateUserProfileReqPolicy) SetPersonalAudioLibrary(val OptUpdateUserProfileReqPolicyPersonalAudioLibrary) {
	s.PersonalAudioLibrary = val
}

// SetVoicemailTranscription sets the value of VoicemailTranscription.
func (s *UpdateUserProfileReqPolicy) SetVoicemailTranscription(val OptUpdateUserProfileReqPolicyVoicemailTranscription) {
	s.VoicemailTranscription = val
}

// SetVoicemailNotificationByEmail sets the value of VoicemailNotificationByEmail.
func (s *UpdateUserProfileReqPolicy) SetVoicemailNotificationByEmail(val OptUpdateUserProfileReqPolicyVoicemailNotificationByEmail) {
	s.VoicemailNotificationByEmail = val
}

// SetSharedVoicemailNotificationByEmail sets the value of SharedVoicemailNotificationByEmail.
func (s *UpdateUserProfileReqPolicy) SetSharedVoicemailNotificationByEmail(val OptUpdateUserProfileReqPolicySharedVoicemailNotificationByEmail) {
	s.SharedVoicemailNotificationByEmail = val
}

// SetCheckVoicemailsOverPhone sets the value of CheckVoicemailsOverPhone.
func (s *UpdateUserProfileReqPolicy) SetCheckVoicemailsOverPhone(val OptUpdateUserProfileReqPolicyCheckVoicemailsOverPhone) {
	s.CheckVoicemailsOverPhone = val
}

// SetAudioIntercom sets the value of AudioIntercom.
func (s *UpdateUserProfileReqPolicy) SetAudioIntercom(val OptUpdateUserProfileReqPolicyAudioIntercom) {
	s.AudioIntercom = val
}

// SetE2eEncryption sets the value of E2eEncryption.
func (s *UpdateUserProfileReqPolicy) SetE2eEncryption(val OptUpdateUserProfileReqPolicyE2eEncryption) {
	s.E2eEncryption = val
}

// A list of ad hoc call recording settings.
type UpdateUserProfileReqPolicyAdHocCallRecording struct {
	// Whether the current extension can record and save calls to the cloud.
	Enable OptBool `json:"enable"`
	// Whether a prompt plays to call participants when the recording has started.
	RecordingStartPrompt OptBool `json:"recording_start_prompt"`
	// Whether call recording transcription is enabled.
	RecordingTranscription OptBool `json:"recording_transcription"`
	// Whether the user's ad hoc recording reset option will use the phone site's settings.
	Reset                 OptBool                                                              `json:"reset"`
	PlayRecordingBeepTone OptUpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone `json:"play_recording_beep_tone"`
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyAdHocCallRecording) GetEnable() OptBool {
	return s.Enable
}

// GetRecordingStartPrompt returns the value of RecordingStartPrompt.
func (s *UpdateUserProfileReqPolicyAdHocCallRecording) GetRecordingStartPrompt() OptBool {
	return s.RecordingStartPrompt
}

// GetRecordingTranscription returns the value of RecordingTranscription.
func (s *UpdateUserProfileReqPolicyAdHocCallRecording) GetRecordingTranscription() OptBool {
	return s.RecordingTranscription
}

// GetReset returns the value of Reset.
func (s *UpdateUserProfileReqPolicyAdHocCallRecording) GetReset() OptBool {
	return s.Reset
}

// GetPlayRecordingBeepTone returns the value of PlayRecordingBeepTone.
func (s *UpdateUserProfileReqPolicyAdHocCallRecording) GetPlayRecordingBeepTone() OptUpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone {
	return s.PlayRecordingBeepTone
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyAdHocCallRecording) SetEnable(val OptBool) {
	s.Enable = val
}

// SetRecordingStartPrompt sets the value of RecordingStartPrompt.
func (s *UpdateUserProfileReqPolicyAdHocCallRecording) SetRecordingStartPrompt(val OptBool) {
	s.RecordingStartPrompt = val
}

// SetRecordingTranscription sets the value of RecordingTranscription.
func (s *UpdateUserProfileReqPolicyAdHocCallRecording) SetRecordingTranscription(val OptBool) {
	s.RecordingTranscription = val
}

// SetReset sets the value of Reset.
func (s *UpdateUserProfileReqPolicyAdHocCallRecording) SetReset(val OptBool) {
	s.Reset = val
}

// SetPlayRecordingBeepTone sets the value of PlayRecordingBeepTone.
func (s *UpdateUserProfileReqPolicyAdHocCallRecording) SetPlayRecordingBeepTone(val OptUpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone) {
	s.PlayRecordingBeepTone = val
}

type UpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone struct {
	// Whether to play a side tone beep for recorded users while recording. Only displayed when ad hoc
	// call recording policy uses the new framework.
	Enable OptBool `json:"enable"`
	// The volume of the side tone beep. It displays only when `enable` is set to `true`.
	PlayBeepVolume OptInt `json:"play_beep_volume"`
	// The beep time interval in seconds. It displays only when `enable` is true.
	PlayBeepTimeInterval OptInt `json:"play_beep_time_interval"`
	// The beep sides. It displays only when `enable` is true.
	PlayBeepMember OptString `json:"play_beep_member"`
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone) GetEnable() OptBool {
	return s.Enable
}

// GetPlayBeepVolume returns the value of PlayBeepVolume.
func (s *UpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone) GetPlayBeepVolume() OptInt {
	return s.PlayBeepVolume
}

// GetPlayBeepTimeInterval returns the value of PlayBeepTimeInterval.
func (s *UpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone) GetPlayBeepTimeInterval() OptInt {
	return s.PlayBeepTimeInterval
}

// GetPlayBeepMember returns the value of PlayBeepMember.
func (s *UpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone) GetPlayBeepMember() OptString {
	return s.PlayBeepMember
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone) SetEnable(val OptBool) {
	s.Enable = val
}

// SetPlayBeepVolume sets the value of PlayBeepVolume.
func (s *UpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone) SetPlayBeepVolume(val OptInt) {
	s.PlayBeepVolume = val
}

// SetPlayBeepTimeInterval sets the value of PlayBeepTimeInterval.
func (s *UpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone) SetPlayBeepTimeInterval(val OptInt) {
	s.PlayBeepTimeInterval = val
}

// SetPlayBeepMember sets the value of PlayBeepMember.
func (s *UpdateUserProfileReqPolicyAdHocCallRecordingPlayRecordingBeepTone) SetPlayBeepMember(val OptString) {
	s.PlayBeepMember = val
}

type UpdateUserProfileReqPolicyAudioIntercom struct {
	// If enabled, user can use audio intercom.
	Enable OptBool `json:"enable"`
	// Whether the user's audio intercom reset option will use the phone site's settings.
	Reset OptBool `json:"reset"`
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyAudioIntercom) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateUserProfileReqPolicyAudioIntercom) GetReset() OptBool {
	return s.Reset
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyAudioIntercom) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateUserProfileReqPolicyAudioIntercom) SetReset(val OptBool) {
	s.Reset = val
}

// A list of the user's automatic call recording settings.
type UpdateUserProfileReqPolicyAutoCallRecording struct {
	// Whether the stop of and resuming of automatic call recording is enabled.
	AllowStopResumeRecording OptBool `json:"allow_stop_resume_recording"`
	// Whether a call disconnects when there is an issue with automatic call recording and the call
	// cannot reconnect after five seconds. This does **not** include emergency calls.
	DisconnectOnRecordingFailure OptBool `json:"disconnect_on_recording_failure"`
	// Whether automatic call recording is enabled.
	Enable OptBool `json:"enable"`
	// The type of calls automatically recorded:
	// * `inbound`
	// * `outbound`
	// * `both`.
	RecordingCalls OptString `json:"recording_calls"`
	// Whether press 1 to provide recording consent is enabled.
	RecordingExplicitConsent OptBool `json:"recording_explicit_consent"`
	// Whether a prompt plays to call participants when the recording has started.
	RecordingStartPrompt OptBool `json:"recording_start_prompt"`
	// Whether call recording transcription is enabled.
	RecordingTranscription OptBool                                                             `json:"recording_transcription"`
	PlayRecordingBeepTone  OptUpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone `json:"play_recording_beep_tone"`
	// Whether the user's automatic call recording reset option will use the phone site's settings.
	Reset OptBool `json:"reset"`
}

// GetAllowStopResumeRecording returns the value of AllowStopResumeRecording.
func (s *UpdateUserProfileReqPolicyAutoCallRecording) GetAllowStopResumeRecording() OptBool {
	return s.AllowStopResumeRecording
}

// GetDisconnectOnRecordingFailure returns the value of DisconnectOnRecordingFailure.
func (s *UpdateUserProfileReqPolicyAutoCallRecording) GetDisconnectOnRecordingFailure() OptBool {
	return s.DisconnectOnRecordingFailure
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyAutoCallRecording) GetEnable() OptBool {
	return s.Enable
}

// GetRecordingCalls returns the value of RecordingCalls.
func (s *UpdateUserProfileReqPolicyAutoCallRecording) GetRecordingCalls() OptString {
	return s.RecordingCalls
}

// GetRecordingExplicitConsent returns the value of RecordingExplicitConsent.
func (s *UpdateUserProfileReqPolicyAutoCallRecording) GetRecordingExplicitConsent() OptBool {
	return s.RecordingExplicitConsent
}

// GetRecordingStartPrompt returns the value of RecordingStartPrompt.
func (s *UpdateUserProfileReqPolicyAutoCallRecording) GetRecordingStartPrompt() OptBool {
	return s.RecordingStartPrompt
}

// GetRecordingTranscription returns the value of RecordingTranscription.
func (s *UpdateUserProfileReqPolicyAutoCallRecording) GetRecordingTranscription() OptBool {
	return s.RecordingTranscription
}

// GetPlayRecordingBeepTone returns the value of PlayRecordingBeepTone.
func (s *UpdateUserProfileReqPolicyAutoCallRecording) GetPlayRecordingBeepTone() OptUpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone {
	return s.PlayRecordingBeepTone
}

// GetReset returns the value of Reset.
func (s *UpdateUserProfileReqPolicyAutoCallRecording) GetReset() OptBool {
	return s.Reset
}

// SetAllowStopResumeRecording sets the value of AllowStopResumeRecording.
func (s *UpdateUserProfileReqPolicyAutoCallRecording) SetAllowStopResumeRecording(val OptBool) {
	s.AllowStopResumeRecording = val
}

// SetDisconnectOnRecordingFailure sets the value of DisconnectOnRecordingFailure.
func (s *UpdateUserProfileReqPolicyAutoCallRecording) SetDisconnectOnRecordingFailure(val OptBool) {
	s.DisconnectOnRecordingFailure = val
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyAutoCallRecording) SetEnable(val OptBool) {
	s.Enable = val
}

// SetRecordingCalls sets the value of RecordingCalls.
func (s *UpdateUserProfileReqPolicyAutoCallRecording) SetRecordingCalls(val OptString) {
	s.RecordingCalls = val
}

// SetRecordingExplicitConsent sets the value of RecordingExplicitConsent.
func (s *UpdateUserProfileReqPolicyAutoCallRecording) SetRecordingExplicitConsent(val OptBool) {
	s.RecordingExplicitConsent = val
}

// SetRecordingStartPrompt sets the value of RecordingStartPrompt.
func (s *UpdateUserProfileReqPolicyAutoCallRecording) SetRecordingStartPrompt(val OptBool) {
	s.RecordingStartPrompt = val
}

// SetRecordingTranscription sets the value of RecordingTranscription.
func (s *UpdateUserProfileReqPolicyAutoCallRecording) SetRecordingTranscription(val OptBool) {
	s.RecordingTranscription = val
}

// SetPlayRecordingBeepTone sets the value of PlayRecordingBeepTone.
func (s *UpdateUserProfileReqPolicyAutoCallRecording) SetPlayRecordingBeepTone(val OptUpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone) {
	s.PlayRecordingBeepTone = val
}

// SetReset sets the value of Reset.
func (s *UpdateUserProfileReqPolicyAutoCallRecording) SetReset(val OptBool) {
	s.Reset = val
}

type UpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone struct {
	// Whether to play a side tone beep for recorded users while recording. Only displayed when auto call
	// recording policy uses the new framework.
	Enable OptBool `json:"enable"`
	// The volume of the side tone beep. It displays only when `enable` is set to `true`.
	PlayBeepVolume OptInt `json:"play_beep_volume"`
	// The beep time interval in seconds. It displays only when `enable` is true.
	PlayBeepTimeInterval OptInt `json:"play_beep_time_interval"`
	// The beep sides. It displays only when `enable` is true.
	PlayBeepMember OptString `json:"play_beep_member"`
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone) GetEnable() OptBool {
	return s.Enable
}

// GetPlayBeepVolume returns the value of PlayBeepVolume.
func (s *UpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone) GetPlayBeepVolume() OptInt {
	return s.PlayBeepVolume
}

// GetPlayBeepTimeInterval returns the value of PlayBeepTimeInterval.
func (s *UpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone) GetPlayBeepTimeInterval() OptInt {
	return s.PlayBeepTimeInterval
}

// GetPlayBeepMember returns the value of PlayBeepMember.
func (s *UpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone) GetPlayBeepMember() OptString {
	return s.PlayBeepMember
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone) SetEnable(val OptBool) {
	s.Enable = val
}

// SetPlayBeepVolume sets the value of PlayBeepVolume.
func (s *UpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone) SetPlayBeepVolume(val OptInt) {
	s.PlayBeepVolume = val
}

// SetPlayBeepTimeInterval sets the value of PlayBeepTimeInterval.
func (s *UpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone) SetPlayBeepTimeInterval(val OptInt) {
	s.PlayBeepTimeInterval = val
}

// SetPlayBeepMember sets the value of PlayBeepMember.
func (s *UpdateUserProfileReqPolicyAutoCallRecordingPlayRecordingBeepTone) SetPlayBeepMember(val OptString) {
	s.PlayBeepMember = val
}

// Whether to allow user to forward calls to other numbers.
type UpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers struct {
	Enable OptBool `json:"enable"`
	// `1` - Low restriction (external numbers not allowed)
	// `2` - Medium restriction (external numbers and external contacts not allowed)
	// `3` - High restriction (external numbers, external contacts and internal extensions without
	// inbound automatic call recording not allowed)
	// `4` - No restriction.
	CallForwardingType OptInt `json:"call_forwarding_type"`
	// Whether the current settings will use the phone site's settings (applicable if the current
	// settings are using the new policy framework).
	Reset OptBool `json:"reset"`
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers) GetEnable() OptBool {
	return s.Enable
}

// GetCallForwardingType returns the value of CallForwardingType.
func (s *UpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers) GetCallForwardingType() OptInt {
	return s.CallForwardingType
}

// GetReset returns the value of Reset.
func (s *UpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers) GetReset() OptBool {
	return s.Reset
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers) SetEnable(val OptBool) {
	s.Enable = val
}

// SetCallForwardingType sets the value of CallForwardingType.
func (s *UpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers) SetCallForwardingType(val OptInt) {
	s.CallForwardingType = val
}

// SetReset sets the value of Reset.
func (s *UpdateUserProfileReqPolicyCallHandlingForwardingToOtherUsers) SetReset(val OptBool) {
	s.Reset = val
}

type UpdateUserProfileReqPolicyCallOverflow struct {
	// `1` - Low restriction (external numbers not allowed)
	// `2` - Medium restriction (external numbers and external contacts not allowed)
	// `3` - High restriction (external numbers, external contacts and internal extensions without
	// inbound automatic call recording not allowed)
	// `4` - No restriction.
	CallOverflowType OptInt `json:"call_overflow_type"`
	// Whether to allow user to forward calls to other numbers.
	Enable OptBool `json:"enable"`
	// Whether the current settings will use the phone site's settings (applicable if the current
	// settings are using the new policy framework).
	Reset OptBool `json:"reset"`
}

// GetCallOverflowType returns the value of CallOverflowType.
func (s *UpdateUserProfileReqPolicyCallOverflow) GetCallOverflowType() OptInt {
	return s.CallOverflowType
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyCallOverflow) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateUserProfileReqPolicyCallOverflow) GetReset() OptBool {
	return s.Reset
}

// SetCallOverflowType sets the value of CallOverflowType.
func (s *UpdateUserProfileReqPolicyCallOverflow) SetCallOverflowType(val OptInt) {
	s.CallOverflowType = val
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyCallOverflow) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateUserProfileReqPolicyCallOverflow) SetReset(val OptBool) {
	s.Reset = val
}

type UpdateUserProfileReqPolicyCallPark struct {
	// The action when a parked call is not picked up. 100-Ring back to parker, 0-Forward to voicemail of
	// the parker, 9-Disconnect, 50-Forward to another extension.
	CallNotPickedUpAction OptInt `json:"call_not_picked_up_action"`
	// Whether to allow calls placed on hold to be resumed from another location using a retrieval code.
	Enable OptBool `json:"enable"`
	// A time limit for parked calls, unit minutes. After the expiration period ends, the retrieval code
	// is no longer valid and a new code will be generated.
	ExpirationPeriod OptInt `json:"expiration_period"`
	// The extension ID.
	ForwardToExtensionID OptString `json:"forward_to_extension_id"`
}

// GetCallNotPickedUpAction returns the value of CallNotPickedUpAction.
func (s *UpdateUserProfileReqPolicyCallPark) GetCallNotPickedUpAction() OptInt {
	return s.CallNotPickedUpAction
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyCallPark) GetEnable() OptBool {
	return s.Enable
}

// GetExpirationPeriod returns the value of ExpirationPeriod.
func (s *UpdateUserProfileReqPolicyCallPark) GetExpirationPeriod() OptInt {
	return s.ExpirationPeriod
}

// GetForwardToExtensionID returns the value of ForwardToExtensionID.
func (s *UpdateUserProfileReqPolicyCallPark) GetForwardToExtensionID() OptString {
	return s.ForwardToExtensionID
}

// SetCallNotPickedUpAction sets the value of CallNotPickedUpAction.
func (s *UpdateUserProfileReqPolicyCallPark) SetCallNotPickedUpAction(val OptInt) {
	s.CallNotPickedUpAction = val
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyCallPark) SetEnable(val OptBool) {
	s.Enable = val
}

// SetExpirationPeriod sets the value of ExpirationPeriod.
func (s *UpdateUserProfileReqPolicyCallPark) SetExpirationPeriod(val OptInt) {
	s.ExpirationPeriod = val
}

// SetForwardToExtensionID sets the value of ForwardToExtensionID.
func (s *UpdateUserProfileReqPolicyCallPark) SetForwardToExtensionID(val OptString) {
	s.ForwardToExtensionID = val
}

type UpdateUserProfileReqPolicyCallTransferring struct {
	// 1-No restriction.
	// 2-Medium restriction (external numbers and external contacts not allowed).
	// 3-High restriction (external numbers, unrecorded external contacts, and internal extensions
	// without inbound automatic recording not allowed).
	// 4-Low restriction (external numbers not allowed).
	CallTransferringType OptInt `json:"call_transferring_type"`
	// Whether to allow the user to warm or blind transfer their calls. This does not apply to warm
	// transfer on IP Phones except for Yealink.
	Enable OptBool `json:"enable"`
	// Whether the current settings will use the phone site's settings (applicable if the current
	// settings are using the new policy framework).
	Reset OptBool `json:"reset"`
}

// GetCallTransferringType returns the value of CallTransferringType.
func (s *UpdateUserProfileReqPolicyCallTransferring) GetCallTransferringType() OptInt {
	return s.CallTransferringType
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyCallTransferring) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateUserProfileReqPolicyCallTransferring) GetReset() OptBool {
	return s.Reset
}

// SetCallTransferringType sets the value of CallTransferringType.
func (s *UpdateUserProfileReqPolicyCallTransferring) SetCallTransferringType(val OptInt) {
	s.CallTransferringType = val
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyCallTransferring) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateUserProfileReqPolicyCallTransferring) SetReset(val OptBool) {
	s.Reset = val
}

type UpdateUserProfileReqPolicyCheckVoicemailsOverPhone struct {
	// If enabled, user can check voicemails over phone using a PIN code.
	Enable OptBool `json:"enable"`
	// Whether the user's check voicemail over phone reset option will use the phone site's settings.
	Reset OptBool `json:"reset"`
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyCheckVoicemailsOverPhone) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateUserProfileReqPolicyCheckVoicemailsOverPhone) GetReset() OptBool {
	return s.Reset
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyCheckVoicemailsOverPhone) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateUserProfileReqPolicyCheckVoicemailsOverPhone) SetReset(val OptBool) {
	s.Reset = val
}

type UpdateUserProfileReqPolicyE2eEncryption struct {
	// Whether to allow users to switch their calls to `End-to-End Encryption`. If users have the
	// `Automatic Call Recording` turned on, they will not be able to use the `End-to-End Encryption`.
	Enable OptBool `json:"enable"`
	// Whether the current settings will use the phone account's settings (applicable if the current
	// settings are using the new policy framework).
	Reset OptBool `json:"reset"`
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyE2eEncryption) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateUserProfileReqPolicyE2eEncryption) GetReset() OptBool {
	return s.Reset
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyE2eEncryption) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateUserProfileReqPolicyE2eEncryption) SetReset(val OptBool) {
	s.Reset = val
}

type UpdateUserProfileReqPolicyEmergencyAddressManagement struct {
	// Whether to allow the current extension to manage its own emergency addresses.
	Enable OptBool `json:"enable"`
	// Whether to prompt the user to set or confirm a default address.
	PromptDefaultAddress OptBool `json:"prompt_default_address"`
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyEmergencyAddressManagement) GetEnable() OptBool {
	return s.Enable
}

// GetPromptDefaultAddress returns the value of PromptDefaultAddress.
func (s *UpdateUserProfileReqPolicyEmergencyAddressManagement) GetPromptDefaultAddress() OptBool {
	return s.PromptDefaultAddress
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyEmergencyAddressManagement) SetEnable(val OptBool) {
	s.Enable = val
}

// SetPromptDefaultAddress sets the value of PromptDefaultAddress.
func (s *UpdateUserProfileReqPolicyEmergencyAddressManagement) SetPromptDefaultAddress(val OptBool) {
	s.PromptDefaultAddress = val
}

type UpdateUserProfileReqPolicyHandOffToRoom struct {
	// Whether to allow users to send a call to a Zoom Room.
	Enable OptBool `json:"enable"`
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyHandOffToRoom) GetEnable() OptBool {
	return s.Enable
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyHandOffToRoom) SetEnable(val OptBool) {
	s.Enable = val
}

type UpdateUserProfileReqPolicyMobileSwitchToCarrier struct {
	// Whether to allow the user to switch from a Zoom Phone to their native carrier.
	Enable OptBool `json:"enable"`
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyMobileSwitchToCarrier) GetEnable() OptBool {
	return s.Enable
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyMobileSwitchToCarrier) SetEnable(val OptBool) {
	s.Enable = val
}

type UpdateUserProfileReqPolicyPersonalAudioLibrary struct {
	// Whether to allow the user to customize allow music on hold.
	AllowMusicOnHoldCustomization OptBool `json:"allow_music_on_hold_customization"`
	// Whether to allow the user to customize voicemail and message greeting.
	AllowVoicemailAndMessageGreetingCustomization OptBool `json:"allow_voicemail_and_message_greeting_customization"`
	// Whether to allow users to change their own audio library.
	Enable OptBool `json:"enable"`
	// Whether the user's personal audio library reset option will use the phone site's settings.
	Reset OptBool `json:"reset"`
}

// GetAllowMusicOnHoldCustomization returns the value of AllowMusicOnHoldCustomization.
func (s *UpdateUserProfileReqPolicyPersonalAudioLibrary) GetAllowMusicOnHoldCustomization() OptBool {
	return s.AllowMusicOnHoldCustomization
}

// GetAllowVoicemailAndMessageGreetingCustomization returns the value of AllowVoicemailAndMessageGreetingCustomization.
func (s *UpdateUserProfileReqPolicyPersonalAudioLibrary) GetAllowVoicemailAndMessageGreetingCustomization() OptBool {
	return s.AllowVoicemailAndMessageGreetingCustomization
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyPersonalAudioLibrary) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateUserProfileReqPolicyPersonalAudioLibrary) GetReset() OptBool {
	return s.Reset
}

// SetAllowMusicOnHoldCustomization sets the value of AllowMusicOnHoldCustomization.
func (s *UpdateUserProfileReqPolicyPersonalAudioLibrary) SetAllowMusicOnHoldCustomization(val OptBool) {
	s.AllowMusicOnHoldCustomization = val
}

// SetAllowVoicemailAndMessageGreetingCustomization sets the value of AllowVoicemailAndMessageGreetingCustomization.
func (s *UpdateUserProfileReqPolicyPersonalAudioLibrary) SetAllowVoicemailAndMessageGreetingCustomization(val OptBool) {
	s.AllowVoicemailAndMessageGreetingCustomization = val
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyPersonalAudioLibrary) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateUserProfileReqPolicyPersonalAudioLibrary) SetReset(val OptBool) {
	s.Reset = val
}

type UpdateUserProfileReqPolicySMS struct {
	// Whether the user can send and receive messages.
	Enable OptBool `json:"enable"`
	// Whether the user can send and receive international messages.
	InternationalSMS OptBool `json:"international_sms"`
	// The country which can send and receive international messages. The [country iso
	// code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	InternationalSMSCountries []string `json:"international_sms_countries"`
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicySMS) GetEnable() OptBool {
	return s.Enable
}

// GetInternationalSMS returns the value of InternationalSMS.
func (s *UpdateUserProfileReqPolicySMS) GetInternationalSMS() OptBool {
	return s.InternationalSMS
}

// GetInternationalSMSCountries returns the value of InternationalSMSCountries.
func (s *UpdateUserProfileReqPolicySMS) GetInternationalSMSCountries() []string {
	return s.InternationalSMSCountries
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicySMS) SetEnable(val OptBool) {
	s.Enable = val
}

// SetInternationalSMS sets the value of InternationalSMS.
func (s *UpdateUserProfileReqPolicySMS) SetInternationalSMS(val OptBool) {
	s.InternationalSMS = val
}

// SetInternationalSMSCountries sets the value of InternationalSMSCountries.
func (s *UpdateUserProfileReqPolicySMS) SetInternationalSMSCountries(val []string) {
	s.InternationalSMSCountries = val
}

type UpdateUserProfileReqPolicySelectOutboundCallerID struct {
	// Whether to allow the current extension to change the outbound caller ID when placing calls.
	Enable OptBool `json:"enable"`
	// Whether to allow the current extension to hide outbound caller id.
	AllowHideOutboundCallerID OptBool `json:"allow_hide_outbound_caller_id"`
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicySelectOutboundCallerID) GetEnable() OptBool {
	return s.Enable
}

// GetAllowHideOutboundCallerID returns the value of AllowHideOutboundCallerID.
func (s *UpdateUserProfileReqPolicySelectOutboundCallerID) GetAllowHideOutboundCallerID() OptBool {
	return s.AllowHideOutboundCallerID
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicySelectOutboundCallerID) SetEnable(val OptBool) {
	s.Enable = val
}

// SetAllowHideOutboundCallerID sets the value of AllowHideOutboundCallerID.
func (s *UpdateUserProfileReqPolicySelectOutboundCallerID) SetAllowHideOutboundCallerID(val OptBool) {
	s.AllowHideOutboundCallerID = val
}

type UpdateUserProfileReqPolicySharedVoicemailNotificationByEmail struct {
	// If enabled, the user will receive email notification when there is a new shared voicemail.
	Enable OptBool `json:"enable"`
	// Whether the user's share voicemail notification by email reset option will use the phone site's
	// settings.
	Reset OptBool `json:"reset"`
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicySharedVoicemailNotificationByEmail) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateUserProfileReqPolicySharedVoicemailNotificationByEmail) GetReset() OptBool {
	return s.Reset
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicySharedVoicemailNotificationByEmail) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateUserProfileReqPolicySharedVoicemailNotificationByEmail) SetReset(val OptBool) {
	s.Reset = val
}

type UpdateUserProfileReqPolicyVoicemail struct {
	// This field allows the user to delete his own voicemail.
	AllowDelete OptBool `json:"allow_delete"`
	// This field allows the user to download his own voicemail.
	AllowDownload OptBool `json:"allow_download"`
	// Whether to allow voicemail transcription.
	AllowTranscription OptBool `json:"allow_transcription"`
	// Whether to allow users to access, share, download or delete the videomail.
	AllowVideomail OptBool `json:"allow_videomail"`
	// Whether the current extension can access, receive, or share voicemail.
	Enable OptBool `json:"enable"`
}

// GetAllowDelete returns the value of AllowDelete.
func (s *UpdateUserProfileReqPolicyVoicemail) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *UpdateUserProfileReqPolicyVoicemail) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowTranscription returns the value of AllowTranscription.
func (s *UpdateUserProfileReqPolicyVoicemail) GetAllowTranscription() OptBool {
	return s.AllowTranscription
}

// GetAllowVideomail returns the value of AllowVideomail.
func (s *UpdateUserProfileReqPolicyVoicemail) GetAllowVideomail() OptBool {
	return s.AllowVideomail
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyVoicemail) GetEnable() OptBool {
	return s.Enable
}

// SetAllowDelete sets the value of AllowDelete.
func (s *UpdateUserProfileReqPolicyVoicemail) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *UpdateUserProfileReqPolicyVoicemail) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowTranscription sets the value of AllowTranscription.
func (s *UpdateUserProfileReqPolicyVoicemail) SetAllowTranscription(val OptBool) {
	s.AllowTranscription = val
}

// SetAllowVideomail sets the value of AllowVideomail.
func (s *UpdateUserProfileReqPolicyVoicemail) SetAllowVideomail(val OptBool) {
	s.AllowVideomail = val
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyVoicemail) SetEnable(val OptBool) {
	s.Enable = val
}

type UpdateUserProfileReqPolicyVoicemailAccessMembersItem struct {
	// The Zoom user ID to share the voicemail access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// Whether the user has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// Whether the user has download permissions. The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
	// Whether the user has permission to share. The default is **false**.
	AllowSharing OptBool `json:"allow_sharing"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *UpdateUserProfileReqPolicyVoicemailAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDelete returns the value of AllowDelete.
func (s *UpdateUserProfileReqPolicyVoicemailAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *UpdateUserProfileReqPolicyVoicemailAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowSharing returns the value of AllowSharing.
func (s *UpdateUserProfileReqPolicyVoicemailAccessMembersItem) GetAllowSharing() OptBool {
	return s.AllowSharing
}

// SetAccessUserID sets the value of AccessUserID.
func (s *UpdateUserProfileReqPolicyVoicemailAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *UpdateUserProfileReqPolicyVoicemailAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *UpdateUserProfileReqPolicyVoicemailAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowSharing sets the value of AllowSharing.
func (s *UpdateUserProfileReqPolicyVoicemailAccessMembersItem) SetAllowSharing(val OptBool) {
	s.AllowSharing = val
}

type UpdateUserProfileReqPolicyVoicemailNotificationByEmail struct {
	// Whether to include voicemail file.
	IncludeVoicemailFile OptBool `json:"include_voicemail_file"`
	// Whether to include voicemail transcription.
	IncludeVoicemailTranscription OptBool `json:"include_voicemail_transcription"`
	// If enabled, user will receive email notifications when there is a new voicemail from users, call
	// queues, auto receptionists or shared line groups.
	Enable OptBool `json:"enable"`
	// Whether the user's voicemail notification by email reset option will use the phone site's settings.
	Reset OptBool `json:"reset"`
}

// GetIncludeVoicemailFile returns the value of IncludeVoicemailFile.
func (s *UpdateUserProfileReqPolicyVoicemailNotificationByEmail) GetIncludeVoicemailFile() OptBool {
	return s.IncludeVoicemailFile
}

// GetIncludeVoicemailTranscription returns the value of IncludeVoicemailTranscription.
func (s *UpdateUserProfileReqPolicyVoicemailNotificationByEmail) GetIncludeVoicemailTranscription() OptBool {
	return s.IncludeVoicemailTranscription
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyVoicemailNotificationByEmail) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateUserProfileReqPolicyVoicemailNotificationByEmail) GetReset() OptBool {
	return s.Reset
}

// SetIncludeVoicemailFile sets the value of IncludeVoicemailFile.
func (s *UpdateUserProfileReqPolicyVoicemailNotificationByEmail) SetIncludeVoicemailFile(val OptBool) {
	s.IncludeVoicemailFile = val
}

// SetIncludeVoicemailTranscription sets the value of IncludeVoicemailTranscription.
func (s *UpdateUserProfileReqPolicyVoicemailNotificationByEmail) SetIncludeVoicemailTranscription(val OptBool) {
	s.IncludeVoicemailTranscription = val
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyVoicemailNotificationByEmail) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateUserProfileReqPolicyVoicemailNotificationByEmail) SetReset(val OptBool) {
	s.Reset = val
}

type UpdateUserProfileReqPolicyVoicemailTranscription struct {
	// Whether to allow the user to access transcriptions of voicemails`.
	Enable OptBool `json:"enable"`
	// Whether the user's voicemail transcription reset option will use the phone site's settings.
	Reset OptBool `json:"reset"`
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyVoicemailTranscription) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateUserProfileReqPolicyVoicemailTranscription) GetReset() OptBool {
	return s.Reset
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyVoicemailTranscription) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateUserProfileReqPolicyVoicemailTranscription) SetReset(val OptBool) {
	s.Reset = val
}

type UpdateUserProfileReqPolicyZoomPhoneOnMobile struct {
	// Whether to allow Calling and SMS/MMS functions on Mobile.
	AllowCallingSMSMms OptBool `json:"allow_calling_sms_mms"`
	// Whether to allow user to use Zoom Phone on mobile clients (iOS, iPad OS and Android).
	Enable OptBool `json:"enable"`
}

// GetAllowCallingSMSMms returns the value of AllowCallingSMSMms.
func (s *UpdateUserProfileReqPolicyZoomPhoneOnMobile) GetAllowCallingSMSMms() OptBool {
	return s.AllowCallingSMSMms
}

// GetEnable returns the value of Enable.
func (s *UpdateUserProfileReqPolicyZoomPhoneOnMobile) GetEnable() OptBool {
	return s.Enable
}

// SetAllowCallingSMSMms sets the value of AllowCallingSMSMms.
func (s *UpdateUserProfileReqPolicyZoomPhoneOnMobile) SetAllowCallingSMSMms(val OptBool) {
	s.AllowCallingSMSMms = val
}

// SetEnable sets the value of Enable.
func (s *UpdateUserProfileReqPolicyZoomPhoneOnMobile) SetEnable(val OptBool) {
	s.Enable = val
}

// UpdateUserSettingNoContent is response for UpdateUserSetting operation.
type UpdateUserSettingNoContent struct{}

type UpdateUserSettingReq struct {
	// The user delegation.
	Delegation OptUpdateUserSettingReqDelegation `json:"delegation"`
	// This field updates desk phone information.
	DeskPhone OptUpdateUserSettingReqDeskPhone `json:"desk_phone"`
	// This field updates the voicemail setting. &lt;b&gt;Deprecated:&lt;/b&gt; we will completely
	// deprecate this property in a future release. Use property `voicemail_access_members` instead.
	VoiceMail OptUpdateUserSettingReqVoiceMail `json:"voice_mail"`
	// This field updates the intercom setting.
	Intercom OptUpdateUserSettingReqIntercom `json:"intercom"`
	// The shared voicemail access member list.
	VoicemailAccessMembers []UpdateUserSettingReqVoicemailAccessMembersItem `json:"voicemail_access_members"`
	// The shared automatic call recording access member list.
	AutoCallRecordingAccessMembers []UpdateUserSettingReqAutoCallRecordingAccessMembersItem `json:"auto_call_recording_access_members"`
	// The shared ad hoc call recording access member list.
	AdHocCallRecordingAccessMembers []UpdateUserSettingReqAdHocCallRecordingAccessMembersItem `json:"ad_hoc_call_recording_access_members"`
}

// GetDelegation returns the value of Delegation.
func (s *UpdateUserSettingReq) GetDelegation() OptUpdateUserSettingReqDelegation {
	return s.Delegation
}

// GetDeskPhone returns the value of DeskPhone.
func (s *UpdateUserSettingReq) GetDeskPhone() OptUpdateUserSettingReqDeskPhone {
	return s.DeskPhone
}

// GetVoiceMail returns the value of VoiceMail.
func (s *UpdateUserSettingReq) GetVoiceMail() OptUpdateUserSettingReqVoiceMail {
	return s.VoiceMail
}

// GetIntercom returns the value of Intercom.
func (s *UpdateUserSettingReq) GetIntercom() OptUpdateUserSettingReqIntercom {
	return s.Intercom
}

// GetVoicemailAccessMembers returns the value of VoicemailAccessMembers.
func (s *UpdateUserSettingReq) GetVoicemailAccessMembers() []UpdateUserSettingReqVoicemailAccessMembersItem {
	return s.VoicemailAccessMembers
}

// GetAutoCallRecordingAccessMembers returns the value of AutoCallRecordingAccessMembers.
func (s *UpdateUserSettingReq) GetAutoCallRecordingAccessMembers() []UpdateUserSettingReqAutoCallRecordingAccessMembersItem {
	return s.AutoCallRecordingAccessMembers
}

// GetAdHocCallRecordingAccessMembers returns the value of AdHocCallRecordingAccessMembers.
func (s *UpdateUserSettingReq) GetAdHocCallRecordingAccessMembers() []UpdateUserSettingReqAdHocCallRecordingAccessMembersItem {
	return s.AdHocCallRecordingAccessMembers
}

// SetDelegation sets the value of Delegation.
func (s *UpdateUserSettingReq) SetDelegation(val OptUpdateUserSettingReqDelegation) {
	s.Delegation = val
}

// SetDeskPhone sets the value of DeskPhone.
func (s *UpdateUserSettingReq) SetDeskPhone(val OptUpdateUserSettingReqDeskPhone) {
	s.DeskPhone = val
}

// SetVoiceMail sets the value of VoiceMail.
func (s *UpdateUserSettingReq) SetVoiceMail(val OptUpdateUserSettingReqVoiceMail) {
	s.VoiceMail = val
}

// SetIntercom sets the value of Intercom.
func (s *UpdateUserSettingReq) SetIntercom(val OptUpdateUserSettingReqIntercom) {
	s.Intercom = val
}

// SetVoicemailAccessMembers sets the value of VoicemailAccessMembers.
func (s *UpdateUserSettingReq) SetVoicemailAccessMembers(val []UpdateUserSettingReqVoicemailAccessMembersItem) {
	s.VoicemailAccessMembers = val
}

// SetAutoCallRecordingAccessMembers sets the value of AutoCallRecordingAccessMembers.
func (s *UpdateUserSettingReq) SetAutoCallRecordingAccessMembers(val []UpdateUserSettingReqAutoCallRecordingAccessMembersItem) {
	s.AutoCallRecordingAccessMembers = val
}

// SetAdHocCallRecordingAccessMembers sets the value of AdHocCallRecordingAccessMembers.
func (s *UpdateUserSettingReq) SetAdHocCallRecordingAccessMembers(val []UpdateUserSettingReqAdHocCallRecordingAccessMembersItem) {
	s.AdHocCallRecordingAccessMembers = val
}

// Merged schema.
type UpdateUserSettingReqAdHocCallRecordingAccessMembersItem struct {
	// The Zoom user ID to share the access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// This field specifies whether the user has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// This field specifies whether the user has download permissions. The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
	// The unique identifier of the shared sub-setting that the user can access.
	SharedID OptString `json:"shared_id"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *UpdateUserSettingReqAdHocCallRecordingAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDelete returns the value of AllowDelete.
func (s *UpdateUserSettingReqAdHocCallRecordingAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *UpdateUserSettingReqAdHocCallRecordingAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetSharedID returns the value of SharedID.
func (s *UpdateUserSettingReqAdHocCallRecordingAccessMembersItem) GetSharedID() OptString {
	return s.SharedID
}

// SetAccessUserID sets the value of AccessUserID.
func (s *UpdateUserSettingReqAdHocCallRecordingAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *UpdateUserSettingReqAdHocCallRecordingAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *UpdateUserSettingReqAdHocCallRecordingAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetSharedID sets the value of SharedID.
func (s *UpdateUserSettingReqAdHocCallRecordingAccessMembersItem) SetSharedID(val OptString) {
	s.SharedID = val
}

// Merged schema.
type UpdateUserSettingReqAutoCallRecordingAccessMembersItem struct {
	// The Zoom user ID to share the access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// This field specifies whether the user has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// This field specifies whether the user has download permissions. The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
	// The unique identifier of the shared sub-setting that the user can access.
	SharedID OptString `json:"shared_id"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *UpdateUserSettingReqAutoCallRecordingAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDelete returns the value of AllowDelete.
func (s *UpdateUserSettingReqAutoCallRecordingAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *UpdateUserSettingReqAutoCallRecordingAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetSharedID returns the value of SharedID.
func (s *UpdateUserSettingReqAutoCallRecordingAccessMembersItem) GetSharedID() OptString {
	return s.SharedID
}

// SetAccessUserID sets the value of AccessUserID.
func (s *UpdateUserSettingReqAutoCallRecordingAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *UpdateUserSettingReqAutoCallRecordingAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *UpdateUserSettingReqAutoCallRecordingAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetSharedID sets the value of SharedID.
func (s *UpdateUserSettingReqAutoCallRecordingAccessMembersItem) SetSharedID(val OptString) {
	s.SharedID = val
}

// The user delegation.
type UpdateUserSettingReqDelegation struct {
	// Whether to allow members to prevent others from picking up a held call, and listening, whispering,
	// barging, or taking over a call if it's configured.
	Privacy OptBool `json:"privacy"`
	// The delegation privileges. 1-Place Calls, 2-Answer Calls, 3- Pick Up Hold Calls.
	Privileges []int `json:"privileges"`
	// Whether to allow users to access to the feature of delegation.
	Locked OptBool `json:"locked"`
}

// GetPrivacy returns the value of Privacy.
func (s *UpdateUserSettingReqDelegation) GetPrivacy() OptBool {
	return s.Privacy
}

// GetPrivileges returns the value of Privileges.
func (s *UpdateUserSettingReqDelegation) GetPrivileges() []int {
	return s.Privileges
}

// GetLocked returns the value of Locked.
func (s *UpdateUserSettingReqDelegation) GetLocked() OptBool {
	return s.Locked
}

// SetPrivacy sets the value of Privacy.
func (s *UpdateUserSettingReqDelegation) SetPrivacy(val OptBool) {
	s.Privacy = val
}

// SetPrivileges sets the value of Privileges.
func (s *UpdateUserSettingReqDelegation) SetPrivileges(val []int) {
	s.Privileges = val
}

// SetLocked sets the value of Locked.
func (s *UpdateUserSettingReqDelegation) SetLocked(val OptBool) {
	s.Locked = val
}

// This field updates desk phone information.
type UpdateUserSettingReqDeskPhone struct {
	// The setting for the devices.
	Devices []UpdateUserSettingReqDeskPhoneDevicesItem `json:"devices"`
	// After enabling this option, you can lock your desk phone screen. PIN Code is required to unlock
	// your phone. This feature is not supported on some devices. See [Supported Device
	// Types](https://support.zoom.us/hc/en-us/articles/360029698771) for more information.
	PhoneScreenLock OptBool `json:"phone_screen_lock"`
	// The PIN Code to access voicemail, hot desking, and unlocking desk phones.
	PinCode OptString `json:"pin_code"`
}

// GetDevices returns the value of Devices.
func (s *UpdateUserSettingReqDeskPhone) GetDevices() []UpdateUserSettingReqDeskPhoneDevicesItem {
	return s.Devices
}

// GetPhoneScreenLock returns the value of PhoneScreenLock.
func (s *UpdateUserSettingReqDeskPhone) GetPhoneScreenLock() OptBool {
	return s.PhoneScreenLock
}

// GetPinCode returns the value of PinCode.
func (s *UpdateUserSettingReqDeskPhone) GetPinCode() OptString {
	return s.PinCode
}

// SetDevices sets the value of Devices.
func (s *UpdateUserSettingReqDeskPhone) SetDevices(val []UpdateUserSettingReqDeskPhoneDevicesItem) {
	s.Devices = val
}

// SetPhoneScreenLock sets the value of PhoneScreenLock.
func (s *UpdateUserSettingReqDeskPhone) SetPhoneScreenLock(val OptBool) {
	s.PhoneScreenLock = val
}

// SetPinCode sets the value of PinCode.
func (s *UpdateUserSettingReqDeskPhone) SetPinCode(val OptString) {
	s.PinCode = val
}

type UpdateUserSettingReqDeskPhoneDevicesItem struct {
	// The device ID.
	ID OptString `json:"id"`
	// The device policy.
	Policy OptUpdateUserSettingReqDeskPhoneDevicesItemPolicy `json:"policy"`
}

// GetID returns the value of ID.
func (s *UpdateUserSettingReqDeskPhoneDevicesItem) GetID() OptString {
	return s.ID
}

// GetPolicy returns the value of Policy.
func (s *UpdateUserSettingReqDeskPhoneDevicesItem) GetPolicy() OptUpdateUserSettingReqDeskPhoneDevicesItemPolicy {
	return s.Policy
}

// SetID sets the value of ID.
func (s *UpdateUserSettingReqDeskPhoneDevicesItem) SetID(val OptString) {
	s.ID = val
}

// SetPolicy sets the value of Policy.
func (s *UpdateUserSettingReqDeskPhoneDevicesItem) SetPolicy(val OptUpdateUserSettingReqDeskPhoneDevicesItemPolicy) {
	s.Policy = val
}

// The device policy.
type UpdateUserSettingReqDeskPhoneDevicesItemPolicy struct {
	CallControl OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl `json:"call_control"`
	HotDesking  OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking  `json:"hot_desking"`
}

// GetCallControl returns the value of CallControl.
func (s *UpdateUserSettingReqDeskPhoneDevicesItemPolicy) GetCallControl() OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl {
	return s.CallControl
}

// GetHotDesking returns the value of HotDesking.
func (s *UpdateUserSettingReqDeskPhoneDevicesItemPolicy) GetHotDesking() OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking {
	return s.HotDesking
}

// SetCallControl sets the value of CallControl.
func (s *UpdateUserSettingReqDeskPhoneDevicesItemPolicy) SetCallControl(val OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl) {
	s.CallControl = val
}

// SetHotDesking sets the value of HotDesking.
func (s *UpdateUserSettingReqDeskPhoneDevicesItemPolicy) SetHotDesking(val OptUpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking) {
	s.HotDesking = val
}

type UpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl struct {
	// This field allows call control features to the current device: configure the desk phone devices to
	// mirror call control actions of the Zoom desktop client, including making and accepting calls.
	// Options include:
	// * `on`
	// * `off`.
	Status OptString `json:"status"`
}

// GetStatus returns the value of Status.
func (s *UpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl) GetStatus() OptString {
	return s.Status
}

// SetStatus sets the value of Status.
func (s *UpdateUserSettingReqDeskPhoneDevicesItemPolicyCallControl) SetStatus(val OptString) {
	s.Status = val
}

type UpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking struct {
	// This field allows hot desking feature to the current device: letting the guest user sign in to the
	// desk phone. You can't use the desk phone until the guest user signs out.
	// Options include:
	// * `on`
	// * `off`.
	Status OptString `json:"status"`
}

// GetStatus returns the value of Status.
func (s *UpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking) GetStatus() OptString {
	return s.Status
}

// SetStatus sets the value of Status.
func (s *UpdateUserSettingReqDeskPhoneDevicesItemPolicyHotDesking) SetStatus(val OptString) {
	s.Status = val
}

// This field updates the intercom setting.
type UpdateUserSettingReqIntercom struct {
	// The ID of the extension that you want to invite intercom connection.
	ExtensionID OptString `json:"extension_id"`
	// The ID of the device to which all your intercom calls will be routed.
	DeviceID OptString `json:"device_id"`
}

// GetExtensionID returns the value of ExtensionID.
func (s *UpdateUserSettingReqIntercom) GetExtensionID() OptString {
	return s.ExtensionID
}

// GetDeviceID returns the value of DeviceID.
func (s *UpdateUserSettingReqIntercom) GetDeviceID() OptString {
	return s.DeviceID
}

// SetExtensionID sets the value of ExtensionID.
func (s *UpdateUserSettingReqIntercom) SetExtensionID(val OptString) {
	s.ExtensionID = val
}

// SetDeviceID sets the value of DeviceID.
func (s *UpdateUserSettingReqIntercom) SetDeviceID(val OptString) {
	s.DeviceID = val
}

// This field updates the voicemail setting. &lt;b&gt;Deprecated:&lt;/b&gt; we will completely
// deprecate this property in a future release. Use property `voicemail_access_members` instead.
type UpdateUserSettingReqVoiceMail struct {
	// The Zoom user ID whose voicemail permissions need to be updated.
	AccessUserID OptString `json:"access_user_id"`
	// Whether the user has delete permissions. The default is **false**.
	Delete OptBool `json:"delete"`
	// Wether the user has download permissions. The default is **false**.
	Download OptBool `json:"download"`
	// This field specifies the ID of the voicemail.
	SharedID OptString `json:"shared_id"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *UpdateUserSettingReqVoiceMail) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetDelete returns the value of Delete.
func (s *UpdateUserSettingReqVoiceMail) GetDelete() OptBool {
	return s.Delete
}

// GetDownload returns the value of Download.
func (s *UpdateUserSettingReqVoiceMail) GetDownload() OptBool {
	return s.Download
}

// GetSharedID returns the value of SharedID.
func (s *UpdateUserSettingReqVoiceMail) GetSharedID() OptString {
	return s.SharedID
}

// SetAccessUserID sets the value of AccessUserID.
func (s *UpdateUserSettingReqVoiceMail) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetDelete sets the value of Delete.
func (s *UpdateUserSettingReqVoiceMail) SetDelete(val OptBool) {
	s.Delete = val
}

// SetDownload sets the value of Download.
func (s *UpdateUserSettingReqVoiceMail) SetDownload(val OptBool) {
	s.Download = val
}

// SetSharedID sets the value of SharedID.
func (s *UpdateUserSettingReqVoiceMail) SetSharedID(val OptString) {
	s.SharedID = val
}

// Merged schema.
type UpdateUserSettingReqVoicemailAccessMembersItem struct {
	// The Zoom user ID to share the voicemail access permissions with.
	AccessUserID OptString `json:"access_user_id"`
	// Whether the user has delete permissions. The default is **false**.
	AllowDelete OptBool `json:"allow_delete"`
	// Whether the user has download permissions. The default is **false**.
	AllowDownload OptBool `json:"allow_download"`
	// Whether the user has permission to share. The default is **false**.
	AllowSharing OptBool `json:"allow_sharing"`
	// The unique identifier of the shared sub-setting that the user can access.
	SharedID OptString `json:"shared_id"`
}

// GetAccessUserID returns the value of AccessUserID.
func (s *UpdateUserSettingReqVoicemailAccessMembersItem) GetAccessUserID() OptString {
	return s.AccessUserID
}

// GetAllowDelete returns the value of AllowDelete.
func (s *UpdateUserSettingReqVoicemailAccessMembersItem) GetAllowDelete() OptBool {
	return s.AllowDelete
}

// GetAllowDownload returns the value of AllowDownload.
func (s *UpdateUserSettingReqVoicemailAccessMembersItem) GetAllowDownload() OptBool {
	return s.AllowDownload
}

// GetAllowSharing returns the value of AllowSharing.
func (s *UpdateUserSettingReqVoicemailAccessMembersItem) GetAllowSharing() OptBool {
	return s.AllowSharing
}

// GetSharedID returns the value of SharedID.
func (s *UpdateUserSettingReqVoicemailAccessMembersItem) GetSharedID() OptString {
	return s.SharedID
}

// SetAccessUserID sets the value of AccessUserID.
func (s *UpdateUserSettingReqVoicemailAccessMembersItem) SetAccessUserID(val OptString) {
	s.AccessUserID = val
}

// SetAllowDelete sets the value of AllowDelete.
func (s *UpdateUserSettingReqVoicemailAccessMembersItem) SetAllowDelete(val OptBool) {
	s.AllowDelete = val
}

// SetAllowDownload sets the value of AllowDownload.
func (s *UpdateUserSettingReqVoicemailAccessMembersItem) SetAllowDownload(val OptBool) {
	s.AllowDownload = val
}

// SetAllowSharing sets the value of AllowSharing.
func (s *UpdateUserSettingReqVoicemailAccessMembersItem) SetAllowSharing(val OptBool) {
	s.AllowSharing = val
}

// SetSharedID sets the value of SharedID.
func (s *UpdateUserSettingReqVoicemailAccessMembersItem) SetSharedID(val OptString) {
	s.SharedID = val
}

// UpdateUserSettingsNoContent is response for UpdateUserSettings operation.
type UpdateUserSettingsNoContent struct{}

type UpdateUserSettingsReq struct {
	// The user's area code.
	AreaCode OptString `json:"area_code"`
	// This audio prompt language code.
	// American English: `en-US`
	// British English: `en-GB`
	// Espa&ntilde;ol americano: `es-US`
	// Fran&ccedil;ais canadien: `fr-CA`
	// Dansk: `da-DK`
	// Deutsch: `de-DE`
	// Espa&ntilde;ol: `es-ES`
	// Fran&ccedil;ais: `fr-FR`
	// Italiano: `it-IT`
	// Nederlands: `nl-NL`
	// Portugues portugal: `pt-PT`
	// Japanese: `ja-JP`
	// Korean: `ko-KO`
	// Portugues brasil: `pt-BR`
	// Chinese: `zh-CN`
	// Taiwanese: `zh-TW`.
	AudioPromptLanguage OptString `json:"audio_prompt_language"`
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	CountryIsoCode OptString `json:"country_iso_code"`
	// The music on hold prompt ID.
	// Options: empty char - default and `0` - disable.
	MusicOnHoldID OptString `json:"music_on_hold_id"`
	// The user's outbound caller ID phone number, in E164 format. If you hide the caller ID, set the
	// value to an `empty string`.
	OutboundCallerID OptString `json:"outbound_caller_id"`
}

// GetAreaCode returns the value of AreaCode.
func (s *UpdateUserSettingsReq) GetAreaCode() OptString {
	return s.AreaCode
}

// GetAudioPromptLanguage returns the value of AudioPromptLanguage.
func (s *UpdateUserSettingsReq) GetAudioPromptLanguage() OptString {
	return s.AudioPromptLanguage
}

// GetCountryIsoCode returns the value of CountryIsoCode.
func (s *UpdateUserSettingsReq) GetCountryIsoCode() OptString {
	return s.CountryIsoCode
}

// GetMusicOnHoldID returns the value of MusicOnHoldID.
func (s *UpdateUserSettingsReq) GetMusicOnHoldID() OptString {
	return s.MusicOnHoldID
}

// GetOutboundCallerID returns the value of OutboundCallerID.
func (s *UpdateUserSettingsReq) GetOutboundCallerID() OptString {
	return s.OutboundCallerID
}

// SetAreaCode sets the value of AreaCode.
func (s *UpdateUserSettingsReq) SetAreaCode(val OptString) {
	s.AreaCode = val
}

// SetAudioPromptLanguage sets the value of AudioPromptLanguage.
func (s *UpdateUserSettingsReq) SetAudioPromptLanguage(val OptString) {
	s.AudioPromptLanguage = val
}

// SetCountryIsoCode sets the value of CountryIsoCode.
func (s *UpdateUserSettingsReq) SetCountryIsoCode(val OptString) {
	s.CountryIsoCode = val
}

// SetMusicOnHoldID sets the value of MusicOnHoldID.
func (s *UpdateUserSettingsReq) SetMusicOnHoldID(val OptString) {
	s.MusicOnHoldID = val
}

// SetOutboundCallerID sets the value of OutboundCallerID.
func (s *UpdateUserSettingsReq) SetOutboundCallerID(val OptString) {
	s.OutboundCallerID = val
}

// UpdateUsersPropertiesInBatchNoContent is response for UpdateUsersPropertiesInBatch operation.
type UpdateUsersPropertiesInBatchNoContent struct{}

type UpdateUsersPropertiesInBatchReq struct {
	// The type that updates in batch.
	// You must enter `move_site`: `user_ids` and `site_id` into the current request body.
	// `assign_pending_user`: Assign user to the Zoom Phone feature of the Zoom One license. `site_id` is
	// not required.
	BatchType OptString `json:"batch_type"`
	// The IDs of user.
	UserIds []string `json:"user_ids"`
	// The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672) where
	// the user should be moved or assigned.
	SiteID OptString `json:"site_id"`
}

// GetBatchType returns the value of BatchType.
func (s *UpdateUsersPropertiesInBatchReq) GetBatchType() OptString {
	return s.BatchType
}

// GetUserIds returns the value of UserIds.
func (s *UpdateUsersPropertiesInBatchReq) GetUserIds() []string {
	return s.UserIds
}

// GetSiteID returns the value of SiteID.
func (s *UpdateUsersPropertiesInBatchReq) GetSiteID() OptString {
	return s.SiteID
}

// SetBatchType sets the value of BatchType.
func (s *UpdateUsersPropertiesInBatchReq) SetBatchType(val OptString) {
	s.BatchType = val
}

// SetUserIds sets the value of UserIds.
func (s *UpdateUsersPropertiesInBatchReq) SetUserIds(val []string) {
	s.UserIds = val
}

// SetSiteID sets the value of SiteID.
func (s *UpdateUsersPropertiesInBatchReq) SetSiteID(val OptString) {
	s.SiteID = val
}

// UpdateVoicemailReadStatusNoContent is response for UpdateVoicemailReadStatus operation.
type UpdateVoicemailReadStatusNoContent struct{}

// UpdateZoomRoomNoContent is response for UpdateZoomRoom operation.
type UpdateZoomRoomNoContent struct{}

type UpdateZoomRoomReq struct {
	// The extension number of the Zoom Room. The number must be complete (i.e. site number + short
	// extension).
	ExtensionNumber OptInt64                   `json:"extension_number"`
	Policy          OptUpdateZoomRoomReqPolicy `json:"policy"`
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
	SiteID OptString `json:"site_id"`
}

// GetExtensionNumber returns the value of ExtensionNumber.
func (s *UpdateZoomRoomReq) GetExtensionNumber() OptInt64 {
	return s.ExtensionNumber
}

// GetPolicy returns the value of Policy.
func (s *UpdateZoomRoomReq) GetPolicy() OptUpdateZoomRoomReqPolicy {
	return s.Policy
}

// GetSiteID returns the value of SiteID.
func (s *UpdateZoomRoomReq) GetSiteID() OptString {
	return s.SiteID
}

// SetExtensionNumber sets the value of ExtensionNumber.
func (s *UpdateZoomRoomReq) SetExtensionNumber(val OptInt64) {
	s.ExtensionNumber = val
}

// SetPolicy sets the value of Policy.
func (s *UpdateZoomRoomReq) SetPolicy(val OptUpdateZoomRoomReqPolicy) {
	s.Policy = val
}

// SetSiteID sets the value of SiteID.
func (s *UpdateZoomRoomReq) SetSiteID(val OptString) {
	s.SiteID = val
}

type UpdateZoomRoomReqPolicy struct {
	InternationalCalling   OptUpdateZoomRoomReqPolicyInternationalCalling   `json:"international_calling"`
	SelectOutboundCallerID OptUpdateZoomRoomReqPolicySelectOutboundCallerID `json:"select_outbound_caller_id"`
}

// GetInternationalCalling returns the value of InternationalCalling.
func (s *UpdateZoomRoomReqPolicy) GetInternationalCalling() OptUpdateZoomRoomReqPolicyInternationalCalling {
	return s.InternationalCalling
}

// GetSelectOutboundCallerID returns the value of SelectOutboundCallerID.
func (s *UpdateZoomRoomReqPolicy) GetSelectOutboundCallerID() OptUpdateZoomRoomReqPolicySelectOutboundCallerID {
	return s.SelectOutboundCallerID
}

// SetInternationalCalling sets the value of InternationalCalling.
func (s *UpdateZoomRoomReqPolicy) SetInternationalCalling(val OptUpdateZoomRoomReqPolicyInternationalCalling) {
	s.InternationalCalling = val
}

// SetSelectOutboundCallerID sets the value of SelectOutboundCallerID.
func (s *UpdateZoomRoomReqPolicy) SetSelectOutboundCallerID(val OptUpdateZoomRoomReqPolicySelectOutboundCallerID) {
	s.SelectOutboundCallerID = val
}

type UpdateZoomRoomReqPolicyInternationalCalling struct {
	// Allow current extension to place international calls outside of the calling plan.
	Enable OptBool `json:"enable"`
	// Using site setting.
	Reset OptBool `json:"reset"`
}

// GetEnable returns the value of Enable.
func (s *UpdateZoomRoomReqPolicyInternationalCalling) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateZoomRoomReqPolicyInternationalCalling) GetReset() OptBool {
	return s.Reset
}

// SetEnable sets the value of Enable.
func (s *UpdateZoomRoomReqPolicyInternationalCalling) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateZoomRoomReqPolicyInternationalCalling) SetReset(val OptBool) {
	s.Reset = val
}

type UpdateZoomRoomReqPolicySelectOutboundCallerID struct {
	// Allow current extension to change outbound caller ID when placing calls.
	Enable OptBool `json:"enable"`
	// Using site setting.
	Reset OptBool `json:"reset"`
}

// GetEnable returns the value of Enable.
func (s *UpdateZoomRoomReqPolicySelectOutboundCallerID) GetEnable() OptBool {
	return s.Enable
}

// GetReset returns the value of Reset.
func (s *UpdateZoomRoomReqPolicySelectOutboundCallerID) GetReset() OptBool {
	return s.Reset
}

// SetEnable sets the value of Enable.
func (s *UpdateZoomRoomReqPolicySelectOutboundCallerID) SetEnable(val OptBool) {
	s.Enable = val
}

// SetReset sets the value of Reset.
func (s *UpdateZoomRoomReqPolicySelectOutboundCallerID) SetReset(val OptBool) {
	s.Reset = val
}

type UserSmsSessionOK struct {
	// The next page token paginates through large result sets. A next page token returns whenever the
	// set of the available result list exceeds the page size.
	NextPageToken OptString `json:"next_page_token"`
	// The size of each page.
	PageSize    OptInt                            `json:"page_size"`
	SMSSessions []UserSmsSessionOKSMSSessionsItem `json:"sms_sessions"`
}

// GetNextPageToken returns the value of NextPageToken.
func (s *UserSmsSessionOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// GetPageSize returns the value of PageSize.
func (s *UserSmsSessionOK) GetPageSize() OptInt {
	return s.PageSize
}

// GetSMSSessions returns the value of SMSSessions.
func (s *UserSmsSessionOK) GetSMSSessions() []UserSmsSessionOKSMSSessionsItem {
	return s.SMSSessions
}

// SetNextPageToken sets the value of NextPageToken.
func (s *UserSmsSessionOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

// SetPageSize sets the value of PageSize.
func (s *UserSmsSessionOK) SetPageSize(val OptInt) {
	s.PageSize = val
}

// SetSMSSessions sets the value of SMSSessions.
func (s *UserSmsSessionOK) SetSMSSessions(val []UserSmsSessionOKSMSSessionsItem) {
	s.SMSSessions = val
}

type UserSmsSessionOKSMSSessionsItem struct {
	// The last send or receive time in UTC.
	LastAccessTime OptString `json:"last_access_time"`
	// The SMS members.
	Participants []UserSmsSessionOKSMSSessionsItemParticipantsItem `json:"participants"`
	// The SMS session ID.
	SessionID OptString `json:"session_id"`
	// The session type.
	// The value for this field can be one of the following:
	// `user`
	// `call_queue`
	// `auto_receptionist`.
	SessionType OptString `json:"session_type"`
}

// GetLastAccessTime returns the value of LastAccessTime.
func (s *UserSmsSessionOKSMSSessionsItem) GetLastAccessTime() OptString {
	return s.LastAccessTime
}

// GetParticipants returns the value of Participants.
func (s *UserSmsSessionOKSMSSessionsItem) GetParticipants() []UserSmsSessionOKSMSSessionsItemParticipantsItem {
	return s.Participants
}

// GetSessionID returns the value of SessionID.
func (s *UserSmsSessionOKSMSSessionsItem) GetSessionID() OptString {
	return s.SessionID
}

// GetSessionType returns the value of SessionType.
func (s *UserSmsSessionOKSMSSessionsItem) GetSessionType() OptString {
	return s.SessionType
}

// SetLastAccessTime sets the value of LastAccessTime.
func (s *UserSmsSessionOKSMSSessionsItem) SetLastAccessTime(val OptString) {
	s.LastAccessTime = val
}

// SetParticipants sets the value of Participants.
func (s *UserSmsSessionOKSMSSessionsItem) SetParticipants(val []UserSmsSessionOKSMSSessionsItemParticipantsItem) {
	s.Participants = val
}

// SetSessionID sets the value of SessionID.
func (s *UserSmsSessionOKSMSSessionsItem) SetSessionID(val OptString) {
	s.SessionID = val
}

// SetSessionType sets the value of SessionType.
func (s *UserSmsSessionOKSMSSessionsItem) SetSessionType(val OptString) {
	s.SessionType = val
}

type UserSmsSessionOKSMSSessionsItemParticipantsItem struct {
	// The participant name.
	DisplayName OptString                                               `json:"display_name"`
	Owner       OptUserSmsSessionOKSMSSessionsItemParticipantsItemOwner `json:"owner"`
	// The participant phone number.
	PhoneNumber OptString `json:"phone_number"`
	// Whether it is the owner of the session.
	IsSessionOwner OptBool `json:"is_session_owner"`
}

// GetDisplayName returns the value of DisplayName.
func (s *UserSmsSessionOKSMSSessionsItemParticipantsItem) GetDisplayName() OptString {
	return s.DisplayName
}

// GetOwner returns the value of Owner.
func (s *UserSmsSessionOKSMSSessionsItemParticipantsItem) GetOwner() OptUserSmsSessionOKSMSSessionsItemParticipantsItemOwner {
	return s.Owner
}

// GetPhoneNumber returns the value of PhoneNumber.
func (s *UserSmsSessionOKSMSSessionsItemParticipantsItem) GetPhoneNumber() OptString {
	return s.PhoneNumber
}

// GetIsSessionOwner returns the value of IsSessionOwner.
func (s *UserSmsSessionOKSMSSessionsItemParticipantsItem) GetIsSessionOwner() OptBool {
	return s.IsSessionOwner
}

// SetDisplayName sets the value of DisplayName.
func (s *UserSmsSessionOKSMSSessionsItemParticipantsItem) SetDisplayName(val OptString) {
	s.DisplayName = val
}

// SetOwner sets the value of Owner.
func (s *UserSmsSessionOKSMSSessionsItemParticipantsItem) SetOwner(val OptUserSmsSessionOKSMSSessionsItemParticipantsItemOwner) {
	s.Owner = val
}

// SetPhoneNumber sets the value of PhoneNumber.
func (s *UserSmsSessionOKSMSSessionsItemParticipantsItem) SetPhoneNumber(val OptString) {
	s.PhoneNumber = val
}

// SetIsSessionOwner sets the value of IsSessionOwner.
func (s *UserSmsSessionOKSMSSessionsItemParticipantsItem) SetIsSessionOwner(val OptBool) {
	s.IsSessionOwner = val
}

type UserSmsSessionOKSMSSessionsItemParticipantsItemOwner struct {
	// The owner ID.
	ID OptString `json:"id"`
	// The owner type:
	// *`user`
	// *`callQueue`
	// *`autoReceptionist`
	// *`sharedLineGroup`.
	Type OptString `json:"type"`
}

// GetID returns the value of ID.
func (s *UserSmsSessionOKSMSSessionsItemParticipantsItemOwner) GetID() OptString {
	return s.ID
}

// GetType returns the value of Type.
func (s *UserSmsSessionOKSMSSessionsItemParticipantsItemOwner) GetType() OptString {
	return s.Type
}

// SetID sets the value of ID.
func (s *UserSmsSessionOKSMSSessionsItemParticipantsItemOwner) SetID(val OptString) {
	s.ID = val
}

// SetType sets the value of Type.
func (s *UserSmsSessionOKSMSSessionsItemParticipantsItemOwner) SetType(val OptString) {
	s.Type = val
}

// Code generated by ogen, DO NOT EDIT.

package zoomphone

// AccountCallHistoryParams is parameters of accountCallHistory operation.
type AccountCallHistoryParams struct {
	// The number of records returned within a single API call.
	PageSize OptInt
	// The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format.
	// The date range defined by the `from` and `to` parameters should be a month as the response only
	// includes one month's worth of data. The month defined should fall within the last six months. If
	// unspecified, returns data within the 24 hours.
	From OptDate
	// **Required** only when the `from` parameter is specified.
	// End time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the
	// `from` parameter.
	To OptDate
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString
	// The keyword of the name, extension, number, email address, and call ID. It provides the ability to
	// search by keyword and it shows a list of all the related calls. Any calls go through this keyword.
	Keyword OptString
	// The direction filter of the call logs.
	Directions []string
	// The connect type filter of the call logs.
	// * `internal`
	// * `external`.
	ConnectTypes []string
	// The number type filter of the caller or callee.
	NumberTypes []string
	// The call type filter of the call logs.
	// * `general`
	// * `emergency`.
	CallTypes []string
	// The extension type filter of the call logs.
	ExtensionTypes []string
	// The call result filter of the call logs.
	CallResults []string
	// The primary group filter of call logs.
	GroupIds []string
	// The site filter of call logs.
	SiteIds []string
	// The department of which the call log belongs.
	Department OptString
	// The cost center of which the call log belongs.
	CostCenter OptString
	// This field enables you to search call logs by start or end time. By default, using start_time.
	TimeType OptString
	// The recording filter indicates whether the whole call has recording or not. recorded means the
	// call has at least one recording, non_recorded means the call does not have any recordings.
	RecordingStatus OptString
}

// AccountCallLogsParams is parameters of accountCallLogs operation.
type AccountCallLogsParams struct {
	// The number of records returned within a single API call.
	PageSize OptInt
	// The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range
	// defined by the `from` and `to` parameters should be a month as the response only includes one
	// month's worth of data. The month defined should fall within the last six months. If unspecified,
	// returns data within the 24 hours.
	From OptDate
	// **Required** only when the `from` parameter is specified. End time and date in **yyyy-mm-dd** or
	// **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.
	To OptDate
	// The type of the call logs. The value can be either &quot;all&quot; or &quot;missed&quot;.
	Type OptString
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
	// Filter the API response by [path](https://support.zoom.
	// us/hc/en-us/articles/360021114452-Viewing-and-identifying-logs#h_646b46c6-0623-4ab1-8b8b-ea5b8bcef679) of the call. The value of this field can be one of the following: `voiceMail`, `message`, `forward`, `extension`, `callQueue`, `ivrMenu`, `companyDirectory`, `autoReceptionist`, `contactCenter`, `disconnected`, `commonAreaPhone`,
	// `pstn`, `transfer`, `sharedLines`, `sharedLineGroup`, `tollFreeBilling`, `meetingService`,
	// `parkPickup`,
	// `parkTimeout`, `monitor`, `takeover`, `sipGroup`.
	Path OptString
	// Enables you to search call logs by start or end time. Choose `startTime` or `endTime`.
	TimeType OptString
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites). Use this query parameter if you have
	// enabled multiple sites and would like to filter the response of this API call by call logs of a
	// specific phone site.
	SiteID OptString
	// Whether to filter API responses to include call logs that only have a non-zero charge.
	ChargedCallLogs OptBool
}

// AccountSmsSessionParams is parameters of accountSmsSession operation.
type AccountSmsSessionParams struct {
	// The number of records returned within a single API call.
	PageSize OptInt
	// The current page number of returned records.
	NextPageToken OptString
	// The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format.
	// The date range defined by the `from` and `to` parameters should be a month as the response only
	// includes one month's worth of data at once.
	// If unspecified, it returns data from the past 30 days.
	From OptDate
	// This field is required only when the `from` parameter is specified.
	// End time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the
	// `from` parameter.
	To OptDate
	// This field filters the specific session list by a session type.
	// The value for this field can be one of the following:
	// `user`
	// `call_queue`
	// `auto_receptionist`
	// `all`.
	SessionType OptString
	// The sender's or receiver's phone number that limits the list of SMS sessions.
	PhoneNumber OptString
	// This field filters by `sent_message_time`, `received_message_time`, or `last_message_time` for the
	// From and To dates.
	// * `last_message_time`: queries which sessions last messages between From and To dates.
	// * `sent_message_time`: queries which sessions have sent messages between From and To dates.
	// * `received_message_time`: queries which sessions have received messages between From and To dates.
	FilterType OptString
}

// AccountVoiceMailsParams is parameters of accountVoiceMails operation.
type AccountVoiceMailsParams struct {
	// The number of records returned within a single API call.
	PageSize OptInt
	// The status of the voice mail.
	Status OptString
	// The site ID.
	SiteID OptString
	// The owner type.
	OwnerType OptString
	// The voicemail type.
	VoicemailType OptString
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes..
	NextPageToken OptString
	// The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format.
	// The date range defined in the `from` and `to` parameters should be a month as the response only
	// includes one month's worth of data at once.
	// The month defined should fall within the last six months. If unspecified, it returns data from the
	// past 30 days.
	From OptDate
	// This field is **required** only when the `from` parameter is specified.
	// The end time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as
	// the `from` parameter.
	To OptDate
	// Whether to query voicemails from trash. The default setting is false.
	Trashed OptBool
}

// AddAnAudioParams is parameters of AddAnAudio operation.
type AddAnAudioParams struct {
	UserId string
}

// AddAudioItemParams is parameters of AddAudioItem operation.
type AddAudioItemParams struct {
	UserId string
}

// AddCQPolicySubSettingParams is parameters of addCQPolicySubSetting operation.
type AddCQPolicySubSettingParams struct {
	// The call queue ID, retrievable the [List Call Queues](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Call-Queues/operation/listCallQueues) API.
	CallQueueId string
	// The policy sub-setting item that you wish to add. Allowed values: `voice_mail`.
	PolicyType string
}

// AddCallHandlingParams is parameters of addCallHandling operation.
type AddCallHandlingParams struct {
	// The extension ID.
	ExtensionId string
	// The call handling setting type:
	// * `business_hours`
	// * `closed_hours`
	// * `holiday_hours`.
	SettingType string
}

// AddClientCodeToCallLogParams is parameters of addClientCodeToCallLog operation.
type AddClientCodeToCallLogParams struct {
	// Unique identifier of the call log.
	CallLogId string
}

// AddCommonAreaOutboundCallingExceptionRuleParams is parameters of AddCommonAreaOutboundCallingExceptionRule operation.
type AddCommonAreaOutboundCallingExceptionRuleParams struct {
	// The ID of the common area.
	CommonAreaId string
}

// AddCommonAreaSettingParams is parameters of AddCommonAreaSetting operation.
type AddCommonAreaSettingParams struct {
	// Common area ID or common area extension ID.
	CommonAreaId string
	// Corresponds to the setting item you wish to modify. Allowed values: `desk_phone`.
	SettingType string
}

// AddExtensionsToADeviceParams is parameters of addExtensionsToADevice operation.
type AddExtensionsToADeviceParams struct {
	// Unique identifier of the device.
	DeviceId string
}

// AddExtensiontLevelInboundBlockRulesParams is parameters of AddExtensiontLevelInboundBlockRules operation.
type AddExtensiontLevelInboundBlockRulesParams struct {
	// The extension ID for the inbound blocked rules to fetch.
	ExtensionId string
}

// AddGCPMembersParams is parameters of addGCPMembers operation.
type AddGCPMembersParams struct {
	GroupId string
}

// AddMembersParams is parameters of addMembers operation.
type AddMembersParams struct {
	// Monitoring group ID.
	MonitoringGroupId string
	// Member type.
	MemberType string
}

// AddMembersToCallQueueParams is parameters of addMembersToCallQueue operation.
type AddMembersToCallQueueParams struct {
	// Unique identifier of the Call Queue.
	CallQueueId string
}

// AddMembersToSharedLineGroupParams is parameters of addMembersToSharedLineGroup operation.
type AddMembersToSharedLineGroupParams struct {
	// The shared line group ID.
	SharedLineGroupId string
}

// AddPolicyParams is parameters of AddPolicy operation.
type AddPolicyParams struct {
	// The unique identifier of the auto receptionist. It can be retrieved from the [List auto
	// receptionists API](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/listAutoReceptionists).
	AutoReceptionistId string
	// Corresponds to the policy item you wish to add. Allowed values: `voice_mail`.
	PolicyType string
}

// AddRoleMembersParams is parameters of AddRoleMembers operation.
type AddRoleMembersParams struct {
	// Unique identifier of the [role](https://support.zoom.
	// us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management) assigned to the user.
	RoleId string
}

// AddSLGPolicySubSettingParams is parameters of addSLGPolicySubSetting operation.
type AddSLGPolicySubSettingParams struct {
	SlgId string
	// This setting corresponds to tbe policy item you wish to add. Allowed values: `voice_mail`.
	PolicyType string
}

// AddSiteOutboundCallerNumbersParams is parameters of addSiteOutboundCallerNumbers operation.
type AddSiteOutboundCallerNumbersParams struct {
	// The site ID.
	SiteId string
}

// AddSiteOutboundCallingExceptionRuleParams is parameters of AddSiteOutboundCallingExceptionRule operation.
type AddSiteOutboundCallingExceptionRuleParams struct {
	// The ID of the site.
	SiteId string
}

// AddSiteSettingParams is parameters of addSiteSetting operation.
type AddSiteSettingParams struct {
	// The site ID.
	SiteId string
	// The site setting type:
	// * `holiday_hours`
	// * `security`.
	SettingType string
}

// AddUserOutboundCallerNumbersParams is parameters of addUserOutboundCallerNumbers operation.
type AddUserOutboundCallerNumbersParams struct {
	// The unique identifier of the user.
	UserId string
}

// AddUserOutboundCallingExceptionRuleParams is parameters of AddUserOutboundCallingExceptionRule operation.
type AddUserOutboundCallingExceptionRuleParams struct {
	// The ID of the user.
	UserId string
}

// AddUserSettingParams is parameters of addUserSetting operation.
type AddUserSettingParams struct {
	// The unique identifier of the user.
	UserId string
	// Corresponds to the setting item you wish to modify. Allowed values: `voice_mail`, `delegation`,
	// `desk_phone`, `intercom`, `auto_call_recording`,`ad_hoc_call_recording`.
	SettingType string
}

// AddUsersToDirectoryBySiteParams is parameters of AddUsersToDirectoryBySite operation.
type AddUsersToDirectoryBySiteParams struct {
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites).
	SiteId string
}

// AssignCallingPlanParams is parameters of assignCallingPlan operation.
type AssignCallingPlanParams struct {
	UserId string
}

// AssignCallingPlanToRoomParams is parameters of assignCallingPlanToRoom operation.
type AssignCallingPlanToRoomParams struct {
	RoomId string
}

// AssignCallingPlansToCommonAreaParams is parameters of assignCallingPlansToCommonArea operation.
type AssignCallingPlansToCommonAreaParams struct {
	// Common area ID or common area extension ID.
	CommonAreaId string
}

// AssignCampaignPhoneNumbersParams is parameters of assignCampaignPhoneNumbers operation.
type AssignCampaignPhoneNumbersParams struct {
	SmsCampaignId string
}

// AssignPhoneNumberParams is parameters of assignPhoneNumber operation.
type AssignPhoneNumberParams struct {
	UserId string
}

// AssignPhoneNumberToZoomRoomParams is parameters of assignPhoneNumberToZoomRoom operation.
type AssignPhoneNumberToZoomRoomParams struct {
	RoomId string
}

// AssignPhoneNumbersAutoReceptionistParams is parameters of assignPhoneNumbersAutoReceptionist operation.
type AssignPhoneNumbersAutoReceptionistParams struct {
	// The unique identifier of the auto receptionist. It can be retrieved from the [List auto
	// receptionists API](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/listAutoReceptionists).
	AutoReceptionistId string
}

// AssignPhoneNumbersSLGParams is parameters of assignPhoneNumbersSLG operation.
type AssignPhoneNumbersSLGParams struct {
	// The shared line group ID.
	SharedLineGroupId string
}

// AssignPhoneNumbersToCommonAreaParams is parameters of assignPhoneNumbersToCommonArea operation.
type AssignPhoneNumbersToCommonAreaParams struct {
	// Common area ID or common area extension ID.
	CommonAreaId string
}

// AssignPhoneToCallQueueParams is parameters of assignPhoneToCallQueue operation.
type AssignPhoneToCallQueueParams struct {
	// Unique identifier of the Call Queue.
	CallQueueId string
}

// BatchUpdateDeviceLineKeySettingParams is parameters of batchUpdateDeviceLineKeySetting operation.
type BatchUpdateDeviceLineKeySettingParams struct {
	// The device ID.
	DeviceId string
}

// BatchUpdateLineKeySettingParams is parameters of BatchUpdateLineKeySetting operation.
type BatchUpdateLineKeySettingParams struct {
	// The extension ID.
	ExtensionId string
}

// DelRoleMembersParams is parameters of DelRoleMembers operation.
type DelRoleMembersParams struct {
	// Unique identifier of the [role](https://support.zoom.
	// us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management) assigned to the user.
	RoleId string
	// The user IDs or email addresses of the user.
	UserIds []string
}

// DeleteABlockedListParams is parameters of deleteABlockedList operation.
type DeleteABlockedListParams struct {
	// The unique identifier of the blocked list.
	BlockedListId string
}

// DeleteACallQueueParams is parameters of deleteACallQueue operation.
type DeleteACallQueueParams struct {
	// Unique identifier of the call queue.
	CallQueueId string
}

// DeleteADeviceParams is parameters of deleteADevice operation.
type DeleteADeviceParams struct {
	// Unique identifier of the device.
	DeviceId string
}

// DeleteAExternalContactParams is parameters of deleteAExternalContact operation.
type DeleteAExternalContactParams struct {
	// The external contact's ID.
	ExternalContactId string
}

// DeleteAMemberSLGParams is parameters of deleteAMemberSLG operation.
type DeleteAMemberSLGParams struct {
	// The unique identifier of the shared line group from which you would like to remove a member.
	SharedLineGroupId string
	// The unique identifier of the member who is to be removed.
	MemberId string
}

// DeleteAPhoneNumberSLGParams is parameters of deleteAPhoneNumberSLG operation.
type DeleteAPhoneNumberSLGParams struct {
	SharedLineGroupId string
	// The unique identifier of the phone number which is to be unassigned. This can be retrieved from
	// Get a Shared Line Group API.
	PhoneNumberId string
}

// DeleteASharedLineGroupParams is parameters of deleteASharedLineGroup operation.
type DeleteASharedLineGroupParams struct {
	// The shared line group ID.
	SharedLineGroupId string
}

// DeleteAccountLevelInboundBlockRulesParams is parameters of DeleteAccountLevelInboundBlockRules operation.
type DeleteAccountLevelInboundBlockRulesParams struct {
	// The unique identifier of the blocked rule.
	BlockedRuleID string
}

// DeleteAccountLevelInboundBlockedStatisticsParams is parameters of DeleteAccountLevelInboundBlockedStatistics operation.
type DeleteAccountLevelInboundBlockedStatisticsParams struct {
	// The unique identifier of the blocked statistic.
	BlockedStatisticID string
}

// DeleteAccountOutboundCallingExceptionRuleParams is parameters of deleteAccountOutboundCallingExceptionRule operation.
type DeleteAccountOutboundCallingExceptionRuleParams struct {
	// The exception rule ID.
	ExceptionRuleId string
}

// DeleteAnAlertSettingParams is parameters of DeleteAnAlertSetting operation.
type DeleteAnAlertSettingParams struct {
	// The alert setting ID.
	AlertSettingId string
}

// DeleteAudioItemParams is parameters of DeleteAudioItem operation.
type DeleteAudioItemParams struct {
	// Unique identifier of the audio item.
	AudioId string
}

// DeleteAutoReceptionistParams is parameters of deleteAutoReceptionist operation.
type DeleteAutoReceptionistParams struct {
	// The unique identifier of the auto receptionist. It can be retrieved from the [List auto
	// receptionists API](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/listAutoReceptionists).
	AutoReceptionistId string
}

// DeleteCRPhoneNumberParams is parameters of deleteCRPhoneNumber operation.
type DeleteCRPhoneNumberParams struct {
	// Phone number in E164 format.
	Number string
}

// DeleteCallHandlingParams is parameters of deleteCallHandling operation.
type DeleteCallHandlingParams struct {
	// The extension ID.
	ExtensionId string
	// The type of call handling setting:
	// * `business_hours`
	// * `closed_hours`
	// * `holiday_hours`.
	SettingType string
	// The call forwarding's ID. Use this parameter if you pass the `call_forwarding_id` value for the
	// `settingType` parameter.
	CallForwardingID OptString
	// The holiday's ID. Use this parameter if you pass the `holiday_id` value for the `settingType`
	// parameter.
	HolidayID OptString
}

// DeleteCallLogParams is parameters of deleteCallLog operation.
type DeleteCallLogParams struct {
	// The user ID or email address of the user.
	UserId string
	// Unique identifier of the call log. The value for this field can be retrieved from [account's call
	// logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/accountCallLogs) or
	// [user's call logs](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/phoneUserCallLogs).
	CallLogId string
}

// DeleteCallRecordingParams is parameters of deleteCallRecording operation.
type DeleteCallRecordingParams struct {
	// The unique identifier of the recording.
	RecordingId string
}

// DeleteCommonAreaParams is parameters of deleteCommonArea operation.
type DeleteCommonAreaParams struct {
	// Common area ID or common area extension ID.
	CommonAreaId string
}

// DeleteCommonAreaOutboundCallingExceptionRuleParams is parameters of deleteCommonAreaOutboundCallingExceptionRule operation.
type DeleteCommonAreaOutboundCallingExceptionRuleParams struct {
	// The ID of the common area.
	CommonAreaId string
	// The exception rule ID.
	ExceptionRuleId string
}

// DeleteCommonAreaSettingParams is parameters of deleteCommonAreaSetting operation.
type DeleteCommonAreaSettingParams struct {
	// Common area ID or common area extension ID.
	CommonAreaId string
	// Corresponds to the setting item you wish to modify. Allowed values: `desk_phone`.
	SettingType string
	// Desk phone ID.
	DeviceID string
}

// DeleteEmergencyAddressParams is parameters of deleteEmergencyAddress operation.
type DeleteEmergencyAddressParams struct {
	// The emergency address ID.
	EmergencyAddressId string
}

// DeleteExtensionFromADeviceParams is parameters of deleteExtensionFromADevice operation.
type DeleteExtensionFromADeviceParams struct {
	// Unique identifier of the device from which to unassign an assignee.
	DeviceId string
	// Extension ID of the assignee (`user` or `common area`).
	ExtensionId string
}

// DeleteExtensiontLevelInboundBlockRulesParams is parameters of DeleteExtensiontLevelInboundBlockRules operation.
type DeleteExtensiontLevelInboundBlockRulesParams struct {
	// The extension ID for the inbound blocked rules to fetch.
	ExtensionId string
	// The unique identifier of the blocked rule.
	BlockedRuleID string
}

// DeleteFirmwareUpdateRuleParams is parameters of DeleteFirmwareUpdateRule operation.
type DeleteFirmwareUpdateRuleParams struct {
	// Unique identifier of the firmware update rule.
	RuleId string
	// Restart type: `1` - Restart the devices immediately. `2` - Restart with the next resync or auto
	// pull.
	RestartType OptInt
}

// DeleteGCPParams is parameters of deleteGCP operation.
type DeleteGCPParams struct {
	GroupId string
}

// DeleteLineKeyParams is parameters of DeleteLineKey operation.
type DeleteLineKeyParams struct {
	// The extension ID.
	ExtensionId string
	// Line key ID.
	LineKeyId string
}

// DeleteLocationParams is parameters of deleteLocation operation.
type DeleteLocationParams struct {
	// The emergency service location's ID.
	LocationId string
}

// DeleteMembersOfSLGParams is parameters of deleteMembersOfSLG operation.
type DeleteMembersOfSLGParams struct {
	// The shared line group ID.
	SharedLineGroupId string
}

// DeleteMonitoringGroupParams is parameters of deleteMonitoringGroup operation.
type DeleteMonitoringGroupParams struct {
	// Monitoring group ID.
	MonitoringGroupId string
}

// DeleteOutboundCallerNumbersParams is parameters of deleteOutboundCallerNumbers operation.
type DeleteOutboundCallerNumbersParams struct {
	// The customization IDs.
	CustomizeIds []string
}

// DeletePhoneNumbersSLGParams is parameters of deletePhoneNumbersSLG operation.
type DeletePhoneNumbersSLGParams struct {
	// The shared line group ID.
	SharedLineGroupId string
}

// DeletePhoneRoleParams is parameters of DeletePhoneRole operation.
type DeletePhoneRoleParams struct {
	// Unique identifier of the [role](https://support.zoom.
	// us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management) assigned to the user.
	RoleId string
}

// DeletePhoneSiteParams is parameters of deletePhoneSite operation.
type DeletePhoneSiteParams struct {
	// The unique identifier of the site.
	SiteId string
	// The site ID of another site where the assets of the current site (users, numbers and phones) can
	// be transferred.
	TransferSiteID string
}

// DeletePolicyParams is parameters of DeletePolicy operation.
type DeletePolicyParams struct {
	// The unique identifier of the auto receptionist. It can be retrieved from the [List auto
	// receptionists](https://developers.zoom.
	// us/docs/api/rest/reference/phone/methods/#operation/listAutoReceptionists) API.
	AutoReceptionistId string
	// This field corresponds to the policy item you wish to remove.
	// Allowed values: `voice_mail`.
	PolicyType string
	// The unique identifier of the voicemail that the user can access. It's required only for
	// `voice_mail` policy type.
	SharedIds []string
}

// DeleteProvisionTemplateParams is parameters of deleteProvisionTemplate operation.
type DeleteProvisionTemplateParams struct {
	// The template ID.
	TemplateId string
}

// DeleteRoutingRuleParams is parameters of deleteRoutingRule operation.
type DeleteRoutingRuleParams struct {
	// The unique identifier of the routing rule.
	RoutingRuleId string
}

// DeleteSiteOutboundCallerNumbersParams is parameters of deleteSiteOutboundCallerNumbers operation.
type DeleteSiteOutboundCallerNumbersParams struct {
	// The site ID.
	SiteId string
	// The customization IDs.
	CustomizeIds []string
}

// DeleteSiteOutboundCallingExceptionRuleParams is parameters of deleteSiteOutboundCallingExceptionRule operation.
type DeleteSiteOutboundCallingExceptionRuleParams struct {
	// The ID of the site.
	SiteId string
	// The exception rule ID.
	ExceptionRuleId string
}

// DeleteSiteSettingParams is parameters of deleteSiteSetting operation.
type DeleteSiteSettingParams struct {
	// The site ID.
	SiteId string
	// The site setting type:
	// * `holiday_hours`
	// * `security`.
	SettingType string
	// The device type. Enable SRTP AES-256 encryption on the site for the specified device type. Used
	// for `security` setting type.
	DeviceType OptString
	// The holiday hour setting ID.  Used for `holiday_hours` setting type.
	HolidayID OptString
}

// DeleteUnassignedPhoneNumbersParams is parameters of deleteUnassignedPhoneNumbers operation.
type DeleteUnassignedPhoneNumbersParams struct {
	// Comma seperated list of unassigned phone numbers in E164 format or phone number IDs.
	PhoneNumbers []string
}

// DeleteUserOutboundCallerNumbersParams is parameters of deleteUserOutboundCallerNumbers operation.
type DeleteUserOutboundCallerNumbersParams struct {
	// The unique identifier of the user.
	UserId string
	// The customization IDs.
	CustomizeIds []string
}

// DeleteUserOutboundCallingExceptionRuleParams is parameters of deleteUserOutboundCallingExceptionRule operation.
type DeleteUserOutboundCallingExceptionRuleParams struct {
	// The ID of the user.
	UserId string
	// The exception rule ID.
	ExceptionRuleId string
}

// DeleteUserSettingParams is parameters of deleteUserSetting operation.
type DeleteUserSettingParams struct {
	// The unique identifier of the user.
	UserId string
	// Corresponds to the setting item you wish to remove. Allowed values: `voice_mail`, `delegation`,
	// `desk_phone`, `intercom`, `auto_call_recording`,`ad_hoc_call_recording`.
	SettingType string
	// This field is required only for voicemail, auto_call_recording, and ad_hoc_call_recording setting
	// type.
	SharedID OptString
	// This field deletes the delegation assistant, used for delegation setting type.
	AssistantExtensionID OptString
	// This field deletes the assigned device, used for `desk_phone` setting type.
	DeviceID OptString
	// This field deletes the intercom connection for the `intercom` setting type.
	IntercomExtensionID OptString
}

// DeleteUsersFromDirectoryParams is parameters of DeleteUsersFromDirectory operation.
type DeleteUsersFromDirectoryParams struct {
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites).
	SiteID string
	// Extension Ids. If the value is not specified, delete the value of `site_id` from  `included sites`
	// and delete all users related with `site_id` from directory.
	ExtensionIds []string
}

// DeleteUsersFromDirectoryBySiteParams is parameters of DeleteUsersFromDirectoryBySite operation.
type DeleteUsersFromDirectoryBySiteParams struct {
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites).
	SiteId string
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites) to which users to delete belongs.
	SiteID OptString
	// Extension Ids. If the value is not specified, delete the value of `site_id` from  `included sites`
	// and delete all users related with `site_id` from directory.
	ExtensionIds []string
}

// GetABillingAccountParams is parameters of GetABillingAccount operation.
type GetABillingAccountParams struct {
	// The billing account ID.
	BillingAccountId string
}

// GetABlockedListParams is parameters of getABlockedList operation.
type GetABlockedListParams struct {
	// The unique identifier of the blocked list.
	BlockedListId string
}

// GetACallQueueParams is parameters of getACallQueue operation.
type GetACallQueueParams struct {
	// Unique identifier of the Call Queue. This can be retrieved from [List Call Queues
	// API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-call-queues/listcallqueues).
	CallQueueId string
}

// GetACommonAreaParams is parameters of getACommonArea operation.
type GetACommonAreaParams struct {
	// Common area ID or common area extension ID.
	CommonAreaId string
}

// GetADeviceParams is parameters of getADevice operation.
type GetADeviceParams struct {
	// The unique Identifier of the device.
	DeviceId string
}

// GetAExternalContactParams is parameters of getAExternalContact operation.
type GetAExternalContactParams struct {
	// The external contact's ID.
	ExternalContactId string
}

// GetASharedLineGroupParams is parameters of getASharedLineGroup operation.
type GetASharedLineGroupParams struct {
	// The unique identifier of the shared line group.
	SharedLineGroupId string
}

// GetASiteParams is parameters of getASite operation.
type GetASiteParams struct {
	// The unique identifier of the site.
	SiteId string
}

// GetAccountOutboundCallingCountriesAndRegionsParams is parameters of GetAccountOutboundCallingCountriesAndRegions operation.
type GetAccountOutboundCallingCountriesAndRegionsParams struct {
	// The next page token paginates through a large set of results. It returns whenever the set of
	// available results exceeds the current page size. The expiration period for this token is 15
	// minutes.
	NextPageToken OptString
	// The number of records in a single API call.
	PageSize OptInt
}

// GetAlertSettingDetailsParams is parameters of GetAlertSettingDetails operation.
type GetAlertSettingDetailsParams struct {
	// The unique Identifier of the alert setting.
	AlertSettingId string
}

// GetAudioItemParams is parameters of GetAudioItem operation.
type GetAudioItemParams struct {
	// The unique identifier of the audio item.
	AudioId string
}

// GetAutoReceptionistDetailParams is parameters of getAutoReceptionistDetail operation.
type GetAutoReceptionistDetailParams struct {
	AutoReceptionistId string
}

// GetAutoReceptionistIVRParams is parameters of getAutoReceptionistIVR operation.
type GetAutoReceptionistIVRParams struct {
	// The unique identifier of the auto receptionist. It can be retrieved from the [List Phone
	// Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API.
	AutoReceptionistId string
	// The query hours type: `business_hours` or `closed_hours`, default `business_hours`.
	HoursType OptString
	// The auto receptionist holiday hours ID. If both `holiday_id` and `hours_type` are passed,
	// `holiday_id` has a high priority and `hours_type` is invalid.
	HolidayID OptString
}

// GetAutoReceptionistsPolicyParams is parameters of getAutoReceptionistsPolicy operation.
type GetAutoReceptionistsPolicyParams struct {
	// The unique identifier of the auto receptionist. It can be retrieved from the [List auto
	// receptionists API](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/listAutoReceptionists).
	AutoReceptionistId string
}

// GetCallChargesUsageReportParams is parameters of GetCallChargesUsageReport operation.
type GetCallChargesUsageReportParams struct {
	// The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range
	// defined by the `from` and `to` parameters should be a month as the response only includes one
	// month's worth of data at once. The from date should not exceed recent 13 months. If unspecified,
	// it returns data from the past 30 days.
	From OptDate
	// **Required** only when the `from` parameter is specified. The end time and date in **yyyy-mm-dd**
	// or **yyyy-MM-dd'T'HH:mm:ss'Z'** format is the same format as the `from` parameter.
	To OptDate
	// The number of records to be returned within a single API call. The default is **30** and the
	// maximum is **300**.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes..
	NextPageToken OptString
	// The billing account ID.
	BillingAccountID OptString
	// This field shows calls with charges only. The default value is `false`.
	ShowChargesOnly OptBool
}

// GetCallHandlingParams is parameters of getCallHandling operation.
type GetCallHandlingParams struct {
	// The extension ID.
	ExtensionId string
}

// GetCallLogDetailsParams is parameters of getCallLogDetails operation.
type GetCallLogDetailsParams struct {
	// The unique identifier of the call log. Both `callLogId` and `callId` can be used as path
	// parameters. The value for this field can be retrieved from [account's call
	// logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/accountCallLogs) or
	// the [user's call logs](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/phoneUserCallLogs).
	CallLogId string
}

// GetCallLogMetricsDetailsParams is parameters of getCallLogMetricsDetails operation.
type GetCallLogMetricsDetailsParams struct {
	// The unique identifier of the phone call.
	// The value of this field can be retrieved from [List Call Logs]() API.
	CallID string
}

// GetCallPathParams is parameters of getCallPath operation.
type GetCallPathParams struct {
	// The ID of the call log.
	CallLogId string
}

// GetCallQoSParams is parameters of getCallQoS operation.
type GetCallQoSParams struct {
	// The unique identifier of the call.
	CallId string
}

// GetCallQueueRecordingsParams is parameters of getCallQueueRecordings operation.
type GetCallQueueRecordingsParams struct {
	// Unique identifier of the Call Queue.
	CallQueueId string
	// The number of records returned within a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
	// The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range
	// defined by the `from` and `to` parameters should be a month as the response only includes one
	// month's worth of data. The month defined should fall within the last six months. If unspecified,
	// returns data within the 24 hours.
	From OptDate
	// **Required** only when the `from` parameter is specified. End time and date in **yyyy-mm-dd** or
	// **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.
	To OptDate
}

// GetCommonAreaOutboundCallingCountriesAndRegionsParams is parameters of GetCommonAreaOutboundCallingCountriesAndRegions operation.
type GetCommonAreaOutboundCallingCountriesAndRegionsParams struct {
	// The ID of the common area.
	CommonAreaId string
	// The next page token paginates through a large set of results. It returns whenever the set of
	// available results exceeds the current page size. The expiration period for this token is 15
	// minutes.
	NextPageToken OptString
	// The number of records in a single API call.
	PageSize OptInt
}

// GetCommonAreaSettingsParams is parameters of getCommonAreaSettings operation.
type GetCommonAreaSettingsParams struct {
	CommonAreaId string
}

// GetEmergencyAddressParams is parameters of getEmergencyAddress operation.
type GetEmergencyAddressParams struct {
	// The emergency address ID.
	EmergencyAddressId string
}

// GetFirmwareRuleDetailParams is parameters of GetFirmwareRuleDetail operation.
type GetFirmwareRuleDetailParams struct {
	// Unique identifier of the firmware update rule.
	RuleId string
}

// GetGCPParams is parameters of GetGCP operation.
type GetGCPParams struct {
	GroupId string
}

// GetGroupPhoneSettingsParams is parameters of getGroupPhoneSettings operation.
type GetGroupPhoneSettingsParams struct {
	// The group ID.
	// It can be retrieved from the [List groups](https://developers.zoom.
	// us/docs/api/rest/reference/zoom-api/methods/#operation/groups) API.
	GroupId string
	// This setting corresponds to the setting item you want to modify.
	// It is separated by a comma.
	// Allowed values:
	// `call_live_transcription`, `local_survivability_mode`, `select_outbound_caller_id`,
	// `personal_audio_library`, `voicemail`, `voicemail_transcription`,
	// `voicemail_notification_by_email`, `shared_voicemail_notification_by_email`,
	// `restricted_call_hours`, `allowed_call_locations`, `check_voicemails_over_phone`,
	// `connect_to_operator`, `auto_call_recording`, `ad_hoc_call_recording`, `outbound_calling`,
	// `outbound_sms`, `international_calling`, `sms`, `zoom_phone_on_mobile`, `zoom_phone_on_pwa`,
	// `sms_etiquette_tool`, `e2e_encryption`, `call_handling_forwarding`, `call_overflow`,
	// `call_transferring`, `elevate_to_meeting`, `call_park`, `hand_off_to_room`,
	// `mobile_switch_to_carrier`, `delegation`, `audio_intercom`,
	// `block_list_for_inbound_calls_and_messaging`, `block_calls_without_caller_id`,
	// `block_external_calls`, `peer_to_peer_media`, `advanced_encryption`,
	// `display_call_feedback_survey`.
	SettingTypes OptString
}

// GetLocationParams is parameters of getLocation operation.
type GetLocationParams struct {
	// The emergency service location's ID.
	LocationId string
}

// GetMonitoringGroupByIdParams is parameters of getMonitoringGroupById operation.
type GetMonitoringGroupByIdParams struct {
	// The monitoring group ID.
	MonitoringGroupId string
}

// GetNumberCampaignOptStatusParams is parameters of getNumberCampaignOptStatus operation.
type GetNumberCampaignOptStatusParams struct {
	// The SMS campaign ID.
	SmsCampaignId string
	// Thw end user's phone number that sends the Opt-in or Opt-out keyword to the Zoom Phone number.
	ConsumerPhoneNumber string
	// The Zoom users' phone numbers that receive the Opt-in or Opt-out keyword from the end user.
	ZoomPhoneUserNumbers []string
}

// GetPSOperationLogsParams is parameters of getPSOperationLogs operation.
type GetPSOperationLogsParams struct {
	// The start time and date in **yyyy-mm-dd**format. The date range defined by the `from` and `to`
	// parameters should be a month as the response only includes one month's worth of data at once. If
	// unspecified, returns data within the 24 hours.
	From OptDate
	// **Required** only when the `from` parameter is specified. The end time and date is in
	// **yyyy-mm-dd** format; the same format as the `from` parameter.
	To OptDate
	// This field filters the response by the category of the action performed. By default, the value of
	// this field is &quot;all&quot; and thus, the response will include log of all operations for the
	// defined period.
	// To only include response for a specific category type, provide a value for `category_type` from
	// this [table](https://marketplace.zoom.
	// us/docs/api-reference/other-references/phone-operation-categories).
	CategoryType OptString
	// The number of records returned within a single API call.
	PageSize OptInt
	// The next page token paginates through large set of results. A next page token returns whenever the
	// set of available results exceeds the current page size. The expiration period for this token is 15
	// minutes.
	NextPageToken OptString
}

// GetPhoneNumberDetailsParams is parameters of getPhoneNumberDetails operation.
type GetPhoneNumberDetailsParams struct {
	// The unique identifier of the phone number retrieved from the List phone numbers API.
	PhoneNumberId string
}

// GetPhoneRecordingsParams is parameters of getPhoneRecordings operation.
type GetPhoneRecordingsParams struct {
	// The number of records returned within a single API call.
	// The default is **30** and the maximum is **300**.
	PageSize OptInt
	// The current page number of the returned records.
	NextPageToken OptString
	// The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd T HH:mm:ssZ** format.
	// The date range defined in the `from` and `to` parameters should be a month as the response only
	// includes one month's worth of data at once.
	// If unspecified, it returns data from the past 30 days.
	From OptDate
	// This field is **required** only when the `from` parameter is specified.
	// The end time and date display in **yyyy-mm-dd** or **yyyy-MM-dd T HH:mm:ssZ** format, which is the
	// same format as the `from` parameter.
	To OptDate
	// The owner type.
	// The allowed values are `null`, `user`, `sharedOffice`, or `callQueue`.
	// The default value is `null`.  If the value is `null`, it returns all owner types.
	OwnerType OptString
	// The recording type. The allowed values are `null`, `OnDemand`, or `Automatic`. The default value
	// is `null`. If `null`, it returns all recording types.
	RecordingType OptString
	// The site ID.
	// The default value is `All sites`.
	SiteID OptString
	// The query date type, which can be `start_time` or `end_time`.
	// The default value is `start_time`.
	QueryDateType OptString
	// The group ID.
	// The default value is `All groups`.
	GroupID OptString
}

// GetPhoneRecordingsByCallIdOrCallLogIdParams is parameters of getPhoneRecordingsByCallIdOrCallLogId operation.
type GetPhoneRecordingsByCallIdOrCallLogIdParams struct {
	// This field gets the unique ID of the call log. You can use `callLogId` and `callId` as path
	// parameters. You can find the value for this field with the **[Get account's call
	// logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/accountCallLogs)**
	// API or the **[Get user's call logs](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/phoneUserCallLogs)** API.
	ID string
}

// GetPhoneUserVoiceMailsParams is parameters of GetPhoneUserVoiceMails operation.
type GetPhoneUserVoiceMailsParams struct {
	// The user ID or email address of the user. For user-level apps, pass `me` as the value for `userId`.
	UserId string
	// FSync: Full sync
	// BSync: Backward sync
	// ISync: Forward sync.
	SyncType OptString
	// The sync token. Use it if requesting a backward (`BSync`) or forward (`ISync`) sync.
	SyncToken OptString
	// The record count of each query.
	Count int
}

// GetPortedNumbersDetailsParams is parameters of getPortedNumbersDetails operation.
type GetPortedNumbersDetailsParams struct {
	// Order ID of the ported numbers. This can be retrieved from the List Ported Numbers API.
	OrderId string
}

// GetProvisionTemplateParams is parameters of GetProvisionTemplate operation.
type GetProvisionTemplateParams struct {
	// The template ID.
	TemplateId string
}

// GetRoleInformationParams is parameters of getRoleInformation operation.
type GetRoleInformationParams struct {
	// The role ID.
	RoleId string
}

// GetRoutingRuleParams is parameters of getRoutingRule operation.
type GetRoutingRuleParams struct {
	// The unique identifier of the routing rule.
	RoutingRuleId string
}

// GetSMSCampaignParams is parameters of GetSMSCampaign operation.
type GetSMSCampaignParams struct {
	SmsCampaignId string
}

// GetSMSChargesUsageReportParams is parameters of GetSMSChargesUsageReport operation.
type GetSMSChargesUsageReportParams struct {
	// The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range
	// defined by the `from` and `to` parameters should be a month as the response only includes one
	// month's worth of data at once. The from date should not exceed recent 13 months. If unspecified,
	// it returns data from the past 30 days.
	From OptDate
	// This field is **required** only when you specify the `from` parameter. End time and date is in a
	// **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format.  The `from` parameter uses the the same
	// format.
	To OptDate
	// The number of records returned within a single API call. The default is **30**, and the maximum is
	// **300**.
	PageSize OptInt
	// The current page number of returned records.
	NextPageToken OptString
	// This field shows sms/mms with charges only. Defaults to false.
	ShowChargesOnly OptBool
}

// GetSettingTemplateParams is parameters of getSettingTemplate operation.
type GetSettingTemplateParams struct {
	// The unique identifier of the template.
	TemplateId string
	// This field provides the name of the field to use to filter the response. For example, if you
	// provide &quot;description&quot; as the value of the field, you will get a response similar to the
	// following: {&ldquo;description&rdquo;: &ldquo;template description&rdquo;}.
	CustomQueryFields OptString
}

// GetSharedLineGroupPolicyParams is parameters of getSharedLineGroupPolicy operation.
type GetSharedLineGroupPolicyParams struct {
	// The unique identifier of the shared line group.
	SharedLineGroupId string
}

// GetSiteOutboundCallingCountriesAndRegionsParams is parameters of GetSiteOutboundCallingCountriesAndRegions operation.
type GetSiteOutboundCallingCountriesAndRegionsParams struct {
	// The ID of the site.
	SiteId string
	// The next page token paginates through a large set of results. It returns whenever the set of
	// available results exceeds the current page size. The expiration period for this token is 15
	// minutes.
	NextPageToken OptString
	// The number of records in a single API call.
	PageSize OptInt
}

// GetSiteSettingForTypeParams is parameters of getSiteSettingForType operation.
type GetSiteSettingForTypeParams struct {
	// The site ID.
	SiteId string
	// The site setting type:
	// * `local_based_routing`
	// * `business_hours`
	// * `closed_hours`
	// * `holiday_hours`
	// * `security`
	// * `outbound_caller_id`
	// * `audio_prompt`
	// * `desk_phone`
	// * `dial_by_name`
	// * `billing_account`.
	SettingType string
}

// GetSmsSessionsParams is parameters of GetSmsSessions operation.
type GetSmsSessionsParams struct {
	// The user ID, user email, or &ldquo;me&rdquo; when using OAuth token.
	UserId string
	// FSync: Full sync BSync: Backward sync ISync: Forward sync.
	SyncType string
	// The sync token. Use if requesting a backward (`BSync`) or forward (`ISync`) sync.
	SyncToken OptString
	// The record count of each query.
	Count OptInt
	// This field filters the specific session list by a session type.
	// The value for this field can be one of the following:
	// `user`
	// `call_queue`
	// `auto_receptionist`
	// `all`.
	SessionType OptString
}

// GetUserOutboundCallingCountriesAndRegionsParams is parameters of GetUserOutboundCallingCountriesAndRegions operation.
type GetUserOutboundCallingCountriesAndRegionsParams struct {
	// The ID of the user.
	UserId string
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString
	// The number of records in a single API call.
	PageSize OptInt
}

// GetVoicemailDetailsParams is parameters of getVoicemailDetails operation.
type GetVoicemailDetailsParams struct {
	// The unique identifier of the voicemail. It retrieves the value for this field by calling the [Get
	// voicemails](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods/#operation/phoneUserVoiceMails) API.
	VoicemailId string
}

// GetVoicemailDetailsByCallIdOrCallLogIdParams is parameters of getVoicemailDetailsByCallIdOrCallLogId operation.
type GetVoicemailDetailsByCallIdOrCallLogIdParams struct {
	// The user ID or email address of the user.
	UserId string
	// Gets the unique ID of the call log. You can use `callLogId` or `callId` as path parameters.
	// You can find the value for this field with in **[Get account's call logs](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/accountCallLogs)** API or **[Get user's call
	// logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/phoneUserCallLogs)**
	// API.
	ID string
}

// GetZoomRoomParams is parameters of getZoomRoom operation.
type GetZoomRoomParams struct {
	RoomId string
}

// ListAccountLevelInboundBlockRulesParams is parameters of ListAccountLevelInboundBlockRules operation.
type ListAccountLevelInboundBlockRulesParams struct {
	// The partial string of a phone number.
	Keyword OptString
	// The match type for the block rule:
	// * `phoneNumber`: Indicates that only a specific phone number that is shown in the `blocked_number`
	// field is blocked.
	// * `prefix`: Indicates that all numbers starting with the prefix that is shown in the
	// `blocked_number` field are blocked.
	// * `SMS-shortCodes`:  Indicates that only a specific SMS short code that is shown in the
	// `blocked_number` field is blocked.
	MatchType OptString
	// The block type for the block rule:
	// * block_for_other_reasons
	// * block_as_threat.
	Type OptString
	// Whether the block rule is active or inactive.
	// * `active`: The block rule is active.
	// * `inactive`: The block rule is inactive.
	Status OptString
	// The next page token paginates through a large set of results. It returns whenever the set of
	// available results exceeds the current page size. The expiration period for this token is 15
	// minutes.
	NextPageToken OptString
	// The number of records in a single API call.
	PageSize OptInt
}

// ListAccountLevelInboundBlockedStatisticsParams is parameters of ListAccountLevelInboundBlockedStatistics operation.
type ListAccountLevelInboundBlockedStatisticsParams struct {
	// The partial string of a phone number.
	Keyword OptString
	// The match type for the block rule:
	// * `phoneNumber`: Only a specific phone number that is shown in the `blocked_number` field is
	// blocked.
	// * `prefix`: All numbers starting with the prefix that is shown in the `blocked_number` field are
	// blocked.
	// * `SMS-shortCodes`:  Only a specific SMS short code that is shown in the `blocked_number` field is
	// blocked.
	MatchType OptString
	// The block type for the block rule:
	// * block_for_other_reasons
	// * block_as_threat.
	Type OptString
	// The next page token paginates through a large set of results. It returns whenever the set of
	// available results exceeds the current page size. The expiration period for this token is 15
	// minutes.
	NextPageToken OptString
	// The number of records in a single API call.
	PageSize OptInt
}

// ListAccountOutboundCallingExceptionRuleParams is parameters of listAccountOutboundCallingExceptionRule operation.
type ListAccountOutboundCallingExceptionRuleParams struct {
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	Country OptString
	// The partial string of a phone number.
	Keyword OptString
	// The match type of an exception rule.
	MatchType OptString
	// The status of an exception rule.
	Status OptString
	// The next page token paginates through a large set of results. It returns whenever the set of
	// available results exceeds the current page size. The expiration period for this token is 15
	// minutes.
	NextPageToken OptString
	// The number of records in a single API call.
	PageSize OptInt
}

// ListAccountPhoneNumbersParams is parameters of listAccountPhoneNumbers operation.
type ListAccountPhoneNumbersParams struct {
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString
	// The query response by number assignment. The value can be one of the following:
	// `assigned`: The number has been assigned to either a user, a call queue, an auto-receptionist, or
	// a common area in an account.
	// `unassigned`: The number is not assigned to anyone.
	// `all`: Include both assigned and unassigned numbers in the response.
	// `byoc`: Include Bring Your Own Carrier (BYOC) numbers only in the response.
	Type OptString
	// The type of assignee to whom the number is assigned. The parameter can be set only if `type`
	// parameter is set as `assigned`. The value can be one of the following:
	// `user`
	// `callQueue`
	// `autoReceptionist`
	// `commonArea`
	// `emergencyNumberPool`
	// `companyLocation`
	// `meetingService`.
	ExtensionType OptString
	// The number of records returned within a single API call.
	PageSize OptInt
	// The type of phone number. The value can be either `toll` or `tollfree`.
	NumberType OptString
	// This field includes or excludes pending numbers in the response. The value can be either `true` or
	// `false`.
	PendingNumbers OptBool
	// The unique identifier of the site. Use this query parameter if you have enabled multiple sites and
	// would like to filter the response of this API call by a specific phone site. See [Managing
	// multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) or
	// [Adding a site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15)
	// for details.
	SiteID OptString
}

// ListAccountProvisionTemplateParams is parameters of listAccountProvisionTemplate operation.
type ListAccountProvisionTemplateParams struct {
	// The number of records returned within a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
}

// ListAccountSMSCampaignsParams is parameters of listAccountSMSCampaigns operation.
type ListAccountSMSCampaignsParams struct {
	// The number of records returned within a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
}

// ListActivationCodesParams is parameters of listActivationCodes operation.
type ListActivationCodesParams struct {
	// The total number of records returned from a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString
}

// ListAlertSettingsWithPagingQueryParams is parameters of ListAlertSettingsWithPagingQuery operation.
type ListAlertSettingsWithPagingQueryParams struct {
	// The number of records a single API call returns.
	PageSize OptInt
	// The current page number of the returned records.
	NextPageToken OptString
	// This field filters the specific alert list by the module. The module and its code mappings are
	// shown as:
	// `Call Queue Management`-`1`, `Route Group Management`-`2`, `Devices &amp; Phones Management`-`3`,
	// `Call Quality Management`-`4`, `Emergency Services Management`-`5`.
	Module OptInt
	// This field filters the specific alert list by the rule. The rule and its code mappings display as:
	// `Service Level`-`1`, `Inbound Abandoned Calls`-`2`, `Inbound Overflowed Calls`-`3`, `Inbound Avg
	// Call Waiting Time`-`4`, `Inbound Forwarded to Voicemail`-`5`, `Number of Waiting Calls`-`6`,
	// `Member Availability (Active)`-`7`, `Member Availability (Opt-in/Opt-out)`-`8`, `Route groups
	// status change`-`9`, `Devices go offline`-`10`, `Devices go online`-`11`, `Device offline
	// rate`-`12`, `QoS Alert`-`13`, `Emergency Call Alert`-`14`.
	// When the value of the `module` is `1`, the value of `rule` can only be in the range of `1` to `8`.
	// When the value of the `module` is `2`, the value of `rule` can only be `9`.
	// When the value of the `module` is `3`, the value of `rule` can only be in the range of `10` to
	// `12`.
	// When the value of the `module` is `4`, the value of `rule` can only be `13`.
	// When the value of the `module` is `5`, the value of `rule` can only be `14`.
	Rule OptInt
	// The alert's status:
	// * `0` &mdash; Inactive.
	// * `1` &mdash; Active.
	Status OptInt
}

// ListAudioItemsParams is parameters of ListAudioItems operation.
type ListAudioItemsParams struct {
	UserId string
}

// ListAutoReceptionistsParams is parameters of listAutoReceptionists operation.
type ListAutoReceptionistsParams struct {
	// The total number of records returned from a single API call.
	PageSize OptInt
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString
}

// ListBYOCSIPTrunkParams is parameters of listBYOCSIPTrunk operation.
type ListBYOCSIPTrunkParams struct {
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
	// The number of records returned within a single API call.
	PageSize OptInt
}

// ListBlockedListParams is parameters of listBlockedList operation.
type ListBlockedListParams struct {
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
	// The total number of records returned from a single API call.
	PageSize OptInt
}

// ListCRPhoneNumbersParams is parameters of listCRPhoneNumbers operation.
type ListCRPhoneNumbersParams struct {
	// The size of the page.
	PageSize OptInt
	// The current page number of returned records.
	NextPageToken OptString
	// Number assignment status.
	AssignedStatus OptString
	// Partner account ID from sub-account.
	SubAccountID OptString
	// Partial string of the phone number.
	Keyword OptString
}

// ListCallLogsMetricsParams is parameters of listCallLogsMetrics operation.
type ListCallLogsMetricsParams struct {
	// The start date in **yyyy-mm-dd** format. The date range defined by the `from` and `to` parameters
	// should be a month as the response only includes one month's worth of data at once. If unspecified,
	// returns data from the past 1 day.
	From OptDate
	// This setting is **required** only when the `from` parameter is specified. The end date is in
	// **yyyy-mm-dd** format, which is the same format as the `from` parameter.
	To OptDate
	// The unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites). Use this query parameter if you have
	// enabled multiple sites and would like to filter the response of this API call by call logs of a
	// specific phone site.
	SiteID OptString
	// This setting filters call logs by voice quality. Zoom uses MOS of 3.5 as a general baseline to
	// categorize calls by call quality. A MOS greater than or equal to 3.5 means good quality, while
	// below 3.5 means poor quality.
	// The value of this field can be one of the following:
	// * `good`: Retrieve call logs of the call(s) with good quality of voice.
	// * `bad`: Retrieve call logs of the call(s) with good quality of voice.
	// * `all`: Retrieve all call logs without filtering by voice quality.
	QualityType OptString
	// The number of records returned within a single call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token will be returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
}

// ListCallQueueMembersParams is parameters of listCallQueueMembers operation.
type ListCallQueueMembersParams struct {
	// The call queue ID that is retrievable from the [List Call Queues](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Call-Queues/operation/listCallQueues) API.
	CallQueueId   string
	PageSize      OptInt
	NextPageToken OptString
}

// ListCallQueuesParams is parameters of listCallQueues operation.
type ListCallQueuesParams struct {
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
	// The number of records returned from a single API call.
	PageSize OptInt
	// Unique identifier of the site. Get it from the [List Phone Sites](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/listPhoneSites) API.
	SiteID OptString
	// The call queue's cost center.
	CostCenter OptString
	// The call queue's department.
	Department OptString
}

// ListCarrierPeeringPhoneNumbersParams is parameters of listCarrierPeeringPhoneNumbers operation.
type ListCarrierPeeringPhoneNumbersParams struct {
	// The total number of records returned from a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
	// To filter results by the given phone number.
	PhoneNumber OptString
}

// ListCommonAreaOutboundCallingExceptionRuleParams is parameters of listCommonAreaOutboundCallingExceptionRule operation.
type ListCommonAreaOutboundCallingExceptionRuleParams struct {
	// The ID of the common area.
	CommonAreaId string
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	Country OptString
	// The partial string of a phone number.
	Keyword OptString
	// The match type of an exception rule.
	MatchType OptString
	// The status of an exception rule.
	Status OptString
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString
	// The number of records in a single API call.
	PageSize OptInt
}

// ListCommonAreasParams is parameters of listCommonAreas operation.
type ListCommonAreasParams struct {
	// The total number of records returned from a single API call.
	PageSize OptInt
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString
}

// ListCustomizeOutboundCallerNumbersParams is parameters of listCustomizeOutboundCallerNumbers operation.
type ListCustomizeOutboundCallerNumbersParams struct {
	// The status of the phone numbers.
	// `true`- Numbers already added to the custom list.
	// `false`- Numbers not yet added to the custom list.
	Selected OptBool
	// This field filters phone numbers that belong to the site.
	SiteID OptString
	// The type of extension to which the phone number belongs.
	ExtensionType OptString
	// A search keyword for phone or extension numbers.
	Keyword OptString
	// The number of records returned within a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
}

// ListDeviceLineKeySettingParams is parameters of listDeviceLineKeySetting operation.
type ListDeviceLineKeySettingParams struct {
	// The device ID.
	DeviceId string
}

// ListEmergencyAddressesParams is parameters of listEmergencyAddresses operation.
type ListEmergencyAddressesParams struct {
	// The emergency address site ID.
	SiteID OptString
	// User ID to which the personal emergency address belongs.
	UserID OptString
	// The emergency address owner level:
	// * `0` - Account/Company-level emergency address.
	// * `1` - User/Personal-level emergency address.
	// * `2` - Unknown company/pending emergency address.
	Level OptInt
	// The emergency address verification status:
	// * `1` &mdash; Verification not Required.
	// * `2` &mdash; Unverified.
	// * `3` &mdash; Verification requested.
	// * `4` &mdash; Verified.
	// * `5` &mdash; Rejected.
	// * `6` &mdash; Verification failed.
	Status OptInt
	// Keyword(s) to filter emergency addresses. You can filter by either:
	// * Address Line 1.
	// * Address Line 2.
	// * City.
	// * State Abbreviation.
	// * Zip Code.
	AddressKeyword OptString
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
	// The number of records returned within a single API call.
	PageSize OptInt
}

// ListExtensionLevelInboundBlockRulesParams is parameters of ListExtensionLevelInboundBlockRules operation.
type ListExtensionLevelInboundBlockRulesParams struct {
	// The extension ID for the inbound blocked rules to fetch.
	ExtensionId string
	// The partial string of a phone number.
	Keyword OptString
	// The match type for the block rule:
	// * `phoneNumber`: Only a specific phone number that is shown in the `blocked_number` field is
	// blocked.
	// * `prefix`: All numbers starting with the prefix that is shown in the `blocked_number` field are
	// blocked.
	// * `SMS-shortCodes`:  Only a specific SMS short code that is shown in the `blocked_number` field is
	// blocked.
	MatchType OptString
	// The block type for the block rule:
	// * `block_for_other_reasons`
	// * `block_as_threat`.
	Type OptString
	// The next page token paginates through a large set of results. It returns whenever the set of
	// available results exceeds the current page size. The expiration period for this token is 15
	// minutes.
	NextPageToken OptString
	// The number of records in a single API call.
	PageSize OptInt
}

// ListExternalContactsParams is parameters of listExternalContacts operation.
type ListExternalContactsParams struct {
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
	// The number of records returned within a single API call.
	PageSize OptInt
}

// ListFirmwareRulesParams is parameters of ListFirmwareRules operation.
type ListFirmwareRulesParams struct {
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites). Required if multiple sites are enabled.
	SiteID OptString
	// The number of records returned within a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
}

// ListFirmwaresParams is parameters of ListFirmwares operation.
type ListFirmwaresParams struct {
	// Firmware update rule enabled.
	// `true` - Get all firmwares that can have firmware update rules added
	// `false` - Get all firmwares whether or not you can add firmware update rules to it.
	IsUpdate OptBool
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites). Required if multiple sites are enabled.
	SiteID OptString
}

// ListGCPParams is parameters of listGCP operation.
type ListGCPParams struct {
	// The number of records returned within a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
	// Unique identifier of the site. This can be retrieved from the [List Phone
	// Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API.
	SiteID OptString
}

// ListGCPMembersParams is parameters of listGCPMembers operation.
type ListGCPMembersParams struct {
	// The number of records returned within a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
	GroupId       string
	// Unique identifier of the site.
	SiteID OptString
	// Type of the assignee.
	ExtensionType OptString
}

// ListLineKeySettingParams is parameters of listLineKeySetting operation.
type ListLineKeySettingParams struct {
	// The extension ID.
	ExtensionId string
}

// ListLocationsParams is parameters of listLocations operation.
type ListLocationsParams struct {
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString
	// The number of records returned within a single API call.
	PageSize OptInt
	// The unique identifier of the site. This can be retrieved from the [List Phone
	// Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API.
	// **Note:** When the account has been enabled Multiple Sites, this field is required.
	SiteID OptString
}

// ListMembersParams is parameters of listMembers operation.
type ListMembersParams struct {
	// Monitoring group ID.
	MonitoringGroupId string
	// Member type.
	MemberType string
	// The size of the page.
	PageSize OptInt
	// The current page number of returned records.
	NextPageToken OptString
}

// ListMonitoringGroupParams is parameters of listMonitoringGroup operation.
type ListMonitoringGroupParams struct {
	// The monitoring group's type.
	Type OptInt
	// The unique identifier of the monitoring group's site.
	SiteID OptString
	// The size of the page.
	PageSize OptInt
	// The current page number of returned records.
	NextPageToken OptString
}

// ListPastCallMetricsParams is parameters of listPastCallMetrics operation.
type ListPastCallMetricsParams struct {
	// The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range
	// defined by the `from` and `to` parameters should be a month as the response only includes one
	// month's worth of data at once. If unspecified, returns data from the past 30 days.
	From OptDate
	// **Required** only when the `from` parameter is specified. End time and date in **yyyy-mm-dd** or
	// **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.
	To OptDate
	// This setting filters call logs of a specified phone number.
	PhoneNumber OptString
	// This setting filters call logs of a specified extension number.
	ExtensionNumber OptString
	// This setting filters call logs by voice quality. Zoom uses MOS of 3.5 as a general baseline to
	// categorize calls by call quality. A MOS greater than or equal to 3.5 means good quality, while
	// below 3.5 means poor quality.
	// The value of this field can be one of the following:
	// * `good`: Retrieve call logs of the call(s) with good quality of voice.
	// * `bad`: Retrieve call logs of the call(s) with good quality of voice.
	QualityType OptString
	// The department the extension belongs to.
	Department OptString
	// The cost center the extension belongs to.
	CostCenter OptString
	// The directions of the call.
	Directions []string
	// The duration of the call.
	// * `0`: The call that lasts 1 to 5 minutes.
	// * `1`: The call that lasts 5 to 10 minutes.
	// * `2`: The call that lasts more than 10 minutes.
	// * `3`: The call that lasts less than 1 minute.
	Durations []int
	// The unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites). Use this query parameter if you have
	// enabled multiple sites and would like to filter the response of this API call by call logs of a
	// specific phone site.
	SiteID OptString
	// The number of records returned within a single call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
}

// ListPeeringPhoneNumbersParams is parameters of listPeeringPhoneNumbers operation.
type ListPeeringPhoneNumbersParams struct {
	// The total number of records returned from a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
	// The sender's or receiver's phone number that limits the list of SMS sessions.
	PhoneNumber OptString
	// The carrier's code. The `clientId` that maps to a carrier peered with Zoom.
	// This parameter is required if you do **not** use an OAuth token or the OAuth token does not
	// contain the `clientId`.
	CarrierCode OptInt
}

// ListPhoneDevicesParams is parameters of listPhoneDevices operation.
type ListPhoneDevicesParams struct {
	// The device status: `assigned` or `unassigned` to list device status in Zoom account.
	Type string
	// The type of the assignee. It's available if `type = assigned`. It's unavailable if the account has
	// not enabled the common area feature. It also returns devices of the specified `assignee_type`. If
	// unspecified, it returns all assigned devices.
	AssigneeType OptString
	// The device source. `hotDesking` is only available when `type = assigned`.
	DeviceSource OptString
	// The status of device location. It's available if `type = assigned`.
	LocationStatus OptString
	// The site of the assignee.
	SiteID OptString
	// The manufacturer name or device type.
	DeviceType OptString
	// The user, extension, MAC address, or IP address to filter the results.
	Keyword OptString
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString
	// The number of records returned within a single API call.
	PageSize OptInt
}

// ListPhoneSitesParams is parameters of listPhoneSites operation.
type ListPhoneSitesParams struct {
	// The number of records returned within a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
}

// ListPhoneUsersParams is parameters of listPhoneUsers operation.
type ListPhoneUsersParams struct {
	// The number of records returned from a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString
	// The unique identifier of the site. Get it from the [List Phone Sites](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/listPhoneSites) API.
	SiteID OptString
	// The [type](https://marketplace.zoom.
	// us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of calling plan.
	CallingType OptInt
	// The status of the Zoom Phone user.
	// `pending`: The users have been assigned the Zoom Workplace license, but not been assigned Zoom
	// Phone feature.
	Status OptString
	// The department where the user belongs.
	Department OptString
	// The cost center where the user belongs.
	CostCenter OptString
	// The partial string of user's name, extension number, or phone number.
	Keyword OptString
}

// ListPortedNumbersParams is parameters of listPortedNumbers operation.
type ListPortedNumbersParams struct {
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
	// The number of records returned within a single API call.
	PageSize OptInt
}

// ListRoleMembersParams is parameters of ListRoleMembers operation.
type ListRoleMembersParams struct {
	// Unique identifier of the [role](https://support.zoom.
	// us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management) assigned to the user.
	RoleId string
	// Whether the user belongs to the role: default is `false`.
	InRole OptBool
}

// ListRoutingRuleParams is parameters of listRoutingRule operation.
type ListRoutingRuleParams struct {
	// The unique identifier of the site.
	SiteID OptString
}

// ListSettingTemplatesParams is parameters of listSettingTemplates operation.
type ListSettingTemplatesParams struct {
	// Number of records returns within a single API call.
	PageSize OptInt
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString
	// Unique identifier of the site. This field is required only if multiple sites have been enabled.
	// of the site. Required only when multiple sites are enabled. See [Managing multiple
	// sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) for details.
	//  If this is not provided, the response lists the account level setting templates.
	SiteID OptString
}

// ListSharedLineAppearancesParams is parameters of listSharedLineAppearances operation.
type ListSharedLineAppearancesParams struct {
	// The number of records returned within a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
}

// ListSharedLineGroupsParams is parameters of listSharedLineGroups operation.
type ListSharedLineGroupsParams struct {
	// The number of records returned within a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
}

// ListSipGroupsParams is parameters of listSipGroups operation.
type ListSipGroupsParams struct {
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
	// The number of records returned within a single API call.
	PageSize OptInt
}

// ListSiteCustomizeOutboundCallerNumbersParams is parameters of listSiteCustomizeOutboundCallerNumbers operation.
type ListSiteCustomizeOutboundCallerNumbersParams struct {
	// The site ID.
	SiteId string
	// Status of the phone numbers.
	// `true`- Numbers already added to the custom list.
	// `false`- Numbers not yet added to the custom list.
	Selected OptBool
	// For filtering phone numbers that belong to the site.
	SiteID OptString
	// The type of the extension to which the phone number belongs.
	ExtensionType OptString
	// A search keyword for phone or extension numbers.
	Keyword OptString
	// The number of records returned within a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
}

// ListSiteOutboundCallingExceptionRuleParams is parameters of listSiteOutboundCallingExceptionRule operation.
type ListSiteOutboundCallingExceptionRuleParams struct {
	// The ID of the site.
	SiteId string
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	Country OptString
	// The partial string of a phone number.
	Keyword OptString
	// The match type of an exception rule.
	MatchType OptString
	// The status of an exception rule.
	Status OptString
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString
	// The number of records in a single API call.
	PageSize OptInt
}

// ListTrackedLocationsParams is parameters of listTrackedLocations operation.
type ListTrackedLocationsParams struct {
	// The type of response data. Supports  only six responses at this time.
	// `1`: Nomadic Emergency Services.
	// `2`: Users Permission for Location Sharing.
	// `3`: Default Emergency Address.
	// `4`: Detectable Personal Location.
	// `5`: Real-time Location for Users.
	// `6`: Real-time Location for IP Phones.
	Type OptInt
	// The site's ID.
	SiteID OptString
	// The location's type. 'Company' is the default value.
	LocationType OptString
	// The device name or device MAC address.
	Keyword OptString
}

// ListUnassignedZoomRoomsParams is parameters of listUnassignedZoomRooms operation.
type ListUnassignedZoomRoomsParams struct {
	// A search keyword for Zoom Room's name.
	Keyword OptString
}

// ListUserCustomizeOutboundCallerNumbersParams is parameters of listUserCustomizeOutboundCallerNumbers operation.
type ListUserCustomizeOutboundCallerNumbersParams struct {
	// The unique identifier of the user.
	UserId string
	// The status of the phone numbers.
	// `true`- Numbers already added to the custom list.
	// `false`- Numbers not yet added to the custom list.
	Selected OptBool
	// This field filters phone numbers that belong to the site.
	SiteID OptString
	// The type of extension to which the phone number belongs.
	ExtensionType OptString
	// A search keyword for phone or extension numbers.
	Keyword OptString
	// The number of records returned within a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
}

// ListUserOutboundCallingExceptionRuleParams is parameters of listUserOutboundCallingExceptionRule operation.
type ListUserOutboundCallingExceptionRuleParams struct {
	// The ID of the user.
	UserId string
	// The [country ISO code](https://marketplace.zoom.
	// us/docs/api-reference/other-references/abbreviation-lists#countries).
	Country OptString
	// The partial string of a phone number.
	Keyword OptString
	// The match type of an exception rule.
	MatchType OptString
	// The status of an exception rule.
	Status OptString
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString
	// The number of records in a single API call.
	PageSize OptInt
}

// ListUsersFromDirectoryParams is parameters of ListUsersFromDirectory operation.
type ListUsersFromDirectoryParams struct {
	// The number of records returned within a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
	// Whether the user belongs to the directory.
	InDirectory OptBool
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites).
	SiteID string
}

// ListUsersFromDirectoryBySiteParams is parameters of ListUsersFromDirectoryBySite operation.
type ListUsersFromDirectoryBySiteParams struct {
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites).
	SiteId string
	// The number of records returned within a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
	// Whether the user belongs to the directory.
	InDirectory OptBool
	// Unique identifier of the [site](https://support.zoom.
	// us/hc/en-us/articles/360020809672-Managing-multiple-sites) to which users to get belongs.
	SiteID OptString
}

// ListZoomPhoneAccountSettingsParams is parameters of listZoomPhoneAccountSettings operation.
type ListZoomPhoneAccountSettingsParams struct {
	// The comma separated list of the setting items you want to fetch. Allowed values:
	// `call_live_transcription`,`local_survivability_mode`,`external_calling_on_zoom_room_common_area`,
	// `select_outbound_caller_id`, `personal_audio_library`, `voicemail`, `voicemail_transcription`,
	// `voicemail_notification_by_email`, `shared_voicemail_notification_by_email`,
	// `restricted_call_hours`, `allowed_call_locations`, `check_voicemails_over_phone`,
	// `auto_call_recording`, `ad_hoc_call_recording`, `international_calling`, `outbound_calling`,
	// `outbound_sms`, `sms`, `sms_etiquette_tool`, `zoom_phone_on_mobile`, `zoom_phone_on_pwa`,
	// `e2e_encryption`, `call_handling_forwarding_to_other_users`, `call_overflow`, `call_transferring`,
	// `elevate_to_meeting`, `call_park`, `hand_off_to_room`, `mobile_switch_to_carrier`, `delegation`,
	// `audio_intercom`, `block_calls_without_caller_id`, `block_external_calls`,
	// `call_queue_opt_out_reason`,`auto_delete_data_after_retention_duration`,
	// `auto_call_from_third_party_apps`, `override_default_port`,`peer_to_peer_media`,
	// `advanced_encryption`,`display_call_feedback_survey`,`block_list_for_inbound_calls_and_messaging`,
	// `block_calls_as_threat`.
	SettingTypes OptString
}

// ListZoomRoomsParams is parameters of listZoomRooms operation.
type ListZoomRoomsParams struct {
	// The number of records returned from a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString
	// The site ID retrievable from the [List Phone Sites](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/listPhoneSites) API.
	SiteID OptString
	// The type of calling plan.
	CallingType OptInt
	// The Zoom room name or phone number from which to filter the results .
	Keyword OptString
}

// PhoneDownloadRecordingTranscriptParams is parameters of phoneDownloadRecordingTranscript operation.
type PhoneDownloadRecordingTranscriptParams struct {
	// The phone recording ID.
	RecordingId string
}

// PhoneUserParams is parameters of phoneUser operation.
type PhoneUserParams struct {
	// The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
	UserId string
}

// PhoneUserCallLogsParams is parameters of phoneUserCallLogs operation.
type PhoneUserCallLogsParams struct {
	// The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
	UserId string
	// The number of records returned within a single API call.
	PageSize OptInt
	// The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range
	// defined by the `from` and `to` parameters should be a month as the response only includes one
	// month's worth of data. The month defined should fall within the last six months. If unspecified,
	// returns data within the 24 hours.
	From OptDate
	// **Required** only when the `from` parameter is specified. End time and date in **yyyy-mm-dd** or
	// **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.
	To   OptDate
	Type OptString
	// The next page token paginates through a large set of results. A next page token returns whenever
	// the set of available results exceeds the current page size. The expiration period for this token
	// is 15 minutes.
	NextPageToken OptString
	// This field filters API responses to include call logs of only the phone number defined in this
	// field.
	PhoneNumber OptString
	// This field enables you to sort call logs by start or end time. Choose the sort time value. Values
	// include `startTime` or `endTime`.
	TimeType OptString
}

// PhoneUserRecordingsParams is parameters of phoneUserRecordings operation.
type PhoneUserRecordingsParams struct {
	// The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
	UserId string
	// The number of records returned within a single API call.
	PageSize OptInt
	// The next page token paginates through a large set of results. A next page token is returned
	// whenever the set of available results exceeds the current page size. The expiration period for
	// this token is 15 minutes.
	NextPageToken OptString
	// The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range
	// defined by the `from` and `to` parameters should be a month as the response only includes one
	// month's worth of data at once. The month defined should fall within the last six months. If
	// unspecified, returns data from the past 30 days.
	From OptDate
	// **Required** only when the `from` parameter is specified. End time and date in **yyyy-mm-dd** or
	// **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.
	To OptDate
}

// PhoneUserSettingsParams is parameters of phoneUserSettings operation.
type PhoneUserSettingsParams struct {
	// The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
	UserId string
}

// PhoneUserVoiceMailsParams is parameters of phoneUserVoiceMails operation.
type PhoneUserVoiceMailsParams struct {
	// The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
	UserId string
	// The number of records returned within a single API call.
	PageSize OptInt
	// The status of the voice mail.
	Status OptString
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString
	// Start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range
	// defined by the `from` and `to` parameters should be a month as the response only includes one
	// month's worth of data at once. The month defined should fall within the last six months. If
	// unspecified, returns data from the past 30 days.
	From OptDate
	// **Required** only when the `from` parameter is specified. End time and date in **yyyy-mm-dd** or
	// **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.
	To OptDate
	// Whether to query voicemails from Trash.
	Trash OptBool
}

// RebootPhoneDeviceParams is parameters of rebootPhoneDevice operation.
type RebootPhoneDeviceParams struct {
	// Unique identifier of the device.
	DeviceId string
}

// RemoveCQPolicySubSettingParams is parameters of removeCQPolicySubSetting operation.
type RemoveCQPolicySubSettingParams struct {
	// The call queue ID, retrievable from the [List Call Queues](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Call-Queues/operation/listCallQueues) API.
	CallQueueId string
	// Corresponds to tbe policy sub-setting item you wish to remove. Allowed values: `voice_mail`.
	PolicyType string
	// Comma separated list of shared IDs to remove. The number is limited to the minimum value of 10 or
	// the number of allowed access members account setting.
	SharedIds []string
}

// RemoveGCPMembersParams is parameters of removeGCPMembers operation.
type RemoveGCPMembersParams struct {
	GroupId     string
	ExtensionId string
}

// RemoveMemberParams is parameters of removeMember operation.
type RemoveMemberParams struct {
	// Monitoring group ID.
	MonitoringGroupId string
	// Member's extension ID.
	MemberExtensionId string
	// Member type.
	MemberType OptString
}

// RemoveMembersParams is parameters of removeMembers operation.
type RemoveMembersParams struct {
	// Monitoring group ID.
	MonitoringGroupId string
	// Member type.
	MemberType string
}

// RemoveSLGPolicySubSettingParams is parameters of removeSLGPolicySubSetting operation.
type RemoveSLGPolicySubSettingParams struct {
	// The shared line group ID.
	SlgId string
	// This setting corresponds to tbe policy item you wish to remove. Allowed values: `voice_mail`.
	PolicyType string
	// The comma separated list of shared IDs to remove. The number is limited to the minimum value of 10
	// or the number of allowed access members account setting.
	SharedIds []string
}

// RemoveZoomRoomParams is parameters of RemoveZoomRoom operation.
type RemoveZoomRoomParams struct {
	RoomId string
}

// SmsByMessageIdParams is parameters of smsByMessageId operation.
type SmsByMessageIdParams struct {
	// The SMS session ID.
	SessionId string
	// The SMS message ID.
	MessageId string
}

// SmsSessionDetailsParams is parameters of smsSessionDetails operation.
type SmsSessionDetailsParams struct {
	// SMS session ID.
	SessionId string
	// The number of records returned within a single API call.
	PageSize OptInt
	// The current page number of returned records.
	NextPageToken OptString
	// The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range
	// defined by the `from` and `to` parameters should be a month as the response only includes one
	// month's worth of data at once. If unspecified, returns data from the past 30 days.
	From OptDate
	// **Required** only when the `from` parameter is specified. End time and date in **yyyy-mm-dd** or
	// **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.
	To OptDate
	// Order of SMS to return based on creation time. `1`: ascending `2`: descending.
	Sort OptInt
}

// SmsSessionSyncParams is parameters of smsSessionSync operation.
type SmsSessionSyncParams struct {
	// SMS session ID.
	SessionId string
	// Options for synchronizing sms message:
	// FSync - Full sync
	// ISync - Increase sync
	// BSync - Backward sync.
	SyncType OptString
	// The number of records returned within a single API call.
	Count OptInt
	// The time range for returned records. Used for locating where the next retrieval will begin.
	SyncToken OptString
}

// SyncUserCallLogsParams is parameters of syncUserCallLogs operation.
type SyncUserCallLogsParams struct {
	// The user ID.
	UserId string
	// The options for synchronizing call log:
	// FSync - Full sync
	// ISync - Increase sync
	// BSync - Backward sync.
	SyncType OptString
	// The number of records returned within a single API call.
	Count OptInt
	// The time range for returned records. It's used for locating where the next retrieval will begin.
	SyncToken OptString
}

// UnAssignPhoneNumCallQueueParams is parameters of unAssignPhoneNumCallQueue operation.
type UnAssignPhoneNumCallQueueParams struct {
	// The unique identifier of the call queue.
	CallQueueId string
	// The phone number ID.
	PhoneNumberId string
}

// UnassignAPhoneNumAutoReceptionistParams is parameters of unassignAPhoneNumAutoReceptionist operation.
type UnassignAPhoneNumAutoReceptionistParams struct {
	// The unique identifier of the auto receptionist. It can be retrieved from the [List auto
	// receptionists API](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/listAutoReceptionists).
	AutoReceptionistId string
	// Unique Identifier of the phone number or provide the actual phone number in e164 format (example:
	// +19995550123).
	PhoneNumberId string
}

// UnassignAPhoneNumCallQueueParams is parameters of unassignAPhoneNumCallQueue operation.
type UnassignAPhoneNumCallQueueParams struct {
	// The unique identifier of the call queue.
	CallQueueId string
}

// UnassignAllMembersParams is parameters of unassignAllMembers operation.
type UnassignAllMembersParams struct {
	CallQueueId string
}

// UnassignAllPhoneNumsAutoReceptionistParams is parameters of unassignAllPhoneNumsAutoReceptionist operation.
type UnassignAllPhoneNumsAutoReceptionistParams struct {
	AutoReceptionistId string
}

// UnassignCallingPlanParams is parameters of unassignCallingPlan operation.
type UnassignCallingPlanParams struct {
	// The ID of the user.
	UserId string
	// The type of plan. Refer to the [Plan Number section](https://marketplace.zoom.
	// us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).
	PlanType string
	// The billing account ID. If the user is located in India, the parameter is required.
	BillingAccountID OptString
}

// UnassignCallingPlanFromRoomParams is parameters of unassignCallingPlanFromRoom operation.
type UnassignCallingPlanFromRoomParams struct {
	RoomId string
	// The [type](https://marketplace.zoom.
	// us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan that
	// was assigned to the Zoom Room. (e.g: The value of type would be &quot;200&quot; for Unlimited
	// US/Canada calling plan.).
	Type int
	// The billing account ID. If the zoom room is located in India, the parameter is required.
	BillingAccountID OptString
}

// UnassignCallingPlansFromCommonAreaParams is parameters of unassignCallingPlansFromCommonArea operation.
type UnassignCallingPlansFromCommonAreaParams struct {
	// Common area ID or common area extension ID.
	CommonAreaId string
	// Zoom Phone [calling plan](https://marketplace.zoom.
	// us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) to remove.
	Type string
	// Billing account ID. If the common area is in India, the parameter is required.
	BillingAccountID OptString
}

// UnassignCampaignPhoneNumberParams is parameters of unassignCampaignPhoneNumber operation.
type UnassignCampaignPhoneNumberParams struct {
	SmsCampaignId string
	// Provide either phone number (in E164 format) or phoneNumberId of the campaign.
	PhoneNumberId string
}

// UnassignMemberFromCallQueueParams is parameters of unassignMemberFromCallQueue operation.
type UnassignMemberFromCallQueueParams struct {
	// Unique identifier of the Call Queue from which the member needs to be unassigned.
	CallQueueId string
	// Unique identifier of the member who needs to be unassigned.
	MemberId string
}

// UnassignPhoneNumberParams is parameters of UnassignPhoneNumber operation.
type UnassignPhoneNumberParams struct {
	// Provide either userId or email address of the user.
	UserId string
	// Provide either phone number or phoneNumberId of the user.
	PhoneNumberId string
}

// UnassignPhoneNumberFromZoomRoomParams is parameters of UnassignPhoneNumberFromZoomRoom operation.
type UnassignPhoneNumberFromZoomRoomParams struct {
	// Provide roomId of the Zoom Room.
	RoomId string
	// Provide phoneNumberId of the Zoom Room.
	PhoneNumberId string
}

// UnassignPhoneNumbersFromCommonAreaParams is parameters of unassignPhoneNumbersFromCommonArea operation.
type UnassignPhoneNumbersFromCommonAreaParams struct {
	// Common area ID or common area extension ID.
	CommonAreaId string
	// The phone number or the phone number ID.
	PhoneNumberId string
}

// UpdateADeviceParams is parameters of updateADevice operation.
type UpdateADeviceParams struct {
	// The unique identifier of the device.
	DeviceId string
}

// UpdateASharedLineGroupParams is parameters of updateASharedLineGroup operation.
type UpdateASharedLineGroupParams struct {
	// The shared line group ID.
	SharedLineGroupId string
}

// UpdateAccountLevelInboundBlockRuleParams is parameters of UpdateAccountLevelInboundBlockRule operation.
type UpdateAccountLevelInboundBlockRuleParams struct {
	// The unique identifier of the blocked rule.
	BlockedRuleId string
}

// UpdateAccountOutboundCallingExceptionRuleParams is parameters of UpdateAccountOutboundCallingExceptionRule operation.
type UpdateAccountOutboundCallingExceptionRuleParams struct {
	// The exception rule ID.
	ExceptionRuleId string
}

// UpdateAnAlertSettingParams is parameters of UpdateAnAlertSetting operation.
type UpdateAnAlertSettingParams struct {
	// The alert setting ID.
	AlertSettingId string
}

// UpdateAudioItemParams is parameters of UpdateAudioItem operation.
type UpdateAudioItemParams struct {
	// Unique identifier of the audio item.
	AudioId string
}

// UpdateAutoDeleteFieldParams is parameters of UpdateAutoDeleteField operation.
type UpdateAutoDeleteFieldParams struct {
	// The unique identifier of the recording.
	RecordingId string
}

// UpdateAutoReceptionistParams is parameters of updateAutoReceptionist operation.
type UpdateAutoReceptionistParams struct {
	// The unique identifier of the auto receptionist. It can be retrieved from the [List auto
	// receptionists API](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/listAutoReceptionists).
	AutoReceptionistId string
}

// UpdateAutoReceptionistIVRParams is parameters of updateAutoReceptionistIVR operation.
type UpdateAutoReceptionistIVRParams struct {
	// The auto receptionist id.
	AutoReceptionistId string
}

// UpdateAutoReceptionistPolicyParams is parameters of updateAutoReceptionistPolicy operation.
type UpdateAutoReceptionistPolicyParams struct {
	// The unique identifier of the auto receptionist. It can be retrieved from the [List auto
	// receptionists API](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#operation/listAutoReceptionists).
	AutoReceptionistId string
}

// UpdateBlockedListParams is parameters of updateBlockedList operation.
type UpdateBlockedListParams struct {
	// Unique Identifier of the Blocked List.
	BlockedListId string
}

// UpdateCQPolicySubSettingParams is parameters of updateCQPolicySubSetting operation.
type UpdateCQPolicySubSettingParams struct {
	// The call queue ID, retrievable from the [List Call Queues](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods#tag/Call-Queues/operation/listCallQueues) API.
	CallQueueId string
	// Corresponds to the policy sub-setting item you wish to update. Allowed values: `voice_mail`.
	PolicyType string
}

// UpdateCallHandlingParams is parameters of updateCallHandling operation.
type UpdateCallHandlingParams struct {
	// The extension ID.
	ExtensionId string
	// The call handling setting type:
	// * `business_hours`
	// * `closed_hours`
	// * `holiday_hours`.
	SettingType string
}

// UpdateCallQueueParams is parameters of updateCallQueue operation.
type UpdateCallQueueParams struct {
	// Unique identifier of the Call Queue.
	CallQueueId string
}

// UpdateCallingPlanParams is parameters of updateCallingPlan operation.
type UpdateCallingPlanParams struct {
	UserId string
}

// UpdateCommonAreaParams is parameters of updateCommonArea operation.
type UpdateCommonAreaParams struct {
	CommonAreaId string
}

// UpdateCommonAreaOutboundCallingCountriesOrRegionsParams is parameters of UpdateCommonAreaOutboundCallingCountriesOrRegions operation.
type UpdateCommonAreaOutboundCallingCountriesOrRegionsParams struct {
	// The ID of the common area.
	CommonAreaId string
}

// UpdateCommonAreaOutboundCallingExceptionRuleParams is parameters of UpdateCommonAreaOutboundCallingExceptionRule operation.
type UpdateCommonAreaOutboundCallingExceptionRuleParams struct {
	// The ID of the common area.
	CommonAreaId string
	// The exception rule ID.
	ExceptionRuleId string
}

// UpdateCommonAreaSettingParams is parameters of UpdateCommonAreaSetting operation.
type UpdateCommonAreaSettingParams struct {
	CommonAreaId string
	// Corresponds to the setting item you wish to modify. Allowed values: `desk_phone`.
	SettingType string
}

// UpdateEmergencyAddressParams is parameters of updateEmergencyAddress operation.
type UpdateEmergencyAddressParams struct {
	// The ID of the emergency address.
	EmergencyAddressId string
}

// UpdateExternalContactParams is parameters of updateExternalContact operation.
type UpdateExternalContactParams struct {
	// The external contact ID.
	ExternalContactId string
}

// UpdateFirmwareRuleParams is parameters of UpdateFirmwareRule operation.
type UpdateFirmwareRuleParams struct {
	// Unique identifier of the firmware update rule.
	RuleId string
}

// UpdateGCPParams is parameters of updateGCP operation.
type UpdateGCPParams struct {
	GroupId string
}

// UpdateLocationParams is parameters of updateLocation operation.
type UpdateLocationParams struct {
	// The emergency service location's ID.
	LocationId string
}

// UpdateMonitoringGroupParams is parameters of updateMonitoringGroup operation.
type UpdateMonitoringGroupParams struct {
	// Monitoring group ID.
	MonitoringGroupId string
}

// UpdateNumberCampaignOptStatusParams is parameters of updateNumberCampaignOptStatus operation.
type UpdateNumberCampaignOptStatusParams struct {
	// The SMS campaign ID.
	SmsCampaignId string
}

// UpdatePhoneNumberDetailsParams is parameters of updatePhoneNumberDetails operation.
type UpdatePhoneNumberDetailsParams struct {
	// The unique identifier of the phone number.
	PhoneNumberId string
}

// UpdatePhoneRoleParams is parameters of UpdatePhoneRole operation.
type UpdatePhoneRoleParams struct {
	// Unique identifier of the [role](https://support.zoom.
	// us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management) assigned to the user.
	RoleId string
}

// UpdatePolicyParams is parameters of updatePolicy operation.
type UpdatePolicyParams struct {
	// The unique identifier of the auto receptionist. It can be retrieved from the [List auto
	// receptionists ](https://developers.zoom.
	// us/docs/api/rest/reference/phone/methods/#operation/listAutoReceptionists) API.
	AutoReceptionistId string
	// This field corresponds to the policy item you wish to modify.
	// Allowed values: `voice_mail`.
	PolicyType string
}

// UpdateProvisionTemplateParams is parameters of updateProvisionTemplate operation.
type UpdateProvisionTemplateParams struct {
	TemplateId string
}

// UpdateProvisionTemplateToDeviceParams is parameters of updateProvisionTemplateToDevice operation.
type UpdateProvisionTemplateToDeviceParams struct {
	// The device ID.
	DeviceId string
}

// UpdateRecordingStatusParams is parameters of UpdateRecordingStatus operation.
type UpdateRecordingStatusParams struct {
	// The recording ID.
	RecordingId string
}

// UpdateRoutingRuleParams is parameters of updateRoutingRule operation.
type UpdateRoutingRuleParams struct {
	// The unique identifier of the routing rule.
	RoutingRuleId string
}

// UpdateSLGPolicySubSettingParams is parameters of updateSLGPolicySubSetting operation.
type UpdateSLGPolicySubSettingParams struct {
	SlgId string
	// This setting corresponds to tbe policy item you wish to update. Allowed values: `voice_mail`.
	PolicyType string
}

// UpdateSettingTemplateParams is parameters of updateSettingTemplate operation.
type UpdateSettingTemplateParams struct {
	// The Template ID.
	TemplateId string
}

// UpdateSharedLineGroupPolicyParams is parameters of updateSharedLineGroupPolicy operation.
type UpdateSharedLineGroupPolicyParams struct {
	// The unique identifier of the shared line group.
	SharedLineGroupId string
}

// UpdateSiteDetailsParams is parameters of updateSiteDetails operation.
type UpdateSiteDetailsParams struct {
	// The unique identifier of the site.
	SiteId string
}

// UpdateSiteForUnassignedPhoneNumbersParams is parameters of updateSiteForUnassignedPhoneNumbers operation.
type UpdateSiteForUnassignedPhoneNumbersParams struct {
	// Unique identifier of the site.
	SiteId string
}

// UpdateSiteOutboundCallingCountriesOrRegionsParams is parameters of UpdateSiteOutboundCallingCountriesOrRegions operation.
type UpdateSiteOutboundCallingCountriesOrRegionsParams struct {
	// The ID of the site.
	SiteId string
}

// UpdateSiteOutboundCallingExceptionRuleParams is parameters of UpdateSiteOutboundCallingExceptionRule operation.
type UpdateSiteOutboundCallingExceptionRuleParams struct {
	// The ID of the site.
	SiteId string
	// The exception rule ID.
	ExceptionRuleId string
}

// UpdateSiteSettingParams is parameters of updateSiteSetting operation.
type UpdateSiteSettingParams struct {
	// The site ID.
	SiteId string
	// The site setting type:
	// * `local_based_routing`
	// * `business_hours`
	// * `closed_hours`
	// * `holiday_hours`
	// * `outbound_caller_id`
	// * `audio_prompt`
	// * `desk_phone`
	// * `dial_by_name`
	// * `billing_account`.
	SettingType string
}

// UpdateUserOutboundCallingCountriesOrRegionsParams is parameters of UpdateUserOutboundCallingCountriesOrRegions operation.
type UpdateUserOutboundCallingCountriesOrRegionsParams struct {
	// The ID of the user.
	UserId string
}

// UpdateUserOutboundCallingExceptionRuleParams is parameters of UpdateUserOutboundCallingExceptionRule operation.
type UpdateUserOutboundCallingExceptionRuleParams struct {
	// The ID of the user.
	UserId string
	// The exception rule ID.
	ExceptionRuleId string
}

// UpdateUserProfileParams is parameters of updateUserProfile operation.
type UpdateUserProfileParams struct {
	// The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
	UserId string
}

// UpdateUserSettingParams is parameters of updateUserSetting operation.
type UpdateUserSettingParams struct {
	// Corresponds to the setting item you wish to modify. Allowed values: `voice_mail`, `delegation`,
	// `desk_phone`, `intercom`, `auto_call_recording`,`ad_hoc_call_recording`.
	SettingType string
	// The unique identifier of the user.
	UserId string
}

// UpdateUserSettingsParams is parameters of updateUserSettings operation.
type UpdateUserSettingsParams struct {
	// The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
	UserId string
}

// UpdateVoicemailReadStatusParams is parameters of updateVoicemailReadStatus operation.
type UpdateVoicemailReadStatusParams struct {
	// The unique identifier of the voicemail. It retrieves the value for this field by calling the [Get
	// voicemails](https://marketplace.zoom.
	// us/docs/api-reference/phone/methods/#operation/phoneUserVoiceMails) API.
	VoicemailId string
	// The voicemail status. The `Unread` feature must enable **Mark Voicemail as Unread**.
	ReadStatus string
}

// UpdateZoomRoomParams is parameters of updateZoomRoom operation.
type UpdateZoomRoomParams struct {
	RoomId string
}

// UserSmsSessionParams is parameters of userSmsSession operation.
type UserSmsSessionParams struct {
	// The user ID, user email, or &ldquo;me&rdquo; when using OAuth token.
	UserId string
	// The number of records returned within a single API call.
	PageSize OptInt
	// The current page number of returned records.
	NextPageToken OptString
	// This field filters the specific session list by a session type.
	// The value for this field can be one of the following:
	// `user`
	// `call_queue`
	// `auto_receptionist`
	// `all`.
	SessionType OptString
	// The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format.
	// The date range defined by the `from` and `to` parameters should be a month as the response only
	// includes one month's worth of data at once.
	// If unspecified, it returns data from the past 30 days.
	From OptDate
	// This field is required only when the `from` parameter is specified.
	// The end time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format is the same format
	// as the `from` parameter.
	To OptDate
	// The sender's or receiver's phone number that limits the list of SMS sessions.
	PhoneNumber OptString
	// This field filters by `sent_message_time`, `received_message_time`, or `last_message_time` for the
	// From and To dates.
	// * `last_message_time`: can query which sessions last messages between From and To dates.
	// * `sent_message_time`: can query which sessions have sent messages between From and To dates.
	// * `received_message_time`: can query which sessions have received messages between From and To
	// dates.
	FilterType OptString
}

// Code generated by ogen, DO NOT EDIT.

package zoomuser

// setDefaults set default value of fields.
func (s *GetGroupLockSettingsOK0InMeeting) setDefaults() {
	{
		val := bool(false)
		s.AttendeeOnHold.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *GetGroupSettingsOK0InMeeting) setDefaults() {
	{
		val := bool(false)
		s.AttendeeOnHold.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *GetUserMeetingTemplatesOKSettingsScheduleMeeting) setDefaults() {
	{
		val := bool(false)
		s.MuteUponEntry.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *GroupLockedSettingsReq0InMeeting) setDefaults() {
	{
		val := bool(false)
		s.AttendeeOnHold.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *UpdateGroupSettingsReq0ChatChatEtiquetteTool) setDefaults() {
	{
		val := bool(false)
		s.Enable.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *UpdateGroupSettingsReq0InMeeting) setDefaults() {
	{
		val := bool(false)
		s.AttendeeOnHold.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *UpdateGroupSettingsReq3MeetingSecurityChatEtiquetteTool) setDefaults() {
	{
		val := bool(false)
		s.Enable.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *UserOK) setDefaults() {
	{
		val := bool(false)
		s.UsePmi.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *UserSettingsOK0EmailNotification) setDefaults() {
	{
		val := bool(false)
		s.AlternativeHostReminder.SetTo(val)
	}
	{
		val := bool(false)
		s.CancelMeetingReminder.SetTo(val)
	}
	{
		val := bool(false)
		s.JbhReminder.SetTo(val)
	}
	{
		val := bool(false)
		s.ScheduleForReminder.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *UserSettingsOK0InMeeting) setDefaults() {
	{
		val := bool(false)
		s.Annotation.SetTo(val)
	}
	{
		val := bool(false)
		s.AttendeeOnHold.SetTo(val)
	}
	{
		val := bool(false)
		s.AttentionModeFocusMode.SetTo(val)
	}
	{
		val := bool(false)
		s.AutoSavingChat.SetTo(val)
	}
	{
		val := bool(false)
		s.BreakoutRoom.SetTo(val)
	}
	{
		val := bool(false)
		s.Chat.SetTo(val)
	}
	{
		val := bool(false)
		s.ClosedCaption.SetTo(val)
	}
	{
		val := bool(false)
		s.CoHost.SetTo(val)
	}
	{
		val := string("all")
		s.EntryExitChime.SetTo(val)
	}
	{
		val := bool(false)
		s.FarEndCameraControl.SetTo(val)
	}
	{
		val := bool(false)
		s.Feedback.SetTo(val)
	}
	{
		val := bool(false)
		s.GroupHd.SetTo(val)
	}
	{
		val := bool(false)
		s.WebinarGroupHd.SetTo(val)
	}
	{
		val := bool(false)
		s.NonVerbalFeedback.SetTo(val)
	}
	{
		val := bool(false)
		s.Polling.SetTo(val)
	}
	{
		val := bool(false)
		s.PrivateChat.SetTo(val)
	}
	{
		val := bool(false)
		s.RemoteControl.SetTo(val)
	}
	{
		val := bool(false)
		s.RemoteSupport.SetTo(val)
	}
	{
		val := bool(false)
		s.ShareDualCamera.SetTo(val)
	}
	{
		val := bool(false)
		s.VirtualBackground.SetTo(val)
	}
	{
		val := bool(false)
		s.WaitingRoom.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *UserSettingsOK0Recording) setDefaults() {
	{
		val := bool(false)
		s.AutoDeleteCmr.SetTo(val)
	}
	{
		val := string("local")
		s.AutoRecording.SetTo(val)
	}
	{
		val := bool(false)
		s.CloudRecording.SetTo(val)
	}
	{
		val := bool(false)
		s.HostPauseStopRecording.SetTo(val)
	}
	{
		val := bool(false)
		s.RecordAudioFile.SetTo(val)
	}
	{
		val := bool(false)
		s.RecordGalleryView.SetTo(val)
	}
	{
		val := bool(false)
		s.RecordSpeakerView.SetTo(val)
	}
	{
		val := bool(false)
		s.SaveChatText.SetTo(val)
	}
	{
		val := bool(false)
		s.ShowTimestamp.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *UserSettingsOK0ScheduleMeeting) setDefaults() {
	{
		val := string("voip")
		s.AudioType.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *UserSettingsOK0Telephony) setDefaults() {
	{
		val := string("")
		s.AudioConferenceInfo.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *UserSettingsUpdateReq0EmailNotification) setDefaults() {
	{
		val := bool(false)
		s.AlternativeHostReminder.SetTo(val)
	}
	{
		val := bool(false)
		s.CancelMeetingReminder.SetTo(val)
	}
	{
		val := bool(false)
		s.JbhReminder.SetTo(val)
	}
	{
		val := bool(false)
		s.ScheduleForReminder.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *UserSettingsUpdateReq0InMeeting) setDefaults() {
	{
		val := bool(false)
		s.Annotation.SetTo(val)
	}
	{
		val := bool(false)
		s.AttendeeOnHold.SetTo(val)
	}
	{
		val := bool(false)
		s.AttentionModeFocusMode.SetTo(val)
	}
	{
		val := bool(false)
		s.AutoSavingChat.SetTo(val)
	}
	{
		val := bool(false)
		s.BreakoutRoom.SetTo(val)
	}
	{
		val := bool(false)
		s.Chat.SetTo(val)
	}
	{
		val := bool(false)
		s.ClosedCaption.SetTo(val)
	}
	{
		val := bool(false)
		s.CoHost.SetTo(val)
	}
	{
		val := string("all")
		s.EntryExitChime.SetTo(val)
	}
	{
		val := bool(false)
		s.FarEndCameraControl.SetTo(val)
	}
	{
		val := bool(false)
		s.Feedback.SetTo(val)
	}
	{
		val := bool(false)
		s.GroupHd.SetTo(val)
	}
	{
		val := bool(false)
		s.WebinarGroupHd.SetTo(val)
	}
	{
		val := bool(false)
		s.NonVerbalFeedback.SetTo(val)
	}
	{
		val := bool(false)
		s.Polling.SetTo(val)
	}
	{
		val := bool(false)
		s.PrivateChat.SetTo(val)
	}
	{
		val := bool(false)
		s.RemoteControl.SetTo(val)
	}
	{
		val := bool(false)
		s.RemoteSupport.SetTo(val)
	}
	{
		val := bool(false)
		s.ShareDualCamera.SetTo(val)
	}
	{
		val := bool(false)
		s.VirtualBackground.SetTo(val)
	}
	{
		val := bool(false)
		s.WaitingRoom.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *UserSettingsUpdateReq0Recording) setDefaults() {
	{
		val := bool(false)
		s.AutoDeleteCmr.SetTo(val)
	}
	{
		val := string("local")
		s.AutoRecording.SetTo(val)
	}
	{
		val := bool(false)
		s.CloudRecording.SetTo(val)
	}
	{
		val := bool(false)
		s.HostPauseStopRecording.SetTo(val)
	}
	{
		val := bool(false)
		s.RecordAudioFile.SetTo(val)
	}
	{
		val := bool(false)
		s.RecordGalleryView.SetTo(val)
	}
	{
		val := bool(false)
		s.RecordSpeakerView.SetTo(val)
	}
	{
		val := bool(false)
		s.SaveChatText.SetTo(val)
	}
	{
		val := bool(false)
		s.ShowTimestamp.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *UserSettingsUpdateReq0ScheduleMeeting) setDefaults() {
	{
		val := string("voip")
		s.AudioType.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *UserSettingsUpdateReq0Telephony) setDefaults() {
	{
		val := string("")
		s.AudioConferenceInfo.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *UserUpdateReq) setDefaults() {
	{
		val := bool(false)
		s.UsePmi.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *UsersOK) setDefaults() {
	{
		val := int(1)
		s.PageNumber.SetTo(val)
	}
	{
		val := int(30)
		s.PageSize.SetTo(val)
	}
}

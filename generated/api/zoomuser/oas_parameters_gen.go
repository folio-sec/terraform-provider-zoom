// Code generated by ogen, DO NOT EDIT.

package zoomuser

// ContactGroupParams is parameters of contactGroup operation.
type ContactGroupParams struct {
	// The contact group ID.
	// Retrieve by calling the [**List contact
	// groups**](/docs/api-reference/zoom-api/methods#operation/contactGroups) API.
	GroupId string
}

// ContactGroupDeleteParams is parameters of contactGroupDelete operation.
type ContactGroupDeleteParams struct {
	// The contact group ID.
	// Retrieve by calling the [**List contact
	// groups**](/docs/api-reference/zoom-api/methods#operation/contactGroups) API.
	GroupId string
}

// ContactGroupMemberAddParams is parameters of contactGroupMemberAdd operation.
type ContactGroupMemberAddParams struct {
	// The contact group ID.
	// Retrieve by calling the List contact groups API.
	GroupId string
}

// ContactGroupMemberRemoveParams is parameters of contactGroupMemberRemove operation.
type ContactGroupMemberRemoveParams struct {
	// The contact group ID.
	// Retrieve by calling the List contact groups API.
	GroupId string
	// The member's ID in a contact group. Use commas (,) to separate a maximum of 20 ids.
	// Can be retrieved by calling the [**List contact
	// groups**](/docs/api-reference/zoom-api/methods#operation/contactGroupMembers) API.
	MemberIds string
}

// ContactGroupMembersParams is parameters of contactGroupMembers operation.
type ContactGroupMembersParams struct {
	// The group ID.
	GroupId string
	// The number of records returned with a single API call.
	PageSize OptInt
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString
}

// ContactGroupUpdateParams is parameters of contactGroupUpdate operation.
type ContactGroupUpdateParams struct {
	// The contact group ID.
	// Retrieve by calling the [**List contact
	// groups**](/docs/api-reference/zoom-api/methods#operation/contactGroups) API.
	GroupId string
}

// ContactGroupsParams is parameters of contactGroups operation.
type ContactGroupsParams struct {
	// The number of records returned with a single API call.
	PageSize OptInt
	// The next page token is used to paginate through large result sets. A next page token will be
	// returned whenever the set of available results exceeds the current page size. The expiration
	// period for this token is 15 minutes.
	NextPageToken OptString
}

// DelGroupVBParams is parameters of delGroupVB operation.
type DelGroupVBParams struct {
	// The group ID. To get a group's ID, use the [**List
	// groups**](/api-reference/zoom-api/methods#operation/groups) API.
	GroupId string
	// A comma-separated list of the file IDs to delete.
	FileIds OptString
}

// DelUserVBParams is parameters of delUserVB operation.
type DelUserVBParams struct {
	// The user's ID. To get a user's ID, use the [**List
	// users**](/docs/api-reference/zoom-api/ma#operation/users) API. For user-level apps, pass the `me`
	// value instead of the user ID value.
	UserId string
	// A comma-separated list of the Virtual Background file IDs to delete.
	FileIds OptString
}

// GetCollaborationDeviceParams is parameters of getCollaborationDevice operation.
type GetCollaborationDeviceParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
	// The collaboration device ID.
	CollaborationDeviceId string
}

// GetGroupLockSettingsParams is parameters of getGroupLockSettings operation.
type GetGroupLockSettingsParams struct {
	// The group's ID.
	GroupId string
	// Optional query parameters.
	// * `meeting_security` - Use this query parameter to view the meeting security settings applied to
	// the user's account.
	Option OptString
}

// GetGroupSettingsParams is parameters of getGroupSettings operation.
type GetGroupSettingsParams struct {
	GroupId string
	// Optional query parameters.
	// * `meeting_authentication` - View the [meeting authentication settings](https://support.zoom.
	// us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied to
	// the user's account.
	// * `recording_authentication` - View the [recording authentication settings](https://support.zoom.
	// us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied to the
	// user's account.
	// * `meeting_security` - View the meeting security settings applied to the user's account.
	Option OptString
	// Provide the name of the field to use to filter the response. For example, if you provide
	// `host_video` as the value of this field, you will get a response similar to this:
	// {
	// `schedule_meeting`: {
	// `host_video`: false
	// }
	// }
	// Provide multiple values by separating them with commas, such as `host_video,participant_video`.
	CustomQueryFields OptString
}

// GetUserMeetingTemplatesParams is parameters of getUserMeetingTemplates operation.
type GetUserMeetingTemplatesParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
	// The meeting template ID.
	MeetingTemplateId string
}

// GetUserPresenceStatusParams is parameters of getUserPresenceStatus operation.
type GetUserPresenceStatusParams struct {
	// The user ID, email address, or member ID. The user can be either a company user or an external
	// user.
	UserId string
}

// GroupParams is parameters of group operation.
type GroupParams struct {
	// The group ID.
	// Retrieve by calling the [**List groups**](/docs/api-reference/zoom-api/methods#operation/groups)
	// API.
	GroupId string
}

// GroupAdminsParams is parameters of groupAdmins operation.
type GroupAdminsParams struct {
	// The group ID.
	// Retrieve by calling the [**List groups**](/docs/api-reference/zoom-api/methods#operation/groups)
	// API.
	GroupId string
	// The number of records returned within a single API call.
	PageSize OptInt
	// Use the next page token to paginate through large result sets. A next page token is returned
	// whenever the set of available results exceeds the current page size. This token's expiration
	// period is 15 minutes.
	NextPageToken OptString
}

// GroupAdminsCreateParams is parameters of groupAdminsCreate operation.
type GroupAdminsCreateParams struct {
	// The group ID.
	// Retrieve by calling the [**List groups**](/docs/api-reference/zoom-api/methods#operation/groups)
	// API.
	GroupId string
}

// GroupAdminsDeleteParams is parameters of groupAdminsDelete operation.
type GroupAdminsDeleteParams struct {
	// The group ID.
	// Retrieve by calling the [**List groups**](/docs/api-reference/zoom-api/methods#operation/groups)
	// API.
	GroupId string
	// The user ID or email address of the user. For user-level apps, pass the `me` value.
	UserId string
}

// GroupChannelsParams is parameters of groupChannels operation.
type GroupChannelsParams struct {
	// The group ID.
	// Retrieve by calling the [**List groups**](/docs/api/rest/reference/user/methods/#operation/groups)
	// API.
	GroupId string
}

// GroupDeleteParams is parameters of groupDelete operation.
type GroupDeleteParams struct {
	// The group ID.
	// Retrieve by calling the [**List groups**](/docs/api-reference/zoom-api/methods#operation/groups)
	// API.
	GroupId string
}

// GroupLockedSettingsParams is parameters of groupLockedSettings operation.
type GroupLockedSettingsParams struct {
	// The group's ID.
	GroupId string
	// Optional query parameters.
	// * `meeting_security` - View the meeting security settings applied to the user's account.
	Option OptString
}

// GroupMembersParams is parameters of groupMembers operation.
type GroupMembersParams struct {
	// The group ID.
	// Retrieve by calling the [**List groups**](/docs/api-reference/zoom-api/methods#operation/groups)
	// API.
	GroupId string
	// The number of records returned within a single API call.
	PageSize OptInt
	// **Deprecated.** We will no longer support this field in a future release. Instead, use the
	// `next_page_token` for pagination.
	PageNumber OptInt
	// Use the next page token to paginate through large result sets. A next page token is returned
	// whenever the set of available results exceeds the current page size. This token's expiration
	// period is 15 minutes.
	NextPageToken OptString
}

// GroupMembersCreateParams is parameters of groupMembersCreate operation.
type GroupMembersCreateParams struct {
	// The group ID.
	// Retrieve by calling the [**List groups**](/docs/api-reference/zoom-api/methods#operation/groups)
	// API.
	GroupId string
}

// GroupMembersDeleteParams is parameters of groupMembersDelete operation.
type GroupMembersDeleteParams struct {
	// The group ID.
	// Retrieve by calling the [**List groups**](/docs/api-reference/zoom-api/methods#operation/groups)
	// API.
	GroupId string
	// The member ID or email address.
	MemberId string
}

// GroupSettingsRegistrationParams is parameters of groupSettingsRegistration operation.
type GroupSettingsRegistrationParams struct {
	GroupId string
	// The registration type:
	// * `webinar` &mdash; webinar.
	Type OptString
}

// GroupSettingsRegistrationUpdateParams is parameters of groupSettingsRegistrationUpdate operation.
type GroupSettingsRegistrationUpdateParams struct {
	GroupId string
	// The registration type:
	// * `webinar` &mdash; webinar.
	Type OptString
}

// GroupUpdateParams is parameters of groupUpdate operation.
type GroupUpdateParams struct {
	// The group ID.
	// Retrieve by calling the [**List groups**](/docs/api-reference/zoom-api/methods#operation/groups)
	// API.
	GroupId string
}

// ListCollaborationDevicesParams is parameters of listCollaborationDevices operation.
type ListCollaborationDevicesParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
}

// UpdateAGroupMemberParams is parameters of updateAGroupMember operation.
type UpdateAGroupMemberParams struct {
	// The group's unique ID. To get this value, use the [**List
	// groups**](/docs/api-reference/zoom-api/methods#operation/groups) API.
	// * To set a user's primary group, use the `target_group_id` value for this parameter's value.
	// * To move a group member from one group to another, use the `groupId` of the designated group.
	GroupId string
	// The group member's unique ID. To get this value, use the [**List group
	// members**](/docs/api-reference/zoom-api/methods#operation/groupMembers) API.
	MemberId string
}

// UpdateGroupSettingsParams is parameters of updateGroupSettings operation.
type UpdateGroupSettingsParams struct {
	// The group's ID.
	GroupId string
	// Optional query parameters.
	// * `meeting_authentication` - [Meeting authentication settings](https://support.zoom.
	// us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars).
	// * `recording_authentication` - [Recording authentication settings](https://support.zoom.
	// us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings).
	// * `meeting_security` - Meeting security settings.
	Option OptString
}

// UpdatePresenceStatusParams is parameters of updatePresenceStatus operation.
type UpdatePresenceStatusParams struct {
	// The user ID or email address. For user-level apps, pass the `me` value.
	UserId string
}

// UploadGroupVBParams is parameters of uploadGroupVB operation.
type UploadGroupVBParams struct {
	// The group ID. To get a group's ID, use the [**List
	// groups**](/api-reference/zoom-api/methods#operation/groups) API.
	GroupId string
}

// UploadVBuserParams is parameters of uploadVBuser operation.
type UploadVBuserParams struct {
	// The user's ID. To get a user's ID, use the [**List
	// users**](/api-reference/zoom-api/ma#operation/users) API. For user-level apps, pass the `me` value
	// instead of the user ID value.
	UserId string
}

// UserParams is parameters of user operation.
type UserParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
	// The user's login method.
	// * `0` - Facebook OAuth
	// * `1` - Google OAuth.
	// * `24` - Apple OAuth.
	// * `27` - Microsoft OAuth.
	// * `97` - Mobile device.
	// * `98` - RingCentral OAuth.
	// * `99` - API user.
	// * `100` - Zoom Work email.
	// * `101` - Single Sign-On (SSO).
	// These login methods are only available in China.
	// * `11` - Phone number.
	// * `21` - WeChat.
	// * `23` - Alipay.
	LoginType OptInt
	// Whether the email address passed for the `userId` value is an encrypted email address.
	// * `true` - The email address is encrypted.
	// * `false` - The email address is not encrypted.
	// If you do not query this parameter, this value defaults to null (`false`).
	EncryptedEmail OptBool
	// Whether the queried `userId` value is an employee unique ID.
	// * `true` - The queried ID is an employee's unique ID.
	// * `false` - The queried ID is not an employee's unique ID.
	// This value defaults to `false` (null).
	SearchByUniqueID OptBool
}

// UserAssistantCreateParams is parameters of userAssistantCreate operation.
type UserAssistantCreateParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
}

// UserAssistantDeleteParams is parameters of userAssistantDelete operation.
type UserAssistantDeleteParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
	// Assistant ID.
	AssistantId string
}

// UserAssistantsParams is parameters of userAssistants operation.
type UserAssistantsParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
}

// UserAssistantsDeleteParams is parameters of userAssistantsDelete operation.
type UserAssistantsDeleteParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
}

// UserDeleteParams is parameters of userDelete operation.
type UserDeleteParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
	// Whether the email address passed for the `userId` value is an encrypted email address.
	// * `true` - The email address is encrypted.
	// * `false` - The email address is not encrypted.
	// If you do not query this parameter, this value defaults to null (`false`).
	EncryptedEmail OptBool
	// Delete action options.
	// `disassociate` - Disassociate a user.
	// `delete`-  Permanently delete a user.
	// Note: To delete pending user in the account, use `disassociate`.
	Action OptString
	// Transfer email. This field is **required** if the user has Zoom Events/Sessions feature. After you
	// delete or disassociate the user, the user's hub assets on Zoom Events site will be transferred to
	// the target user.
	TransferEmail OptString
	// Transfer meeting.
	TransferMeeting OptBool
	// Transfer webinar.
	TransferWebinar OptBool
	// Transfer recording.
	TransferRecording OptBool
	// When deleting a user, whether to transfer all their [Zoom Whiteboard](https://support.zoom.
	// us/hc/en-us/articles/4410916881421) data to another user.
	TransferWhiteboard OptBool
}

// UserEmailParams is parameters of userEmail operation.
type UserEmailParams struct {
	// The email address to be verified.
	Email string
}

// UserEmailUpdateParams is parameters of userEmailUpdate operation.
type UserEmailUpdateParams struct {
	// The users's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
}

// UserPasswordParams is parameters of userPassword operation.
type UserPasswordParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
}

// UserPermissionParams is parameters of userPermission operation.
type UserPermissionParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
}

// UserPictureParams is parameters of userPicture operation.
type UserPictureParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
}

// UserPictureDeleteParams is parameters of userPictureDelete operation.
type UserPictureDeleteParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
}

// UserSSOTokenDeleteParams is parameters of userSSOTokenDelete operation.
type UserSSOTokenDeleteParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
}

// UserSchedulerDeleteParams is parameters of userSchedulerDelete operation.
type UserSchedulerDeleteParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
	// Scheduler's ID.
	SchedulerId string
}

// UserSchedulersParams is parameters of userSchedulers operation.
type UserSchedulersParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
}

// UserSchedulersDeleteParams is parameters of userSchedulersDelete operation.
type UserSchedulersDeleteParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
}

// UserSettingsParams is parameters of userSettings operation.
type UserSettingsParams struct {
	// The user ID or email address of the user. For user-level apps, pass the `me` value.
	UserId string
	// The user's login method.
	// * `0` - Facebook OAuth
	// * `1` - Google OAuth
	// * `24` - Apple OAuth
	// * `27` - Microsoft OAuth
	// * `97` - Mobile device
	// * `98` - RingCentral OAuth
	// * `99` - API user
	// * `100` - Zoom Work email
	// * `101` - Single Sign-On (SSO)
	// These login methods are only available in China:
	// * `11` - Phone number
	// * `21` - WeChat
	// * `23` - Alipay.
	LoginType OptInt
	// Optional query parameters.
	// * `meeting_authentication` - Use this query parameter to view the [meeting authentication
	// settings](https://support.zoom.
	// us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied to
	// the user's account.
	// * `recording_authentication` - Use this query parameter to view the [recording authentication
	// settings](https://support.zoom.
	// us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied to the
	// user's account.
	// * `meeting_security` - Use this query parameter to view the meeting security settings applied to
	// the user's account.
	Option OptString
	// Provide the name of the field to filter the response. For example, if you provide `host_video` as
	// the value of this field, you'll get a response similar to this.
	// {
	// schedule_meeting: {
	// host_video: false
	// }
	// }
	// To provide multiple values, separate them with commas, like `host_video,participant_video`.
	CustomQueryFields OptString
}

// UserSettingsUpdateParams is parameters of userSettingsUpdate operation.
type UserSettingsUpdateParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
	// The optional query parameters:
	// * `meeting_authentication` &mdash; Use this query parameter to view the [meeting authentication
	// settings](https://support.zoom.
	// us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) applied to
	// the user's account.
	// * `recording_authentication` &mdash; Use this query parameter to view the [recording
	// authentication settings](https://support.zoom.
	// us/hc/en-us/articles/360037756671-Authentication-Profiles-for-Cloud-Recordings) applied to the
	// user's account.
	// * `meeting_security` &mdash; Use this query parameter to view the meeting security settings
	// applied to the user's account.
	Option OptString
}

// UserStatusParams is parameters of userStatus operation.
type UserStatusParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
}

// UserTokenParams is parameters of userToken operation.
type UserTokenParams struct {
	// The user's user ID or email address. For user-level apps, pass the `me` value.
	UserId string
	// The user token type.
	// * `zak` - A Zoom Access Key (ZAK) is used to generate a URL to start meetings. See [Getting a Zoom
	// Access Key (ZAK)](https://developers.zoom.
	// us/docs/meeting-sdk/auth/#start-meetings-and-webinars-with-a-zoom-users-zak-token) for details.
	// The ZAK's expiration time is two hours. For API users, the expiration time is 90 days. An API user
	// is a user created via the `custCreate` action in the **[Create users](https://marketplace.zoom.
	// us/docs/api-reference/zoom-api/methods/#operation/userCreate)** API. The maximum length of this
	// value is `512`.
	// * `token` - **Deprecated** A Zoom token. This token expires in 14 days. You must make the request
	// again after expiration to receive a new token. This query parameter returns a null value if the
	// user signed in to Zoom via Google or Facebook. The maximum length of this value is `512`.
	// This value defaults to `token`.
	Type OptString
	// The ZAK expiration time to live (TTL), in seconds. To update the user's ZAK TTL, use this field
	// with the `zak` value for the `type` query parameter.
	// Defaults to `7200` or `7776000` (90 days) for API users. The maximum value is one year.
	TTL OptInt
}

// UserUpdateParams is parameters of userUpdate operation.
type UserUpdateParams struct {
	// The user ID or email address. For user-level apps, pass the `me` value.
	UserId string
	// The user's login method.
	// * `0` - Facebook OAuth.
	// * `1` - Google OAuth.
	// * `24` - Apple OAuth.
	// * `27` - Microsoft OAuth.
	// * `97` - Mobile device.
	// * `98` - RingCentral OAuth.
	// * `99` - API user.
	// * `100` - Zoom Work email.
	// * `101` - Single Sign-On (SSO).
	// These login methods are only available in China.
	// * `11` - Phone number.
	// * `21` - WeChat.
	// * `23` - Alipay.
	LoginType OptInt
	// Whether to remove the user's TSP credentials.
	// * `true` - The queried ID is an employee's unique ID.
	// * `false` - The queried ID is not an employee's unique ID.
	// This value defaults to `false` (null).
	RemoveTspCredentials OptBool
}

// UserVanityNameParams is parameters of userVanityName operation.
type UserVanityNameParams struct {
	// Personal meeting room name.
	VanityName string
}

// UsersParams is parameters of users operation.
type UsersParams struct {
	// The user's status.
	// * `active` - The user exists on the account.
	// * `inactive` - The user has been deactivated.
	// * `pending` - The user exists on the account, but has not activated their account. See [Managing
	// users](https://support.zoom.us/hc/en-us/articles/201363183) for details.
	// This value defaults to `active`.
	Status OptString
	// The number of records returned within a single API call.
	PageSize OptInt
	// The role's unique ID. Use this parameter to filter the response by a specific role. You can use
	// the [**List roles**](/docs/api/rest/reference/account/methods/#operation/roles) API to get a
	// role's unique ID value.
	RoleID OptString
	// The page number of the current page in the returned records.
	PageNumber OptString
	// This parameter displays one of the following attributes in the API call's response:
	// * `custom_attributes` &mdash; Return the user's custom attributes.
	// * `host_key` &mdash; Return the user's [host key](https://support.zoom.
	// us/hc/en-us/articles/205172555-Using-your-host-key).
	IncludeFields OptString
	// The next page token paginates through a large set of results. It returns whenever the set of
	// available results exceeds the current page size. The expiration period for this token is 15
	// minutes.
	NextPageToken OptString
	// The user's license. Filter the response by a specific license.
	License OptString
}
